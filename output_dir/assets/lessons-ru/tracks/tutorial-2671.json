{
  "tutorial": {
    "id": 2671,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Библиотека - Часть 1",
    "descriptionContent": "Погрузись в ООП, создавая объекты книг. Эта первая часть проекта познакомит тебя с созданием и управлением собственной цифровой книжной полкой.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2671-icon-banner.svg",
    "chapters": [
      {
        "id": 14646,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 129536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в проект **Library**, где мы будем использовать объектно-ориентированное программирование для создания системы библиотеки для учета книг. Начнем с класса `Book`.\n\n1. Создай новый класс с именем `Book`.\n2. В методе `__init__` добавь параметры `self`, `title` и `author`.\n3. Сохрани `title` в `self.title`.\n4. Сохрани `author` в `self.author`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь свойство `available` в класс `Book`. Это свойство обозначает, доступна ли книга для выдачи или нет.\n\n1. В методе `__init__` установи `self.available` в `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создай метод `checkout` для класса `Book`. Этот метод изменит свойство `available` на `False`, если книга доступна, и вернет `True`. Если книга недоступна, он должен вернуть `False`.\n\n1. Добавь метод `checkout`.\n   - Используй оператор if/else, чтобы проверить, доступна ли книга.\n   - Измени статус `available` на `False`, если книга доступна, и верни `True`.\n   - Если книга недоступна, верни `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее добавь метод `return_book` в класс `Book`. Этот метод изменит свойство available на `True`.\n\n1. Добавь метод `return_book`. В этом методе установи `self.available` в `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте отобразим информацию о данной книге.\n\n1. Добавь метод `display_info`. Используй f-строку и функцию `print`, чтобы вывести информацию о книге.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 129541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Пора приступить к работе с классом `Book`.\n\n1. Создай три переменные: `book1`, `book2`, `book3`. Присвой им три разные книги и задай для каждой разные значения заголовка и автора.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 129542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее создайте список с именем `books` и поместите в него все книги.\n\n1. Создайте список с именем `books` и добавьте в него `book1`, `book2` и `book3`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 129543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, используй цикл for, чтобы отобразить информацию о каждой книге в списке `books`.\n\n1. Используй цикл for для перебора списка `books`. Вызови метод `display_info` для каждой книги.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]\nfor book in books:\n  book.display_info()"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}