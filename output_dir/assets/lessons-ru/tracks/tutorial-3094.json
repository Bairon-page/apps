{
  "tutorial": {
    "id": 3094,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Покедекс - Часть 1",
    "descriptionContent": "Заложи основу для своего Покедекса, получая данные о покемонах из API и отображая их",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-3094-icon-banner.svg",
    "chapters": [
      {
        "id": 15385,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 135395,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в проект **Pokedex**. Мы будем использовать предоставленный Pokemon API для отображения различных типов покемонов.\n\nВ этом проекте у нас уже есть доступный шаблонный код React и несколько пустых файлов, чтобы сразу приступить к работе.\n\nДавайте начнем с добавления контента и системы навигации в наше приложение. Мы заложим основу с помощью React Router и создадим отдельные компоненты для главной страницы и Покедекса.\n\n1. В файле `App.jsx` импортируй `BrowserRouter` из `react-router-dom`.\n2. Отобрази пустой элемент `BrowserRouter`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => (<></>);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst App = () => (\n  <BrowserRouter>\n  </BrowserRouter>\n);\n\nexport default App;"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 135396,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь мы интегрируем навигационную панель и добавим ссылки на первые две части, над которыми будем работать: *Home* и *Pokédex*.\n\n1. В `App.jsx`, импортируй `Link` из `react-router-dom`.\n2. В `App.jsx`, создай новый компонент `NavigationBar`, который возвращает элемент `nav`.\n3. Внутри `nav`, добавь элементы `Link` для *Home*, который должен вести к `\"/\"`, и *Pokédex*, который должен вести к `\"/pokedex\"`.\n4. Добавь компонент `NavigationBar` в оператор return внутри `BrowserRouter`, чтобы отобразить его.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"./index.css\" />\n  <title>Pokédex</title>\n</head>\n<body>\n  <div id=\"root\">loading</div>\n</body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst App = () => <BrowserRouter></BrowserRouter>;\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n  </BrowserRouter>\n);\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 135397,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее мы настроим маршрутизацию для отображения компонентов в зависимости от пути. Мы добавим маршруты для главной страницы и Покедекса.\n\n1. В файле `Home.jsx` создайте компонент `Home`, который возвращает `h1` с приветственным сообщением и `p` с кратким описанием Покедекса. Не забудьте импортировать `React`, чтобы код работал. Убедитесь, что вы также экспортируете компонент.\n2. В файле `Pokedex.jsx` создайте компонент `Pokedex`, который возвращает `h1` с текстом *Pokédex* и экспортируйте компонент.\n3. Импортируйте компоненты `Home` и `Pokedex` в `App.jsx`.\n4. Импортируйте `Route` и `Routes` из `react-router-dom`.\n5. Внутри `BrowseRouter`, под навигационной панелью, добавьте компонент `Routes`.\n6. Добавьте два компонента `Route` внутри `Routes`.\n   - Один для пути главной страницы `\"/\"`.\n   - Один для пути Покедекса `\"/pokedex\"`.\n   - Назначьте атрибуты `element` этим маршрутам с соответствующими компонентами, `Home` и `Pokedex`.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"./index.css\" />\n  <title>Pokédex</title>\n</head>\n<body>\n  <div id=\"root\">loading</div>\n</body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/pokedex\" element={<Pokedex />} />\n    </Routes>\n  </BrowserRouter>\n);\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;\n"
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst Pokedex = () => {\n  return <h1>All Pokémon</h1>;\n};\n\nexport default Pokedex;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 135402,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте оформим базовый макет нашего приложения, установив некоторые глобальные стили и типографику. Это обеспечит приложению единообразный внешний вид.\n\n1. В файле `App.jsx` загрузите файл `App.css`.\n2. Оберните компонент `Routes` в `div` и присвойте этому `div` класс `\"content\"`.\n3. В `App.css` добавьте оператор `@import` для внешнего шрифта: `@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");`\n4. Определите базовые глобальные стили, такие как `body`:\n   - Установите `font-family` в `\"Press Start 2P\", sans-serif`.\n   - Установите `background-color` в `#F7E39C`.\n   - Установите `text-align` в `center`.\n   - Установите `margin` в `0`.\n5. Определите стили для класса `.content`:\n   - Установите `width` в `90%`.\n   - Установите `max-width` в `640px`.\n   - Установите `margin` в `0 auto`.\n6. Определите стили для элементов `p`:\n   - Установите `line-height` в `1.5`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"./index.css\" />\n  <title>Pokédex</title>\n</head>\n<body>\n  <div id=\"root\">loading</div>\n</body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/pokedex\" element={<Pokedex />} />\n    </Routes>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}"
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;\n",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Pokedex = () => {\n  return <h1>All Pokémon</h1>;\n};\n\nexport default Pokedex;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3 - Copy - Copy",
            "id": 135403,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "С основными стилями на месте, давайте продолжим стилизовать навигацию и настроим макет области контента.\n\n1. В `App.css` добавьте стили для `nav`, чтобы обеспечить правильное выравнивание и цветовую схему:\n   - Установите `display` в `flex`.\n   - Установите `justify-content` в `center`.\n   - Установите `gap` в `10px`.\n   - Установите `padding` в `10px`.\n   - Установите `background-color` в `#D13325`.\n   - Установите `position` в `sticky`.\n   - Установите `top` в `0`.\n   - Установите `z-index` в `1000`.\n2. Создайте другое правило для `nav a` и объявите следующее внутри этого правила:\n   - Установите `text-decoration` в `none`.\n   - Установите `font-weight` в `bold`.\n   - Установите `color` в `#F7E39C`.\n   - Установите `margin` в `0 4px`.\n3. Создайте еще одно правило для состояния наведения с `nav a:hover`.\n   - Установите `color` в `black`.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"./index.css\" />\n  <title>Pokédex</title>\n</head>\n<body>\n  <div id=\"root\">loading</div>\n</body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}",
                  "solvedContent": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}"
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;\n",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Pokedex = () => {\n  return <h1>All Pokémon</h1>;\n};\n\nexport default Pokedex;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 135398,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Пора добавить функциональность в наш Pokédex, которая будет включать получение данных из внешнего API.\n\n1. В файле `Pokedex.jsx` импортируй необходимые хуки `useState` и `useEffect`.\n2. Инициализируй переменную состояния `pokemons` для хранения данных о Покемонах, используя `useState`. Инициализируй её пустым массивом.\n3. Реализуй асинхронную функцию `fetchPokemons`, которая будет получать данные о Покемонах.\n   - Используй `fetch` для получения данных с `https://pokedex.mimo.dev/api/pokemon`.\n   - Как только получишь ответ, получи данные в формате JSON и обнови переменную состояния `pokemon` с этими данными.\n4. Используй `useEffect`, чтобы вызвать `fetchPokemons` только один раз, когда компонент монтируется, установив пустой массив зависимостей.\n5. В операторе `return`, ниже заголовка, перебери переменную состояния `pokemons`, чтобы отобразить их имена, к которым можно получить доступ через `.name` в ненумерованном списке. Установи `index` в качестве ключа.",
              "preselectedFileIndex": 5,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;\n",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Pokedex = () => {\n  return <h1>All Pokémon</h1>;\n};\n\nexport default Pokedex;\n",
                  "solvedContent": "import React, { useState, useEffect } from \"react\";\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <>\n      <h1>All Pokémon</h1>\n      <ul>\n        {pokemons.map((pokemon, index) => (\n          <li key={index}>{pokemon.name}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Pokedex;\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}