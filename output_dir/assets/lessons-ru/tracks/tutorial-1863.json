{
  "tutorial": {
    "id": 1863,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Динамические обзоры",
    "descriptionContent": "Узнай, как использовать React для создания страницы отзывов с динамическим содержимым",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1863-icon-banner.svg",
    "chapters": [
      {
        "id": 12305,
        "title": "Динамические обзоры",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 111594,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте исследуем переиспользуемые компоненты React! В этом проекте вы создадите компонент React для отображения отзывов клиентов для местного ресторана. Подавая и отображая данные динамически через `props`, мы сможем переиспользовать компонент для отображения столько отзывов, сколько захотим.\n\nСначала давайте изучим предоставленный код: типичную структуру React, определение функционального компонента `Testimonial` и вызов функции `render()` из React. Поскольку мы хотим отображать несколько компонентов, мы уже собрали несколько внутри компонента `App`.\n\nНачнем с добавления оборачивающего элемента `<div>` в компонент Testimonial. Когда закончите, вы должны увидеть две карточки `Testimonial`.\n\n1. Добавьте элемент `<div>` с CSS классом `card` в оператор `return` функционального компонента `Testimonial`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\treturn (\n\t\t\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\treturn (\n\t\t<div className=\"card\"></div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 111596,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее, давай добавим несколько элементов в компонент `Testimonial`. Начнем с заголовка. Когда закончишь, ты должен увидеть заголовки на обеих карточках `Testimonial`.\n\n1. Сначала сохрани проп `title` в `const` с именем `title`.\n2. Затем, внутри элемента `<div>` в `return()`, добавь элемент `<h2>`, содержащий константу `title`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\tconst title = props.title;\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h2>{title}</h2>\n\t\t</div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 111597,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте теперь добавим автора компонента `Testimonial`, следуя аналогичному процессу, как и для заголовка карточки.\n\n1. Сохраните проп `author` в константу с именем `author`.\n2. Затем добавьте элемент `<h5>`, содержащий `author`, сразу после заголовка. Формат текста должен быть похож на:\n```javascript\nSubmitted by Tom J.\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>Submitted by {author}</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 111841,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Нам также следует отображать дату отзыва. Давайте включим её в тот же элемент `<h5>`, что и автора.\n\n1. Сохрани пропсы `date` в константе с именем `date`.\n2. Затем добавь `date` сразу после автора. Формат текста должен быть похож на:\n```javascript\nSubmitted by Tom J. on 10/20/2020\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>Submitted by {author}</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 111598,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "`Testimonial` также должен отображать 5-звездочный рейтинг автора, который, если вы посмотрите на предоставленный код, передается как целое число.\n\n1. Сохраните проп `stars` в `const` и интегрируйте его в HTML-структуру в теге `<h5>`. Формат текста должен быть похож на:\n```javascript\n5 / 5 Stars\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6",
            "id": 111599,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, `Testimonial` должен отображать фактическое содержание отзыва в теге `<p>`.\n\n1. Сохрани проп `content` в `const`. Затем интегрируй проп `content` как элемент `<p>`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 111601,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте добавим еще одну карточку на наш сайт.\n\n1. Добавь еще один элемент `Testimonial` под вторым `Testimonial` в компоненте `App`.\n2. Затем передай пропсы `author` и `date` в элементе `Testimonial`. Ты можешь выбрать любые значения — сделай это своим собственным отзывом!\n3. Наконец, передай пропсы 'stars' и 'content' в элементе `Testimonial`. Ты можешь выбрать любые значения.\n4. Ты должен увидеть третий `Testimonial` с данными, которые ты добавил!",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n      <Testimonial\n        title=\"Wow!\"\n        author=\"Sally T.\"\n        date=\"12/30/21\"\n        stars={5}\n        content=\"The ambiance was luxurious and the food was high scale.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Result",
            "id": 122313,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Отличная работа! В этом проекте ты создал многоразовый функциональный компонент. Затем ты повторно использовал его и добавил необходимые props, чтобы создать страницу отзывов для местного ресторана! Это твоя возможность поэкспериментировать с кодом — ты можешь добавить дополнительные поля в карточки отзывов или создать совершенно новые карточки отзывов. Попробуй и посмотри, что у тебя получится!",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n      <Testimonial\n        title=\"WOW!\"\n        author=\"Sally T.\"\n        date=\"12/30/21\"\n        stars={5}\n        content={\"The ambiance was luxurious and the food was high scale.\"}\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}