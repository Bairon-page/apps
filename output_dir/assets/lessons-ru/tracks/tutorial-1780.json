{
  "tutorial": {
    "id": 1780,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Калькулятор сбережений",
    "descriptionContent": "Используй циклы для создания программы чека для клиента",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1780-icon-banner.svg",
    "chapters": [
      {
        "id": 11755,
        "title": "Калькулятор скидок",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 107602,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте используем наши знания о многократно используемых программах, чтобы рассчитать скидки в магазине уцененных товаров.\n\nСначала давайте познакомимся с предоставленным кодом: есть массив, содержащий цены на товары, и функция, которая возвращает количество центов из этой цены. Функция использует `.toString()`, чтобы преобразовать цену из числа в строку. Затем она использует `.split(\".\")`, чтобы разделить цену на доллары и центы, используя `.` в качестве аргумента, и возвращает второй элемент полученного массива.\n\nДля начала ты напишешь две вспомогательные функции. Давайте разберемся с первой: `getsDiscount(rec)`. Эта функция сначала суммирует цены в чеке, используя цикл `for`. Затем, используя оператор `if-else`, функция вернет true, если сумма больше $50, в противном случае она вернет false.\n\nОбрати внимание, что функция `getDiscount(rec)` имеет параметр `rec`, который будет принимать массивы, содержащие чек.\n\n1. В теле функции объяви переменную `total` и установи ее значение равным 0.\n2. Напиши цикл `for`, чтобы итерироваться от 0 до длины массива `rec`.\n3. Обновляй переменную `total` на каждой итерации цикла `for`, добавляя новую сумму из чека.\n4. Наконец, после цикла `for`, напиши оператор `if-else`, который возвращает `true`, если `total` больше $50, и `false` в противном случае.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {}",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 107606,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее, давай напишем вторую вспомогательную функцию, `findDiscount()`. Эта функция будет принимать один параметр: `price`. В зависимости от количества центов в цене, функция будет использовать операторы `if`, `else-if` и `else`, чтобы вернуть \"фактор скидки\" (процент скидки, выраженный в виде десятичной дроби).\n\n1. Сначала объяви функцию `findDiscount()`. Функция должна принимать один параметр: `price`.\n2. Затем объяви переменную с именем `cents`. Используй предоставленную функцию `getCents()`, чтобы сохранить количество центов в цене в переменной `cents`.\n3. Наконец, напиши серию операторов `if`, `else-if` и `else`, чтобы возвращать факторы скидки в зависимости от количества `cents`.\n    - Если цена составляет 67 центов, функция должна вернуть `0.3`, что представляет собой скидку в 30%.\n    - Если цена составляет 95 центов, функция должна вернуть `0.4`, что представляет собой скидку в 40%.\n    - Если цена составляет 99 центов, функция должна вернуть `0.5`, что представляет собой скидку в 50%.\n    - В противном случае функция должна вернуть `0`, что означает отсутствие скидки.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Syntax of calling a function and storing its return value in a variable: `const varName = functionName(arg1, arg2...)`.\n2. Because the cents are returned in string format from `getCents()`, we must use the equality operator `==` instead of the strict equality operator `===`.\n3. Use a `return` statement to return a value from a function.\n"
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 107607,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда мы создали две вспомогательные функции, давайте напишем функцию для расчета общей суммы чека с учетом всех применимых скидок.\n\n1. Объяви функцию `calculateTotal`, которая принимает параметр `receipt`. Так же, как и функция `getsDiscount`, параметр `receipt` будет принимать массивы, содержащие чеки.\n2. Внутри функции инициализируй две переменные `total` и `totalSavings` значением 0. `total` будет хранить общую сумму после скидки, а `totalSavings` будет хранить общую сэкономленную сумму после скидки.\n3. Вызови функцию `calculateTotal()` в конце файла `index.js`, чтобы мы могли отслеживать результаты. Передай `receipt` в качестве значения.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `let` to initialize `total` and `totalSavings` since the values of the variables will change depending on the prices."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 107608,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее мы напишем цикл `for`, чтобы пройтись по массиву `receipt` и получить исходные цены.\n\n1. После объявления переменных напиши цикл `for`, который использует переменную-счетчик для перебора элементов `receipt`.\n2. Затем, внутри тела цикла, сохрани текущий элемент `receipt` в переменную с именем `originalPrice`.\n3. Чтобы проверить, правильно ли цикл проходит по массиву `receipt`, выведи значение `originalPrice` внутри цикла. Вывод должен выглядеть как в приведенном ниже фрагменте.\n\n```javascript\n21.99\n10.67\n18.5\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    console.log(originalPrice);\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. To access the current element of an array based on the iteration, you can use `array[counter]`. For example, if the counter variable is `i`, the current element of the `arr` array would be `arr[i]` in a loop.\n2. Start the `for` loop's counter with 0 since an array's index starts from 0."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 107609,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее давай напишем логику для применения скидки к каждой цене. Мы напишем оператор `if`, который проверяет, возвращает ли функция `getsDiscount()` значение `true` или `false` (помни, что дополнительные скидки на товары применяются только тогда, когда клиент тратит более $50).\n\n1. Удали оператор, который выводит `originalPrice` в консоль, так как он нам больше не нужен.\n2. Напиши оператор `if`, который использует результат функции `getsDiscount()` в качестве условия.\n3. Далее, если `getsDiscount(receipt)` возвращает `true`, объяви переменную `discountRate`.\n4. Переменная `discountRate` должна хранить результат вызова функции `findDiscount()` с переменной `originalPrice` в качестве параметра.\n5. Аналогично оригинальной цене, выведи `discountRate` в консоль внутри условия, чтобы проверить, работает ли это правильно. Вывод должен выглядеть так:\n\n```javascript\n0.5\n0.3\n0\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    console.log(originalPrice);\n  }\n}\n\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      console.log(discountRate);\n    }\n  }\n}\n\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Syntax of calling a function and storing it in a variable : `const varName = functionName(arg1, arg2...)`."
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 107610,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь у нас есть цикл, который проходит по каждому элементу массива `receipt` и находит его коэффициент скидки. Теперь мы рассчитаем экономию для каждого товара, умножив цену на коэффициент скидки. Наконец, мы суммируем каждую сумму экономии в переменной `totalSavings`, которую мы создали ранее, чтобы позже мы могли отобразить эту информацию пользователю.\n\n1. Удалите оператор, который выводит `discountRate` в консоль, так как он нам больше не нужен.\n2. Сразу после объявления переменной `discountRate` объявите переменную с именем `savings` и присвойте ей результат умножения `originalPrice` на `discountRate`.\n3. Затем добавьте `savings` к `totalSavings` и сохраните полученную сумму в переменной `totalSavings`.\n4. Внутри условия выведите `totalSavings` в консоль, чтобы проверить, что все работает. Вот пример вывода:\n\n```javascript\n10.995\n14.196\n14.196\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      console.log(discountRate);\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      console.log(totalSavings);\n    }\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use arithmetic operators (`+`, `-`, `*`, `/`) to perform arithmetic operations on variables."
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 108070,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда мы рассчитали сбережения, давайте рассчитаем каждую цену со скидкой. Сначала вычтем сбережения, рассчитанные на предыдущем шаге, из `originalPrice`. Затем мы суммируем эти цены со скидкой в переменной `total`, которую мы создали ранее, чтобы получить общую сумму для клиента.\n\n1. Удалите оператор, который выводит `totalSavings` в консоль, так как он нам больше не нужен.\n2. Сразу после операции суммирования `totalSavings` создайте переменную с именем `discountedPrice`, чтобы хранить разницу между переменными `originalPrice` и `savings`.\n3. Далее добавьте `discountedPrice` к переменной `total` и сохраните этот результат в переменной `total`.\n4. Выведите `total` в консоль изнутри условия. Вывод должен выглядеть так:\n\n```javascript\n10.995\n18.464\n36.964\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      console.log(totalSavings);\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use arithmetic operators (`+`, `-`, `*`, `/`) to perform arithmetic operations on variables."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 108071,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь нам нужно написать логику для случая, когда клиент не получает скидку. Не будет ни скидочного коэффициента, ни экономии для расчета, поэтому мы можем просто сложить эти цены в переменной `total`.\n\n1. Удалите оператор, который выводит `total` внутри оператора `if`.\n2. Напишите оператор `else`, который добавляет `originalPrice` к переменной `total`, а затем сохраняет этот результат в переменной `total`.\n3. Отобразите значение `total` снова, внутри оператора `else`.\n4. С текущим массивом `receipt` оператор `else` не выполнится. Поэтому мы выполним его с другим массивом, который его вызовет. Позже мы его удалим.\n    - После определения массива `receipt` создайте другой массив с именем `rec2`, который хранит `[2.99, 1.46, 5.67]`.\n    - В вызове функции `calculateTotal` передайте `rec2` в качестве значения вместо `receipt`.\n5. Вывод должен выглядеть так:\n\n```javascript\n2.99\n4.45\n10.120000000000001\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\nconst rec2 = [2.99, 1.46, 5.67];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n    } else {\n      total += originalPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(rec2);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `if-else` statement is:\n```javascript\nif(condition) {\n\n} else {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 107611,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, давай добавим оператор `console.log`, чтобы убедиться, что наша логика работает правильно. Мы напишем оператор `if` в конце блока `if` (но все еще внутри блока `if`), который проверяет, есть ли скидка. Если она есть, то программа отобразит сэкономленные средства в следующем формате:\n\n```javascript\nItem 1 Savings: $4.50\n```\n\n1. Удали оператор, который выводит `total` внутри оператора `else`.\n2. Удали код определения массива `rec2`. Также в вызове функции `calculateTotal` снова измени значение с `rec2` на `receipt`.\n3. Внутри блока `if` после существующего кода напиши еще один оператор `if`, который проверяет, что `discountRate` не равен 0.\n4. Если не равен 0, то выведи в консоль сэкономленные средства на товар в соответствии с примером формата выше.\n5. Чтобы отформатировать значения до двух цифр после запятой, добавь `.toFixed(2)` в конец `savings`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\nconst rec2 = [2.99, 1.46, 5.67];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n    } else {\n      total += originalPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(rec2);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      if (discountRate !== 0) {\n        console.log(\"Item \" + i + \" Savings: $\" + savings.toFixed(2));\n      }\n    } else {\n      total += originalPrice;\n    }\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display the result in the console."
                }
              ]
            }
          },
          {
            "title": "Step 10",
            "id": 107612,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Заверши программу, выведя сообщение пользователю с итогом их сбережений. После того как изменения будут внесены, вызови функцию в конце программы!\n\n1. Напиши оператор `console.log` в конце функции `calculateTotal`, который выводит переменную `totalSavings` в формате, подобном приведенному ниже примеру.\n2. Напиши еще один оператор `console.log` в конце функции `calculateTotal`, который выводит переменную `total` в формате, подобном приведенному ниже примеру.\n3. Вызови функцию `calculateTotal()` в конце файла `index.js`.\n\n```javascript\nTotal Saved: $16.56\nTotal Post-Discount: $48.56\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      if (discountRate !== 0) {\n        console.log(\"Item \" + i + \" Savings: $\" + savings.toFixed(2));\n      }\n    } else {\n      total += originalPrice;\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      if (discountRate !== 0) {\n        console.log(\"Item \" + i + \" Savings: $\" + savings.toFixed(2));\n      }\n    } else {\n      total += originalPrice;\n    }\n  }\n  console.log(\"Total Saved: $\" + totalSavings.toFixed(2));\n  console.log(\"Total Post-Discount: $\" + total.toFixed(2));\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display the result in the console."
                }
              ]
            }
          }
        ]
      }
    ]
  }
}