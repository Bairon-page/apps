{
  "tutorial": {
    "id": 2896,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Викторина - Часть 1",
    "descriptionContent": "Используй возможности Express для создания хорошо структурированного и сложного приложения для викторин",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2896-icon-banner.svg",
    "chapters": [
      {
        "id": 14987,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132139,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в проект **Quiz**. Мы создадим API, который будет предоставлять вопросы и проверять, правильно ли пользователь ответил.\n\nНачнем с настройки сервера Express.\n\n1. Объяви переменную `express` и подключи модуль `express`.\n2. Объяви переменную `app` и инициализируй ее, вызвав функцию `express`.\n3. Объяви переменную `port` и присвой ей значение `3000`.\n4. Используй функцию `listen` на `app`, чтобы приложение слушало порт, указанный в переменной `port`.\n5. Выведи сообщение в консоль внутри функции обратного вызова `listen`, чтобы мы знали, что наш сервер работает правильно.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});"
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 132207,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Для нашего викторины нам нужны вопросы. Давайте создадим класс `Question`, который будет отвечать за хранение идентификатора вопроса, текста вопроса, вариантов ответов и правильного ответа.\n\n1. В файле `Question.js` объявите класс `Question`, и конструктор должен принимать параметры `id`, `question`, `options` и `correctAnswer` и инициализировать их.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n}"
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #2",
            "id": 132140,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай добавим метод для проверки, правильный ли предоставленный ответ.\n\n1. Добавь метод `isCorrectAnswer` в класс `Question`, который принимает параметр `answer` и проверяет, совпадает ли он с `correctAnswer` для вопроса. В зависимости от результата метод должен возвращать `true` или `false`.\n2. Наконец, экспортируй класс `Question`, используя `module.exports = Question;`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n}",
                  "solvedContent": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;"
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #4",
            "id": 132142,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Нам понадобятся вопросы для нашего викторины.\n\n1. Создай массив под названием `questionsData`, который содержит объекты, представляющие каждый вопрос.\n2. Добавь как минимум два вопроса. Каждый объект вопроса должен иметь `id`, `question`, `options` (массив вариантов ответов) и `correctAnswer` (правильный ответ из вариантов).\n\nМожешь использовать следующие вопросы, если не хочешь придумывать свои:\n```\nconst questionsData = [\n  {\n    id: 1,\n    question: \"What is the capital of France?\",\n    options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n    correctAnswer: \"Paris\",\n  },\n  {\n    id: 2,\n    question: \"What is 2 + 2?\",\n    options: [\"3\", \"4\", \"5\", \"6\"],\n    correctAnswer: \"4\",\n  },\n];\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];"
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132148,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь мы будем использовать класс `Question` и данные вопросов в новом классе `Quiz`.\n\n1. В файле `Quiz.js` создайте переменную под названием `Question` и импортируйте в нее модуль `Question`.\n2. Создайте класс `Quiz`, который содержит массив вопросов:\n   - Класс должен иметь конструктор, который обрабатывает массив `questionsData`.\n   - Внутри конструктора каждый элемент в `questionsData` должен быть преобразован в объект `Question`.\n   - Объект `Question` должен быть создан с использованием свойств из каждого элемента в `questionsData` (например, `id`, `question`, `options` и `correctAnswer`).\n   - Все объекты вопросов должны быть сохранены в массиве `questions` внутри класса `Quiz`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];",
                  "solvedContent": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n}"
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #5",
            "id": 132143,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай добавим функциональность для получения случайного вопроса.\n\n1. Добавь метод `getRandomQuestion` в класс `Quiz`, который выбирает и возвращает случайный вопрос из `this.questions`.\n2. Наконец, экспортируй класс `Quiz`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n}",
                  "solvedContent": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n  getRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    return this.questions[randomIndex];\n  }\n}\n\nmodule.exports = Quiz;"
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #9",
            "id": 132147,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, в `quizRoutes.js` мы определим обработчики маршрутов для нашего приложения Quiz.\n\n1. Импортируй класс `Quiz` и создай экземпляр `quiz`, используя `require`.\n2. Инициализируй новый объект router. Не забудь импортировать Express для этого.\n3. Создай GET маршрут `/question` на router.\n   - Он должен выбирать случайный вопрос и возвращать его в виде JSON ответа.\n   - JSON ответ должен содержать ключи `id`, `question` и `options`, которые ты берешь из вопроса, полученного из викторины.\n4. Экспортируй `router`, используя `module.exports = router;`.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n  getRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    return this.questions[randomIndex];\n  }\n}\n\nmodule.exports = Quiz;",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const express = require(\"express\");\nconst Quiz = require(\"./Quiz\");\n\nconst router = express.Router();\nconst quiz = new Quiz();\n\nrouter.get(\"/question\", (req, res) => {\n  const question = quiz.getRandomQuestion();\n  res.json({\n    id: question.id,\n    question: question.question,\n    options: question.options,\n  });\n});\n\nmodule.exports = router;"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #7",
            "id": 132145,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай расширим наш основной файл `app.js`, чтобы включить конечную точку из маршрута викторины.\n\n1. Сначала подключи необходимые модули `quizRoutes`.\n2. Подключи промежуточное программное обеспечение маршрутизации `quizRoutes` на путь `/quiz`, чтобы можно было вызывать конечную точку `/quiz/question`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n  getRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    return this.questions[randomIndex];\n  }\n}\n\nmodule.exports = Quiz;",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, () => {\n  console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": "const express = require('express');\nconst quizRoutes = require(\"./quizRoutes\");\n\nconst app = express();\nconst port = 3000;\n\napp.use(\"/quiz\", quizRoutes);\n\napp.listen(port, () => {\n  console.log(`App is running on port ${port}`);\n});"
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require(\"express\");\nconst Quiz = require(\"./Quiz\");\n\nconst router = express.Router();\nconst quiz = new Quiz();\n\nrouter.get(\"/question\", (req, res) => {\n  const question = quiz.getRandomQuestion();\n  res.json({\n    id: question.id,\n    question: question.question,\n    options: question.options,\n  });\n});\n\nmodule.exports = router;",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          }
        ]
      }
    ]
  }
}