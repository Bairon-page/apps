{
  "tutorial": {
    "id": 1896,
    "version": 12,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Переменные и область видимости в ES6",
    "descriptionContent": "Используй разные способы создания переменных и пойми область видимости.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12383,
        "title": "Переменные Var",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 112202,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>До сих пор мы узнали много о JavaScript, технологии, которая постоянно развивается.</p><p>В 2015 году произошло крупное обновление JS под названием ECMAScript 2015 (ES6). Оно принесло новые возможности, такие как две переменные, которые ты уже знаешь.</p></body></html>"
          },
          {
            "title": "Var",
            "id": 112208,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Но до использования <code>let</code> и <code>const</code> мы объявляли переменные с помощью ключевого слова <code>var</code>, что означает <code>\"variable\"</code>.<br /></p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" color = \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>var</code>.</p></body></html>"
          },
          {
            "title": "Let and Const",
            "id": 112211,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>ES6 представил переменные <code>let</code> и <code>const</code>, чтобы преодолеть ограничения с <code>var</code>. Поэтому всегда старайся использовать <code>let</code> и <code>const</code>.</p><p>Выведи три разных типа переменных в консоль в том порядке, в котором мы их объявили, чтобы увидеть, что они работают одинаково.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" fullName = \" /><text value=\"&quot;Emma Watson&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" occupation = \" /><text value=\"&quot;Activist&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" age = \" /><text value=\"30\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(fullName);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(occupation);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(age);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"95\" /><option startIndex=\"110\" endIndex=\"120\" /><option startIndex=\"135\" endIndex=\"138\" /></options></interaction></interactions><output><content><text value=\"Emma Watson\" /><text type=\"break\" /><text value=\"Activist\" /><text type=\"break\" /><text value=\"30\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>fullName</code>, затем <code>occupation</code>, и наконец <code>age</code>.</p></body></html>"
          },
          {
            "title": "Let, const and var similarities",
            "id": 112212,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы используем переменные <code>var</code>, <code>let</code> и <code>const</code> для хранения данных, и они следуют тем же правилам именования, которые мы уже изучили.</p><p>Выберите подходящие имена для переменных.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" number = \" /><text value=\"20\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" player1 = \" /><text value=\"'Sonic'\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" badWeather = \" /><text value=\"&quot;rainy&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(number);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(player1);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(badWeather);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"10\" /><option startIndex=\"23\" endIndex=\"30\" /><option startIndex=\"46\" endIndex=\"56\" /></options></interaction></interactions><output><content><text value=\"20\" /><text type=\"break\" /><text value=\"Sonic\" /><text type=\"break\" /><text value=\"rainy\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>number</code>, затем <code>player1</code>, и наконец <code>badWeather</code>.</p></body></html>"
          },
          {
            "title": "Redeclaring var",
            "id": 112209,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Помимо именования, эти переменные ведут себя совершенно по-разному. Например, <code>var</code> можно объявлять несколько раз, тогда как <code>let</code> и <code>const</code> нельзя.</p><p>Если мы выведем <code>surname</code> в консоль, мы увидим только последнее значение, которое мы присвоили переменной.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" surname = \" /><text value=\"&quot;Smit&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" surname = \" /><text value=\"&quot;Smith&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(surname);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"57\" endIndex=\"64\" /><option correct=\"false\"><content><text value=\"firstName\" /></content></option></options></interaction></interactions><output><content><text value=\"Smith\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>surname</code>.</p></body></html>"
          },
          {
            "title": "Redeclaring const",
            "id": 112213,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем объявить <code>let</code> и <code>const</code> только один раз. Если мы попытаемся повторно объявить эти переменные, мы получим синтаксическую ошибку в консоли.</p><p>Отобрази <code>color</code> в консоли, чтобы увидеть ошибку.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" color = \" /><text value=\"&quot;Brow&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" color = \" /><text value=\"&quot;Brown&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(color);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"57\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"SyntaxError: Identifier 'color' has already been declared\" /><text type=\"break\" /><text value=\" \" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>color</code>.</p></body></html>"
          },
          {
            "title": "Redeclaring let",
            "id": 112214,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>То же самое происходит с переменной <code>let</code>, такой как <code>movie</code>. Мы не можем объявлять переменную <code>let</code> несколько раз.</p><p>Что будет отображаться в консоли?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" movie = \" /><text value=\"&quot;The Huner Games&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" movie = \" /><text value=\"&quot;The Hunger Games&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(movie);\" /></content><output><content><text value=\"Uncaught SyntaxError: Identifier 'movie' has already been declared\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Uncaught SyntaxError: Identifier 'movie' has already been declared</code></item><item value=\"2\" correct=\"false\"><code>The Huner Games</code></item><item value=\"3\" correct=\"false\"><code>The Hunger Games</code></item></selection><p visible-if=\"wrong\"><code>Uncaught SyntaxError: Identifier 'movie' has already been declared</code>.</p></body></html>"
          },
          {
            "title": "Final explanation",
            "id": 112265,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Объявление переменных с помощью <code>let</code> и <code>const</code> важно для избежания многих других ошибок в коде, поэтому мы должны использовать их в качестве первого варианта.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" canDance = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" canDance = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(canDance);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"67\" /></options></interaction></interactions><output><content><text value=\"SyntaxError: Identifier 'canDance' has already been declared\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>canDance</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 112210,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Правда или ложь? <code>var</code> — это единственное зарезервированное слово для создания переменных.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ложь</item><item value=\"2\" correct=\"false\">True</item></selection><p visible-if=\"wrong\">Обязательно выбери Ложь.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 112216,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что мы можем хранить в трех типах переменных?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Мы можем хранить все типы данных в трех типах переменных</item><item value=\"2\" correct=\"false\">Мы можем хранить только объекты в <code>let</code> и <code>const</code> и числа в <code>var</code></item></selection><p visible-if=\"wrong\">Мы можем хранить все типы данных в трех типах переменных.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 112217,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип переменной можно объявить заново?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>var</code></item><item value=\"2\" correct=\"false\"><code>const</code></item><item value=\"3\" correct=\"false\"><code>let</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>var</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 112224,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что означает ES6?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">ECMAScript 2015</item><item value=\"2\" correct=\"false\">JavaScript 2015</item><item value=\"3\" correct=\"false\">TypeScript 2015</item></selection><p visible-if=\"wrong\">ECMAScript 2015.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 112219,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Создай новую переменную <code>tree</code> с помощью <code>let</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" tree = \" /><text value=\"&quot;Crespon&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tree);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"9\" endIndex=\"10\" /><option startIndex=\"11\" endIndex=\"20\" /></options></interaction></interactions><output><content><text value=\"Crespon\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>let</code>, затем <code>tree</code>, а затем <code>=</code>, <code>\"Crespon\"</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 112220,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Расположи строки так, чтобы сначала объявить переменную <code>year</code>, затем обновить её и, наконец, вывести в консоль.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" year = \" /><text value=\"2021\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"year = \" /><text value=\"2022\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(year);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"16\" /><option startIndex=\"17\" endIndex=\"29\" /></options></interaction></interactions><output><content><text value=\"2022\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>let year = 2021;</code>, а затем <code>year = 2022;</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 112267,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Объяви переменную <code>forest</code> с использованием типа переменной <code>const</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" river = \" /><text value=\"&quot;Thames&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" mountain = \" /><text value=\"&quot;Everest&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" forest = \" /><text value=\"&quot;Sequoia National Forest&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(forest);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"48\" endIndex=\"53\" /></interactions><output><content><text value=\"Sequoia National Forest\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>const</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 12389,
        "title": "Обновление переменных и ошибки",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 112215,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы уже знаем три типа переменных: <code>let</code>, <code>const</code> и <code>var</code>.</p><p>Давайте узнаем больше о различиях между ними, чтобы понять, почему они используются в разных ситуациях.</p></body></html>"
          },
          {
            "title": "Updating variables",
            "id": 112229,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем обновлять переменные <code>let</code> или <code>var</code> с помощью оператора присваивания <code>=</code>. Но мы не можем изменять переменные <code>const</code>. <code>const</code> — это сокращение от \"constant\".</p><p>\"Pi\" — это математическое число, которое не изменяется. Если мы сохраним его в <code>const</code> и попытаемся изменить, какую ошибку мы получим?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" piNumber = \" /><text value=\"3.1416\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"piNumber = \" /><text value=\"90\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(piNumber);\" /></content><output><content><text value=\"TypeError: Assignment to constant variable.\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>TypeError: Assignment to constant variable</code></item><item value=\"2\" correct=\"false\"><code>ReferenceError: piNumber is not defined</code></item></selection><p visible-if=\"wrong\"><code>TypeError: Assignment to constant variable</code>.</p></body></html>"
          },
          {
            "title": "Updating const - Arrays",
            "id": 112232,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы не можем изменить весь массив, сохраненный в переменной <code>const</code>. Однако мы можем использовать методы массива, чтобы <em>обновить</em> его содержимое.</p><p>Используй правильный метод массива, чтобы включить <code>newPresent</code> в <code>wardrobe</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" newPresent = \" /><text value=\"&quot;Trousers&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wardrobe = [\" /><text value=\"&quot;Shirt&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"wardrobe.push(newPresent);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wardrobe);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"67\" /><option startIndex=\"67\" endIndex=\"68\" /><option startIndex=\"68\" endIndex=\"72\" /></options></interaction></interactions><output><content><text value=\"[ 'Shirt', 'Trousers' ]\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>wardrobe</code>, затем <code>.</code>, и наконец <code>push</code>.</p></body></html>"
          },
          {
            "title": "Updating const - Object properties",
            "id": 112296,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Точно так же мы не можем изменить весь объект, сохраненный в константе, но мы можем <em>обновить</em> его свойства.</p><p>Каков будет вывод <code>myClothes.shirts</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" myClothes = {\" /><text type=\"break\" /><text value=\" \" /><text value=\"shirts\" class=\"attr\" /><text value=\": \" /><text value=\"1\" class=\"number\" /><text value=\",\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"myClothes.shirts++;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(myClothes.shirts);\" /></content><output><content><text value=\"2\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">2</item><item value=\"2\" correct=\"false\">1</item></selection><p visible-if=\"wrong\">Обязательно выбери 2.</p></body></html>"
          },
          {
            "title": "Var Hoisting",
            "id": 112275,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Еще одно отличие между тремя типами переменных заключается в том, что мы можем хранить данные в переменной <code>var</code> до того, как мы ее объявим.</p><p>Этот процесс называется \"hoisting\". Имей в виду, что <strong>это не является хорошей практикой</strong>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"zodiacSign = \" /><text value=\"&quot;Aries&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" zodiacSign;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(zodiacSign);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"25\" /></options></interaction></interactions><output><content><text value=\"Aries\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>var</code>.</p></body></html>"
          },
          {
            "title": "let and const not hoisting",
            "id": 112274,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>let</code> и <code>const</code> предотвращают поднятие, потому что мы всегда должны объявлять эти переменные перед тем, как сохранять в них данные.</p><p>Мы увидим ошибку инициализации в консоли, если присвоим значение переменной <code>const</code> или <code>let</code> до того, как объявим их.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"car = \" /><text value=\"&quot;Renault&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" car;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(car);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"24\" /></options></interaction></interactions><output><content><text value=\"ReferenceError: Cannot access 'car' before initialization\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>let</code>, а затем <code>car</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 112331,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип переменной вы бы сочли подходящим для хранения числа Эйлера, которое всегда равно 2.71828?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" eulerNumber = \" /><text value=\"2.71828\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(eulerNumber);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option correct=\"false\"><content><text value=\"var\" /></content></option><option correct=\"false\"><content><text value=\"let\" /></content></option></options></interaction></interactions><output><content><text value=\"2.71828\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>const</code>.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 112332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что будет отображаться в консоли?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" placeOfBirth = \" /><text value=\"&quot;Tokyo&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"placeOfBirth = \" /><text value=\"&quot;Asunción&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(placeOfBirth);\" /></content><output><content><text value=\"TypeError: Assignment to constant variable.\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>TypeError: Assignment to constant variable</code></item><item value=\"2\" correct=\"false\"><code>TypeError: Assignment to let variable</code></item><item value=\"3\" correct=\"false\">Асунсьон</item></selection><p visible-if=\"wrong\"><code>TypeError: Assignment to constant variable</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 112333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Можем ли мы обновить <em>свойство</em> объекта, хранящегося в переменной <code>const</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Да, ты можешь изменить свойства объекта, хранящегося в переменной <code>const</code></item><item value=\"2\" correct=\"false\">Нет</item></selection><p visible-if=\"wrong\">Да, ты можешь изменить свойства объекта, хранящегося в переменной <code>const</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 112334,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что будет отображаться в консоли?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"artist = \" /><text value=\"&quot;Frida Kahlo&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" artist;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(artist);\" /></content><output><content><text value=\"ReferenceError: Cannot access 'artist' before initialization\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>TypeError: Assignment to constant variable</code></item><item value=\"2\" correct=\"true\"><code>ReferenceError: Cannot access 'artist' before initialization</code></item></selection><p visible-if=\"wrong\"><code>ReferenceError: Cannot access 'artist' before initialization</code>.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 112335,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Упорядочи строки кода, чтобы избежать hoisting.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" lotteryNumbers;\" /><text type=\"break\" /><text value=\"lotteryNumbers = [\" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"34\" class=\"number\" /><text value=\", \" /><text value=\"645\" class=\"number\" /><text value=\", \" /><text value=\"01\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(lotteryNumbers);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"19\" /><option startIndex=\"20\" endIndex=\"55\" /></options></interaction></interactions><output><content><text value=\"[ 20, 34, 645, 1 ]\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>var lotteryNumbers;</code>, а затем <code>lotteryNumbers = [20, 34, 645, 01];</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 112336,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код так, чтобы значение переменной не могло быть обновлено.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" capitalOfZambia = \" /><text value=\"&quot;Lusaka&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(capitalOfZambia);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option correct=\"false\"><content><text value=\"var\" /></content></option></options></interaction></interactions><output><content><text value=\"Lusaka\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>const</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 112337,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Закодируй тип переменной, который <em>не</em> вызовет ошибку.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"asleep = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" asleep;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(asleep);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"15\" endIndex=\"18\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>var</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 12384,
        "title": "Область видимости",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 112203,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Теперь, когда мы освоили три типа переменных, давайте узнаем о концепции \"области видимости\".</p><p>«Scope» — это термин, используемый для обозначения того, где доступны переменные. Есть части нашего кода, где у нас нет к ним доступа.</p></body></html>"
          },
          {
            "title": "Local Scope",
            "id": 112339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><strong>Локальная</strong> или <strong>функциональная</strong> область видимости относится к части кода внутри функции.</p><p>Здесь <code>country</code> — это локальная переменная, к которой мы можем получить доступ только внутри функции <code>visitCountry</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"visitCountry\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" country = \" /><text value=\"&quot;Argentina&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(country);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"visitCountry();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"32\" /><option startIndex=\"44\" endIndex=\"55\" /><option startIndex=\"33\" endIndex=\"40\" /></options></interaction></interactions><output><content><text value=\"Argentina\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>const</code>, затем <code>country</code>, и наконец <code>Argentina\";</code>.</p></body></html>"
          },
          {
            "title": "Local Scope 2",
            "id": 112299,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Попытка доступа к локальной переменной из-за пределов функции вызовет ошибку.</p><p>Здесь <code>myDiary</code> является приватным, поэтому мы не можем получить к нему доступ извне функции. Давайте попробуем посмотреть, что будет отображено.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"readDiary\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" myDiary = \" /><text value=\"&quot;Dear diary, today...&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(myDiary);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"78\" endIndex=\"85\" /><option correct=\"false\"><content><text value=\"myDiary()\" /></content></option></options></interaction></interactions><output><content><text value=\"ReferenceError: myDiary is not defined\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>myDiary</code>.</p></body></html>"
          },
          {
            "title": "Global Scope",
            "id": 112298,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Пространство вне функции называется <strong>глобальной областью видимости</strong>. Можно думать об этом как о коде между функциями.</p><p>Если мы объявим <code>cityToVisit</code> в глобальной области видимости, мы сможем получить к нему доступ из любой части кода, включая внутри функции <code>travel</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" cityToVisit = \" /><text value=\"&quot;Salzburg&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"travel\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Let's go to &quot;\" class=\"string\" /><text value=\" + cityToVisit);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"travel();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(cityToVisit);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"92\" /><option startIndex=\"119\" endIndex=\"130\" /></options></interaction></interactions><output><content><text value=\"Let's go to Salzburg\" /><text type=\"break\" /><text value=\"Salzburg\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>cityToVisit</code>, а затем <code>cityToVisit</code>.</p></body></html>"
          },
          {
            "title": "Block scope",
            "id": 112301,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Последний тип области видимости называется <strong>блочной областью видимости</strong>. Это часть нашего кода между фигурными скобками ( <code>{}</code> ), которые принадлежат циклам или условным конструкциям.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"if\" class=\"keyword\" /><text value=\" (\" /><text value=\"10\" class=\"number\" /><text value=\" === \" /><text value=\"10\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;This space here is block scope&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"16\" /><option startIndex=\"65\" endIndex=\"66\" /></options></interaction></interactions><output><content><text value=\"This space here is block scope\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>{</code>, а затем <code>}</code>.</p></body></html>"
          },
          {
            "title": "Block scope - var",
            "id": 112302,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем получить доступ к <code>var</code>, объявленной внутри блока, снаружи него, что может вызвать путаницу, если мы объявим её более одного раза.<br /></p><p>Здесь мы объявляем переменную <code>access</code> дважды. Каков будет вывод?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" age = \" /><text value=\"18\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" access = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (age === \" /><text value=\"18\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"var\" class=\"keyword\" /><text value=\" access = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(access);\" /></content><output><content><text value=\"false\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">false</item><item value=\"2\" correct=\"false\">истина</item></selection><p visible-if=\"wrong\">Обязательно выбери false.</p></body></html>"
          },
          {
            "title": "Block scope - let, const",
            "id": 112303,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Если мы объявляем <code>let</code> и <code>const</code> в блоке, мы можем получить к ним доступ только в этом блоке кода.</p><p>Здесь есть две переменные <code>canDrive</code>, одна в глобальной области видимости и другая в области видимости блока. Что отображается в консоли?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" drivingAge = \" /><text value=\"18\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" canDrive = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (drivingAge === \" /><text value=\"18\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" canDrive = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(canDrive);\" /></content><output><content><text value=\"false\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Глобальная переменная</item><item value=\"2\" correct=\"false\">Переменная блока</item></selection><p visible-if=\"wrong\">Глобальная переменная.</p></body></html>"
          },
          {
            "title": "Block scope - for",
            "id": 112304,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Блочная область видимости также полезна для ограничения использования определенных переменных. Это действительно помогает предотвратить нежелательные побочные эффекты или ошибки.</p><p>Здесь мы можем использовать только переменную <code>index</code> в цикле. После завершения цикла <code>index</code> больше недоступен.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" index = \" /><text value=\"1\" class=\"number\" /><text value=\"; index &lt;= \" /><text value=\"3\" class=\"number\" /><text value=\"; index++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Let's count to three&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(index);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"100\" /></options></interaction></interactions><output><content><text value=\"Let's count to three\" /><text type=\"break\" /><text value=\"Let's count to three\" /><text type=\"break\" /><text value=\"Let's count to three\" /><text type=\"break\" /><text value=\"Uncaught ReferenceError: index is not defined\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>index</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 112341,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как называется область видимости внутри функции?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Локальная или Функциональная Область Видимости</item><item value=\"2\" correct=\"false\">Глобальная область видимости</item></selection><p visible-if=\"wrong\">Локальная или Функциональная Область Видимости.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 112342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какова область видимости переменной <code>dog</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"annoyDog\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;This cat doesn't like &quot;\" class=\"string\" /><text value=\" + dog.name + \" /><text value=\"&quot; the dog.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" dog = {\" /><text type=\"break\" /><text value=\" \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Ryan&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"eat\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;dog food&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"likes\" class=\"attr\" /><text value=\": [\" /><text value=\"&quot;ball&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"annoyDog();\" /></content><output><content><text value=\"This cat doesn't like Ryan the dog.\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Глобальная область видимости</item><item value=\"2\" correct=\"false\">Локальная область видимости</item><item value=\"3\" correct=\"false\">Блочная область видимости</item></selection><p visible-if=\"wrong\">Глобальная область видимости.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 112343,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Блочная область видимости - это части кода между какими символами?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>{ }</code></item><item value=\"2\" correct=\"false\"><code>[ ]</code></item></selection><p visible-if=\"wrong\"><code>{ }</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 112344,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Можем ли мы получить доступ к переменной <code>var</code>, объявленной внутри блочной области видимости, снаружи?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Да</item><item value=\"2\" correct=\"false\">Нет</item></selection><p visible-if=\"wrong\">Обязательно выбери Да.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 112300,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Здесь <code>neighborhood</code> является глобальной переменной, но <code>BATH</code> — локальной, так что что будет отображено в консоли?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" neighborhood = {\" /><text type=\"break\" /><text value=\" \" /><text value=\"apartments\" class=\"attr\" /><text value=\": \" /><text value=\"13\" class=\"number\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"garden\" class=\"attr\" /><text value=\": \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"fixMyHouse\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" BATH = \" /><text value=\"&quot;Fix Mirror&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(BATH);\" /></content><output><content><text value=\"ReferenceError: BATH is not defined\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">ReferenceError</item><item value=\"2\" correct=\"false\">\"Исправить зеркало\"</item></selection><p visible-if=\"wrong\">Обязательно выбери ReferenceError.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 112345,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Создай глобальную область видимости переменной <code>const</code> и переменную с областью видимости блока <code>let</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" STUDY = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (STUDY) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" pass = \" /><text value=\"'You have passed the exam!'\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(pass);\" /><text type=\"break\" /><text value=\"} \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;You have failed&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"34\" endIndex=\"37\" /></options></interaction></interactions><output><content><text value=\"You have passed the exam!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>const</code>, а затем <code>let</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 112340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип ошибки будет отображаться в консоли?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" index = \" /><text value=\"1\" class=\"number\" /><text value=\"; index &lt;= \" /><text value=\"3\" class=\"number\" /><text value=\"; index++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(index);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(index);\" /></content><output><content><text value=\"ReferenceError: index is not defined\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">ReferenceError</item><item value=\"2\" correct=\"false\">SyntaxError</item></selection><p visible-if=\"wrong\">Обязательно выбери ReferenceError.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 112346,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какова область видимости переменной <code>availableBand</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"playMusic\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" band = [\" /><text value=\"&quot;Tina&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Michael&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rue&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (band &amp;&amp; band.length) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" availableBand = \" /><text value=\"&quot;Band is Available!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(availableBand);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"playMusic();\" /></content><output><content><text value=\"Band is Available!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Блочная область видимости</item><item value=\"3\" correct=\"false\">Глобальная область видимости</item></selection><p visible-if=\"wrong\">Блочная область видимости.</p></body></html>"
          }
        ]
      }
    ]
  }
}