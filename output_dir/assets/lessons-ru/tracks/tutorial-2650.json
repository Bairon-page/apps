{
  "tutorial": {
    "id": 2650,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Введение в Python",
    "descriptionContent": "Задания на закрепление\nна основе Введения в Python",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14658,
        "title": "Привет - Python",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "How Challenges Work",
            "id": 129686,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Каждое задание потребует от тебя написания кода в соответствии с инструкциями.\n\nТвой код будет автоматически протестирован, когда ты нажмешь кнопку отправки. Ты увидишь обратную связь, чтобы понять, правильно ли он написан. Ты также можешь запустить свой код перед отправкой, нажав кнопку \"Run Code\". Давай попробуем!\n\n1. Заверши оператор вывода, написав код `print`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "(\"Hello!\")",
                  "solvedContent": "print(\"Hello!\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14659,
        "title": "Объявление строк",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Declaring Variables with String Values",
            "id": 129687,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Твой друг попросил тебя выяснить, как хорошо идет их канал на YouTube. Давай найдем их лучшие и худшие видео!\n\n1. Создай переменную `most_viewed` и присвой ей значение `\"7 Amazing Mugs I CANNOT live without\"`.\n2. Создай переменную `least_viewed` и присвой ей значение `\"The Best Mug to Take Scuba Diving\"`.\n3. Используй функцию `print`, чтобы вывести переменные в консоль, каждую на отдельной строке.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "most_viewed = \"7 Amazing Mugs I CANNOT live without\"\nleast_viewed = \"The Best Mug to Take Scuba Diving\"\n\nprint(most_viewed)\nprint(least_viewed)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14660,
        "title": "Объявление чисел",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Declaring Variables with Number Values",
            "id": 129688,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Твоя любимая группа загрузила новое видео! Давай посмотрим, сколько людей его посмотрели и прокомментировали.\n\n1. Создай переменную `views` и присвой ей значение `1145`.\n2. Создай переменную `comments` и присвой ей значение `200`.\n3. Используй оператор `print`, чтобы вывести переменную `views` на консоль.\n4. Используй оператор `print`, чтобы вывести переменную `comments` на консоль.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "views = 1145\ncomments = 200\n\nprint(views)\nprint(comments)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14661,
        "title": "Возраст, с которого можно водить машину",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Legal Driving Age",
            "id": 129689,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Сэм 16 лет, и она хочет узнать, достаточно ли она взрослая, чтобы водить машину. Заверши недостающие операторы, чтобы показать, что любой, кто моложе 17 лет, не имеет права водить.\n\n1. Заверши сравнение `too_young`, чтобы ответить на вопрос в консоли с помощью `Boolean`, который говорит, что Сэм слишком молода, чтобы водить.\n2. Заверши сравнение `car_driver`, чтобы показать, что она не может водить машину.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "sams_age = 16\r\ntoo_young = sams_age  17\r\ncar_driver = sams_age  17\r\n\r\nprint(f\"Is Sam too young to drive? {too_young}\")\r\nprint(f\"Can Sam drive a car? {car_driver}\")",
                  "solvedContent": "sams_age = 16\r\ntoo_young = sams_age < 17\r\ncar_driver = sams_age > 17\r\n\r\nprint(f\"Is Sam too young to drive? {too_young}\")\r\nprint(f\"Can Sam drive a car? {car_driver}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14662,
        "title": "Проверка старого пароля",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Old Password Check",
            "id": 129690,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lorde забыла свой пароль и использует программу для его восстановления. Программа проверяет, отличается ли ее новый пароль от старого. Она также заставляет Lorde ввести новый пароль дважды, чтобы убедиться, что он написан правильно. Давайте закончим эту программу!\n\n1. Используйте оператор неравенства в `compare_old_new`, чтобы показать, что пароли **не** одинаковы.\n2. Убедитесь, что `new_password` совпадает с `repeat_new_password`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "old_password = \"hello123\"\r\nnew_password = \"goodbye321\"\r\ncompare_old_new = old_password new_password\r\nrepeat_new_password = \"goodbye321\"\r\ncompare_new = new_password repeat_new_password\r\n\r\nprint(f\"Is new password different from old password? {compare_old_new}\")\r\nprint(f\"Has new password been introduced correctly? {compare_new}\")",
                  "solvedContent": "old_password = \"hello123\"\r\nnew_password = \"goodbye321\"\r\ncompare_old_new = old_password != new_password\r\nrepeat_new_password = \"goodbye321\"\r\ncompare_new = new_password == repeat_new_password\r\n\r\nprint(f\"Is new password different from old password? {compare_old_new}\")\r\nprint(f\"Has new password been introduced correctly? {compare_new}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14663,
        "title": "Цена билета в кино",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Movie Ticket Price",
            "id": 129691,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Джонас собирается в кино. Он проверил цены, и ему нужен билет для одного взрослого.\n\n1. Заверши f-строку, чтобы показать, что он купит билет для взрослого, используя правильную переменную.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "age = 15\r\nadult_ticket = age >= 12\r\n\r\nprint( \"Buy one adult ticket: {}\")",
                  "solvedContent": "age = 15\r\nadult_ticket= age >= 12\r\n\r\nprint(f\"Buy one adult ticket: {adult_ticket}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13124,
        "title": "Оператор неравенства",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Inequality Operator with Variables",
            "id": 118105,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте поможем нашему другу-ютуберу выяснить, когда им следует попросить свою аудиторию подписаться!\n\n1. Используй `views` и `subscribers`, чтобы создать новую переменную под названием `askToSubscribe`, которая содержит результат сравнения неравенства между ними.\n2. Отобрази результат.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "views = 1533\nsubscribers = 123\n",
                  "solvedContent": "views = 1533\nsubscribers = 123\n\naskToSubscribe = views != subscribers\n\nprint(askToSubscribe)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13119,
        "title": "Использование переменных: числа",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Using variables that have numbers",
            "id": 118100,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ты барабанщик в классной новой группе. Давай посчитаем общее количество времени, которое люди потратили на прослушивание твоей самой популярной песни!\n\n1. Создай переменную `totalListenTime`. Умножь `bestSongLength` на `bestSongListens` и сохрани результат в переменной.\n2. Используй оператор `print`, чтобы вывести новую переменную.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "bestSongLength = 3.5\nbestSongListens = 456",
                  "solvedContent": "bestSongLength = 3.5\nbestSongListens = 456\n\ntotalListenTime = bestSongLength * bestSongListens\nprint(totalListenTime)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13121,
        "title": "Оператор равенства с числами",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Checking for equality with numbers",
            "id": 118102,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ты решил поделиться своими потрясающими шутками с миром и создал аккаунт в Twitter! Давай используем оператор равенства, чтобы узнать, достиг ли ты 1000 подписчиков.\n\n1. Создай переменную с именем `celebrationTime` и присвой ей результат сравнения между `followers` и `1000`.\n2. Используй оператор `print`, чтобы отобразить результат.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "followers = 900",
                  "solvedContent": "followers = 900\ncelebrationTime = followers == 1000\n\nprint(celebrationTime)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13122,
        "title": "Оператор равенства со строками",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Checking for equality with strings",
            "id": 118103,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ты только что нашел самое милое видео с животными! Но оно кажется немного знакомым. Давай узнаем, было ли оно сделано твоим любимым создателем контента.\n\n1. Создай переменную `madeByFavorite` и присвой ей результат сравнения между `newCreator` и `favoriteCreator`. Убедись, что используешь оператор равенства.\n2. Отобрази новую переменную.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "newCreator = \"Bunnies4Ever\"\nfavoriteCreator = \"BestBunnies\"",
                  "solvedContent": "newCreator = \"Bunnies4Ever\"\nfavoriteCreator = \"BestBunnies\"\n\nmadeByFavorite = newCreator == favoriteCreator\n\nprint(madeByFavorite)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13118,
        "title": "Обновление переменных",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Updating variables with new values",
            "id": 118099,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ты решил начать карьеру на YouTube и выложил свое первое видео. Давай проверим, сколько лайков оно набирает.\n\n1. Увеличь переменную `likes` на 1.\n2. Используй оператор `print`, чтобы вывести значение переменной `likes`.\n3. Увеличь переменную `likes` еще на 1.\n4. Используй оператор `print`, чтобы снова вывести значение переменной `likes`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "likes = 1145\nlikes = 1146",
                  "solvedContent": "likes = 1145\nlikes = 1146\nlikes = 1147\nprint (likes)\nlikes = 1148\nprint (likes)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13123,
        "title": "Оператор равенства с переменными",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equality with numbers in variables",
            "id": 118104,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Твой младший кузен создал свою собственную социальную медиа платформу! Он убедил тебя присоединиться. Давай проверим, получил ли твой первый пост одинаковое количество просмотров и комментариев.\n\n1. Создай переменную `everyoneComments` и присвой ей результат сравнения между `views` и `comments`.\n2. Отобрази результат.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "views = 1511\ncomments = 1511",
                  "solvedContent": "views = 1511\ncomments = 1511\n\neveryoneComments = views == comments\n\nprint(everyoneComments)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13113,
        "title": "Оператор \"больше чем\"",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Greater than operator",
            "id": 118090,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Два человека играют в боулинг. Bowler1 делает 5 страйков и 5 спэров. Bowler2 делает 4 страйка и шесть спэров. Ничья невозможна!\n\n1. После `\"bowler1 wins:\"` создайте оператор print, чтобы проверить, больше ли счет bowler1, чем счет bowler2.\n2. После `\"bowler2 wins:\"` выведите сравнение, чтобы проверить, больше ли счет bowler2, чем счет bowler1.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "sam_strikes = 5\r\nsam_spares = 5\r\nleo_strikes = 4\r\nleo_spares = 6\r\nsam_score = sam_strikes * 30 + sam_spares * 20\r\nleo_score = leo_strikes * 30 + leo_spares * 20\r\n\r\n#Decide winner\r\nprint(\"Sam wins:\")\r\n\r\nprint(\"Leo wins:\")",
                  "solvedContent": "sam_strikes = 5\r\nsam_spares = 5\r\nleo_strikes = 4\r\nleo_spares = 6\r\nsam_score = sam_strikes * 30 + sam_spares * 20\r\nleo_score = leo_strikes * 30 + leo_spares * 20\r\n\r\n#Decide winner\r\nprint(\"Sam wins:\")\r\nprint(sam_score > leo_score)\r\n\r\nprint(\"Leo wins:\")\r\nprint(leo_score > sam_score)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13111,
        "title": "Операторы",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Operators",
            "id": 118088,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Анна использует банкомат, чтобы добавить $200 `deposit` на свой счет. Она хочет снять $100 `withdrawal`.\n\n1. Заверши код, чтобы показать, что снятие Анны `approved`, если у нее достаточно денег на `account_balance`, или `denied` в противном случае.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "deposit  200\r\nwithdrawal  100\r\naccount_balance = deposit - withdrawal\r\nprint(\"Account balance is:\")\r\nprint(account_balance)\r\nprint(\"Withdrawal is:\")\r\nprint(withdrawal)\r\n\r\napproved  withdrawal  account_balance\r\ndenied  withdrawal  account_balance\r\n\r\nprint(\"Withdrawal approved. \") \r\nprint(approved)\r\n\r\nprint(\"Withdrawal denied. \")\r\nprint(denied)",
                  "solvedContent": "deposit = 200\r\nwithdrawal = 100\r\naccount_balance = deposit - withdrawal\r\nprint(\"Account balance is:\")\r\nprint(account_balance)\r\nprint(\"Withdrawal is:\")\r\nprint(withdrawal)\r\n\r\napproved = withdrawal <= account_balance\r\ndenied = withdrawal > account_balance\r\n\r\nprint(\"Withdrawal approved. \") \r\nprint(approved)\r\n\r\nprint(\"Withdrawal denied. \")\r\nprint(denied)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13112,
        "title": "Операторы равенства и неравенства",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equality and inequality operators",
            "id": 118089,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Идентификатор избирателя сравнивается с реестром избирателей перед тем, как кому-то выдается бюллетень.\n\n1. Создайте переменную `valid_voter`, которая хранит результат сравнения `ID_name` избирателя и `voter_register_name`.\n2. Выведите на экран сравнение `valid_voter` с `True`, чтобы увидеть, получит ли избиратель бюллетень или ему нужно зарегистрироваться.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "#voter_id_match_registry\r\nID_name = \"Kristen Stewart\"\r\nvoter_register_name = \"Kristen Jaymes Stewart\"\r\n\r\n\r\nprint(\"Here's your ballot.\")\r\nprint(valid_voter  True)\r\n\r\nprint(\"You must register to vote first.\")\r\nprint(valid_voter  True)",
                  "solvedContent": "#voter_id_match_registry\r\nID_name = \"Kristen Stewart\"\r\nvoter_register_name = \"Kristen Jaymes Stewart\"\r\nvalid_voter = ID_name == voter_register_name\r\n\r\nprint(\"Here's your ballot.\")\r\nprint(valid_voter == True)\r\n\r\nprint(\"You must register to vote first.\")\r\nprint(valid_voter != True)"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}