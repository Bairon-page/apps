{
  "tutorial": {
    "id": 2010,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Отчет о магазине подарков",
    "descriptionContent": "Используй свои знания об операциях с массивами, чтобы создать отчет магазина подарков",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2010-icon-banner.svg",
    "chapters": [
      {
        "id": 12785,
        "title": "Отчет о магазине подарков",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 115889,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "В этом проекте ты будешь использовать свои знания о JavaScript операторах массивов, таких как `.reduce()`, `.map()`, и `.filter()`, чтобы проанализировать данные о продажах недавно открытого магазина подарков.\n\nМы сосредоточимся на анализе продаж за первую неделю, поэтому давай сначала создадим переменную с именем `firstWeekSales`, чтобы сохранить массив, содержащий только данные о продажах за первую неделю. Чтобы попрактиковаться в написании лаконичного синтаксиса, ты должен использовать inline функцию.\n\n1. Вызови соответствующую JavaScript функцию на массиве `sales`, чтобы создать новый массив, содержащий только данные о продажах за первую неделю. Сохрани результат в `firstWeekSales`.\n2. Затем, используй `console.log`, чтобы вывести текст `\"First Week Sales: \"`, конкатенированный с `firstWeekSales`, чтобы проверить свою работу. В твоем новом массиве должно быть только 7 значений.\n\nПример вывода:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 116143,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь нам нужно создать соответствующий массив данных о клиентах за первую неделю. Как упоминалось на предыдущем шаге, мы будем использовать встроенную функцию для дальнейшей практики.\n\n1. Создай переменную с именем `firstWeekCustomers` и используй синтаксис, аналогичный предыдущему шагу, чтобы сохранить массив данных о клиентах за первые 7 дней.\n2. Как и раньше, используй `console.log` для вывода текста `\"First Week Customers: \"`, конкатенированного с `firstWeekCustomers`, чтобы проверить свою работу. В твоем новом массиве должно быть только 7 значений.\n\nТвой вывод из обоих файлов должен быть следующим:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\nFirst Week Customers: 25,30,20,35,36,32,44\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 116144,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте упростим наш синтаксис, используя стрелочные функции. Ты должен сохранить те же операторы `console.log`.\n\n1. Преобразуй две встроенные функции `.filter()` в стрелочные функции.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 116145,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "У нас есть массив с данными о продажах за первую неделю. Давайте посчитаем его сумму, чтобы узнать общий объем продаж в сувенирном магазине за неделю.\n\n1. Создай новую переменную с именем `firstWeekSalesSum`.\n2. Затем вызови соответствующую встроенную функцию JavaScript для массива `firstWeekSales`, чтобы вычислить его сумму. Сохрани это значение в своей новой переменной `firstWeekSalesSum`. Ты должен использовать стрелочную функцию.\n3. Наконец, используй `console.log`, чтобы вывести текст `\"First Week Sales Sum: \"`, объединенный с переменной `firstWeekSalesSum`, чтобы проверить свою работу.\n\nТвой вывод должен быть:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\nFirst Week Customers: 25,30,20,35,36,32,44\nFirst Week Sales Sum: 4550 \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 116147,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте теперь выполним ту же операцию с `firstWeekCustomers`, чтобы найти общее количество клиентов за первую неделю. Опять же, следует использовать стрелочную функцию, чтобы упростить синтаксис.\n\n1. Создайте новую переменную с именем `firstWeekCustomersSum`.\n2. Затем вызовите соответствующую JavaScript функцию на массиве `firstWeekCustomers`, чтобы вычислить его сумму, и сохраните это значение в вашей новой переменной `firstWeekCustomersSum`. Следует использовать стрелочную функцию.\n3. Наконец, выведите в `console.log` текст `\"First Week Customers Sum: \"`, конкатенированный с переменной `firstWeekCustomersSum`, чтобы проверить вашу работу.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6",
            "id": 116148,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте используем наши рассчитанные итоги, чтобы найти средние показатели продаж за день и на клиента.\n\n1. Создайте переменную с именем `firstWeekAverage` и вычислите среднее значение дневных продаж, используя `firstWeekSalesSum`.\n2. Затем создайте переменную с именем `firstWeekCustomerAvg` и вычислите средние продажи на клиента, используя `firstWeekSalesSum` и `firstWeekCustomersSum`.\n3. Чтобы проверить свою работу, используйте `console.log` для вывода текста `\"First Week Average: \"`, объединенного с переменной `firstWeekAverage`.\n4. Наконец, используйте `console.log` для вывода текста `\"First Week Customer Average: \"`, объединенного с переменной `firstWeekCustomerAvg`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 116149,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Владелец сувенирного магазина запросил более детальную аналитику за первую неделю. Они хотели бы увидеть среднюю продажу на клиента за каждый день, с указанием соответствующего дня недели. Давайте сначала создадим массив средних продаж за день.\n\n1. Создайте новую переменную с именем `firstWeekDailyAverage`.\n2. Затем вызовите функцию `.map()` на массиве `firstWeekSales`, чтобы вычислить среднюю продажу на клиента за каждый день, сохраняя новый массив в `firstWeekDailyAverage`. Вы должны использовать значение `index` массива, чтобы ссылаться на массив `firstWeekCustomers` и выполнить ваше вычисление (продажи за каждый день, деленные на количество клиентов в этот день).\n2. Затем используйте `console.log`, чтобы проверить ваш результат в переменной `firstWeekDailyAverage`. Не добавляйте никакого текста.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\nconsole.log(firstWeekDailyAverage);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8",
            "id": 116150,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай используем `.map()`, чтобы пометить каждый средний показатель за день.\n\n1. Сначала удали оператор `console.log`, который выводит `firstWeekDailyAverage`.\n2. Затем создай переменную с именем `labeled` и вызови `.map()` на переменной `firstWeekDailyAverage`. Твоя функция должна объединить соответствующий день недели (ты можешь использовать значение `index` для ссылки на массив `daysofTheWeek`) с пробелом и средним значением за этот день, округленным до 2 десятичных знаков.\n3. Затем используй `console.log` для вывода переменной `labeled`.\n\nНапример, твой итоговый массив может содержать значение: `Monday 28.55`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nconsole.log(firstWeekDailyAverage);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\nconsole.log(labeled);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To round a number, you can call `.toFixed()` with the number of decimals passed as a parameter."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 116152,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, давай объединим помеченные значения в строку. Считается хорошей практикой делать наш вывод как можно более удобочитаемым, поэтому каждое значение должно быть разделено запятой и пробелом.\n\n1. Сначала удали оператор `console.log`, который выводит переменную `labeled`.\n2. Затем создай переменную с именем `labeledString`.\n3. Далее вызови соответствующую функцию JavaScript на массиве `labeled`, чтобы объединить значения в одну строку, хранящуюся в `labeledString`. Каждое значение должно быть разделено запятой и пробелом.\n4. Наконец, используй `console.log` для вывода твоей новой переменной `labeledString`, чтобы проверить свою работу.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\n\nlet labeledString = labeled.reduce(function(prev, curr) {\n return prev + \", \" + curr;\n});\nconsole.log(labeledString);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}