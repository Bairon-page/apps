{
  "tutorial": {
    "id": 2905,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Случайные числа - Часть 2",
    "descriptionContent": "Во второй части проекта мы будем использовать параметры запроса, чтобы адаптировать endpoints под наши нужды.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2905-icon-banner.svg",
    "chapters": [
      {
        "id": 14996,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132200,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Во второй части проекта **Случайные числа** мы будем использовать параметры запроса, чтобы настроить запросы.\n\nСначала обновим конечную точку `/randomNumber`, чтобы пользователи могли указывать как минимальное, так и максимальное число.\n\n1. Создай две новые переменные внутри функции конечной точки `/randomNumber`: `min` и `max`.\n2. Извлеки эти значения из `req.query.min` и `req.query.max`, используя `parseInt`.\n3. По умолчанию установи `min` равным `1`, а `max` равным `100`, если соответствующие параметры запроса не предоставлены.\n4. Проверь, если `min` больше или равно `max`. Если это так, верни ответ об ошибке 400 с JSON-объектом, который имеет свойство `error` с сообщением.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({\n    result: result\n  });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min) || 1;\n  const max = parseInt(req.query.max) || 100;\n  if (min >= max) {\n    return res.status(400).json({\n      error: 'Min should be less than max.'\n    });\n  }\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({\n    result: result\n  });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/randomNumber?min=100&max=200",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 132204,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь мы хотим использовать разобранные параметры, чтобы адаптировать функцию генерации случайных чисел.\n\n1. В случае отсутствия ошибки, настрой формулу для генерации случайного числа между `min` и `max` включительно.\n2. Убедись, что ты продолжаешь отправлять обратно JSON-объект с ключом `result`, который содержит случайно сгенерированное число.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min) || 1;\n  const max = parseInt(req.query.max) || 100;\n  if (min >= max) {\n    return res.status(400).json({\n      error: 'Min should be less than max.'\n    });\n  }\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({\n    result: result\n  });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min) || 1;\n  const max = parseInt(req.query.max) || 100;\n  if (min >= max) {\n    return res.status(400).json({\n      error: 'Min should be less than max.'\n    });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({\n    result: result\n  });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/randomNumber?min=100&max=200",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #2",
            "id": 132201,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее, давай обновим наш endpoint `/diceRoll`. В данный момент он всегда бросает одну кость, но мы хотим позволить пользователям указывать, сколько костей бросать.\n\n1. Добавь новую переменную с именем `times` и извлеки значение из `req.query.times`, используя `parseInt`. Это значение будет указывать, сколько раз нужно бросить кости.\n2. Количество бросков должно по умолчанию быть равно `1`, если параметр запроса не предоставлен.\n3. Создай пустой массив с именем `results`.\n4. Запусти цикл `for` на количество раз, равное числу бросков. Внутри цикла выполни существующий расчет броска кости и добавь каждый результат в массив `results`.\n5. Верни массив `results` в JSON-ответе вместо одного результата.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const times = parseInt(req.query.times) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.floor(Math.random() * 6) + 1;\n    results.push(result);\n  }\n  res.status(200).json({ result: results });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/diceRoll?times=3",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #3",
            "id": 132202,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, давай улучшим endpoint `/coinFlip`. Так же, как мы сделали с `/diceRoll`, давай позволим пользователю указать, сколько раз подбросить монету.\n\n1. Добавь новую переменную `times` и присвой ей значение `req.query.times`, используя `parseInt`.\n2. Установи значение по умолчанию для `times` равным `1`, если параметр запроса не предоставлен.\n3. Создай пустой массив с именем results.\n4. Запусти цикл `for` на указанное количество раз, и в каждой итерации выполняй расчет подбрасывания монеты и добавляй каждый результат в массив `results`.\n5. Верни массив `results` в JSON-ответе вместо одного результата.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const times = parseInt(req.query.times, 10) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.floor(Math.random() * 6) + 1;\n    results.push(result);\n  }\n  res.status(200).json({ results });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const times = parseInt(req.query.times, 10) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.random() < 0.5 ? 'Heads' : 'Tails';\n    results.push(result);\n  }\n  res.status(200).json({ result: results });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const times = parseInt(req.query.times, 10) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.floor(Math.random() * 6) + 1;\n    results.push(result);\n  }\n  res.status(200).json({ results });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/coinFlip?times=100",
                "body": null
              }
            }
          }
        ]
      }
    ]
  }
}