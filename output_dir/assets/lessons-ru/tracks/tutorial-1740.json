{
  "tutorial": {
    "id": 1740,
    "version": 17,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Программа для квитанций",
    "descriptionContent": "Узнай, как использовать циклы для создания программы квитанции для клиента",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1740-icon-banner.svg",
    "chapters": [
      {
        "id": 11608,
        "title": "Программа для квитанций",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Setup Element Identifiers",
            "id": 106886,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте используем наши знания о циклах, массивах и функциях, чтобы обработать сложные данные и создать сводку клиентских чеков.\n\nЧтобы заполнить таблицу сводки данными, мы добавили идентификаторы элементов в HTML.\n- Заголовочная строка таблицы будет содержать имена клиентов и должна иметь `id` `customer0`, `customer1`, `customer2`.\n- Первая строка данных таблицы будет содержать список элементов чека и должна иметь `id` `receipt0`, `receipt1`, `receipt2`.\n- Вторая строка данных таблицы будет содержать итог чека и должна иметь `id` `total0`, `total1`, `total2`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  // Your code starts here\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Loop through Customers",
            "id": 106876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь мы будем работать над разбором данных. Внутри функции `populateTable()` начнем с написания цикла for для перебора массива `customers`. Назовите переменную итератора `i`.\n\n1. Напишите цикл for, чтобы перебирать от 0 до последнего индекса массива `customers`.\n2. В теле цикла for используйте `console.log()`, чтобы вывести переменную итератора `i` и проверить, что ваш цикл работает.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Customer & Receipt Data",
            "id": 106877,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "На каждой итерации ваш код должен сохранять соответствующие данные `customers` и `receipts` в переменные.\n\n1. Сначала внутри нового цикла удалите оператор `console.log()`, который вы добавили на предыдущем шаге.\n2. Внутри цикла создайте переменную `customer` и присвойте ей значение текущего элемента массива `customers`, используя квадратные скобки.\n3. Создайте переменную `receipt` и присвойте ей значение текущего элемента массива `receipts`, используя квадратные скобки.\n4. Наконец, используйте `console.log()` для переменной `customer`, а на следующей строке используйте `console.log()` для переменной `receipt`, чтобы проверить, что вы правильно прошли по каждому массиву.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an array's elements using bracket syntax: `array[index]`. Remember that arrays are indexed starting at 0."
                }
              ]
            }
          },
          {
            "title": "Setup Receipt Processing",
            "id": 106878,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Нашей программе нужно будет обрабатывать данные о чеке и ценах. Внутри цикла `for`, ниже переменных `customer` и `receipt`, создайте еще две переменные: одну для хранения строки с элементами чека и другую для хранения общей суммы чека.\n\n1. Сначала удалите операторы `console.log()`, которые вы добавили на последнем шаге.\n2. Создайте переменную `receipt_list` и присвойте ей пустую строку. Убедитесь, что вы используете `let`, а не `const`, так как значение будет изменяться позже.\n3. Создайте переменную `sum` и присвойте ей значение 0. Убедитесь, что эта переменная также является переменной `let`.\n4. Наконец, выведите в консоль переменную `receipt_list`, а затем переменную `sum`, чтобы убедиться, что ваш цикл работает правильно.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An empty string is `\"\"`."
                }
              ]
            }
          },
          {
            "title": "Loop through Receipt Data",
            "id": 106879,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте теперь обработаем данные чека. Напишите цикл `for`, чтобы пройтись по переменной `receipt`, которую вы сохранили ранее. Назовите переменную итератора `j`.\n\n1. Сначала удалите операторы `console.log()`, которые вы добавили на последнем шаге.\n2. После инициализации переменной `sum` напишите цикл `for`, чтобы пройтись от 0 до последнего индекса переменной `receipt`. Не забудьте использовать `j` в качестве переменной итератора.\n3. В теле цикла `for` используйте `console.log`, чтобы вывести переменную итератора и проверить, что ваш цикл работает.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Receipt Data",
            "id": 106880,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Внутри цикла `for`, который ты написал для перебора содержимого `receipt`, сохраняй название товара и его цену в переменные на каждой итерации.\n\n1. Сначала удали оператор `console.log()`, который ты добавил на последнем шаге.\n2. Создай переменную `item` и сохрани соответствующие данные из `receipt` (используя переменную итератора цикла for).\n3. Создай переменную `price` и сохрани соответствующие данные из `prices` (используя `item` в качестве индекса).\n4. Наконец, используй `console.log()` для вывода обеих переменных (`item` и `price`), чтобы проверить, что ты правильно перебираешь каждый массив. Выводи каждую переменную в отдельном операторе.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Build the Receipt List",
            "id": 106881,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда данные разбиты, создайте список элементов чека. На каждой итерации второго цикла `for` объединяйте `item` с переменной `receipt_list` и символом новой строки ( `\"\\n\"` ).\n\n1. Сначала удалите операторы `console.log()`, которые вы добавили на последнем шаге.\n2. Установите `receipt_list` равным `receipt_list`, объединенному с `item` и символом новой строки ( `\"\\n\"` ).\n3. Наконец, выведите переменную `receipt_list` в консоль, чтобы убедиться, что ваш цикл работает правильно.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To concatenate item and add a new line character, write \n```javascript\n  receipt_list += item + \"\\n\";\n```"
                }
              ]
            }
          },
          {
            "title": "Sum the Prices",
            "id": 106882,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее добавь `price` элемента к переменной `sum`. Затем, вне второго цикла for, используй `console.log()` для переменных `receipt_list` и `sum`.\n\n1. Сначала удали оператор `console.log()`, который ты добавил на последнем шаге.\n2. Установи `sum` равным `sum` плюс `price`.\n3. Вне второго цикла for используй `console.log()` для переменной `receipt_list`, а затем для переменной `sum`. Используй для этого два оператора `console.log`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Plan out Table Population",
            "id": 106884,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь мы можем заполнить таблицу. Мы сделаем это с помощью функции `setElementText`, которая принимает два параметра: `id` и `text`.\n\nДавайте сначала спланируем выбор элементов и значения для заполнения.\n\n1. Сначала удалите операторы `console.log()`, которые вы добавили на последнем шаге.\n2. Напишите операторы `console.log` (после второго цикла for, но все еще внутри первого цикла for), чтобы вывести в лог целевой элемент `id` вместе с данными, которые мы хотим заполнить. Посмотрите ниже на код, необходимый для этого.\n3. Завершите это для переменных `customer`, `receipt_list` и `sum`. В итоге у вас должно быть 9 сообщений `console.log`, когда цикл завершится.\n\n```javascript\nconsole.log(\"customer\" + i.toString(), customer);\nconsole.log(\"receipt\" + ...\nconsole.log(\"total\" + ...\n```\nУбедитесь, что используете строки \"customer\", \"receipt\" и \"total\" для соответствующих логов консоли, как показано выше.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can consult index.html if you have trouble remembering the identifier naming conventions.\nTo convert an integer to a string, you can use the built-in JavaScript function `toString()`."
                }
              ]
            }
          },
          {
            "title": "Populate Receipt List & Sum",
            "id": 106885,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, используйте функцию `setElementText`, чтобы заполнить имя клиента (из переменной `customer`), товары (из переменной `receipt_list`) и итоговую сумму (из переменной `sum`).\n\n1. Сначала удалите операторы `console.log()`, которые вы добавили на последнем шаге.\n2. Заполните строку `Customer` таблицы, используя функцию `setElementText()`.\n3. Заполните строку `Items` таблицы, используя функцию `setElementText()`.\n4. Заполните строку `total` таблицы, используя функцию `setElementText()`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    setElementText(\"customer\" + i.toString(), customer);\n    setElementText(\"receipt\" + i.toString(), receipt_list);\n    setElementText(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To populate the `Customer` row, code the following\n```javascript\nsetElementText(\"customer\" + i.toString(), customer);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}