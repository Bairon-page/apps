{
  "tutorial": {
    "id": 2634,
    "version": 4,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Объекты и ES 6",
    "descriptionContent": "Челленджи — это более сложные упражнения, которые проверят твои навыки.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14539,
        "title": "Добавление свойств",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Adding Properties",
            "id": 129199,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте добавим еще одно свойство к объекту, полученному из JSON строки. Мы будем обновлять объект, добавляя к нему свойство после его создания.\n\n1. Распарсите JSON строку `tajMahalJSON` и сохраните ее в переменной `tajMahal`, чтобы мы могли работать с ней как с JS объектом.\n\n3. Отобразите значение `takeout` объекта `tajMahal`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const tajMahalJSON = '{ \"cuisine\": \"Indian\", \"takeout\": false}';\r\n\r\n",
                  "solvedContent": "const tajMahalJSON = '{ \"cuisine\": \"Indian\", \"takeout\": false}';\r\nconst tajMahal = JSON.parse(tajMahalJSON);\r\nconsole.log(tajMahal.takeout);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14540,
        "title": "Обновление свойств",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Updating an Object Property",
            "id": 129200,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте обновим значения существующих свойств объекта.\n\n1. На отдельной строке после объекта обновите свойство `takeout` объекта `tajMahal` на `true`. Не изменяйте исходное значение внутри объекта.\n\n2. Отобразите объект `tajMahal`, чтобы подтвердить, что он был обновлен.\n\n3. Чтобы подготовить объект к отправке на сервер, давайте создадим новую переменную под названием `stringTajMahal` и сохраним в ней строковую версию `tajMahal`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const tajMahal = {\r\n  cuisine: \"Indian\",\r\n  takeout: false,\r\n  starRating: 4.5\r\n};",
                  "solvedContent": "const tajMahal = {\r\n  cuisine: \"Indian\",\r\n  takeout: false,\r\n  starRating: 4.5\r\n};\r\ntajMahal.takeout = true;\r\nconsole.log(tajMahal);\r\nconst stringTajMahal = JSON.stringify(tajMahal);\r\nconsole.log(stringTajMahal);\r\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14541,
        "title": "Доступ к свойствам",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Use Property Value",
            "id": 129201,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте получим значение свойства объекта, разобранного из строки JSON, и используем его в новом вычислении.\n\n1. Разберите строку JSON в объект JS и сохраните его в новую переменную, переменную `tajMahal`.\n2. Используя `const`, создайте новую переменную под названием `tenRating`, которая равна значению свойства `starRating` объекта `tajMahal`, умноженному на `2`.\n2. Отобразите значение `tenRating`, чтобы проверить результат.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const tajMahalJSON = '{ \"cuisine\": \"Indian\", \"takeout\": false, \"starRating\": 4.5}';",
                  "solvedContent": "const tajMahalJSON = '{ \"cuisine\": \"Indian\", \"takeout\": false, \"starRating\": 4.5}';\r\nconst tajMahal = JSON.parse(tajMahalJSON);\r\nconst tenRating = tajMahal.starRating * 2;\r\nconsole.log(tenRating);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14542,
        "title": "Приветственное сообщение в отеле",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Hotel Welcome Message",
            "id": 129202,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Сеть отелей хочет отображать приветственное сообщение для гостей на своих новых уличных дисплеях. Напиши стрелочную функцию, которая возвращает приветственное сообщение, похожее на приведенный ниже пример. Ты можешь выбрать свое собственное приветственное сообщение, главное, чтобы оно было строкой.\n\nПример вывода:\n```\nHello! Welcome to Terrace Inn & Suites!\n```\n\n1. Объяви стрелочную функцию с именем `checkInMessage`, которая возвращает предоставленное приветственное сообщение. Нажми на приветственное сообщение, чтобы скопировать его, а затем вставь его как строку, возвращаемую стрелочной функцией.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "console.log(checkInMessage());",
                  "solvedContent": "const checkInMessage = () => \"Hello! Welcome to Terrace Inn & Suites!\";\nconsole.log(checkInMessage());"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14543,
        "title": "Добавление сезонного сообщения",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Seasonal Message Addition",
            "id": 129203,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Генеральный менеджер Terrace Inn & Suites хотел бы, чтобы функция-стрелка была изменена для включения `generalMessage` и `seasonalMessage`.\n\nОбщее сообщение останется прежним: `Hello! Welcome to Terrace Inn & Suites`.\n\nПо указанию генерального менеджера, сезонное сообщение будет следующим: `Need to cool off? Visit one of our three resort pools!`.\n\nФункция-стрелка должна сохранять эти два сообщения в переменных и возвращать объединенные строки. Не забудь добавить пробел между ними!\n\nПример вывода\n```javascript\nHello! Welcome to Terrace Inn & Suites! Need to cool off? Visit one of our three resort pools!\n```\n\n1. Преобразуй существующую функцию-стрелку в многострочную функцию-стрелку.\n2. Объяви и сохрани предоставленные сообщения в переменных с именами `generalMessage` и `seasonalMessage`.\n3. Наконец, функция-стрелка должна возвращать две переменные, объединенные с пробелом между ними.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const challengeGreeting = () => \"Hello! Welcome to Terrace Inn & Suites!\";\r\nconsole.log(challengeGreeting());",
                  "solvedContent": "const challengeGreeting = () => {\n  const generalMessage = \"Hello! Welcome to Terrace Inn & Suites!\";\n  const seasonalMessage =\n    \"Need to cool off? Visit one of our three resort pools!\";\n  return generalMessage + \" \" + seasonalMessage;\n};\nconsole.log(challengeGreeting());"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14544,
        "title": "Персональное приветствие",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Personalized Welcome Message",
            "id": 129204,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Генеральный менеджер хочет внести еще одно улучшение. Он хотел бы персонализировать сообщение для гостей. Измени стрелочную функцию и тело стрелочной функции, чтобы включить параметр `name`.\n\nПример вывода\n```javascript\nHello, Sarah! Welcome to Terrace Inn & Suites! Need to cool off? Visit one of our three resort pools!\n```\n\n1. Сначала измени стрелочную функцию, чтобы она принимала параметр `name`.\n2. Затем измени переменную `generalMessage`, чтобы включить параметр `name` в соответствии с приведенным выше примером.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const challengeGreeting = () => {\r\n  const generalMessage = \"Welcome to Terrace Inn & Suites!\";\r\n  const seasonalMessage =\r\n    \"Need to cool off? Visit one of our three resort pools!\";\r\n  return generalMessage + \" \" + seasonalMessage;\r\n};\r\nconsole.log(challengeGreeting(\"Sarah\"));",
                  "solvedContent": "const challengeGreeting = (name) => {\n  const generalMessage = \"Hello, \" + name +\n    \"! Welcome to Terrace Inn & Suites!\";\n  const seasonalMessage =\n    \"Need to cool off? Visit one of our three resort pools!\";\n  return generalMessage + \" \" + seasonalMessage;\n};\nconsole.log(challengeGreeting(\"Sarah\"));"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11641,
        "title": "Методы с параметрами",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Methods with parameters",
            "id": 107101,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Рассмотри функцию `eligible()`. Ее цель — возвращать `true`, если `volume` меньше или равен `maxVolume`. Давай преобразуем эту функцию в метод объекта.\n\n1. Добавь метод к `parcel` под названием `volume`, который возвращает значение `length * width * depth` для объекта.\n\n2. Преобразуй функцию `eligible` в метод с тем же именем внутри объекта `parcel`. Метод должен иметь только один параметр `maxVolume` и вызывать `this.volume()`, чтобы получить объем.\n\n3. Используй `console.log()`, чтобы вывести результат вызова метода `eligible` объекта `parcel`, используя значение `100` для `maxVolume`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const parcel = {\n  length: 100,\n  width: 80,\n  depth: 30,\n};\n\nfunction eligible(length, width, depth, maxVolume) {\n  volume = length * width * depth;\n  if (this.volume() <= maxVolume) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(eligible(parcel.length, parcel.width, parcel.depth, 100));",
                  "solvedContent": "const parcel = {\n  length: 100,\n  width: 80,\n  depth: 30,\n  volume: function() {\n    return this.length * this.width * this.depth;\n  },\n  eligible: function(maxVolume) {\n    if (this.volume() <= maxVolume) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nconsole.log(parcel.eligible(100));"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11639,
        "title": "Добавление методов",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Add a method and use",
            "id": 107001,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте добавим метод в наш объект, который будет выполнять вычисление, используя значение другого свойства объекта. Помните, что мы можем ссылаться на сам объект, используя `this.`.\n\n1. Добавьте метод внутри объекта `tajMahal` (внутри `{` скобок `}`), который называется `tenRating` и возвращает значение `starRating * 2` для данного объекта.\n\n2. Далее, ниже объекта `tajMahal` (вне `{` скобок `}`), обновите `starRating` объекта `tajMahal` до `4.1`.\n\n3. Наконец, используйте `console.log()` для *результата* вызова метода `tenRating`, чтобы проверить, что результат соответствует ожиданиям.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const tajMahal = {\r\n  cuisine: \"Indian\",\r\n  takeout: false,\r\n  starRating: 4.5,\r\n};",
                  "solvedContent": "const tajMahal = {\r\n  cuisine: \"Indian\",\r\n  takeout: false,\r\n  starRating: 4.5,\r\n  tenRating: function() {\r\n    return this.starRating * 2;\r\n  }\r\n};\r\ntajMahal.starRating = 4.1;\r\nconsole.log(tajMahal.tenRating());"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11640,
        "title": "Больше методов",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Adding more complex methods",
            "id": 107002,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Посмотри на объект `employee`. Давай добавим метод к этому объекту.\n\n1. Добавь метод под названием `fullName`. Метод должен возвращать строку, составленную из имени, за которым следует пробел (`\" \"`), и фамилии (в нашем примере `Amanda Jimenez`).\n\n2. Отобрази результат вызова метода `fullName()` на объекте `employee`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const employee = {\r\n  firstName: \"Amanda\",\r\n  secondName: \"Jimenez\"\r\n};",
                  "solvedContent": "const employee = {\n  firstName: \"Amanda\",\n  secondName: \"Jimenez\",\n  fullName: function() {\n    return this.firstName + \" \" + this.secondName;\n  }\n};\nconsole.log(employee.fullName());"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11638,
        "title": "Доступ и использование свойства",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Access and compare property",
            "id": 107000,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Мы хотим узнать, находится ли `cuisine` из `tajMahal` в `preferredCuisines`.\n\n1. Используя `const`, создайте переменную с именем `inPreferred`, которая проверяет, включает ли `preferredCuisines` значение `cuisine` для `tajMahal`.\n\n   Подсказка: используйте метод массива `.includes()` на `preferredCuisines`, который вернет `true`, если указанное значение находится в нем.\n\n2. Отобразите `inPreferred`, чтобы проверить результат.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const tajMahal = {\r\n  cuisine: \"Indian\",\r\n  takeout: false,\r\n  starRating: 4.5\r\n};\r\nconst preferredCuisines = [\"Chinese\", \"Italian\", \"Turkish\"];",
                  "solvedContent": "const tajMahal = {\r\n  cuisine: \"Indian\",\r\n  takeout: false,\r\n  starRating: 4.5\r\n};\r\nconst preferredCuisines = [\"Chinese\", \"Italian\", \"Turkish\"];\r\nconst inPreferred = preferredCuisines.includes(tajMahal.cuisine);\r\nconsole.log(inPreferred);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}