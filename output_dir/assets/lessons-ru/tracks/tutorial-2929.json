{
  "tutorial": {
    "id": 2929,
    "version": 2,
    "type": "practiceRequired",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Структурирование Endpoints",
    "descriptionContent": "Структурирование Endpoints",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13777,
        "title": "Структурирование Endpoints",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Question #1",
            "id": 120354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что мы всегда хотим сделать, когда HTTP-запрос не удается?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Отправить сообщение об ошибке пользователю</item><item value=\"2\" correct=\"false\">Установи код состояния на <code>200</code></item><item value=\"3\" correct=\"false\">Отправить запрос на другой сервер</item></selection><p visible-if=\"wrong\">Отправить сообщение об ошибке пользователю.</p></body></html>"
          },
          {
            "title": "Example #2",
            "id": 120359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши <code>GET</code> запрос, чтобы сохранить информацию, отправленную клиентом.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/books/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { title } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM books WHERE title = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedBook = db.prepare(sql).get(title);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedBook) {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested book&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"book\" class=\"attr\" /><text value=\": requestedBook\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"61\" endIndex=\"71\" /></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>req.params</code>.</p></body></html>"
          },
          {
            "title": "Question #4",
            "id": 120357,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой код мы используем в этом запросе <code>GET</code>, чтобы установить код состояния HTTP?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/books/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { title } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM books WHERE title = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedBook = db.prepare(sql).get(title);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedBook) {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested book&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"book\" class=\"attr\" /><text value=\": requestedBook\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.status</code></item><item value=\"2\" correct=\"false\"><code>.json</code></item><item value=\"3\" correct=\"false\"><code>req.params</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>res.status</code>.</p></body></html>"
          },
          {
            "title": "Example #4",
            "id": 120361,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Дополните код, чтобы установить код ошибки <code>404</code> в объекте ответа.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/books/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { title } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM books WHERE title = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedBook = db.prepare(sql).get(title);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedBook) {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested book&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"book\" class=\"attr\" /><text value=\": requestedBook\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"210\" endIndex=\"222\" /></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>.status(404)</code>.</p></body></html>"
          },
          {
            "title": "Question: SQL Database Connection",
            "id": 120848,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как подготовить SQL-запрос, который сохранен в переменной <code>sql</code>, если наше подключение к базе данных хранится в переменной <code>db</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>db.prepare(sql)</code></item><item value=\"2\" correct=\"false\"><code>db.execute(sql)</code></item><item value=\"3\" correct=\"false\"><code>db.query(sql)</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>db.prepare(sql)</code>.</p></body></html>"
          },
          {
            "title": "Question: Response",
            "id": 120935,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какую информацию должен включать <code>POST</code> endpoint в своем ответе?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Код состояния и подтверждение, что данные были добавлены</item><item value=\"2\" correct=\"false\">Код состояния и только новая запись данных</item><item value=\"3\" correct=\"false\">Просто код состояния</item></selection><p visible-if=\"wrong\">Код состояния и подтверждение, что данные были добавлены.</p></body></html>"
          },
          {
            "title": "Example: Endpoint Path",
            "id": 120849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Выберите правильную конечную точку.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/flights&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM flights&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" flights = db.prepare(sql).all();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"flights\" class=\"attr\" /><text value=\": flights\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"&quot;/flights/:number&quot;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>\"/flights\"</code>.</p></body></html>"
          },
          {
            "title": "Question #2",
            "id": 120355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что делает код Express, когда пользователь запрашивает участника, который не существует?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/members/:name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" { name } = req.params;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM members WHERE name = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedMember = db.prepare(sql).get(name);\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedMember) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"   \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested member&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"   \" /><text value=\"member\" class=\"attr\" /><text value=\": requestedMember\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Отправляет клиенту сообщение об ошибке</item><item value=\"2\" correct=\"false\">Происходит ошибка, и клиент не получает никакой информации</item><item value=\"3\" correct=\"false\">Сервер запрашивает дополнительную информацию</item></selection><p visible-if=\"wrong\">Отправляет клиенту сообщение об ошибке.</p></body></html>"
          },
          {
            "title": "Question: SQL & PUT & DELETE",
            "id": 120994,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип SQL-запроса связан с PUT-эндпоинтом?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">ОБНОВЛЕНИЕ</item><item value=\"2\" correct=\"false\">УДАЛИТЬ</item><item value=\"3\" correct=\"false\">УДАЛИТЬ</item></selection><p visible-if=\"wrong\">Обязательно выбери ОБНОВЛЕНИЕ.</p></body></html>"
          },
          {
            "title": "Example: DELETE II",
            "id": 120998,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заполни синтаксис <code>response</code> для <code>DELETE</code> endpoint.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.delete(\" /><text value=\"&quot;/flights/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { id } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;DELETE FROM flights WHERE id = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" result = db.prepare(sql).run(id);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (result.changes &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"     \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Flight deleted successfully&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"     \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Flight not found&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"197\" endIndex=\"200\" /><option startIndex=\"200\" endIndex=\"201\" /><option startIndex=\"201\" endIndex=\"207\" /><option startIndex=\"207\" endIndex=\"208\" /><option startIndex=\"208\" endIndex=\"211\" /><option startIndex=\"211\" endIndex=\"212\" /><option correct=\"false\"><content><text value=\"201\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.</code>, а затем <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}