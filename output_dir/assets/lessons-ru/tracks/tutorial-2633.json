{
  "tutorial": {
    "id": 2633,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Массивы и функции",
    "descriptionContent": "Челленджи — это более сложные упражнения, которые проверят твои навыки.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14525,
        "title": "Места для посещения",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Places To Visit",
            "id": 129185,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создай массив, который содержит названия мест для посещения в следующем порядке: `\"New York\"`, `\"Tokyo\"`, `\"Hawaii\"`. Присвой этот массив переменной `places`. Затем, **не изменяя оригинальный массив**, получи последний элемент массива и присвой его переменной `retirement`.\n\nВывод:\n`You should visit Hawaii.`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const places;\nconst retirement;\nconsole.log(\"You should visit \" + retirement + \".\");",
                  "solvedContent": "const places = [\"New York\", \"Tokyo\", \"Hawaii\"];\nconst retirement = places[2];\nconsole.log(\"You should visit \" + retirement + \".\");"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14526,
        "title": "Братья и сестры",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Siblings",
            "id": 129186,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим массив, который будет содержать коллекцию братьев и сестер.\n\n1. Напиши код массива, который содержит имена братьев и сестер в следующем порядке: `\"Jon\"`, `\"Jess\"`, `\"Jen\"`, `\"Jarod\"` и присвой его переменной `siblings`.\n2. Используй метод push(), чтобы добавить нового ребенка `\"Jacob\"` и присвой этот синтаксис переменной `add`.\n3. Получи доступ к среднему ребенку и сохрани этот синтаксис в переменной `middleChild`.\n\nВывод:\n`The middle child is Jen.`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const siblings;\nconst add;\nconst middleChild;\nconsole.log(`The middle child is ${middleChild}.`);",
                  "solvedContent": "const siblings = [\"Jon\", \"Jess\", \"Jen\", \"Jarod\"];\nconst add = siblings.push(\"Jacob\");\nconst middleChild = siblings[2];\nconsole.log(`The middle child is ${middleChild}.`);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14527,
        "title": "Список дел",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Todo",
            "id": 129187,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим массив, который будет содержать список дел.\n\n1. Напиши код массива, который содержит список этих дел: `\"study\"`, `\"chores\"`, и `\"meditate\"`. Сохрани массив в переменной `todos`.\n2. Используй `pop`, чтобы удалить последнее дело из массива и сохрани это в переменной `remove`.\n3. Создай переменную `const` с именем `leftToDo`, которая хранит количество оставшихся элементов в массиве `todos`. Используй свойство массива, чтобы выполнить этот шаг.\n\nВывод:\n`You have 2 items left to do.`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const todos;\nconst remove;\nconst;\nconsole.log(`You have ${leftToDo} items left to do.`);",
                  "solvedContent": "const todos = [\"study\", \"chores\", \"meditate\"];\nremove = todos.pop();\nconst leftToDo = todos.length;\nconsole.log(`You have ${leftToDo} items left to do.`);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14528,
        "title": "Первый элемент в массиве",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "First Value Element in an Array",
            "id": 129188,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая возвращает первое значение из параметра `array`.\n\nПримеры:\n\n`firstValue([9, 7, 11])` возвращает `9`.\n\n`firstValue([2, 22, 7])` возвращает `2`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "function firstValue(array) {}",
                  "solvedContent": "function firstValue(array) {\n  return array[0];\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14529,
        "title": "Часы и минуты в секунды",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Hours and Minutes to Seconds",
            "id": 129189,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая возвращает результат преобразования параметров `hours` и `minutes` в секунды.\n\nПримеры:\n`toSeconds(2, 5)` возвращает `7500`.\n`toSeconds(1, 0)` возвращает `3600`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "function toSeconds(hours, minutes) {}",
                  "solvedContent": "function toSeconds(hours, minutes) {\n  return (hours * 60 + minutes) * 60;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14530,
        "title": "Меньше или равно нулю",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Less Than or Equal to Zero",
            "id": 129190,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая возвращает `true`, если параметр `number` меньше или равен 0. В противном случае возвращает `false`.\n\nПримеры:\n`lessThanOrEqualToZero(7)` возвращает `false`.\n`lessThanOrEqualToZero(-5)` возвращает `true`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "function lessThanOrEqualToZero(number) {}",
                  "solvedContent": "function lessThanOrEqualToZero(number) {\n  return number <= 0;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14531,
        "title": "Функция с двумя аргументами",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Function to Calculate and Display Value",
            "id": 129191,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим функцию, которая принимает два аргумента и отображает результат вычисления.\n\n1. Создайте функцию `fuelCost`, которая принимает два аргумента: `litres` и `costPerLitre`.\n\n2. Внутри функции создайте переменную `totalCost`, равную `litres` * `costPerLitre`.\n\n3. Все еще внутри функции, отобразите значение `totalCost`.\n\n4. Вне функции вызовите функцию с значениями `60` и `1.44` для `litres` и `costPerLitre` соответственно.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function fuelCost (liters, costPerLiter) {\r\n const totalCost = liters * costPerLiter;\r\n console.log(totalCost);\r\n}\r\n\r\nfuelCost(60, 1.44);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14532,
        "title": "Вернуть и использовать значение",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Function to Return a Value",
            "id": 129192,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давай создадим функцию, которая возвращает значение, а затем напишем код для отображения этого значения.\n\n1. Создай функцию `milesToKm()`, которая принимает один параметр `miles`.\n\n2. Внутри функции создай переменную `km`, равную `(miles / 5) * 8`.\n\n3. Напиши оператор `return` в конце функции, чтобы вернуть значение `km`.\n\n4. Отобрази результат вызова функции со значением `70`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function milesToKm(miles) {\r\n  const km = (miles / 5) * 8;\r\n  return km;\r\n}\r\n\r\nconsole.log(milesToKm(70));"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14533,
        "title": "Условие в функции",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "If-else If-else in Function",
            "id": 129193,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим функцию, которая возвращает строку, когда выполняется условие. Здесь мы хотим вернуть сообщение, которое сообщает нам, на основе предоставленной информации, достаточно ли запасов для всех пользователей, для некоторых пользователей или для любого пользователя.\n\n1. Завершите определение функции, добавив код с каждой стороны двух операторов `>`, чтобы вернуть правильное утверждение.\n  - В операторе `if` проверьте, больше ли `minPerUser`, чем `totalAvailable` (запасов недостаточно даже для одного пользователя).\n  - В операторе `else if` проверьте, больше ли `groupSize * minPerUser`, чем `totalAvailable` (запасов недостаточно для всех пользователей).\n2. Отобразите результат вызова функции с использованием параметров `group`, `total` и `minimum`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const group = 4;\r\nconst total = 500;\r\nconst minimum = 150;\r\n\r\nfunction stockCheck (groupSize, totalAvailable, minPerUser) {\r\n if ( > ) {\r\n  return \"Insufficient for one user\";\r\n } else if ( > ) {\r\n   return \"Insufficient for all users\";\r\n } else {\r\n  return \"Sufficient for all users\";\r\n }\r\n}",
                  "solvedContent": "const group = 4;\r\nconst total = 500;\r\nconst minimum = 150;\r\n\r\nfunction stockCheck (groupSize, totalAvailable, minPerUser) {\r\n if (minPerUser > totalAvailable) {\r\n  return \"Insufficient for one user\";\r\n } else if (groupSize * minPerUser > totalAvailable) {\r\n   return \"Insufficient for all users\";\r\n } else {\r\n  return \"Sufficient for all users\";\r\n }\r\n}\r\n\r\nconsole.log(stockCheck(group, total, minimum));"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14535,
        "title": "Имена посетителей",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Visitor Names",
            "id": 129195,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вызови соответствующую встроенную функцию JavaScript для массива `visitors`, чтобы создать новый массив, содержащий только имена, которые начинаются с буквы \"C\". Встроенная функция предоставлена для тебя.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let visitors = [\"Christina\", \"Andrew\", \"Chris\", \"Delia\"];\nlet C = (function(element) {\n return element[0] == \"C\";\n});\nconsole.log(C);",
                  "solvedContent": "let visitors = [\"Christina\", \"Andrew\", \"Chris\", \"Delia\"];\nlet C = visitors.filter(function(element) {\n return element[0] == \"C\";\n});\nconsole.log(C);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14536,
        "title": "Рассчитать общую цену",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Total Price",
            "id": 129196,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вызови соответствующую JavaScript функцию на массиве `prices`, чтобы вычислить итоговую сумму. Встроенная функция предоставлена для тебя.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let prices = [2500.25, 3482.50, 1746.50];\nlet total = (function(prev, curr) {\n return prev + curr;\n});\nconsole.log(total);",
                  "solvedContent": "let prices = [2500.25, 3482.50, 1746.50];\nlet total = prices.reduce(function(prev, curr) {\n return prev + curr;\n});\nconsole.log(total);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14537,
        "title": "Килограммы в фунты",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Kilos to Pounds",
            "id": 129197,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вызови соответствующую JavaScript функцию на массиве `kilograms`, чтобы преобразовать значения в фунты и сохранить полученный массив в переменной с именем `pounds`. Встроенная функция предоставлена для тебя.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let kilograms = [25, 45, 55];\nlet pounds = (function(element) {\n return element * 2.2;\n});\nconsole.log(pounds);",
                  "solvedContent": "let kilograms = [25, 45, 55];\nlet pounds = kilograms.map(function(element) {\n return element * 2.2;\n});\nconsole.log(pounds);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11549,
        "title": "Топ три",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Top Three",
            "id": 106219,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь первые три фильма из `topTen` в массив `topThree`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const topTen = ['Jack Reacher', 'Beautiful Creatures', 'Safe Haven',\n'Side Effects', 'The Last Stand',\n'Silver Linings Playbook',\n'Broken City', 'Cloud Atlas','Parker', 'Eternals'];\nconst topThree = [];\n\n\n",
                  "solvedContent": "const topTen = ['Jack Reacher', 'Beautiful Creatures', 'Safe Haven',\n'Side Effects', 'The Last Stand',\n'Silver Linings Playbook',\n'Broken City', 'Cloud Atlas','Parker', 'Eternals'];\nconst topThree = [];\ntopThree[0] = topTen[0];\ntopThree[1] = topTen[1];\ntopThree[2] = topTen[2];"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7851,
        "title": "Перевернуть массив",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Reverse an Array",
            "id": 68803,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая переворачивает содержимое параметра `array` и возвращает его как новый массив.\n\nПримеры:\n`reverse([1,2,5,8])` возвращает `[8,5,2,1]`.\n`reverse([\"Deb\",\"Lee\"])` возвращает `[\"Lee\",\"Deb\"]`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function reverse(array) {}",
                  "solvedContent": "function reverse(array) {\r\n  const reversed = [];\r\n  for (let i = array.length - 1; i > -1; i--) {\r\n    reversed.push(array[i]);\r\n  }\r\n  return reversed;\r\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7852,
        "title": "Наименьшее число в массиве",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Smallest Number in an Array",
            "id": 68868,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая возвращает наименьшее число из параметра `array`.\n\nПримеры:\n`smallest([10,44,2,11])` возвращает `2`.\n`smallest([5,7,8,9])` возвращает `5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function smallest(array) {}",
                  "solvedContent": "function smallest(array) {\r\n  let smallest = array[0];\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (array[i] < smallest) {\r\n      smallest = array[i];\r\n    }\r\n  }\r\n  return smallest;\r\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7809,
        "title": "Разница между числами в массиве",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Difference between numbers in Array",
            "id": 68339,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая принимает массив чисел и возвращает разницу между самым большим и самым маленьким числом в качестве результата.\n\nПримеры:\n`differenceMinMax([0, 7, 11, 100])` возвращает `100`.\n`differenceMinMax([55, 9, 22, 11])` возвращает `46`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "function differenceMinMax(array) {}",
                  "solvedContent": "function differenceMinMax(array) {\n  let biggest = array[0];\n  let smallest = array[0];\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] > biggest) {\n      biggest = array[i];\n    }\n    if (array[i] < smallest) {\n      smallest = array[i];\n    }\n  }\n  return biggest - smallest;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7808,
        "title": "Содержит ли массив число",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Does an Array contain a number",
            "id": 68342,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая возвращает `true`, если `number`, переданный в качестве второго параметра, существует в `array`, который передан в качестве первого параметра. В противном случае, она должна возвращать `false`.\n\nПримеры:\n\n<br>\n\n`contains([1, 2, 3, 4], 3)` возвращает `true`, потому что число 3 существует в массиве\n\n<br>\n\n`contains([2, 2, 4], 3)` возвращает `false`, потому что число 3 отсутствует в массиве",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "function contains(array, number) {}",
                  "solvedContent": "function contains(array, number) {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === number) {\n      return true;\n    }\n  }\n  return false;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7873,
        "title": "Среднее значение массива",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Average",
            "id": 68928,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Напиши функцию, которая принимает массив чисел в качестве параметра и возвращает их среднее значение в качестве результата.\n\nПримеры:\n`average([2,2,5,8])` возвращает `4.25`.\n`average([59,60,40])` возвращает `53`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function average(array) {}",
                  "solvedContent": "function average(array) {\n  let total = 0;\n  if (array.length === 0) {\n    return total;\n  }\n  for (let i = 0; i < array.length; i++) {\n    total += array[i];\n  }\n  return total / array.length;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11697,
        "title": "Функция с итерацией",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "iteration with simple logic",
            "id": 107125,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте поместим цикл `for` внутри функции. Мы собираемся создать отображение обратного отсчета, от 5 до 1.\n\n1. Создайте функцию под названием `countdown`, которая не принимает аргументов.\n\n2. Добавьте цикл `for`, который перебирает переменную `i` от `5` до `1`, уменьшая с шагом `1`, и каждый раз отображает значение с помощью `console.log()`\n\n3. Вызовите функцию `countdown()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function countdown() {\r\n  for (let i = 5; i > 0; i--) {\r\n    console.log(i);\r\n  }\r\n}\r\ncountdown();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11722,
        "title": "Условные вызовы функций в функции",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Function to make a decision",
            "id": 107407,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим функцию, которая использует две другие функции для вычисления и принятия решения. Мы хотим использовать некоторые существующие функции, чтобы решить, безопасно ли отправляться в поездку на горном велосипеде.\n\n1. Определите функцию `isSafe` с двумя параметрами: `wind` и `rain`.\n\n2. Внутри функции создайте переменную `risk`. Вызовите `windRisk()` с `wind` и сложите результат с результатом вызова `rainRisk` с `rain`. Сохраните сумму в переменной `risk`.\n\n3. Внутри функции напишите оператор `if`, который возвращает `true`, если `risk` меньше `10`, и `false` в противном случае.\n\n4. Отобразите результат вызова `isSafe` с аргументами `windSpeed` и `rainFall`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const windSpeed = 20;\r\nconst rainFall = 2;\r\n\r\nfunction windRisk(wind) {\r\n  return wind / 2.5;\r\n}\r\n\r\nfunction rainRisk(rain) {\r\n  return rain / 0.5;\r\n}",
                  "solvedContent": "const windSpeed = 20;\r\nconst rainFall = 2;\r\n\r\nfunction windRisk(wind) {\r\n  return wind / 2.5;\r\n}\r\n\r\nfunction rainRisk(rain) {\r\n  return rain / 0.5;\r\n}\r\n\r\nfunction isSafe(wind, rain) {\r\n  const risk = windRisk(wind) + rainRisk(rain);\r\n  if (risk < 10) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nconsole.log(isSafe(windSpeed, rainFall));"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11686,
        "title": "Функция со смешанными аргументами",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Use of an array and another argument",
            "id": 107092,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давай напишем функцию, которая принимает массив в качестве аргумента. Наша функция будет сообщать, сколько мест еще доступно, учитывая список участников, который мы предоставляем.\n\n1. Создай функцию `sparePlaces`, которая принимает два аргумента: `entries` и `capacity`.\n\n2. Создай переменную `taken` внутри функции и присвой ей длину `entries`, используя свойство `.length`.\n\n3. Сделай так, чтобы функция возвращала значение `capacity - taken`.\n\n4. Отобрази результат вызова `sparePlaces`, используя `attendees` и число `8` в качестве аргументов.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const attendees = ['John', 'Jane', 'Jemima'];\r\n",
                  "solvedContent": "const attendees = ['John', 'Jane', 'Jemima'];\r\n\r\nfunction sparePlaces(entries, capacity) {\r\n  const taken = entries.length;\r\n  return capacity - taken;\r\n}\r\n\r\nconsole.log(sparePlaces(attendees, 8));\r\n\r\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11703,
        "title": "Функция, которая вызывает другую функцию",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Call a function within another",
            "id": 107131,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте вызовем существующую функцию из другой. Мы собираемся использовать существующую функцию, которая конвертирует одну валюту в другую, чтобы выяснить, сколько мы получим после учета комиссии.\n\n1. Определите функцию `convert` с двумя параметрами: `value` и `fee`.\n\n2. Внутри функции создайте переменную `gbpValue`. Вызовите `usdToGbp` с `value` в качестве аргумента. Вычтите `fee` из значения, возвращенного `usdToGbp()`. Сохраните результат в `gbpValue`.\n\n3. Внутри функции отобразите `gbpValue`.\n\n4. Вызовите `convert()` с аргументами `100` и `2.5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const usdGbp = 1.5;\r\n\r\nfunction usdToGbp(dollars) {\r\n  return dollars / usdGbp;\r\n}",
                  "solvedContent": "const usdGbp = 1.5;\r\n\r\nfunction usdToGbp(dollars) {\r\n  return dollars / usdGbp;\r\n}\r\n\r\nfunction convert(value, fee) {\r\n  const gbpValue = usdToGbp(value) - fee;\r\n  console.log(gbpValue);\r\n}\r\nconvert(100, 2.5);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}