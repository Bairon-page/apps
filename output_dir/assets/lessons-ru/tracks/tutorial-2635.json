{
  "tutorial": {
    "id": 2635,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "DOM и события",
    "descriptionContent": "Челленджи — это более сложные упражнения, которые проверят твои навыки.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14546,
        "title": "HTML из изображения дерева",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 129206,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давай создадим чат-приложение. \n![html tree](https://mimo.app/i/dom_tree_1.png)\n\n1. Создай HTML-дерево, показанное на этом изображении, добавив соответствующие элементы.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <textarea></textarea>\n    <br />\n    <input>\n    <button>Send</button>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14547,
        "title": "HTML из описания",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Date Range",
            "id": 129207,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создайте веб-сайт, который позволяет пользователю выбрать диапазон дат. Напишите следующий код в файле `.html`.\n\n1. Добавьте input с типом `date` как дочерний элемент `body`.\n2. Добавьте input с типом `date` как соседний элемент другого input.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <input name=\"checkin\" type=\"date\">\n    <input name=\"checkout\" type=\"date\">\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14548,
        "title": "DOM firstElementChild",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 129208,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим страницу профиля сотрудника. Напишите следующий код в теге script.\n\n1. Используйте DOM, чтобы установить текст первого дочернего элемента элемента `body` в `\"Employee Profile\"`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1></h1>\n    <script src=\"index.js\">\n    </script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "document.body.firstElementChild.textContent = \"Employee Profile\";\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14549,
        "title": "Страница с информацией о продукте",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Product Detail Page",
            "id": 129209,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим страницу заказа продукта. У нас есть функция `qtyChanged`, которая вычисляет общую стоимость на основе цены и количества, а затем устанавливает текст элемента `p`.\n\n1. Заверши код, который обновляет итог всякий раз, когда изменяется ввод. Используй обработчик события `.onchange`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Breakfast Sandwich</h1>\n    <img src=\"https://mimo.app/i/croissant.png\" id=\"shape\"\n      style=\"width:100px;height:100px;border: 1px solid black\">\n    <br> Price: $1.99 <br> Qty<input type=\"number\">\n    <p> Total Price: $0 </p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\n",
                  "solvedContent": "const input = document.querySelector(\"input\");\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\ninput.onchange = qtyChanged;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14550,
        "title": "Условия использования",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Terms of Service",
            "id": 129210,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим окно \"условия использования\", которое проверяет, действительно ли вы его прочитали. У нас есть функция `checkReading`, которая определяет, прокрутил ли пользователь до конца.\n\n1. Завершите код, который вызывает функцию `checkReading` каждый раз, когда пользователь прокручивает `textarea`. Вам нужно будет создать переменную с именем на ваш выбор, чтобы это сделать.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <textarea style=\"height: 200px; width: 100%;\">\n   Please read these terms of service (\"terms\", \"terms of service\") carefully before using [website] website (the \"service\") operated by [name] (\"us\", 'we\", \"our\").\n\n   Conditions of Use\n\n   We will provide their services to you, which are subject to the conditions stated below in this document. Every time you visit this website, use its services or make a purchase, you accept the following conditions. This is why we urge you to read them carefully.\n\n   Privacy Policy\n\n   Before you continue using our website we advise you to read our privacy policy [link to privacy policy] regarding our user data collection. It will help you better understand our practices.\n  </textarea>\n  <p></p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\n",
                  "solvedContent": "const terms = document.getElementsByTagName(\"textarea\")[0];\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\nterms.onscroll =  checkReading;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14551,
        "title": "Кнопка \"Нравится\"",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Like Button",
            "id": 129211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим кнопку \"лайк\", которая требует двойного щелчка.\n\n1. Добавь необходимый код для вызова функции `like`, когда по кнопке с сердечком двойной щелчок.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>My Vacation</h1>\n    <img id=\"like\" src=\"https://mimo.app/i/beach.png\"\n      style=\"width:100px;height:100px;border:1px solid black\">\n    <p></p>\n    <button class=\"heart\">huh</button>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\n",
                  "solvedContent": "const img = document.querySelector(\"button\");\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\nimg.ondblclick = like;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": ".heart {\n  width: 36px;\n  height: 36px;\n  position: relative;\n  margin: 1em auto;\n  transform-origin: 50% 50%;\n  transform: rotate(45deg) scale(1);\n  cursor: pointer;\n  background: transparent;\n  border: none !important;\n  font-size: 0;\n}\n\n.heart:before {\n  content: \"\";\n  position: absolute;\n  display: block;\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  background-color: tomato;\n  width: inherit;\n  height: 24px;\n  top: 12px;\n  left: 0;\n}\n\n.heart:after {\n  content: \"\";\n  position: absolute;\n  display: block;\n  background-color: tomato;\n  width: 24px;\n  top: 0;\n  left: 12px;\n  height: inherit;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12312,
        "title": "Дети DOM",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Job Listing",
            "id": 111612,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим страницу с объявлением о вакансии. Напишите следующий код в теге script.\n\n1. Используйте DOM, чтобы получить доступ к `ul` как ко второму дочернему элементу body и сохраните в переменной с именем `jobs`.\n2. Используйте DOM, чтобы получить доступ к двум дочерним элементам элемента `ul` и установить их текст на какое-то название вакансии.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n    </script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n      let jobs = document.body.children[1];\n      jobs.children[0].innerHTML = \"Software QA\";\n      jobs.children[1].innerHTML = \"Project Manager\";\n    </script>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12277,
        "title": "Удалить элемент",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Remove Element",
            "id": 111486,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "В этом HTML файле задача состоит в том, чтобы удалить существующий элемент `p` с помощью JavaScript.\n\n1. В файле `script.js` создайте новую константу и назовите её `paraEl`.\n2. Используйте метод `getElementById()` на объекте `document`, чтобы получить абзац с `id` равным `para`. Присвойте это значение переменной `paraEl`.\n3. Получите элемент `body`, используя метод `querySelector()`. Присвойте это значение константе с именем `bodyEl`.\n4. На объекте `bodyEl` выполните метод `removeChild()`, передав ему переменную `paraEl` в качестве параметра. Это должно привести к удалению элемента `p` из документа.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <h1 id=\"the-heading\">Removing elements here!</h1>\n  <p id=\"para\">I'm about to be removed from the document!</p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nbodyEl.removeChild();",
                  "solvedContent": "const paraEl = document.getElementById('para');\nconst bodyEl = document.querySelector('body');\nbodyEl.removeChild(paraEl);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12223,
        "title": "Фильтр",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filter",
            "id": 111061,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте дадим нашим пользователям возможность искать продукт. Функция `searchProducts`, которая будет выполнять поиск, уже создана для вас.\n\n1. Первый ввод на странице должен искать продукты, когда пользователь вводит в него текст.\n2. Ввод с помощью флажка на странице должен искать продукты, когда пользователь нажимает на него.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Shopper</h1> Search <input><br> Free Shipping <input type=\"checkbox\">\n    <ul>\n    </ul>\n    <br>\n    <br>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();",
                  "solvedContent": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\nconst input = document.querySelector(\"input\");\ninput.oninput = searchProducts;\nconst checkbox = document.querySelectorAll(\"input\")[1];\ncheckbox.onchange = searchProducts;\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12217,
        "title": "Профиль сотрудника",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 111055,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте добавим возможность просматривать различные разделы нашего профиля сотрудника. В файле `script.js` у нас есть функция `showInfo()` для отображения информации о сотруднике, `showPayHistory()` для показа платежных ведомостей и `showTimeOff()` для показа времени отпуска.\n\n1. Сделайте так, чтобы первая `button` отображала информацию о сотруднике при нажатии.\n2. Сделайте так, чтобы вторая `button` показывала историю платежей при нажатии.\n3. Сделайте так, чтобы третья `button` показывала время отпуска при нажатии.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>Employee Profile</h1>\n    <button>Info</button> | <button>Pay History</button> | <button>Time\n      off</button>\n    <br>\n    <br>\n    <div> Janie Culliver, Sales Rep </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\n\n\n",
                  "solvedContent": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\ndocument.querySelectorAll(\"button\")[0].onclick = showInfo;\ndocument.querySelectorAll(\"button\")[1].onclick = showPayHistory;\ndocument.querySelectorAll(\"button\")[2].onclick = showTimeOff;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": "button {\n  background: none;\n  border: none;\n  padding: 0;\n  /*optional*/\n  font-family: arial, sans-serif;\n  /*input has OS specific font-family*/\n  color: #069;\n  text-decoration: underline;\n  cursor: pointer;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12219,
        "title": "Планировщик поездок",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Trip Planner",
            "id": 111057,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наше приложение для бронирования должно информировать пользователя, если он выбирает недопустимые даты. У нас уже есть функция `valid()`, которая проверяет, чтобы даты были в порядке. У нас также есть функция `book()`, которая завершает бронирование.\n\n1. Сделай так, чтобы поле ввода `Check In` запускало команду проверки, когда оно изменяется.\n2. Сделай так, чтобы поле ввода `Check Out` запускало команду проверки, когда оно изменяется.\n3. Сделай так, чтобы кнопка завершала бронирование, когда на нее нажимают.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Book Your Room</h1> Check In <input name=\"checkin\" type=\"date\">\n    <br> Check Out <input name=\"checkout\" type=\"date\">\n    <p></p>\n    <button disabled onclick=\"book()\">Book</button>\n    <br>\n    <div></div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\n\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\n\n\n",
                  "solvedContent": "const checkin = document.querySelectorAll(\"input\")[0];\nconst checkout = document.querySelectorAll(\"input\")[1];\nconst button = document.querySelector(\"button\");\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\ncheckin.onchange = valid;\ncheckout.onchange = valid;\nbutton.onclick = bookTrip;"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".done {\n  text-decoration: line-through;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12220,
        "title": "Чат-приложение",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 111058,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим чат-приложение. У нас есть функция `typing`, которая показывает сообщение, указывающее, что пользователь печатает. Также есть функция `send`, которая помещает текст в окно чата.\n\n1. Добавьте код, чтобы сообщение `Typing...` отображалось, когда пользователь вводит текст в текстовое поле.\n2. Добавьте код, чтобы сообщение отправлялось, когда кнопка нажата.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <textarea style=\"height: 200px; width: 100%;\">\n  </textarea>\n    <p></p>\n    <br>\n    <input><button>Send</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}\ninput.oninput = typing;\nbutton.onclick = send;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12218,
        "title": "Игра",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Game",
            "id": 111056,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим игру с уткой. Есть функция `move`, которая обновляет местоположение утки, когда ползунок перемещается. Есть функция `win`, которая проверяет, достигла ли утка дома. Напишите следующий код в файле `script.js`.\n\n1. Функция `move` должна вызываться каждый раз, когда значение диапазона вводится путем перемещения ползунка.\n2. Функция `win` должна вызываться каждый раз, когда диапазон изменяется. Функция затем проверит, действительно ли пользователь выиграл игру.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Make the duck go home</h1>\n    <img src=\"https://mimo.app/i/batduck.png\" width=\"50px\"\n      style=\"position:absolute; border-radius: 50%;\">\n    <img src=\"https://mimo.app/i/house-2.png\" width=\"70px\"\n      style=\"left:100px;position:absolute\">\n    <br>\n    <br>\n    <br>\n    <input type=\"range\" value=\"0\">\n    <p></p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}\ninput.oninput = move;\ninput.onchange = win;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12216,
        "title": "Переключатель каналов",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Channel Changer",
            "id": 111054,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте создадим пульт для Cat TV. В файле `script.js` у нас уже есть две функции:\n- `up` переключает канал вверх\n- `down` переключает канал вниз\n\n1. Добавь код, чтобы канал переключался вверх при нажатии на первую кнопку.\n2. Добавь код, чтобы канал переключался вниз при нажатии на вторую кнопку.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Cat TV</h1>\n   \n    <img src=\"https://mimo.app/i/shushi.png\" width=\"100px\" height=\"100px\">\n    <br>\n    <button>Up</button>\n    <button>Down</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}",
                  "solvedContent": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}\ndocument.getElementsByTagName(\"button\")[0].onclick = up;\ndocument.getElementsByTagName(\"button\")[1].onclick = down;"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}