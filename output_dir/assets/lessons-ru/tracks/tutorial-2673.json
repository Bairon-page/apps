{
  "tutorial": {
    "id": 2673,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Взаимодействие с API",
    "descriptionContent": "Взаимодействие с API",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14655,
        "title": "Что такое API?",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 129639,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Интерфейсы прикладного программирования, также известные как <code>API</code>, облегчают взаимодействие между двумя программами.</p><p><code>APIs</code> отправляют <em>запросы</em> от программы-отправителя к программе-получателю. Затем они отправляют <em>ответы</em> от программы-получателя к программе-отправителю.</p></body></html>"
          },
          {
            "title": "Intro: Similar real life example I",
            "id": 129640,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Многие вещи в нашей повседневной жизни работают как <code>API</code>. Один из примеров — это официант и персонал на кухне.<br /></p><p>Официант, как и программа-отправитель, отправляет заказ на кухню. Затем кухня, как программа-получатель, отправляет обратно еду в качестве ответа.</p></body></html>"
          },
          {
            "title": "How to use API?*",
            "id": 129641,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Теперь вернемся к программам. Код ниже отправляет запрос <code>GET</code> к <code>API</code>. Можешь угадать, что делает запрос <code>GET</code>?</p><p>Если все работает, мы должны получить данные вместе с кодом состояния <code>200</code>, который сообщает нам, что все прошло успешно.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"GET https://mimo.org/courses HTTP/\" /><text value=\"1.1\" class=\"number\" /></content><output><content><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Запросить некоторые данные</item><item value=\"2\" correct=\"false\">Создать нового пользователя</item></selection><p visible-if=\"wrong\">Запросить некоторые данные.</p></body></html>"
          },
          {
            "title": "How did the API get the data?",
            "id": 129642,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Верно! Этот код был для запроса некоторых данных. <code>https://mimo.org/courses</code> — это <code>API</code>, которое помогло нам их получить!</p><p>Но откуда <code>API</code> получила информацию? Помни, что <code>API</code> позволяет общаться между 2 программами.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>API</code> подключается к другой программе, чтобы получить информацию из базы данных</item><item value=\"2\" correct=\"false\"><code>API</code> — это база данных</item></selection><p visible-if=\"wrong\"><code>API</code> подключается к другой программе, чтобы получить информацию из базы данных.</p></body></html>"
          },
          {
            "title": "API controls the request and response",
            "id": 129643,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Чтобы взаимодействовать с базами данных, нам нужно писать код. <code>API</code> позволяет нам делать это более простым способом.</p><p>Но тебе нужно использовать правильный метод для выполнения действий. Чтобы получить данные, мы используем <code>GET</code>. Как ты думаешь, что мы используем для вставки данных?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>POST</code></item><item value=\"2\" correct=\"false\"><code>DELETE</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>POST</code>.</p></body></html>"
          },
          {
            "title": "Write a request*",
            "id": 129644,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Это правильно! Мы можем вставлять данные в базу данных, используя запросы <code>POST</code>.</p><p>В отличие от запросов <code>GET</code>, для запросов <code>POST</code> нам нужно отправить тело с информацией. Заверши запрос ниже.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_user&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"44\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"DELETE\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 201 Created\" /><text type=\"break\" /><text value=\"{ &quot;success&quot;: true, &quot;message&quot;: &quot;User created successfully&quot;, &quot;data&quot;: { &quot;id&quot;: 123, &quot;username&quot;: &quot;test_user&quot;, &quot;name&quot;: &quot;tester&quot; } }\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>POST</code>, а затем <code>\"username\": \"test_user\"</code>.</p></body></html>"
          },
          {
            "title": "Write a request* - Copy",
            "id": 129681,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>При работе с Python мы используем библиотеку <code>requests</code> для создания запросов.</p><p>Создай GET запрос, чтобы получить доступные курсы на Mimo.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://mimo.org/courses&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"39\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"{ &quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>get</code>.</p></body></html>"
          },
          {
            "title": "Write a request* - Copy - Copy",
            "id": 129682,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы также можем делать POST запросы с помощью библиотеки requests.</p><p>Отправь POST запрос для создания нового пользователя.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://mimo.org/users&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"data = { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_user&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.post(url, json=data) \" /><text type=\"break\" /><text value=\"print(response.json())\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"88\" /><option startIndex=\"136\" endIndex=\"140\" /><option correct=\"false\"><content><text value=\"delete\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"{ &quot;success&quot;: true, &quot;message&quot;: &quot;User created successfully&quot;, &quot;data&quot;: { &quot;id&quot;: 123, &quot;username&quot;: &quot;test_user&quot;, &quot;name&quot;: &quot;tester&quot; } }\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>\"username\": \"test_user\"</code>, а затем <code>post</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 129646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что означает <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Интерфейс прикладного программирования</item><item value=\"2\" correct=\"false\">Интерфейс помощи программированию</item></selection><p visible-if=\"wrong\">Интерфейс прикладного программирования.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 129647,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вот еще один пример из реальной жизни. Вы пишете скрипт для отправки данных на веб-сервер, какая правильная роль для каждой из участвующих сторон?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ваш скрипт является отправителем, конечная точка сервера — это <code>API</code>, сервер является получателем</item><item value=\"2\" correct=\"false\">Твой скрипт — это <code>API</code>, конечная точка сервера — отправитель, сервер — получатель</item><item value=\"3\" correct=\"false\">Твой скрипт — это отправитель, конечная точка сервера — это получатель, сервер — это <code>API</code></item></selection><p visible-if=\"wrong\">Ваш скрипт является отправителем, конечная точка сервера — это <code>API</code>, сервер является получателем.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 129648,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как работает <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Он отправляет запрос отправителя получателю и ответ получателя отправителю</item><item value=\"2\" correct=\"false\">Он просто соединяет отправителя и получателя и позволяет им делать свое дело</item><item value=\"3\" correct=\"false\">Он просто следит за тем, чтобы отправитель и получатель отправляли сообщения друг другу</item></selection><p visible-if=\"wrong\">Он отправляет запрос отправителя получателю и ответ получателя отправителю.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 129649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что произойдет, если мы отправим что-то неожиданное в <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>API</code> может игнорировать это и отправлять только то, что ожидается от тела, получателю</item><item value=\"2\" correct=\"false\"><code>API</code> должен отправить неожиданный контент получателю</item></selection><p visible-if=\"wrong\"><code>API</code> может игнорировать это и отправлять только то, что ожидается от тела, получателю.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 129650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Нужен ли нам один <code>API</code> для одного действия?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Нет, мы можем выполнять разные действия, используя разные методы</item><item value=\"2\" correct=\"false\">Да, один <code>API</code> может выполнять только одно действие</item></selection><p visible-if=\"wrong\">Нет, мы можем выполнять разные действия, используя разные методы.</p></body></html>"
          }
        ]
      },
      {
        "id": 14656,
        "title": "Почему использовать API?",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Why API? 1",
            "id": 129653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Теперь, когда ты знаешь, что такое <code>API</code>, почему мы должны его использовать? Одна из причин заключается в том, что <code>API</code> могут помочь нам быстрее построить систему.</p></body></html>"
          },
          {
            "title": "Why API? 2",
            "id": 129654,
            "contentType": "interactive",
            "images": [
              {
                "id": "62f8f11e-7605-4590-bb91-6ee2236fc19f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Back-end разработчикам не нужно ждать завершения front-end разработки, чтобы протестировать свою программу.</p><p>Они могут протестировать свою программу, просто отправляя запросы к <code>API</code> и проверяя, правильны ли ответы.</p><img src=\"62f8f11e-7605-4590-bb91-6ee2236fc19f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "How to use API-DELETE*",
            "id": 129655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы рассмотрели запросы <code>GET</code> и <code>POST</code>, но нам еще предстоит изучить запросы <code>DELETE</code>, <code>PUT</code> и <code>PATCH</code>.</p><p>  Запросы <code>DELETE</code><em>должны</em> иметь идентификатор, чтобы <code>API</code> знало, что удалять. Например, идентификатор <code>6</code> здесь.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"DELETE http://mimo.org/api/courses/\" /><text value=\"6\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"35\" endIndex=\"36\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"POST\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 200 Deleted\" /><text type=\"break\" /><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>DELETE</code>, а затем <code>6</code>.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy",
            "id": 129683,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы используем метод <code>delete</code>, чтобы вызвать конечную точку удаления с помощью requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;http://mimo.org/api/courses/1&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.delete(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"75\" /><option startIndex=\"76\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"remove\" /></content></option><option correct=\"false\"><content><text value=\"del\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 200 Deleted\" /><text type=\"break\" /><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>requests</code>, а затем <code>delete</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 1",
            "id": 129656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>  Запросы <code>PUT</code> похожи на запросы <code>POST</code>, но они используются для <strong>замены</strong> ранее созданного объекта.</p><p>Поскольку запросы <code>PUT</code> используются для замены существующих объектов, им требуется идентификация, чтобы знать, какой объект заменить.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"27\" endIndex=\"28\" /><option correct=\"false\"><content><text value=\"DELETE\" /></content></option><option correct=\"false\"><content><text value=\"POST\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;,\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;tester&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>PUT</code>, а затем <code>1</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 2",
            "id": 129657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Если в запросе <code>PUT</code> предоставлен недопустимый идентификатор или идентификатор отсутствует, будет создан новый объект.</p><p>Код состояния ответа будет <code>201</code> для созданного объекта и <code>204</code> для замененного объекта. Напиши запрос <code>PUT</code> без идентификации.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"26\" /></options></interaction></interactions><output><content><text value=\"HTTP/1.1 201 Created\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;,\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;tester&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>/users</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 3",
            "id": 129658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>При использовании запроса <code>PUT</code> удаляются все существующие данные и вставляются данные на основе тела запроса.</p><p>Выполни <code>PUT</code> запрос <strong>без</strong> поля <code>name</code>. У пользователя с <code>1</code> в качестве <code>id</code> больше не будет значения для <code>name</code>, оно станет пустым.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\",\" /></content></option><option correct=\"false\"><content><text value=\"&quot;name&quot;: &quot;test&quot;\" /></content></option><option startIndex=\"42\" endIndex=\"65\" /></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>PUT</code>, а затем <code>\"username\": \"test_User\"</code>.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy - Copy",
            "id": 129684,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы используем метод <code>put</code>, чтобы вызвать put endpoint с помощью requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"'http://blog.com/api/posts/1'\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"data = {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"'username'\" class=\"string\" /><text value=\": \" /><text value=\"'New name'\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    \" /><text value=\"'userId'\" class=\"string\" /><text value=\": \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.put(url, json=data)\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"130\" endIndex=\"133\" /><option correct=\"false\"><content><text value=\"patch\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;New name&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>put</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PATCH",
            "id": 129659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>  Запросы <code>PATCH</code> используются для обновления некоторых полей объекта, поэтому необходимо указать, какой объект нужно обновить.</p><p>Значения всех неупомянутых полей останутся неизменными. Используй <code>1</code> в качестве идентификатора для запроса ниже.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PATCH https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Barry&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"29\" endIndex=\"30\" /><option correct=\"false\"><content><text value=\"PUT\" /></content></option><option correct=\"false\"><content><text value=\"DELETE\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;Barry&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>PATCH</code>, а затем <code>1</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PATCH 2",
            "id": 129660,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Теперь попробуй изменить <code>username</code> на <code>the_bat</code> для пользователя с <code>id</code>, который равен <code>4</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PATCH https://mimo.org/users/\" /><text value=\"4\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;the_bat&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"30\" /><option startIndex=\"47\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"59\" endIndex=\"68\" /><option correct=\"false\"><content><text value=\"1\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;the_bat&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>4</code>, затем <code>\"username\"</code>, а затем <code>:</code>, <code>\"the_bat\"</code>.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy - Copy - Copy",
            "id": 129685,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы используем метод <code>patch</code>, чтобы вызвать patch endpoint с помощью requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;http://example.com/api/tasks/123&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"data = {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;completed&quot;\" class=\"string\" /><text value=\": \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.patch(url, json=data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"113\" endIndex=\"118\" /><option correct=\"false\"><content><text value=\"put\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;completed&quot;: true\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>patch</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 129661,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что нужно учитывать при создании или обновлении ресурсов с помощью методов, таких как <code>POST</code>, <code>PUT</code> или <code>PATCH</code>, в веб-приложении на Python?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Проверка данных</item><item value=\"2\" correct=\"false\">Плата за доступ</item></selection><p visible-if=\"wrong\">Проверка данных.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 129662,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Если мы хотим изменить только один атрибут словаря, какую функцию мы должны использовать?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>requests.patch()</code></item><item value=\"2\" correct=\"false\"><code>requests.replace()</code></item><item value=\"3\" correct=\"false\"><code>requests.remove()</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>requests.patch()</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 129663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как заменить объект, который мы уже создали?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Выполнение запроса <code>PUT</code></item><item value=\"2\" correct=\"false\">Выполнение запроса <code>DELETE</code> для удаления объекта, затем выполнение запроса <code>POST</code></item></selection><p visible-if=\"wrong\">Выполнение запроса <code>PUT</code>.</p></body></html>"
          },
          {
            "title": "Question 6",
            "id": 129666,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что произойдет, если мы не предоставим идентификацию при выполнении <code>PUT</code> запроса?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ничего не будет заменено, будет создан новый объект</item><item value=\"2\" correct=\"false\">Все объекты будут заменены</item><item value=\"3\" correct=\"false\">Ничего не происходит</item></selection><p visible-if=\"wrong\">Ничего не будет заменено, будет создан новый объект.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 129667,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Напиши код на Python, чтобы отправить <code>DELETE</code> запрос на <code>https://mimo.org/lessons</code> для удаления урока с идентификатором <code>1001</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.delete(\" /><text value=\"&quot;https://mimo.org/lessons/1001&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"43\" /><option startIndex=\"44\" endIndex=\"75\" /><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"200\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>delete</code>, а затем <code>\"https://mimo.org/lessons/1001\"</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 129668,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Напиши код для отправки запроса <code>PUT</code> с использованием Python на <code>https://mimo.org/users</code> для замены пользователя с идентификатором <code>17</code>.</p><p>Имя пользователя должно быть изменено на <code>Bob</code>, а имя пользователя должно быть изменено на <code>bobbyman</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://mimo.org/users/17&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"data = { \" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;bobbyman&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Bob&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.put(url, json=data) \" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"140\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"delete\" /></content></option></options></interaction></interactions><output><content><text value=\"204\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>put</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}