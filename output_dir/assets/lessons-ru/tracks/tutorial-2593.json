{
  "tutorial": {
    "id": 2593,
    "version": 15,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Игра в угадывание - Часть 1",
    "descriptionContent": "Создай свою собственную игру! В этой первой части мы подготовим основу, создавая базовую логику игры. Всё дело в установке правил и предоставлении игрокам возможности проявить себя.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2593-icon-banner.svg",
    "chapters": [
      {
        "id": 14367,
        "title": "Учись",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro",
            "id": 127993,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в **Guessing Game**, где ты создашь свою собственную игру. *Guessing game*, как ты уже догадался, это игра, в которой нужно угадать правильное число.\n\n1. Начни с создания базовой структуры HTML-документа. Включи теги `<!doctype HTML>`, `html`, `head` и `body`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title",
            "id": 127994,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь заголовок для своей веб-страницы. Как насчет *Guessing Game*? Или выбери что-то, что тебе нравится больше!\n\n1. Добавь теги `title` в секцию `head`.\n2. Добавь заголовок между новыми тегами `title`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Container",
            "id": 127995,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте добавим контейнер, который мы будем использовать для отображения содержимого игры.\n\n1. Добавь контейнер `<div>` для игры внутри секции `<body>`.\n2. Для `div` установи `class` в `\"container\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title and description",
            "id": 127996,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее добавим заголовок и абзац в контейнер.\n\n1. Добавь элемент `h1`, чтобы отобразить название игры.\n2. Добавь абзац, чтобы объяснить правила игры. (Например, `Угадай число от 1 до 100`.)",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Input and button",
            "id": 127997,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Чтобы позволить игрокам взаимодействовать с игрой, нам понадобятся интерактивные элементы.\n\n1. Добавь поле `<input>`, в которое игроки будут вводить свои догадки. Установи его тип как `\"number\"` и задай ему id `\"guess\"`.\n2. Добавь кнопку, чтобы игроки могли отправлять свои догадки.\n3. И, наконец, добавь пустой абзац с id `\"feedback\"`, который мы будем использовать для обратной связи.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Testing JavaScript",
            "id": 128876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "У нас есть весь необходимый HTML. Прежде чем перейти к написанию логики, мы должны проверить, правильно ли мы связали элемент JavaScript.\n\n1. Добавь оператор `console.log`, чтобы вывести что-то в консоль.\n2. В HTML-файле свяжи JS-файл с HTML-файлом, добавив `<script src=\"script.js\"></script>` прямо перед закрывающим тегом `</body>`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "console.log(\"Hello!\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Interaction",
            "id": 127998,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай начнем добавлять логику в игру.\n\n1. Добавь пустую функцию `checkGuess` в JS файл.\n2. Вернись в наш HTML файл и вызови функцию при нажатии на добавленную кнопку.\n3. Убедись, что оператор `console.log` теперь выполняется при нажатии на кнопку и выводит что-то в консоль.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "console.log(\"Hello!\");",
                  "solvedContent": "function checkGuess() {\n  console.log(\"Hello!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "References",
            "id": 128000,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "В нашей функции `checkGuess` нам нужно получить ссылки на элементы ввода и обратной связи.\n\n1. Создай две переменные с именами `inputElement` и `feedbackElement`.\n2. Используй `document.getElementById()` с правильными идентификаторами, чтобы получить ссылки на два элемента.\n3. Если хочешь, удали оператор печати, который был раньше.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  console.log(\"Hello!\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById('guess');\n  const feedbackElement =  document.getElementById(\"feedback\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Guessing",
            "id": 128001,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее извлеки значение поля ввода, которое представляет собой предположение.\n\n1. Используй `.value`, чтобы получить значение `inputElement`.\n2. Сохрани значение в новой переменной с именем `guess`.\n\nДобавленный код должен выглядеть так: `let guess = inputElement.value;`",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Random number",
            "id": 128002,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "У нас есть предположение от игрока, но все еще не хватает случайного числа, которое мы хотим, чтобы игрок угадал. JS позволяет нам сделать это с помощью строки, которая может показаться немного сложной на первый взгляд, но потерпите немного.\n\n1. В начале файла, вне функции, добавьте следующий код:\n   ```JavaScript\n   let randomNumber = Math.floor(Math.random() * 100) + 1;\n   ```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": [
                {
                  "title": "What does this code do?",
                  "content": "Math.random() generates a decimal between 0 (inclusive) and 1 (exclusive). Multiplying by 100 gives a range from 0 to just under 100. Math.floor() rounds this down to a whole number between 0 and 99, and adding 1 shifts this range to between 1 and 100."
                }
              ]
            }
          },
          {
            "title": "Comparing",
            "id": 128003,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "У нас есть случайное число, и у нас есть предположение. Теперь мы можем сравнить предположение со случайным числом. Давайте начнем с блока *if else*.\n\n1. Внутри функции, ниже переменной `guess`, добавьте блок `if`, чтобы сравнить, равен ли `guess` `randomNumber`.\n2. Добавьте блок `else if`, чтобы проверить, меньше ли `guess`, чем `randomNumber`.\n3. Наконец, добавьте блок `else`, чтобы обработать последний оставшийся случай (когда `guess` больше, чем `randomNumber`.)",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (randomNumber == guess){\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #1",
            "id": 128004,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Чтобы дать нашему игроку правильную обратную связь, внутри блоков кода условного оператора мы хотим соответствующим образом изменить `feedbackElement`.\n\n1. Внутри блока `if` установите `innerHTML` элемента `feedbackElement` на сообщение об успехе, чтобы указать, что игрок правильно угадал число!\n2. Используйте `feedbackElement.style.color` и присвойте ему цвет `\"green\"`, чтобы дополнительно указать на успех.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #2",
            "id": 128005,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вероятно, ты также захочешь сообщить игроку, было ли предположение слишком низким или слишком высоким. Давай сделаем это, предоставив обратную связь в блоках `else if` и `else`.\n\n1. Установи `feedbackElement.innerHTML` на `\"Слишком низко! Попробуй снова.\"` или `\"Слишком высоко! Попробуй снова.\"`.\n2. Измени цвет `feedbackElement` на красный в этих случаях.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Stylesheet",
            "id": 128006,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "На последнем этапе давай добавим таблицу стилей.\n\n1. Свяжи таблицу стилей `style.css` внутри тега `head`.\n2. Добавь стилизацию к игре по своему усмотрению.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: gold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n\n.container {\n    background-color: white;\n    padding: 40px;\n    border-radius: 8px;\n    box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.1);\n    text-align: center;\n    width: 320px;\n    max-width: 90%;\n}\n\ninput {\n    width: 80%;\n    padding: 12px;\n    font-size: 24px;\n    margin-bottom: 12px;\n}\n\nbutton {\n    width: 100%;\n    padding: 12px;\n    font-weight: bold;\n    background-color: blue;\n    border: 2px solid blue;\n    color: white;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: white;\n    color: blue;\n}\n"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}