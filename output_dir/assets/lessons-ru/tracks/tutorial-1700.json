{
  "tutorial": {
    "id": 1700,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Билетный автомат",
    "descriptionContent": "Используй CSS Grid для создания макета билетного автомата",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1700-icon-banner.svg",
    "chapters": [
      {
        "id": 11445,
        "title": "Билетный автомат",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro 2",
            "id": 105814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Для этого проекта мы будем использовать промежутки сетки, чтобы создать интерфейс билета для банковского приложения.\n\nМы начнем с следующего HTML-шаблона, содержащего кнопки интерфейса и CSS-правила для их стилизации и выравнивания.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Creating a grid",
            "id": 105815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Мы хотим отобразить кнопки на сетке, чтобы лучше контролировать их размещение на странице.\n\nЕсли ты посмотришь на HTML код, то увидишь, что все кнопки находятся внутри элемента `div` с классом `grid-container`. Мы создадим правило для этого класса, чтобы контролировать, как отображаются кнопки внутри.\n\n1. Создай правило для класса `grid-container`.\n2. Создай сетку, установив свойство `display` на правильное значение.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Add a `display: grid;` rule to display elements inside a parent on a grid."
                }
              ]
            }
          },
          {
            "title": "Grid columns",
            "id": 105837,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Мы хотим отобразить наши четыре кнопки в двух колонках, по две кнопки в каждой. Давайте добавим правило для создания двух одинаково больших колонок.\n\n1. Внутри правила `.grid-container` добавь свойство для создания двух одинаково больших колонок, каждая из которых занимает одну долю доступного пространства.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Set the columns with the `grid-template-columns` property.\n2. The number of property values defines the number of columns.\n3. A value like `1fr` means that a column takes one fraction of the available space.\n4. Use this template to help you define your property: \n```css \ngrid-template-columns: <fraction> <fraction>;\n```"
                }
              ]
            }
          },
          {
            "title": "Column gap",
            "id": 105843,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Если ты запустишь свой код, то увидишь, что сейчас кнопки в двух колонках расположены слишком близко друг к другу. Давай добавим промежуток между колонками, чтобы их разделить.\n\n1. Внутри правила `.grid-container` добавь свойство, чтобы создать промежуток в `5px` между двумя колонками сетки.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\ncolumn-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Row gap",
            "id": 105845,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда столбцы больше не слипаются, пора исправить строки.\n\n1. Внутри правила `.grid-container` добавь свойство, чтобы создать промежуток в `25px` между двумя строками сетки.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\nrow-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Gap shorthand",
            "id": 105846,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Мы использовали `column-gap` и `row-gap`, чтобы задать расстояния отдельно, но на самом деле мы можем сделать это в одной строке. Давайте изменим наш код.\n\n1. Используй сокращенную запись `gap`, чтобы задать промежутки между строками `25px` и между колонками `5px` в одной строке.\n2. Удали свойства `column-gap` и `row-gap`, так как мы заменили их сокращенной записью.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The gap shorthand looks like: \n```css\ngap: <rowGap> <columnGap>;\n```"
                }
              ]
            }
          },
          {
            "title": "Overview",
            "id": 105847,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Отличная работа! Интерфейс тикетов для банковского приложения готов.\n\nМы здесь не запускаем тесты, так что не стесняйся экспериментировать с элементами и правилами. Попробуй добавить больше кнопок и адаптировать сетку соответственно.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}