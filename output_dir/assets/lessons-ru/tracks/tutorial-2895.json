{
  "tutorial": {
    "id": 2895,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Блэкджек - Часть 2",
    "descriptionContent": "Во второй части проекта мы завершим игру, чтобы можно было играть против компьютера",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2895-icon-banner.svg",
    "chapters": [
      {
        "id": 14986,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1 - Copy",
            "id": 132216,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать обратно в проект **Blackjack**. В первой части мы позволили игроку тянуть столько карт, сколько он хотел, пока не достигал 21 или больше.\n\nВо второй части мы превратим это в настоящую игру в Blackjack. Начнем с того, что убедимся, что у игрока уже есть две карты в начале игры.\n\n1. Вместо инициализации `playerHand` как пустого массива, возьмите две карты и присвойте их массиву, чтобы игрок начал с двух карт.\n2. Вместо инициализации `playerValue` как `0`, используйте функцию `calculateHandValue`, чтобы рассчитать значение игрока после взятия начальных двух карт.\n3. Отобразите начальную руку с помощью функции `displayHand`.\n4. Выведите `playerValue`, чтобы показать игроку начальный счет от первых двух карт.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [];\nlet playerValue = 0;\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 132133,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее мы добавим дилера в нашу игру. Начнем с создания переменной для руки дилера, `dealerHand`, и инициализируем ее двумя картами, взятыми из колоды.\n\n1. Рядом с местом, где вы инициализируете `playerHand`, создайте новую переменную `dealerHand`. Инициализируйте эту переменную как массив с двумя случайно выбранными картами.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 132134,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее, мы хотим отслеживать значение руки дилера.\n\n1. Рядом с местом, где вы создаете переменную `playerValue`, добавьте переменную `dealerValue` и присвойте ей возвращаемое значение функции `calculateHandValue`, передавая в качестве аргумента `dealerHand`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 132217,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "В Блэкджеке сначала дилер показывает только одну карту. В конце игры дилер показывает все свои карты. Давайте создадим функцию, чтобы имитировать это поведение.\n\n1. Создай новую функцию `displayDealerHand`, которая принимает два аргумента: `hand` и `firstCardOnly`.\n2. Если второй аргумент, `firstCardOnly`, равен `true`, выведи только ранг первой карты из аргумента `hand`. И выведи `?` для второй карты.\n3. Если второй аргумент равен `false`, выведи ранг для каждой карты в переданном массиве.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy - Copy",
            "id": 132219,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Время использовать вновь созданную функцию с пользой.\n\n1. После отображения руки игрока и отображения счета игрока вызови функцию `displayDealerHand`. Передай переменную `dealerHand` в качестве первого аргумента и `true` в качестве второго, чтобы показать только первую карту. Сделай все это перед циклом `while`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 132135,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь реализуем логику для дилера. Если игрок перебирает, то есть сумма очков игрока превышает 21, дилер автоматически выигрывает - мы хотим включить эту логику в наше приложение.\n\n1. После цикла `while` добавьте оператор `if`, чтобы проверить, превышает ли `playerValue` значение `21`. Если это так, отобразите, что игрок проигрывает.\n2. Внутри блока `else` добавьте цикл while с условием `dealerValue < 17`.\n3. Внутри этого цикла добавьте новую случайную карту в руку дилера с помощью `drawCard`.\n4. Пересчитайте общую сумму очков дилера с помощью `calculateHandValue` и присвойте возвращаемое значение переменной `dealerValue`, чтобы выйти из цикла, когда дилер наберет 17 или больше.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);\n\nif (playerValue > 21) {\n  console.log('You bust! Dealer wins.');\n} else {\n  while (dealerValue < 17) {\n    dealerHand.push(drawCard());\n    dealerValue = calculateHandValue(dealerHand);\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 132137,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Как только дилер закончил (это значит, что у него 17 или больше в сумме, или он перебрал с суммой больше 21), нам нужно решить, кто выиграл.\n\n1. В начале файла создайте новую переменную с именем `winner`, но не присваивайте ей значение.\n2. Если игрок выиграл, присвойте `\"Player\"` вновь созданной переменной.\n3. Если выиграл дилер, присвойте `\"Dealer\"` этой переменной.\n4. Наконец, если ничья, присвойте `\"Tie\"` переменной `winner`.\n5. Выведите, кто выиграл, чтобы игрок знал.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);\n\nif (playerValue > 21) {\n  console.log('You bust! Dealer wins.');\n} else {\n  while (dealerValue < 17) {\n    dealerHand.push(drawCard());\n    dealerValue = calculateHandValue(dealerHand);\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nlet winner;\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);\n\nif (playerValue > 21) {\n  console.log('You bust! Dealer wins.');\n  winner = \"Dealer\";\n} else {\n  while (dealerValue < 17) {\n    dealerHand.push(drawCard());\n    dealerValue = calculateHandValue(dealerHand);\n  }\n}\nif (dealerValue > 21 || playerValue > dealerValue) {\n  winner = \"Player\";\n} else if (playerValue < dealerValue) {\n  winner = \"Dealer\";\n} else {\n  winner = \"Tie\";\n}\n\nconsole.log(`Winner: ${winner}`);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}