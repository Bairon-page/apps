{
  "tutorial": {
    "id": 2262,
    "version": 1,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Операции с массивами",
    "descriptionContent": "Операции с массивами",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12683,
        "title": "Метод массива .map()",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 114977,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь пустую inline функцию внутри функции `.map()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const flavors = [\"chocolate\", \"vanilla\", \"strawberry\"];\nconst options = flavors.map( );",
                  "solvedContent": "const flavors = [\"chocolate\", \"vanilla\", \"strawberry\"];\nconst options = flavors.map(function() {});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 114978,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь стрелочную функцию, которая преобразует каждую аббревиатуру штата в верхний регистр, используя функцию `.toUpperCase()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const lcStates = [\"md\", \"va\", \"wv\"];\nconst ucStates = \n lcStates.map();",
                  "solvedContent": "const lcStates = [\"md\", \"va\", \"wv\"];\nconst ucStates = \n lcStates.map(element => element.toUpperCase());"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 114979,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь встроенную функцию, которая преобразует каждое значение из галлонов в литры. Поскольку 1 галлон равен 3.8 литра, убедись, что умножаешь каждый элемент массива на 3.8.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const gallons = [1.2, 4.5, 3.2];\nconst liters = gallons.map(\n \n);",
                  "solvedContent": "const gallons = [1.2, 4.5, 3.2];\nconst liters = gallons.map(function(element) {\n return element * 3.8;\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 114976,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вызови функцию `.map()` на массиве `ratios` и преобразуй каждое значение в процент. Сохрани результаты в переменной с именем `percentages`. Например, `0.79` должно быть преобразовано в `79%`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const ratios = [0.79, 0.88, 0.68, 0.95];\n\n\n",
                  "solvedContent": "const ratios = [0.79, 0.88, 0.68, 0.95];\nconst percentages = ratios.map(function(element) {\n return (element * 100) + \"%\";\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 114980,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Заполни синтаксис для использования `.map()`, чтобы преобразовать каждое значение в литрах в галлоны (подсказка: 1 галлон = 3.8 литра). Сохрани получившийся массив в переменной с именем `gallons`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const liters = [13.2, 24.5, 13.2];\n",
                  "solvedContent": "const liters = [13.2, 24.5, 13.2];\nconst gallons = liters.map(element => element / 3.8);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12715,
        "title": "Array.filter()",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 115334,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь пустую inline функцию внутри функции `.filter()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const names = [\"Tony\", \"Tania\", \"Vince\", \"Terry\"];\nconst T = names.filter();\nconsole.log(T);",
                  "solvedContent": "const names = [\"Tony\", \"Tania\", \"Vince\", \"Terry\"];\nconst T = names.filter(function() {});\nconsole.log(T);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 115335,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь стрелочную функцию, которая указывает `.filter()` включать только значения, которые меньше 60.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const customerTotals = [99, 56, 78, 110, 29, 58];\nconst smallOrder = \n customerTotals.filter();",
                  "solvedContent": "const customerTotals = [99, 56, 78, 110, 29, 58];\nconst smallOrder = \n customerTotals.filter((total) => total < 60);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 115337,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь встроенную функцию, которая указывает `.filter()` включать только те штаты, которые начинаются с буквы \"A\", в массив с именем `A`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const states = [\"Alaska\", \"Maryland\", \"Pennsylvania\", \"Alabama\", \"Arkansas\"];\nconst A = states.filter(\n \n);\nconsole.log(A);",
                  "solvedContent": "const states = [\"Alaska\", \"Maryland\", \"Pennsylvania\", \"Alabama\", \"Arkansas\"];\nconst A = states.filter(function(state) {\n return state[0] == \"A\";\n});\nconsole.log(A);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 115336,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь встроенную функцию, которая указывает `.filter()` включать только месяцы четвертого квартала (октябрь, ноябрь, декабрь) в массив `q4`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst q4 = months.filter();\nconsole.log(q4);",
                  "solvedContent": "const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst q4 = months.filter(function(month, index) {\n return index > 8;\n});\nconsole.log(q4);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 115338,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Используй функцию `.filter()`, чтобы создать массив с именем `tall`, который хранит высоты больше 72 дюймов.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const heights = [66, 75, 73, 56, 62];\n\nconsole.log(tall);",
                  "solvedContent": "const heights = [66, 75, 73, 56, 62];\nconst tall = heights.filter((height) => height > 72);\nconsole.log(tall);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12721,
        "title": "Array.reduce()",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 115406,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Заполни оператор `return` в inline функции так, чтобы `weeklyCars` хранил сумму `carsWashed`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const carsWashed = [21, 15, 18, 10, 5, 8, 23];\nconst weeklyCars = carsWashed.reduce(function(prev, curr) {\n \n});\nconsole.log(weeklyCars);",
                  "solvedContent": "const carsWashed = [21, 15, 18, 10, 5, 8, 23];\nconst weeklyCars = carsWashed.reduce(function(prev, curr) {\n return prev + curr;\n});\nconsole.log(weeklyCars);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 115407,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Заполни оператор `return` в функции так, чтобы `list` содержал каждое имя, разделенное запятой и пробелом (`\", \"`).",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const names = [\"Tony\", \"Tania\", \"Vince\", \"Terry\"];\nconst list = names.reduce(function(prev, curr) {\n \n});\nconsole.log(list);",
                  "solvedContent": "const names = [\"Tony\", \"Tania\", \"Vince\", \"Terry\"];\nconst list = names.reduce(function(prev, curr) {\n return prev + \", \" + curr;\n});\nconsole.log(list);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 115408,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вызови функцию `.reduce()` на массиве `values`, чтобы вычислить `product`. Это означает умножение всех элементов друг на друга с помощью `*`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const values = [5, 4, 3, 2, 1];\nconst product = \nconsole.log(product);",
                  "solvedContent": "const values = [5, 4, 3, 2, 1];\nconst product = values.reduce(function(prev, curr) {\n return prev * curr;\n});\nconsole.log(product);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 115409,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Преобразуй функцию `.reduce()` в стрелочную функцию.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const values = [5, 4, 3, 2, 1];\nconst product = values.reduce(function(prev, curr) {\n return prev * curr;\n});\nconsole.log(product);",
                  "solvedContent": "const values = [5, 4, 3, 2, 1];\nconst product = values.reduce((prev, curr) => prev * curr);\nconsole.log(product);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 115410,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вызови функцию `.reduce()` на массиве `prices`, чтобы найти его общую сумму с учетом налога. Ты должен использовать параметр `index`, чтобы получить доступ к массиву `taxRates` внутри тела встроенной функции.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const prices = [20.50, 22.25, 21.75];\nconst taxRates = [1.15, 1.20, 1.10];\n\nconst total = \nconsole.log(total);",
                  "solvedContent": "const prices = [20.50, 22.25, 21.75];\nconst taxRates = [1.15, 1.20, 1.10];\n\nconst total = prices.reduce(function(prev, curr, index) {\n return prev + (curr * taxRates[index]);\n});\nconsole.log(total);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}