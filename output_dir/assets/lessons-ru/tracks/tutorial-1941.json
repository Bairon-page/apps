{
  "tutorial": {
    "id": 1941,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Создатель встреч",
    "descriptionContent": "Используй свои знания о классах, чтобы создать и реализовать функциональность для встреч и видеозвонков",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1941-icon-banner.svg",
    "chapters": [
      {
        "id": 12547,
        "title": "Создатель встреч",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 113430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Финли создает приложение, которое фокусируется на встречах и видеозвонках. Это приложение может быть полезно для удаленной работы и компаний, которым нужно общаться с сотрудниками. Давайте применим наши новые навыки и поможем Финли создать функциональность для встреч и видеозвонков!\n\nДавайте начнем с создания нашего первого класса `Meeting`.\n\n1. Создай класс `Meeting` и определи блок кода.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "class Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 113434,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда у нас есть класс `Meeting`, давайте добавим конструктор. Это определяет, какие свойства должен иметь новый объект `Meeting`.\n\n1. Добавь конструктор в класс и включи `date`, `time` и `name` в качестве свойств.\n2. Установи значения `date`, `time` и `name` в их соответствующие параметры из конструктора.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 113436,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Чтобы завершить класс `Meeting`, давайте добавим метод, который отправляет уведомление о встрече.\n\n1. Создайте метод `sendNotification`, который выводит в консоль следующее сообщение:\n```\n \"Это напоминание о том, что ваша встреча с \" + this.name + \" состоится \" + this.date + \" в \" + this.time + \".\"\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 113437,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Класс `Meeting` завершен, отлично! Финли также нужен класс для видеозвонков. Он будет очень похож на класс `Meeting` с парой дополнений.\n\n1. Создай класс `VideoCall`, который расширяет класс `Meeting`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 113438,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее добавим конструктор для `VideoCall`.\n\n1. Добавь конструктор и включи свойства `date`, `time`, `name` и `link`.\n2. Включи `super` для `date`, `time` и `name`, чтобы указать, что мы наследуем эти свойства от класса `Meeting`.\n3. Присвой `link` значение параметра `link` из конструктора.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you can use the reserved word `super` to access the superclass' properties like this \n```\nsuper(date,time,name)\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #7",
            "id": 113439,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда мы настроили свойства для `VideoCall`, давай напишем метод.\n\n1. Создай метод `sendNotificationLink`.\n2. Вызови *унаследованный* метод `sendNotification`.\n3. Выведи в консоль следующее сообщение:\n```\n\"This is the link to your video meeting: \" + this.link;\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `super` to call the `Meeting` class' method `sendNotification`."
                }
              ]
            }
          },
          {
            "title": "Lesson #8",
            "id": 113440,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте завершим класс `VideoCall`, добавив еще один метод. Этот метод принадлежит только `VideoCall`.\n\n1. Создай метод с именем `test`.\n2. Выведи в консоль следующее сообщение: `\"Testing audio and video...success!\"` внутри метода test.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 113441,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Класс `Meeting` и класс `VideoCall` завершены, отлично! Давайте создадим экземпляр класса `Meeting` и вызовем его метод.\n\n1. Создайте экземпляр `Meeting` в переменной `firstMeeting`.\n2. Укажите значения типа *string* для аргументов даты встречи, времени и имени человека, с которым встреча.\n3. Вызовите `sendNotification`, используя его класс.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 113444,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, давай создадим экземпляр класса `VideoCall`.\n\n1. Создай экземпляр `VideoCall` в переменной `firstVideo`. Можешь использовать любое значение типа *string* для аргументов.\n2. Выполни метод `sendNotificationLink` у `firstVideo`.\n3. Выполни метод `test` у `firstVideo`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();\n\nconst firstVideo = new VideoCall(\"04/01/2022\", \"3:30PM\", \"Mauricio\", \"https://vid.eo/meetinglink/12345aBcDef\");\nfirstVideo.sendNotificationLink();\nfirstVideo.test();"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}