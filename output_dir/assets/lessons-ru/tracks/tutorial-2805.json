{
  "tutorial": {
    "id": 2805,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Типы функций и сигнатуры",
    "descriptionContent": "Узнай о типах функций и сигнатурах в TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14803,
        "title": "Типы функций и сигнатуры",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 130696,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы также можем объявить, что переменная может содержать функцию. Мы делаем это с помощью аннотации типа <code>Function</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myFunction: \" /><text value=\"Function\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"24\" /><option correct=\"false\"><content><text value=\"Func\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>Function</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 130697,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Если мы используем аннотацию типа <code>Function</code>, мы знаем, что эта переменная будет содержать какую-то функцию, но мы не знаем деталей.</p><p>Затем мы можем назначить любую функцию. Это не очень безопасно с точки зрения типов, так как мы не определяем параметры или возвращаемый тип.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myFunction: \" /><text value=\"Function\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"myFunction = \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"a: \" /><text value=\"number\" class=\"built_in\" /><text value=\", b: \" /><text value=\"number\" class=\"built_in\" /><text value=\"): \" /><text value=\"number\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + b;\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"myFunction = \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"c: \" /><text value=\"string\" class=\"built_in\" /><text value=\"): \" /><text value=\"string\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" c.toUpperCase();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"14\" /><option startIndex=\"27\" endIndex=\"37\" /><option startIndex=\"100\" endIndex=\"110\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>myFunction</code>, затем <code>myFunction</code>, и наконец <code>myFunction</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 130849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем более конкретно указать параметры функции и тип возвращаемого значения. Мы используем синтаксис стрелочной функции для создания <em>подписи функции</em>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myFunction: \" /><text value=\"(\" /><text value=\"x: \" /><text value=\"number\" class=\"built_in\" /><text value=\", y: \" /><text value=\"number\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"17\" /><option startIndex=\"17\" endIndex=\"37\" /><option startIndex=\"37\" endIndex=\"38\" /><option startIndex=\"39\" endIndex=\"41\" /><option startIndex=\"42\" endIndex=\"48\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>(</code>, затем <code>x: number, y: number</code>, а затем <code>)</code>, <code>=&gt;</code>, <code>number</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130698,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>После объявления типа нашей переменной <code>myFunction</code>, мы можем присвоить соответствующую функцию ранее объявленному типу функции.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myFunction: \" /><text value=\"(\" /><text value=\"x: \" /><text value=\"number\" class=\"built_in\" /><text value=\", y: \" /><text value=\"number\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"myFunction = \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"x: \" /><text value=\"number\" class=\"built_in\" /><text value=\", y: \" /><text value=\"number\" class=\"built_in\" /><text value=\"): \" /><text value=\"number\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" x + y;\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"14\" /><option startIndex=\"51\" endIndex=\"61\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>myFunction</code>, а затем <code>myFunction</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130699,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Отлично! Теперь мы можем использовать нашу переменную как функцию.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myFunction: \" /><text value=\"(\" /><text value=\"x: \" /><text value=\"number\" class=\"built_in\" /><text value=\", y: \" /><text value=\"number\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"myFunction = \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"x: \" /><text value=\"number\" class=\"built_in\" /><text value=\", y: \" /><text value=\"number\" class=\"built_in\" /><text value=\"): \" /><text value=\"number\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" x + y;\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" result = myFunction(\" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"10\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(result);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"147\" /><option startIndex=\"168\" endIndex=\"174\" /><option correct=\"false\"><content><text value=\"add\" /></content></option></options></interaction></interactions><output><content><text value=\"15\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>myFunction</code>, а затем <code>result</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130704,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Определение структуры функции известно как создание ее <strong>function signature</strong>.</p><p>Эта сигнатура служит интерфейсом, определяющим ожидаемые параметры и тип возвращаемого значения.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" concatenate: \" /><text value=\"(\" /><text value=\"a: \" /><text value=\"string\" class=\"built_in\" /><text value=\", b: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"concatenate = \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"a: \" /><text value=\"string\" class=\"built_in\" /><text value=\", b: \" /><text value=\"string\" class=\"built_in\" /><text value=\"): \" /><text value=\"string\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + \" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\" + b;\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(concatenate(\" /><text value=\"&quot;More&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Fries&quot;\" class=\"string\" /><text value=\"));\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"39\" /><option startIndex=\"43\" endIndex=\"49\" /><option startIndex=\"74\" endIndex=\"96\" /><option startIndex=\"98\" endIndex=\"104\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"More Fries\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>(a: string, b: string)</code>, затем <code>string</code>, а затем <code>(a: string, b: string)</code>, <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - function - type alias",
            "id": 130599,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Псевдонимы типов могут прояснить определенные шаблоны кода, такие как callbacks. Давайте используем псевдоним типа для нашей сигнатуры, чтобы дать ей имя, например, <code>Callback</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Callback = \" /><text value=\"(\" /><text value=\"data: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"13\" /><option correct=\"false\"><content><text value=\"Function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>Callback</code>.</p></body></html>"
          },
          {
            "title": "adsf",
            "id": 131046,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>На следующем этапе мы можем указать тип функции, ссылаясь на ее новое имя вместо того, чтобы вводить всю сигнатуру функции.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Callback = \" /><text value=\"(\" /><text value=\"data: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"processString\" class=\"title\" /><text value=\"(\" /><text value=\"input: \" /><text value=\"string\" class=\"built_in\" /><text value=\", callback: Callback\" /><text value=\"): \" /><text value=\"void\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" processed = input.toUpperCase();\" /><text type=\"break\" /><text value=\" callback(processed);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"13\" /><option startIndex=\"89\" endIndex=\"97\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>Callback</code>, а затем <code>Callback</code>.</p></body></html>"
          },
          {
            "title": "adsf - Copy",
            "id": 131049,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>На последнем этапе, при вызове функции <code>processString</code>, нам нужно предоставить функцию, которая соответствует типу <code>Callback</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Callback = \" /><text value=\"(\" /><text value=\"data: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"processString\" class=\"title\" /><text value=\"(\" /><text value=\"input: \" /><text value=\"string\" class=\"built_in\" /><text value=\", callback: Callback\" /><text value=\"): \" /><text value=\"void\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" processed = input.toUpperCase();\" /><text type=\"break\" /><text value=\" callback(processed);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logResult: Callback = \" /><text value=\"(\" /><text value=\"data: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(data);\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"processString(\" /><text value=\"&quot;I'm hungry!&quot;\" class=\"string\" /><text value=\", logResult);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"13\" /><option startIndex=\"89\" endIndex=\"97\" /><option startIndex=\"178\" endIndex=\"187\" /><option startIndex=\"189\" endIndex=\"197\" /><option startIndex=\"273\" endIndex=\"282\" /></options></interaction></interactions><output><content><text value=\"I'M HUNGRY!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>Callback</code>, затем <code>Callback</code>, а затем <code>logResult</code>, <code>Callback</code>, <code>logResult</code>.</p></body></html>"
          },
          {
            "title": "adsf - Copy - Copy",
            "id": 131050,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Если функция обратного вызова достаточно проста, можно также использовать синтаксис стрелочной функции, чтобы определить её непосредственно в коде.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Callback = \" /><text value=\"(\" /><text value=\"data: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"processString\" class=\"title\" /><text value=\"(\" /><text value=\"input: \" /><text value=\"string\" class=\"built_in\" /><text value=\", callback: Callback\" /><text value=\"): \" /><text value=\"void\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" processed = input.toUpperCase();\" /><text type=\"break\" /><text value=\"  callback(processed);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"processString(\" /><text value=\"&quot;Print me!&quot;\" class=\"string\" /><text value=\", \" /><text value=\"data\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(data);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"201\" endIndex=\"205\" /><option startIndex=\"206\" endIndex=\"208\" /><option startIndex=\"209\" endIndex=\"210\" /><option startIndex=\"213\" endIndex=\"231\" /><option startIndex=\"232\" endIndex=\"233\" /></options></interaction></interactions><output><content><text value=\"PRINT ME!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>data</code>, затем <code>=&gt;</code>, а затем <code>{</code>, <code>console.log(data);</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130702,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как правильно указать типы параметров и возвращаемого значения функции в TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>let add: (number, number) =&gt; number;</code></item><item value=\"2\" correct=\"true\"><code>let add: (x: number, y: number) =&gt; number;</code></item></selection><p visible-if=\"wrong\"><code>let add: (x: number, y: number) =&gt; number;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130705,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Реализуй функцию с указанной выше сигнатурой.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Add = \" /><text value=\"(\" /><text value=\"x: \" /><text value=\"number\" class=\"built_in\" /><text value=\", y: \" /><text value=\"number\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" add: Add;\" /><text type=\"break\" /><text type=\"break\" /><text value=\"add = \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"x, y\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" x + y;\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(add(\" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"10\" class=\"number\" /><text value=\"));\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"81\" /><option correct=\"false\"><content><text value=\"function(x, y, z)\" /></content></option></options></interaction></interactions><output><content><text value=\"15\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>function(x, y)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8 - Copy",
            "id": 131051,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какое имя у определенного псевдонима типа?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" MyFunction = \" /><text value=\"(\" /><text value=\"data: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>Callback</code></item><item value=\"2\" correct=\"true\"><code>MyFunction</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>MyFunction</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11 - Copy",
            "id": 131052,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заполни пробел, чтобы функции работали.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Callback = \" /><text value=\"(\" /><text value=\"message: \" /><text value=\"string\" class=\"built_in\" /><text value=\") =&gt;\" /><text value=\" \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"greetUser\" class=\"title\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\", callback: Callback\" /><text value=\"): \" /><text value=\"void\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" message = \" /><text value=\"`Hello, \" /><text value=\"${name}\" class=\"subst\" /><text value=\"!`\" /><text value=\";\" /><text type=\"break\" /><text value=\" callback(message);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"logMessage\" class=\"title\" /><text value=\"(\" /><text value=\"msg: \" /><text value=\"string\" class=\"built_in\" /><text value=\"): \" /><text value=\"void\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(msg);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"greetUser(\" /><text value=\"&quot;Alice&quot;\" class=\"string\" /><text value=\", logMessage);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"33\" /><option startIndex=\"183\" endIndex=\"196\" /></options></interaction></interactions><output><content><text value=\"Hello, Alice!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>(message: string)</code>, а затем <code>(msg: string)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8 - Copy",
            "id": 131053,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Почему использование типа <code>Function</code> считается менее безопасным с точки зрения типов, чем использование <code>(data: string) =&gt; void</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"2\" correct=\"true\">Использование Function менее безопасно с точки зрения типов из-за отсутствия деталей параметров и возвращаемого типа</item><item value=\"3\" correct=\"false\">Это замедляет выполнение кода</item></selection><p visible-if=\"wrong\">Использование Function менее безопасно с точки зрения типов из-за отсутствия деталей параметров и возвращаемого типа.</p></body></html>"
          }
        ]
      }
    ]
  }
}