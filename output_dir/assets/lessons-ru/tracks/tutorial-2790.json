{
  "tutorial": {
    "id": 2790,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Статические типы",
    "descriptionContent": "Узнай о статических типах в TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14778,
        "title": "Статические типы",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 130482,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Добро пожаловать в TypeScript, расширение JavaScript, которое добавляет статические типы в JavaScript. Эти типы помогают обнаруживать ошибки во время разработки.</p><p>Ты можешь использовать TypeScript в любой среде, где можно использовать JavaScript.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130495,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ключевая особенность TypeScript — это использование статических типов, в отличие от JavaScript, который позволяет переменным динамически менять типы.</p><p>Мы начинаем с создания переменной в TypeScript. Как и в JavaScript, мы можем объявить переменную, используя <code>var</code>, <code>let</code> и <code>const</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\"int\" /></content></option><option correct=\"false\"><content><text value=\"string\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>let</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130485,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Поскольку TypeScript использует статические типы, нам нужно определить их при создании. Давайте добавим тип, написав двоеточие <code>:</code>, за которым следует ключевое слово <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"13\" /><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"variable\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>:</code>, а затем <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130496,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Наконец, мы хотим присвоить значение нашей переменной типа <code>string</code>. Поскольку она может содержать только строки, мы можем присваивать только строки.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"38\" /><option correct=\"false\"><content><text value=\"42\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>=</code>, а затем <code>\"Hello, world!\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 131280,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Поскольку TypeScript является расширением JavaScript, ты можешь использовать все функции из JavaScript. Давай выведем переменную в лог, чтобы отобразить её значение.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(greeting);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"60\" /><option startIndex=\"60\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"Hello, world!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>console.log(</code>, затем <code>greeting</code>, и наконец <code>);</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В отличие от JavaScript, TypeScript поддерживает аннотации типов для явного указания типов.</p><p>Как вы видели, <strong>аннотация типа</strong> определяет тип переменной. В этом случае переменная имеет тип <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(greeting);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Hello, world!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>После того как переменной присвоен определенный тип, попытка изменить этот тип приведет к ошибке.</p><p>Например, если мы определяем переменную как строку, мы не можем позже присвоить ей число. Попробуй присвоить <code>number</code> переменной типа <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"greeting = \" /><text value=\"42\" class=\"number\" /><text value=\"; \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\"&quot;Hello, TypeScript!&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Error: Type &quot;number&quot; is not assignable to type &quot;string&quot;.\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>42</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130489,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Давай создадим новую строковую переменную под названием <code>name</code> и присвоим ей значение.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Ada&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"8\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option startIndex=\"17\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"24\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Ada\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>let</code>, затем <code>name</code>, а затем <code>:</code>, <code>string</code>, <code>=</code>, <code>\"Ada\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130490,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Каков вывод этого TypeScript кода?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myVariable: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;TypeScript is cool&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"myVariable = \" /><text value=\"1000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(myVariable);\" /></content><output><content><text value=\"Error: Type &quot;number&quot; is not assignable to type &quot;string&quot;.\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ошибка: Тип \"number\" не может быть присвоен типу \"string\"</item><item value=\"2\" correct=\"false\">1000</item></selection><p visible-if=\"wrong\">Ошибка: Тип \"number\" не может быть присвоен типу \"string\".</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130492,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код TypeScript, чтобы объявить переменную типа <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" motto: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Learn TypeScript&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(motto);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"11\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Learn TypeScript\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130491,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что произойдет, если мы попытаемся присвоить число строковой переменной в TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">TypeScript выдаст ошибку</item><item value=\"2\" correct=\"false\">Ошибок не произойдет</item></selection><p visible-if=\"wrong\">TypeScript выдаст ошибку.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 130493,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Явно добавь тип переменной <code>name</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Maria&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"=\" /></content></option></options></interaction></interactions><output><content><text value=\"Maria\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>:</code>, а затем <code>string</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}