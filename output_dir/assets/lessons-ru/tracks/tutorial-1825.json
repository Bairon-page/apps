{
  "tutorial": {
    "id": 1825,
    "version": 14,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Животное месяца: голосование",
    "descriptionContent": "Используй JavaScript для создания кнопок голосования за и против",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1825-icon-banner.svg",
    "chapters": [
      {
        "id": 12108,
        "title": "Животное месяца: голосование",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 110536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The Zoo нанял тебя для создания страницы, на которой пользователи смогут голосовать за \"Животное месяца\", ставя лайки или дизлайки.\n\nСначала давай ознакомимся с предоставленными файлами: `index.html`, `style.css` и `script.js`.\n\nФайл `index.html` в настоящее время содержит фото панды и соответствующую подпись. Файл `style.css` содержит базовые стили для нашей страницы. Файл `script.js` пока пуст, мы будем писать логику на JavaScript на следующих этапах.\n\nКак уже упоминалось, нам нужно расширить эту страницу, чтобы пользователи могли ставить \"лайки\" или \"дизлайки\" за \"Животное месяца\". Начнем с добавления текстового элемента на экран для отображения текущего количества голосов.\n\n1. Добавь элемент параграфа с `id` `\"votes\"` сразу после подписи ( `\"nom nom nom\"` ). Для демонстрации установи текст этого элемента параграфа на \"3 Votes\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 110542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте теперь создадим кнопки, которые пользователи будут использовать для `Upvote` или `Downvote` на `Животное месяца`. Сначала сосредоточимся на добавлении кнопки `Upvote` на экран, которая в конечном итоге будет увеличивать количество голосов на 1 при каждом нажатии.\n\n1. Создай элемент `button` с `id` равным `\"upvote\"` сразу после вновь созданного элемента `<p>` с \"votes\".\n2. Затем установи текстовое содержимое элемента `button` на `Upvote`.\n3. Наконец, в файле `style.css`, нацелься на кнопку upvote, используя её `id` в наборе правил для соответствующего свойства, чтобы изменить её цвет фона на `green`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an element in CSS by its `id` using `#id`. For example, to access a button element with the `id` of `example`, use `#example`."
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 110543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда у нас есть кнопка для голосования \"за\", давайте займемся кнопкой для голосования \"против\". При нажатии эта кнопка будет уменьшать количество голосов на 1, но мы реализуем эту функциональность позже. Сейчас сосредоточься на добавлении элемента на страницу и правильной настройке предоставленных свойств.\n\n1. Создай элемент кнопки с `id` равным `\"downvote\"` сразу после недавно созданной кнопки для голосования \"за\".\n2. Затем установи текстовое содержимое элемента кнопки на `Downvote`.\n3. Внутри `style.css` нацелься на кнопку для голосования \"против\" с помощью её `id` и установи соответствующее свойство, чтобы изменить её цвет фона на `red`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}",
                  "solvedContent": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}\n\n#downvote {\n background-color: red;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `Upvote` button."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 110544,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда у нас созданы все элементы на экране, давайте начнем добавлять функциональность голосования на JavaScript. Для этого сначала импортируем файл `script.js` внизу файла `index.html`. Мы создадим переменную для хранения количества голосов (для демонстрационных целей начнем с 3) и выведем ее в консоль, чтобы проверить, что наш файл правильно подключен.\n\n1. Импортируй файл `script.js` в элементе `body` файла `index.html`, используя тег `<script>`.\n2. В `script.js` инициализируй переменную `counter` со значением `3`.\n3. Наконец, выведи переменную `counter` в консоль и запусти код, чтобы проверить, что файл `script.js` правильно подключен.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "let counter = 3;\nconsole.log(counter);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change its value whenever `Upvote` or `Downvote` button is clicked."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 110547,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее давай реализуем функции `upvote()` и `downvote()`, которые будут увеличивать и уменьшать количество голосов на 1, соответственно. Сначала займемся функцией `upvote()`: объяви функцию и реализуй тело функции так, чтобы переменная `counter` увеличивалась на 1 при вызове.\n\n1. Сначала удали оператор `console.log`, написанный на предыдущем шаге.\n2. Затем объяви функцию с именем `upvote()`, которая не должна принимать никаких параметров.\n3. Наконец, реализуй тело функции так, чтобы вызов функции увеличивал переменную `counter` на `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\nconsole.log(counter);",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax of a function without parameters looks like this:\n```javascript\nfunction functionName(){\n    //statements\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 110550,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Функция `upvote` увеличивает переменную `counter` на 1, но нам также нужно реализовать функциональность для обновления содержимого страницы. Мы будем нацеливаться на элемент `<p>` с идентификатором `votes`, который мы создали ранее, и установим его текст так, чтобы он отражал обновленную переменную `counter`.\n\n1. Сначала нацелимся на элемент `p` с идентификатором `votes` и выберем правильное свойство содержимого для обновления. Мы хотим обновить текст элемента.\n2. Затем установим свойство содержимого как конкатенацию переменной `counter` и строки `\" Votes\"`. Не забудь про пробел и правильную капитализацию!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to update an `html` element's text content, you can use either the `innerHTML`, `innerText`, or `textContent` content properties. "
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 110551,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай сначала разберемся с функцией `downvote()`. Объяви новую функцию с именем `downvote()` и реализуй ее тело так, чтобы при вызове она уменьшала переменную `counter` на `1`.\n\n1. Сначала объяви функцию с именем `downvote()`, которая не должна принимать никаких параметров.\n2. Затем реализуй тело функции так, чтобы при вызове функции переменная `counter` уменьшалась на `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To decrease a variable by 1, you can use `-` or `--` or `-=`. For example, `a--` or `a-=1` or `a=a-1`."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 110552,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, аналогично функции `upvote()`, нам нужно реализовать функциональность `downvote()` для обновления содержимого страницы. Как и раньше, мы будем нацеливаться на элемент `<p>` с идентификатором `votes` и устанавливать его текст в соответствии с обновленной переменной `counter`.\n\n1. Внутри функции `downvote()` нацелься на элемент `<p>` с идентификатором `votes` и выбери правильное свойство содержимого для обновления.\n2. Затем установи текст элемента как конкатенацию переменной `counter` и строки `\" Votes\"`. Не забудь про пробел!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `upvote()` function."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 110553,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда у нас готова функциональность JavaScript, давай добавим соответствующие вызовы функций для кнопок, чтобы завершить проект. Прикрепи обработчики событий `onclick` к каждой кнопке, чтобы они вызывали функции `upvote()` и `downvote()`. Обязательно протестируй кнопки, чтобы проверить свою работу.\n\n1. Добавь обработчик события `onclick` к кнопке upvote, который вызывает функцию `upvote()`.\n2. Добавь обработчик события `onclick` к кнопке downvote, который вызывает функцию `downvote()`.\n3. Попробуй нажать на кнопки upvote и downvote, чтобы убедиться, что ты правильно реализовал функциональность голосования.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\" onclick=\"upvote()\">Upvote</button>\n    <button id=\"downvote\" onclick=\"downvote()\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can add an onclick listener to any element using the `onclick` attribute. For example, `<button onclick=\"func()\"></button>`"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}