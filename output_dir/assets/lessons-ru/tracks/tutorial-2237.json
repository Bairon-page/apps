{
  "tutorial": {
    "id": 2237,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Циклы 1",
    "descriptionContent": "Циклы 1",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 8246,
        "title": "Самоприсваивание переменных",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Assigning a value",
            "id": 72170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создай переменную с именем `inches` и присвой ей значение `3`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const inches = 3;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72166,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Without changing the first three lines, добавь `3` к значению переменной `points`. Затем выведи переменную `points` в консоль снова.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let points = 50;\npoints = points + 2;\nconsole.log(points);",
                  "solvedContent": "let points = 50;\npoints = points + 2;\nconsole.log(points);\npoints = points + 3;\nconsole.log(points);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Why self-assigning matters",
            "id": 72169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Без изменения первых трех строк, вычти единицу из значения переменной `inventory`. Затем выведи переменную `inventory` в консоль снова.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let inventory = 3;\ninventory = inventory + 80;\nconsole.log(inventory);",
                  "solvedContent": "let inventory = 3;\ninventory = inventory + 80;\nconsole.log(inventory);\ninventory = inventory - 1;\nconsole.log(inventory);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Self-assigning strings",
            "id": 72172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Без изменения первой строки, добавь свое любимое хобби в значение переменной `hobbies`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let hobbies = \"soccer tv\";\nconsole.log(hobbies);",
                  "solvedContent": "let hobbies = \"soccer tv\";\nhobbies = hobbies + \" coding\";\nconsole.log(hobbies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72226,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Without changing the first two lines, вычти `1` из значения переменной `lives`. Затем, выведи переменную `lives` в консоль снова, когда закончишь.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let lives = 3;\nconsole.log(lives);",
                  "solvedContent": "let lives = 3;\nconsole.log(lives);\nlives = lives - 1;\nconsole.log(lives);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Assigning a value",
            "id": 72214,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Присвой строку переменной `cat`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const cat = ",
                  "solvedContent": "const cat = \"Whiskers\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Why self-assigning matters",
            "id": 72227,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Без изменения первых четырех строк, увеличь значение переменной `squatCounter` на единицу. Затем, выведи переменную `squatCounter` в консоль снова.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let squatCounter = 5;\nsquatCounter = squatCounter + 1;\nsquatCounter = squatCounter + 1;\nconsole.log(squatCounter);",
                  "solvedContent": "let squatCounter = 5;\nsquatCounter = squatCounter + 1;\nsquatCounter = squatCounter + 1;\nconsole.log(squatCounter);\nsquatCounter = squatCounter + 1;\nconsole.log(squatCounter);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Self-assigning strings",
            "id": 72228,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Без изменения первой строки, добавь свой любимый язык программирования в значение переменной `languages`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let languages = \"HTML CSS\";\n\nconsole.log(languages);",
                  "solvedContent": "let languages = \"HTML CSS\";\nlanguages = languages + \" JavaScript\";\nconsole.log(languages);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8260,
        "title": "Присваивание с помощью операторов",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: += operator",
            "id": 72315,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь шесть к значению переменной, используя оператор `+=`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let points = 7;\n\nconsole.log(\"Touchdown!\");\nconsole.log(points);",
                  "solvedContent": "let points = 7;\npoints += 6;\nconsole.log(\"Touchdown!\");\nconsole.log(points);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72317,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Используй оператор инкремента, чтобы увеличить значение переменной `pushups` на единицу.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let pushups = 9;\n\nconsole.log(pushups);",
                  "solvedContent": "let pushups = 9;\npushups++;\nconsole.log(pushups);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Decrementing numbers",
            "id": 72320,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Используй оператор декремента, чтобы уменьшить `lives` на единицу.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let lives = 3;\nconsole.log(lives);",
                  "solvedContent": "let lives = 3;\nlives--;\nconsole.log(lives);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: -= operator",
            "id": 72316,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вычти 50 из значения переменной, используя оператор `-=`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let milesLeft = 100;\nconsole.log(milesLeft);",
                  "solvedContent": "let milesLeft = 100;\nmilesLeft -= 50;\nconsole.log(milesLeft);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72376,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Используй оператор инкремента, чтобы увеличить значение переменной `likes` на единицу.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let likes = 21;\nconsole.log(likes);",
                  "solvedContent": "let likes = 21;\nlikes++;\nconsole.log(likes);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: -= operator",
            "id": 72374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Вычти два из значения переменной, используя оператор `-=`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let assignments = 5;\nconsole.log(assignments);",
                  "solvedContent": "let assignments = 5;\nassignments -= 2;\nconsole.log(assignments);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: += operator",
            "id": 72373,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь имя друга в переменную `friends` (после \"Brett\").",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let friends = \"Mutual friends:\";\nfriends += \" Jan,\";\nfriends += \" Brett,\";\nconsole.log(friends);",
                  "solvedContent": "let friends = \"Mutual friends:\";\nfriends += \" Jan,\";\nfriends += \" Brett,\";\nfriends += \" Lorenzo\";\nconsole.log(friends);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Decrementing numbers",
            "id": 72377,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Используй оператор декремента, чтобы уменьшить `credits` на единицу.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let credits = 40;\nconsole.log(credits);",
                  "solvedContent": "let credits = 40;\ncredits--;\nconsole.log(credits);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8308,
        "title": "Повторение кода с помощью циклов While",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Infinite loop",
            "id": 72755,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Удалите бесконечный цикл из кода, изменив условие цикла. Используйте в условии только булево значение.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while (false) {\n console.log(\"Let's watch a movie!\");\n}\nwhile (true) {\n console.log(\"To infinity,\");\n console.log(\"and Beyond!\");\n}",
                  "solvedContent": "while (false) {\n console.log(\"Let's watch a movie!\");\n}\nwhile (false) {\n console.log(\"To infinity,\");\n console.log(\"and Beyond!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Code block",
            "id": 72752,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь `console.log` внутри блока кода цикла `while`. Ты можешь использовать любой корректный синтаксис для параметра `console.log`. Не изменяй ничего другого в коде.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"Now playing: \";\nwhile (false) {}\n\n",
                  "solvedContent": "let message = \"Now playing: \";\nwhile (false) {\n console.log(message + \"Uptown Funk\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: While keyword",
            "id": 72750,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добавь правильное ключевое слово, чтобы создать цикл while.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let phoneOn = true;\n(false) {\n console.log(\"Searching for Mobile Signal\");\n}\nconsole.log(\"Phone powered on:\" + phoneOn);",
                  "solvedContent": "let phoneOn = true;\nwhile (false) {\n console.log(\"Searching for Mobile Signal\");\n}\nconsole.log(\"Phone powered on:\" + phoneOn);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Infinite loop",
            "id": 73083,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Полностью удалите оператор бесконечного цикла while из кода. Оставьте весь остальной код без изменений.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isOn = false;\nwhile (isOn) {\n console.log(\"Take over the world!\");\n}\nwhile (true) {\n console.log(\"Hello, world!\");\n}",
                  "solvedContent": "let isOn = false;\nwhile (isOn) {\n console.log(\"Take over the world!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Code block",
            "id": 73082,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создай цикл `while`, установи его условие на булево значение `false`, и выведи что-нибудь в консоль в блоке кода.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\n",
                  "solvedContent": "while (false) {\n console.log(\"Hello, world!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Condition",
            "id": 72751,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Пропусти блок кода цикла while. Используй только булево значение в условии.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while (true) {\n console.log(\"Find my friends is on\");\n}",
                  "solvedContent": "while (false) {\n console.log(\"Find my friends is on\");\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8379,
        "title": "Остановка While циклов",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Variable in the condition",
            "id": 73392,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Запустите цикл один раз, используя переменную `repeat` внутри условия.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let repeat = true;\nwhile () {\n repeat = false;\n}",
                  "solvedContent": "let repeat = true;\nwhile (repeat) {\n repeat = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Updating the variable",
            "id": 73393,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Внутри блока кода остановите цикл, обновив `autopilot` на `false`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let autopilot = true;\nwhile (autopilot === true) {\n console.log(\"Auto pilot active\");\n}",
                  "solvedContent": "let autopilot = true;\nwhile (autopilot === true) {\n console.log(\"Auto pilot active\");\n autopilot = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Creating the variable",
            "id": 73391,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Не создавая бесконечного цикла, создай переменную с именем `turbulence`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while (turbulence) {\n console.log(\"Fasten your seatbelt!\");\n}",
                  "solvedContent": "let turbulence = false;\nwhile (turbulence) {\n console.log(\"Fasten your seatbelt!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Variable in the condition",
            "id": 73412,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создайте переменную, чтобы пропустить блок кода цикла while.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\nwhile (keepPlaying === true) {\n console.log(\"Now Playing:\");\n console.log(\"Hey Jude\");\n keepPlaying = false;\n}",
                  "solvedContent": "let keepPlaying = false;\nwhile (keepPlaying === true) {\n console.log(\"Now Playing:\");\n console.log(\"Hey Jude\");\n keepPlaying = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Stopping the loop",
            "id": 73396,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "После того как `repeatSong` обновляется до `false`, отобразите что-нибудь в консоли.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let repeatSong = true;\nwhile (repeatSong === true) {\n console.log(\"Now Playing: \");\n console.log(\"Never Gonna Give You Up\");\n repeatSong = false;\n \n}",
                  "solvedContent": "let repeatSong = true;\nwhile (repeatSong === true) {\n console.log(\"Now Playing: \");\n console.log(\"Never Gonna Give You Up\");\n repeatSong = false;\n console.log(\"again\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Updating the variable",
            "id": 73413,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Останови цикл после того, как он выполнит свой блок кода один раз.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let displayAd = true;\nwhile (displayAd === true) {\n console.log(\"Sign up for this new app!\");\n}",
                  "solvedContent": "let displayAd = true;\nwhile (displayAd === true) {\n console.log(\"Sign up for this new app!\");\n displayAd = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Creating the variable",
            "id": 73411,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создай переменную с именем `repeatMessage`, установи её начальное значение как `true`, используй её внутри условия и установи значение `false` внутри блока кода (после вывода сообщения в консоль). Не забудь следить за бесконечными циклами!",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while () {\n console.log(\"Hi, there!\");\n}",
                  "solvedContent": "let repeatMessage = true;\nwhile (repeatMessage === true) {\n console.log(\"Hi, there!\");\n repeatMessage = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Stopping the loop",
            "id": 73416,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создай цикл `while`, который выполнит свой блок кода один раз. Твоя переменная должна называться `isOn`, и твой цикл должен выводить сообщение в консоль.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "let isOn = true;\nwhile (isOn === true) {\n console.log(\"hey!\");\n isOn = false;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}