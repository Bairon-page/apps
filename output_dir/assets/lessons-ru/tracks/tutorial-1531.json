{
  "tutorial": {
    "id": 1531,
    "version": 20,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Клиенты и серверы",
    "descriptionContent": "Клиент-серверное взаимодействие",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10753,
        "title": "Введение",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 98959,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Давайте погрузимся в создание серверов с использованием <strong>серверного программирования</strong>.</p><p>Мы можем разместить сервер для обработки запросов всякий раз, когда пользователи взаимодействуют с нашим приложением, обеспечивая динамическую, работу в реальном времени.</p></body></html>"
          },
          {
            "title": "Intro 3: Server side code",
            "id": 98961,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Это означает написание кода, который выполняется на другом компьютере, функционирующем как <strong>сервер</strong>, с использованием <strong>базы данных</strong> для хранения и извлечения информации.</p><p>Страницы входа, подобные приведенной ниже, почти всегда создаются с помощью серверного кода.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt;&#xA;&lt;html lang=&quot;en&quot;&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=&quot;UTF-8&quot;&gt;&#xA;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#xA;  &lt;title&gt;Login Form&lt;/title&gt;&#xA;  &lt;style&gt;&#xA;    * {&#xA;      margin: 0;&#xA;      padding: 0;&#xA;      box-sizing: border-box;&#xA;    }&#xA;&#xA;    body {&#xA;      font-family: Arial, sans-serif;&#xA;      background-color: #f4f7f6;&#xA;      display: flex;&#xA;      justify-content: center;&#xA;      align-items: center;&#xA;    }&#xA;&#xA;    .login-form {&#xA;      width: 320px;&#xA;      background-color: white;&#xA;      border-radius: 8px;&#xA;      box-shadow: 0 2px 25px rgba(0, 0, 0, 0.1);&#xA;      overflow: hidden;&#xA;    }&#xA;&#xA;    h1 {&#xA;      text-align: center;&#xA;      padding: 20px;&#xA;      font-weight: 400;&#xA;      background-color: #4CAF50;&#xA;      color: white;&#xA;    }&#xA;&#xA;    .content {&#xA;      padding: 30px;&#xA;      text-align: center;&#xA;    }&#xA;&#xA;    .input-field {&#xA;      margin-bottom: 20px;&#xA;    }&#xA;&#xA;    input {&#xA;      width: 100%;&#xA;      padding: 12px;&#xA;      font-size: 16px;&#xA;      border: 1px solid #ddd;&#xA;      border-radius: 4px;&#xA;      outline: none;&#xA;    }&#xA;&#xA;    input:focus {&#xA;      border-color: #4CAF50;&#xA;    }&#xA;&#xA;    .action {&#xA;      display: flex;&#xA;      justify-content: space-between;&#xA;    }&#xA;&#xA;    button {&#xA;      width: 48%;&#xA;      padding: 15px;&#xA;      border: none;&#xA;      background-color: #4CAF50;&#xA;      color: white;&#xA;      font-size: 16px;&#xA;      cursor: pointer;&#xA;      border-radius: 4px;&#xA;      transition: background-color 0.3s ease;&#xA;    }&#xA;&#xA;    button:hover {&#xA;      background-color: #45a049;&#xA;    }&#xA;&#xA;    button:active {&#xA;      background-color: #39943f;&#xA;    }&#xA;&#xA;    button:last-child {&#xA;      background-color: #2196F3;&#xA;    }&#xA;&#xA;    button:last-child:hover {&#xA;      background-color: #1e88e5;&#xA;    }&#xA;&#xA;    button:last-child:active {&#xA;      background-color: #1976d2;&#xA;    }&#xA;  &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;  &lt;div class=&quot;login-form&quot;&gt;&#xA;    &lt;h1&gt;Login&lt;/h1&gt;&#xA;    &lt;div class=&quot;content&quot;&gt;&#xA;      &lt;div class=&quot;input-field&quot;&gt;&#xA;        &lt;input type=&quot;email&quot; placeholder=&quot;Email&quot;&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&quot;input-field&quot;&gt;&#xA;        &lt;input type=&quot;password&quot; placeholder=&quot;Password&quot; autocomplete=&quot;new-password&quot;&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&quot;action&quot;&gt;&#xA;      &lt;button&gt;Register&lt;/button&gt;&#xA;      &lt;button&gt;Sign in&lt;/button&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;\" /></body></html>"
          },
          {
            "title": "Tailored",
            "id": 98962,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Серверный код помогает обеспечить индивидуальный опыт для каждого пользователя.</p><p>Какая ситуация с большей вероятностью потребует индивидуального подхода для пользователя?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Открытие социальной сети и отображение списка друзей пользователя</item><item value=\"2\" correct=\"false\">Отображение адреса штаб-квартиры компании</item></selection><p visible-if=\"wrong\">Открытие социальной сети и отображение списка друзей пользователя.</p></body></html>"
          },
          {
            "title": "Communicating",
            "id": 98964,
            "contentType": "interactive",
            "images": [
              {
                "id": "646a713b-7576-4f44-bf7e-6cf517e597a0"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Чтобы общаться с сервером, клиент (например, браузер или приложение) отправляет запрос, а сервер отвечает ответом.</p><img src=\"646a713b-7576-4f44-bf7e-6cf517e597a0\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Request",
            "id": 98978,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Браузер делает <strong>запрос</strong> к серверу, и сервер отправляет <strong>ответ</strong> обратно. Так работает коммуникация между браузером и сервером.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"Request\" /><text type=\"break\" /><text value=\"┌───────┐       ┌───────┐\" /><text type=\"break\" /><text value=\"│Browser│ ────► │Server │\" /><text type=\"break\" /><text value=\"└───────┘       └───────┘\" /><text type=\"break\" /><text type=\"break\" /><text value=\"Response\" /><text type=\"break\" /><text value=\"┌───────┐       ┌───────┐\" /><text type=\"break\" /><text value=\"│Browser│ ◄──── │Server │\" /><text type=\"break\" /><text value=\"└───────┘       └───────┘\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"42\" /><option startIndex=\"139\" endIndex=\"145\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>Browser</code>, а затем <code>Server</code>.</p></body></html>"
          },
          {
            "title": "Click",
            "id": 98965,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Это взаимодействие обычно происходит по протоколу <em>HTTP</em>, позволяя пользователям взаимодействовать с сервисами в режиме реального времени.</p></body></html>"
          },
          {
            "title": "All websites",
            "id": 99196,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Запрос данных, как в приведенной ниже ссылке, и получение ответа — это общий способ работы веб-сайтов.</p><p>Попробуй. Нажми кнопку <em>Fetch Data</em> ниже.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt;&#xA;&lt;html lang=&quot;en&quot;&gt;&#xA;  &lt;head&gt;&#xA;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#xA;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#xA;    &lt;title&gt;Fetch Server Data&lt;/title&gt;&#xA;    &lt;style&gt;&#xA;      * {&#xA;        margin: 0;&#xA;        padding: 0;&#xA;        box-sizing: border-box;&#xA;      }&#xA;&#xA;      body {&#xA;        font-family: &quot;Roboto&quot;, sans-serif;&#xA;        background-color: #f0f2f5;&#xA;        display: flex;&#xA;        justify-content: center;&#xA;        align-items: center;&#xA;        height: 100vh;&#xA;      }&#xA;&#xA;      .container {&#xA;        background-color: #ffffff;&#xA;        padding: 40px;&#xA;        border-radius: 12px;&#xA;        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);&#xA;        text-align: center;&#xA;        width: 350px;&#xA;      }&#xA;&#xA;      h1 {&#xA;        font-size: 26px;&#xA;        color: #333;&#xA;        margin-bottom: 30px;&#xA;      }&#xA;&#xA;      button {&#xA;        width: 100%;&#xA;        padding: 15px;&#xA;        background-color: #007bff;&#xA;        color: white;&#xA;        border: none;&#xA;        border-radius: 8px;&#xA;        cursor: pointer;&#xA;        font-size: 18px;&#xA;        transition: background-color 0.3s ease;&#xA;      }&#xA;&#xA;      button:hover {&#xA;        background-color: #0056b3;&#xA;      }&#xA;&#xA;      button:active {&#xA;        background-color: #004080;&#xA;      }&#xA;&#xA;      #response {&#xA;        margin-top: 20px;&#xA;        padding: 15px;&#xA;        background-color: #f9fafb;&#xA;        border-radius: 8px;&#xA;        color: #555;&#xA;        display: none;&#xA;        font-size: 16px;&#xA;      }&#xA;&#xA;      .spinner {&#xA;        display: inline-block;&#xA;        width: 24px;&#xA;        height: 24px;&#xA;        border: 3px solid rgba(0, 0, 0, 0.1);&#xA;        border-radius: 50%;&#xA;        border-top-color: #007bff;&#xA;        animation: spin 1s ease infinite;&#xA;        margin-right: 10px;&#xA;      }&#xA;&#xA;      @keyframes spin {&#xA;        to {&#xA;          transform: rotate(360deg);&#xA;        }&#xA;      }&#xA;    &lt;/style&gt;&#xA;  &lt;/head&gt;&#xA;  &lt;body&gt;&#xA;    &lt;div class=&quot;container&quot;&gt;&#xA;      &lt;h1&gt;Fetch Server Data&lt;/h1&gt;&#xA;      &lt;button id=&quot;getDataBtn&quot;&gt;Fetch Data&lt;/button&gt;&#xA;      &lt;div id=&quot;response&quot;&gt;&lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &lt;script&gt;&#xA;      document&#xA;        .getElementById(&quot;getDataBtn&quot;)&#xA;        .addEventListener(&quot;click&quot;, function () {&#xA;          // Display loading spinner and message&#xA;          document.getElementById(&quot;response&quot;).style.display = &quot;block&quot;;&#xA;          document.getElementById(&quot;response&quot;).innerHTML =&#xA;            '&lt;span class=&quot;spinner&quot;&gt;&lt;/span&gt;Fetching data...';&#xA;&#xA;          // Simulated server request&#xA;          setTimeout(function () {&#xA;            const serverResponse = {&#xA;              message: &quot;Server response received successfully!&quot;,&#xA;              status: 200,&#xA;            };&#xA;&#xA;            document.getElementById(&quot;response&quot;).innerHTML =&#xA;              `&lt;strong&gt;Status:&lt;/strong&gt; ${serverResponse.status}&lt;br&gt;&lt;strong&gt;Message:&lt;/strong&gt; ${serverResponse.message}`;&#xA;          }, 2000); // Simulate 2-second delay for the server response&#xA;        });&#xA;    &lt;/script&gt;&#xA;  &lt;/body&gt;&#xA;&lt;/html&gt;&#xA;\" /></body></html>"
          },
          {
            "title": "Question 1",
            "id": 98966,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что может помочь создать серверный код?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Динамический опыт для отдельных пользователей</item><item value=\"2\" correct=\"false\">Стилизованные элементы интерфейса</item></selection><p visible-if=\"wrong\">Динамический опыт для отдельных пользователей.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 98967,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип веб-страницы обычно создается с помощью серверного кода?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Страницы входа с именем пользователя и паролем</item><item value=\"2\" correct=\"false\">Статические домашние страницы</item></selection><p visible-if=\"wrong\">Страницы входа с именем пользователя и паролем.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 98968,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой из этих сценариев потребует создания страницы, адаптированной для каждого отдельного пользователя?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Получение бронирований авиабилетов пользователя</item><item value=\"2\" correct=\"false\">Отображение контактной информации авиакомпании</item></selection><p visible-if=\"wrong\">Получение бронирований авиабилетов пользователя.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 98969,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой из этих протоколов используют веб-браузеры для общения с веб-серверами?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">HTTP</item><item value=\"2\" correct=\"false\">OSI</item></selection><p visible-if=\"wrong\">Обязательно выбери HTTP.</p></body></html>"
          }
        ]
      },
      {
        "id": 10751,
        "title": "Задачи Frontend и Backend",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 98957,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В начале может быть трудно понять разницу между кодом на стороне клиента и кодом на стороне сервера.</p></body></html>"
          },
          {
            "title": "Client-side",
            "id": 99156,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Код, выполняющийся в браузере, называется <strong>клиентской стороной</strong> или <strong>фронтендом</strong>. Этот код обычно отвечает за то, как вещи отображаются в браузере.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt;&#xA;&lt;html lang=&quot;en&quot;&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=&quot;UTF-8&quot;&gt;&#xA;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#xA;  &lt;title&gt;Blog&lt;/title&gt;&#xA;  &lt;style&gt;&#xA;    .blogPost {&#xA;      background-color: snow;&#xA;      padding: 10px;&#xA;      margin: 10px;&#xA;    }&#xA;&#xA;    .featuredPost {&#xA;      border: 3px solid gold;&#xA;    }&#xA;&#xA;    .blogTitle {&#xA;      font-family: 'Arial', sans-serif;&#xA;      font-size: 25px;&#xA;    }&#xA;&#xA;    .featuredTitle {&#xA;      color: goldenrod;&#xA;    }&#xA;  &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;  &lt;h2&gt;Blog&lt;/h2&gt;&#xA;  &#xA;  &lt;div class=&quot;blogPost featuredPost&quot;&gt;&#xA;    &lt;h3 class=&quot;blogTitle featuredTitle&quot;&gt;Artemis III Moon Landing&lt;/h3&gt;&#xA;    &lt;p&gt;NASA's Artemis III mission marks humanity's return to the Moon, scheduled for 2024...&lt;/p&gt;&#xA;    &lt;button&gt;Read More&lt;/button&gt;&#xA;  &lt;/div&gt;&#xA;  &#xA;  &lt;div class=&quot;blogPost&quot;&gt;&#xA;    &lt;h3 class=&quot;blogTitle&quot;&gt;AI in Everyday Life&lt;/h3&gt;&#xA;    &lt;p&gt;The rapid advancements in artificial intelligence are transforming industries in 2024...&lt;/p&gt;&#xA;    &lt;button&gt;Read More&lt;/button&gt;&#xA;  &lt;/div&gt;&#xA;  &#xA;  &lt;div class=&quot;blogPost&quot;&gt;&#xA;    &lt;h3 class=&quot;blogTitle&quot;&gt;2024 Olympics in Paris&lt;/h3&gt;&#xA;    &lt;p&gt;The 2024 Summer Olympics in Paris promise to be an exciting global event...&lt;/p&gt;&#xA;    &lt;button&gt;Read More&lt;/button&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;\" /></body></html>"
          },
          {
            "title": "Languages",
            "id": 99157,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Он также обрабатывает интерактивность на странице, например, скрытие или отображение элемента. Код на стороне клиента пишется на HTML, CSS и Javascript.</p><p>Когда ты нажимаешь <em>Add to Cart</em>, браузер на стороне клиента сделает все за тебя.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt;&#xA;&lt;html lang=&quot;en&quot;&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=&quot;UTF-8&quot;&gt;&#xA;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#xA;  &lt;title&gt;Online Store&lt;/title&gt;&#xA;  &lt;style&gt;&#xA;    body {&#xA;      color: midnightblue;&#xA;      font-family: 'Helvetica Neue', sans-serif;&#xA;    }&#xA;&#xA;    .product {&#xA;      display: inline-block;&#xA;      margin: 5px;&#xA;    }&#xA;&#xA;    #basketImage {&#xA;      position: absolute;&#xA;      right: 16px;&#xA;      top: 16px;&#xA;      cursor: pointer;&#xA;    }&#xA;&#xA;    #itemCounter {&#xA;      position: absolute;&#xA;      right: 56px;&#xA;      top: 0;&#xA;    }&#xA;&#xA;    #orderTotal {&#xA;      margin-right: 16px;&#xA;      text-align: right;&#xA;    }&#xA;  &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;  &lt;h1&gt;Online Store&lt;/h1&gt;&#xA;  &lt;img id=&quot;basketImage&quot; src=&quot;https://mimo.app/i/cart.png&quot; onclick=&quot;clickCart()&quot;&gt;&#xA;  &lt;h2 id=&quot;itemCounter&quot;&gt;0&lt;/h2&gt;&#xA;  &lt;p id=&quot;orderTotal&quot;&gt;&lt;/p&gt;&#xA;&#xA;  &lt;div class=&quot;product&quot;&gt;&#xA;    &lt;img src=&quot;https://mimo.app/i/backpack.png&quot; alt=&quot;Backpack&quot;&gt;&#xA;    &lt;h3&gt;Backpack&lt;/h3&gt;&#xA;    &lt;button onclick=&quot;addToCart(backpack)&quot;&gt;Add to Cart&lt;/button&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&quot;product&quot;&gt;&#xA;    &lt;img src=&quot;https://mimo.app/i/camera.png&quot; alt=&quot;Camera&quot;&gt;&#xA;    &lt;h3&gt;Camera&lt;/h3&gt;&#xA;    &lt;button onclick=&quot;addToCart(camera)&quot;&gt;Add to Cart&lt;/button&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;script&gt;&#xA;    const cartItems = [];&#xA;    let isTotalHidden = true;&#xA;&#xA;    const backpack = {&#xA;      name: &quot;Backpack&quot;,&#xA;      price: 400&#xA;    };&#xA;&#xA;    const camera = {&#xA;      name: &quot;Camera&quot;,&#xA;      price: 300&#xA;    };&#xA;&#xA;    function addToCart(item) {&#xA;      cartItems.push(item);&#xA;      document.getElementById(&quot;itemCounter&quot;).innerHTML = cartItems.length;&#xA;      showTotal();&#xA;    }&#xA;&#xA;    function clickCart() {&#xA;      isTotalHidden = !isTotalHidden;&#xA;      showTotal();&#xA;    }&#xA;&#xA;    function showTotal() {&#xA;      let orderTotal = document.getElementById(&quot;orderTotal&quot;);&#xA;      orderTotal.innerHTML = &quot;&quot;;&#xA;      &#xA;      if (!isTotalHidden) {&#xA;        let total = 0;&#xA;        for (let i = 0; i &lt; cartItems.length; i++) {&#xA;          total += cartItems[i].price;&#xA;        }&#xA;        orderTotal.innerHTML = &quot;Total: $&quot; + total;&#xA;      }&#xA;    }&#xA;  &lt;/script&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;\" /></body></html>"
          },
          {
            "title": "Server side",
            "id": 99158,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Серверный код обрабатывает детали того, какой контент отправляется в браузер. Вот как это выглядит.</p><p>Этот код возвращает <code>\"Hello, world!\"</code>, когда вызывается endpoint <code>/hello</code>, например, <code>http://my-server.com/hello</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/hello&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"59\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>\"Hello, world!\"</code>.</p></body></html>"
          },
          {
            "title": "Languages",
            "id": 99159,
            "contentType": "interactive",
            "images": [
              {
                "id": "536c125d-d8e5-42f9-887d-96a6b702aaad"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вы можете получить доступ к серверу через обычный браузер или специальные инструменты API. Сервер обычно отвечает с помощью HTML или JSON.</p><img src=\"536c125d-d8e5-42f9-887d-96a6b702aaad\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Languages",
            "id": 99160,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>JavaScript — это универсальный язык. Мы можем использовать его для написания как frontend, так и backend кода. В дальнейшем мы будем использовать его для создания серверов.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 99161,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что обычно обрабатывает код на стороне клиента?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Как вещи отображаются в браузере</item><item value=\"2\" correct=\"false\">Какая информация отправляется в браузер</item></selection><p visible-if=\"wrong\">Как вещи отображаются в браузере.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 99162,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какие языки мы обычно используем на стороне клиента?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">HTML, CSS и Javascript</item><item value=\"2\" correct=\"false\">Python и SQL</item></selection><p visible-if=\"wrong\">HTML, CSS и Javascript.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 99163,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой язык мы можем использовать как для frontend, так и для backend кода?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Javascript</item><item value=\"2\" correct=\"false\">HTML</item></selection><p visible-if=\"wrong\">Обязательно выбери Javascript.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 99654,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что из этого является клиентской активностью?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Показ или скрытие изображения по клику</item><item value=\"2\" correct=\"false\">Получение баланса банка с сервера</item></selection><p visible-if=\"wrong\">Показ или скрытие изображения по клику.</p></body></html>"
          }
        ]
      },
      {
        "id": 10752,
        "title": "Статический и динамический",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 98958,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Веб-сайты, которые всегда показывают одни и те же данные, называются <strong>статическими веб-сайтами</strong>. Они <em>не</em> используют сервер для отображения динамически генерируемого контента.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!DOCTYPE html&gt;&#xA;&lt;body&gt;&#xA; &lt;h2&gt;About us&lt;/h2&gt;&#xA; &lt;p&gt;We're a family business specializing in giving you the most authentic neapolitan pizza experience!&lt;/p&gt;&#xA;&lt;/body&gt;\" /></body></html>"
          },
          {
            "title": "Static",
            "id": 99069,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Статическая веб-страница, предоставляющая жестко закодированный HTML, может быть страницей <code>About</code> компании. Информация не меняется, поэтому динамического контента нет.</p><p>Каким может быть другой пример статического веб-сайта?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Страница с рецептом пиццы в блоге</item><item value=\"2\" correct=\"false\">Объявления о вакансиях за последние 24 часа</item></selection><p visible-if=\"wrong\">Страница с рецептом пиццы в блоге.</p></body></html>"
          },
          {
            "title": "Dynamic web pages ",
            "id": 99070,
            "contentType": "interactive",
            "images": [
              {
                "id": "781664bc-8a39-449a-a3f0-50800f73bcd2"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Динамические веб-сайты генерируют часть своего контента динамически, запрашивая данные с сервера и отображая ответ.</p><img src=\"781664bc-8a39-449a-a3f0-50800f73bcd2\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Why",
            "id": 99071,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Клиенты запрашивают контент, хранящийся в базах данных серверов. Затем клиенты обновляют отображаемый ими контент.</p></body></html>"
          },
          {
            "title": "Products",
            "id": 102975,
            "contentType": "interactive",
            "images": [
              {
                "id": "51da13d7-f22c-42cc-960f-06adcf691cd9"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Использование базы данных и серверного кода позволяет нам создать единый шаблон макета, который динамически отображает различное содержимое.</p><p>Макет профиля на сайте социальной сети остается неизменным, но содержимое динамически изменяется в зависимости от данных пользователя.</p><img src=\"51da13d7-f22c-42cc-960f-06adcf691cd9\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "How",
            "id": 99074,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Огромное преимущество использования сервера заключается в том, что он позволяет отображать динамическое содержимое на основе данных или потребностей пользователя.</p><p>Подумай о том, как видеоплатформы показывают разные видео на основе предпочтений пользователя, создавая тем самым высоко персонализированный опыт.</p><code version=\"2\" codelang=\"none\" name=\"Code Editor\" visible-if=\"always\"><content><text value=\"https://my-server.com/video-recommendations\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"43\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>/video-recommendations</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 99140,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что верно о статических веб-сайтах?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Они не генерируют динамический контент на сервере</item><item value=\"2\" correct=\"false\">Они возвращают другую HTML-страницу для каждого запроса</item></selection><p visible-if=\"wrong\">Они не генерируют динамический контент на сервере.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 99141,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что происходит во время запроса к динамическому веб-сайту?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Код сервера используется для генерации динамического ответа</item><item value=\"2\" correct=\"false\">Одна и та же HTML-страница возвращается каждый раз</item></selection><p visible-if=\"wrong\">Код сервера используется для генерации динамического ответа.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 99142,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Почему мы создаем динамические веб-сайты?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Для предоставления персонализированных впечатлений</item><item value=\"2\" correct=\"false\">Чтобы увеличить сложность кода</item></selection><p visible-if=\"wrong\">Для предоставления персонализированных впечатлений.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 99143,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как мы обычно называем комбинацию использования базы данных и кода на сервере?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Бэкенд или серверное программирование</item><item value=\"2\" correct=\"false\">Frontend кодирование</item></selection><p visible-if=\"wrong\">Бэкенд или серверное программирование.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 99145,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Веб-страница показывает следующие три поезда в соседний город. Что может понадобиться для отображения этой информации?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Серверный код, который извлекает расписание поездов из базы данных</item><item value=\"2\" correct=\"false\">Жестко закодированные HTML файлы для каждого возможного расписания поездов</item></selection><p visible-if=\"wrong\">Серверный код, который извлекает расписание поездов из базы данных.</p></body></html>"
          }
        ]
      }
    ]
  }
}