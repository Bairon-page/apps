{
  "tutorial": {
    "id": 1914,
    "version": 11,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Одностраничное приложение",
    "descriptionContent": "Используй React для создания базового одностраничного веб-сайта",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1914-icon-banner.svg",
    "chapters": [
      {
        "id": 12483,
        "title": "Одностраничное приложение",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1 - Preparation",
            "id": 114677,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "В этом проекте мы будем работать над сайтом **Camera Tips**, который состоит из четырех веб-страниц: `Home`, `ShutterSpeed`, `Aperture` и `ISO`. Эти страницы представлены как функциональные компоненты внутри файла `pages.jsx`.\n\nКомпонент `App` внутри `index.jsx` является родительским компонентом. Все четыре веб-страницы будут отображаться внутри `index.jsx`. Сейчас нам нужно импортировать четыре веб-страницы в `index.jsx`.\n\n1. `import` четыре компонента из `pages.jsx` в `index.jsx`.\n2. Пока добавьте только компонент `<Home />` под элементом заголовка `<h1>` внутри `App`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\n\nconst App = () => {\n  return (\n    <div style={wrapperStyle.wrapper}>\n      <h1>Camera Tips</h1>\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\n\nconst App = () => {\n  return (\n    <div style={wrapperStyle.wrapper}>\n      <h1>Camera Tips</h1>\n      <Home />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2 - import `react-router-dom`",
            "id": 114678,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Создание SPA с React легко осуществить с помощью `react-router-dom`, пакета NPM. `react-router-dom` рендерит JSX на основе предоставленного URL, имитируя обычные сайты и веб-страницы. Однако `react-router-dom` не требует обновления страницы, что экономит память и снижает интернет-трафик.\n\nНам нужно импортировать `react-router-dom` в наш проект, аналогично `React` и `ReactDOM`. В частности, необходимы три компонента из `react-router-dom`: `BrowserRouter`, `Routes` и `Route`.\n\n1. Из `react-router-dom` импортируйте следующие компоненты: `BrowserRouter`, `Routes` и `Route`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\n\nconst App = () => {\n  return (\n    <div style={wrapperStyle.wrapper}>\n      <h1>Camera Tips</h1>\n      <Home />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div style={wrapperStyle.wrapper}>\n      <h1>Camera Tips</h1>\n      <Home />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3 - BrowserRouter, Routes, Route",
            "id": 114681,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "С импортированным `react-dom-router`, следующим шагом будет добавление необходимых компонентов из `react-router-dom` в `App`.\n\n1. В `App` оберни весь существующий JSX в новый компонент-обертку `<BrowserRouter>`.\n2. Под заголовком `<h1>` оберни компонент `<Home />` в новый компонент-обертку `<Routes>`.\n3. Замени `<Home />` следующим кодом:\n```jsx\n<Route exact path=\"/\" element={ <Home /> } />\n```\n\n_Изменения могут быть неочевидны, когда мы завершим эти шаги. Однако, если мы все еще видим контент из `<Home />` после этих шагов, значит, мы на правильном пути._",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div style={wrapperStyle.wrapper}>\n      <h1>Camera Tips</h1>\n      <Home />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4 - <Route />",
            "id": 114682,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "В `react-router-dom` мы хотим контролировать, какой JSX отображается в зависимости от URL-адреса веб-страницы. Каждый возможный путь URL записывается как `<Route>`, с атрибутами `path` и `element`.\n\nАтрибуты `path` и `element` работают вместе, указывая приложению, что нужно отобразить. Если текущий URL выбранных веб-страниц совпадает с `path`, то JSX, предоставленный в `element`, будет отображен.\n\nДавайте добавим еще один путь, который `react-dom-router` должен будет отслеживать: `/aperture`.\n\n1. В компоненте `<Routes>` добавьте новый компонент `<Route>` выше существующего маршрута `Home` со следующими атрибутами и значениями:\n    - `exact`\n    - `path=\"/aperture\"`\n    - `element={ <Aperture /> }`\n\n2. Чтобы проверить, внесли ли мы соответствующие изменения, скопируйте и вставьте URL из окна предварительного просмотра в новую вкладку вашего браузера. Затем выполните следующее:\n    - Убедитесь, что в URL нет ничего после `el.mimo.run`. Подтвердите, что страница `<Home />` отображается.\n    - Добавьте `/aperture` в конец URL и загрузите страницу. Подтвердите, что теперь страница показывает страницу `<Aperture/>`. Проверьте подсказку для получения дополнительной помощи о том, как это проверить.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5 - What's <Routes />?",
            "id": 114683,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "`<Routes>` рендерит только один из всех компонентов `<Route>` внутри него. Порядок компонентов `<Route>` внутри `<Routes>` имеет значение: первый `<Route>`, который соответствует текущему URL, будет отрендерен, а все остальные компоненты `<Route>` будут проигнорированы.\n\n1. В компоненте `<Routes>`, добавь новый компонент `<Route>` между маршрутами \"Home\" и \"Aperture\" со следующими атрибутами: `exact`, путь `path=\"/shutterspeed\"` и элемент `element={ <ShutterSpeed /> }`.\n2. Чтобы проверить свои изменения, скопируй и вставь URL из окна предварительного просмотра в **новую вкладку в браузере**. Затем сделай следующее:\n  - Убедись, что в URL нет ничего после `el.mimo.run`. Подтверди, что страница `<Home />` отображается.\n  - Добавь `/shutterspeed` в конец URL и загрузи страницу. Подтверди, что теперь страница показывает страницу `<Shutterspeed/>`.\n  - Попробуй любой другой конец URL. Подтверди, что страница пуста.\nПроверь блок подсказок для дальнейшей помощи по этой проверке.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6 - Final <Route />",
            "id": 114684,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "До сих пор у нас есть три компонента `<Route>`. Нам нужно добавить последнюю страницу: `/iso`.\n\n1. В компоненте `<Routes>`, добавь новый компонент `<Route>` между маршрутами `Shutter Speed` и `Home` со следующими атрибутами:\n    * `exact`\n    * `path=\"/iso\"`\n    * `element={ <ISO /> }`",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/iso\" element={<ISO />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7 - Import Navigation",
            "id": 114685,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Менять страницу, напрямую манипулируя URL, утомительно. Нам нужна навигационная панель, чтобы выбирать, на какую страницу мы хотим перейти. У нас уже есть компонент `Navigation` с кнопками навигации, так что давайте импортируем и добавим его в `App`. В следующем уроке мы сделаем так, чтобы кнопки действительно работали.\n\n1. Импортируй компонент `Navigation` из `./navigation.jsx`.\n2. Добавь `<Navigation />` выше заголовка `<h1>`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/iso\" element={<ISO />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport Navigation from \"./navigation.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <Navigation />\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/iso\" element={<ISO />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;"
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": null
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8: Adding Nav Capabilities",
            "id": 114687,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Сейчас нажатие на кнопки `<Navigation>` не имеет никакого эффекта. Это потому, что нам нужно изменить кнопки, чтобы они работали с `react-router-dom`.\n\nНа обычной веб-странице мы бы использовали тег `<a href=\"\">` для создания гиперссылок и элементов навигации.\n\nПри использовании `react-router-dom` мы используем компонент `Link` вместо тегов `<a>`, так как теги `<a>` перезагружают страницу, а компоненты `Link` — нет.\n\nПервый шаг — импортировать другой компонент из `react-router-dom`.\n\n1. Внутри `navigation.jsx` импортируй `Link` из `react-router-dom`.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport Navigation from \"./navigation.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <Navigation />\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/iso\" element={<ISO />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;"
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 9: One Link",
            "id": 114688,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "С импортированным компонентом `Link` мы теперь можем добавить функциональность в навигационную панель нашего SPA. Пока давайте добавим только один `Link` и посмотрим, работает ли он.\n\n1. Оберни кнопку `Aperture` новым компонентом `<Link>`.\n2. Добавь атрибут `to` к `<Link>` и установи значение `to` в `\"/aperture\"`, чтобы при нажатии на кнопку происходил переход к `\"/aperture\"`.\n3. Загрузите страницу и нажмите на кнопку \"Aperture\" в предварительном просмотре, вы должны увидеть, как содержимое страницы изменится на компонент `<Aperture/>`.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport Navigation from \"./navigation.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <Navigation />\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/iso\" element={<ISO />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { navStyle } from \"./styles\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <button style={navStyle.navLink}>Aperture</button>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { navStyle } from \"./styles\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <Link to=\"/aperture\">\n        <button style={navStyle.navLink}>Aperture</button>\n      </Link>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;"
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 10: Add all Links",
            "id": 114689,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда один `<Link>` работает, мы можем добавить компонент `<Link>` к остальным трем кнопкам внутри `Navigation`.\n\n1. Для каждой из оставшихся кнопок оберните их новым компонентом `<Link>` и установите их атрибут `to` на соответствующий URL:\n\n    - `Home` должен ссылаться на `/`.\n    - `Shutter Speed` должен ссылаться на `/shutterspeed`.\n    - `ISO` должен ссылаться на `/iso`.\n\n2. Запустите код, а затем нажмите на каждую из кнопок в навигационной панели. Вы должны увидеть, как страницы меняются, как если бы вы переходили между разными веб-страницами.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #fefef1;\n      }\n      \n      a {\n        text-decoration: underline;\n        color: blue;\n      }\n      \n      a:hover {\n        cursor: pointer;\n      }\n    </style>\n    <script type=\"module\" src=\"./index.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { wrapperStyle } from \"./styles.jsx\";\nimport { Home, Aperture, ShutterSpeed, ISO } from \"./pages.jsx\";\nimport Navigation from \"./navigation.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div style={wrapperStyle.wrapper}>\n        <Navigation />\n        <h1>Camera Tips</h1>\n        <Routes>\n          <Route exact path=\"/aperture\" element={<Aperture />} />\n          <Route exact path=\"/shutterspeed\" element={<ShutterSpeed />} />\n          <Route exact path=\"/iso\" element={<ISO />} />\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "pages.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { pageStyle } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <div>\n      <p>\n        Want a quick guide on how to take good photos? Confused about photo\n        terms? You've come to the right place!\n      </p>\n    </div>\n  );\n};\n\nconst ShutterSpeed = () => {\n  return (\n    <div>\n      <h3>Shutter Speed</h3>\n      <p>\n        <strong>Shutter Speed</strong> is how quickly your camera takes the\n        picture.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Fast Shutter Speed:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>Slow Shutter Speed:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Clearer subjects when they are moving. Darker picture because less\n            light can enter your camera.\n          </div>\n          <div style={pageStyle.column}>\n            Blurrier subjects when they are moving. Brighter pictures because\n            more light can enter your camera.\n          </div>\n        </div>\n      </div>\n      <p>\n        A shutter speed of 1/60 is the lowest speed you can get for a bright\n        photo that isn't noticeably blurry.\n      </p>\n    </div>\n  );\n};\n\nconst Aperture = () => {\n  return (\n    <div>\n      <h3>Aperture</h3>\n      <p>\n        The <strong>Aperture</strong> is the camera lens' opening that allows\n        light in. The measurement of that opening is called the{\" \"}\n        <strong>F-Stop</strong>. The Aperture and F-Stop are inversely\n        proportional.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low F-Stop / High Aperture:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High F-Stop / Low Aperture:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very narrow; your pictures will be brighter\n            and will have foreground and background blur.\n          </div>\n          <div style={pageStyle.column}>\n            Your Depth of Field is very wide; your pictures will be darker but\n            will have less blurred backgrounds and foregrounds.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ISO = () => {\n  return (\n    <div>\n      <h3>ISO</h3>\n      <p>\n        Your camera's <strong>ISO</strong> is a measure of how sensitive your\n        camera's sensors are to light.\n      </p>\n      <p>\n        Increasing your camera's ISO makes your pictures brighter, but it also\n        increases their <strong>noise</strong>, or their grainy-ness. This is\n        why night photos, which usually are taken with high ISO, have black dots\n        when you look closely.\n      </p>\n      <div style={pageStyle.table}>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            <strong>Low ISO:</strong>\n          </div>\n          <div style={pageStyle.column}>\n            <strong>High ISO:</strong>\n          </div>\n        </div>\n        <div style={pageStyle.row}>\n          <div style={pageStyle.column}>\n            Your camera's sensors are not very sensitive, reducing overall\n            brightness. This makes your pictures less noisy though.\n          </div>\n          <div style={pageStyle.column}>\n            Your camera's sensors are very sensitive to light, meaning brighter\n            images. However, this make your pictures more noisy.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Home, Aperture, ShutterSpeed, ISO };",
                  "solvedContent": null
                },
                {
                  "name": "navigation.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <button style={navStyle.navLink}>Home</button>\n      <Link to=\"/aperture\">\n        <button style={navStyle.navLink}>Aperture</button>\n      </Link>\n      <button style={navStyle.navLink}>Shutter Speed</button>\n      <button style={navStyle.navLink}>ISO</button>\n    </nav>\n  );\n};\n\nexport default Navigation;",
                  "solvedContent": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { navStyle } from \"./styles.jsx\";\n\nconst Navigation = (props) => {\n  return (\n    <nav style={navStyle.nav}>\n      <Link to=\"/\">\n        <button style={navStyle.navLink}>Home</button>\n      </Link>\n      <Link to=\"/aperture\">\n        <button style={navStyle.navLink}>Aperture</button>\n      </Link>\n      <Link to=\"/shutterspeed\">\n        <button style={navStyle.navLink}>Shutter Speed</button>\n      </Link>\n      <Link to=\"/iso\">\n        <button style={navStyle.navLink}>ISO</button>\n      </Link>\n    </nav>\n  );\n};\n\nexport default Navigation;"
                },
                {
                  "name": "styles.jsx",
                  "codeLanguage": "jsx",
                  "content": "const wrapperStyle = {\n  wrapper: {\n    width: \"100%\",\n    fontFamily: \"Times New Roman, Verdana, Arial, sans-serif\",\n    fontSize: 16,\n    padding: 16,\n    boxSizing: \"border-box\",\n    textAlign: \"center\",\n  },\n};\n\nconst navStyle = {\n  nav: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"nowrap\",\n  },\n  navLink: {\n    flexBasis: \"100\",\n    flexShrink: \"1\",\n    margin: 2,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    fontSize: 12,\n  },\n};\n\nconst pageStyle = {\n  table: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n  },\n  row: {\n    width: \"100%\",\n    marginBottom: 4,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  column: {\n    flexBasis: \"50%\",\n    flexShrink: 1,\n    flexGrow: 0,\n    marginLeft: 4,\n    marginRight: 4,\n  },\n};\n\nexport { wrapperStyle, navStyle, pageStyle };",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}