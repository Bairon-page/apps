{
  "tutorial": {
    "id": 2646,
    "version": 6,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Случайные числа - Часть 1",
    "descriptionContent": "Создай backend, который поможет, если у тебя нет под рукой монеты или кубика",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2646-icon-banner.svg",
    "chapters": [
      {
        "id": 14609,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129321,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в проект **Случайные числа**. Мы создадим простое серверное приложение, которое генерирует случайные числа.\n\nНачнем с настройки сервера Express.\n\n1. Объяви переменную `express` и подключи модуль `express`.\n2. Объяви переменную `app` и инициализируй ее, вызвав функцию `express`.\n3. Объяви переменную `port` и присвой ей значение `3000`.\n4. Используй функцию `listen` на `app`, чтобы приложение слушало порт, указанный в переменной `port`.\n5. Выведи сообщение в консоль внутри функции обратного вызова `listen`, чтобы мы знали, что наш сервер работает правильно.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});"
                }
              ],
              "hints": [
                {
                  "title": "Give your hint a title",
                  "content": "Give your hint some content"
                }
              ],
              "httpOptions": {
                "method": "GET",
                "path": "/",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #2",
            "id": 129323,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Мы начнем с создания маршрута, который будет симулировать подбрасывание монеты. Мы будем использовать метод `get` объекта `app` для обработки GET-запроса по пути `/coinFlip`.\n\n1. Используй функцию `app.get`, чтобы создать новый endpoint на `/coinFlip`.\n2. Внутри функции обратного вызова (которая принимает параметры `req` и `res`), вычисли случайное число 0 или 1 (орел или решка).\n3. Ответь JSON-объектом, используя метод `json` объекта `res`, где `result` будет `\"Heads\"`, если подбрасывание монеты равно 0, и `\"Tails\"` в противном случае.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/coinFlip",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #3",
            "id": 129324,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай добавим еще один маршрут для броска шестигранного кубика.\n\n1. Аналогично подбрасыванию монеты, создай маршрут `GET` по пути `/diceRoll`.\n2. Обнови расчет случайного числа, чтобы получить результат от 1 до 6 (включительно).\n3. Ответь с помощью JSON, где `result` — это случайно выпавшее число.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/diceRoll",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #4",
            "id": 129325,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, давай создадим маршрут, который будет генерировать случайное число от 1 до 100.\n\n1. Создай еще один маршрут `GET` по пути '/randomNumber'.\n2. Измени расчет случайного числа, чтобы результат был в диапазоне от 1 до 100 (включительно).\n3. Ответь с помощью JSON, где `result` — это случайно сгенерированное число.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({ result: result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/randomNumber",
                "body": null
              }
            }
          }
        ]
      }
    ]
  }
}