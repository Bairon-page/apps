{
  "tutorial": {
    "id": 1977,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Планировщик доставки",
    "descriptionContent": "Создай программу для планирования доставки",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1977-icon-banner.svg",
    "chapters": [
      {
        "id": 12678,
        "title": "Планировщик доставки",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Store day preferences",
            "id": 114891,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Шейла нужно получить посылку, и она хочет убедиться, что она прибудет, когда она будет дома. Давайте напишем программу для планирования доставки, чтобы учесть её предпочтения и убедиться, что она будет дома, когда посылка прибудет!\n\nПрограмма доставки будет учитывать предпочтения Шейлы по дням и времени перед планированием доставки. Начнем с её предпочтений по дням и позволим выбрать два предпочтительных дня.\n\n1. Создайте `const` с именем `firstDay`, чтобы сохранить первый предпочтительный день Шейлы, `\"Monday\"`.\n2. Создайте `const` с именем `secondDay`, чтобы сохранить второй предпочтительный день Шейлы, `\"Friday\"`.\n3. Выведите в консоль сообщение в таком стиле: `\"Available days: Monday and Friday\"`. Используйте конкатенацию строк с константами `firstDay` и `secondDay`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Declare program's day selection",
            "id": 114999,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Компания по доставке работает только один день в неделю. В этой неделе день доставки - пятница. Давайте сохраним это значение.\n1. Создай `const` с именем `deliveryDay` и установи его значение на `\"Friday\"`.\n2. Выведи в консоль `\"Delivery Day: Friday\"`, используя константу `deliveryDay` и конкатенацию строк.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Check Day I",
            "id": 114895,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Пора проверить, соответствует ли день доставки предпочтительному дню доставки Шейлы! У Шейлы есть 2 предпочтительных дня, но давайте начнем с проверки, совпадает ли день доставки с первым днем.\n\n1. Проверь, равен ли `deliveryDay` значению `firstDay`, и установи это сравнение как значение новой переменной `const` с именем `firstDayCheck`.\n2. Выведи в консоль `\"Successful delivery on the first day? \" + firstDayCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can check if strings are equal using `===`."
                }
              ]
            }
          },
          {
            "title": "Check Day II",
            "id": 114903,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Доставка недоступна в первый день! Давайте проверим, совпадает ли день доставки со вторым днем.\n\n1. Проверь, равен ли `deliveryDay` значению `secondDay`, и установи результат этого сравнения как значение новой переменной `const` с именем `secondDayCheck`.\n2. Выведи в консоль `\"Successful delivery on the second day? \" + secondDayCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Check Day III",
            "id": 114904,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте упростим проверку, были ли удовлетворены предпочтения Шейлы по дням, в один шаг, используя логический оператор *OR*.\n\n1. Создайте переменную `const` с именем `dayResult`.\n2. Проверьте, является ли `true` хотя бы одна из переменных `firstDayCheck` или `secondDayCheck`, и сохраните это логическое выражение в переменной `dayResult`.\n3. Выведите в консоль строку `\"Fulfilled Sheila's day preference? \" + dayResult`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Declare Sheila's preferred time",
            "id": 114892,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "День доставки совпадает! Давайте теперь исследуем время доставки. Шейла дома только с 8 до 10 утра. Создайте переменные, чтобы указать предпочтительное время Шейлы.\n\n1. Доставка должна быть после 8 утра, поэтому установите `8` как значение новой переменной `const` с именем `requestAfterTime`.\n2. Доставка должна быть до 10 утра, поэтому установите `10` как значение новой переменной `const` с именем `requestBeforeTime`.\n3. Выведите в консоль `\"Request delivery after \" + requestAfterTime + \" but before \" + requestBeforeTime`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Note that the variables should be numbers and not strings. Eg. `const <variableName> = <number>;`"
                }
              ]
            }
          },
          {
            "title": "Declare program's selection",
            "id": 114893,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Компания доставки имеет временной интервал доставки в 9 утра в следующую пятницу. Давайте добавим эту информацию в наше приложение.\n\n1. Создайте переменную `const` с именем `deliveryTime` и сохраните в ней число `9` в качестве значения.\n2. Выведите в консоль `\"Delivery Time: \" + deliveryTime`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Check Time I",
            "id": 114897,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте проверим, соответствуют ли предпочтения Шейлы доступному времени. Проверьте, происходит ли доставка после 8 утра.\n\n1. Проверьте, что `deliveryTime` равно или позже `requestAfterTime` и установите результат сравнения как значение новой переменной `const` с именем `afterTimeCheck`.\n2. Выведите в консоль `\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can use >= to see if the `deliveryTime` is after or equal to the `requestAfterTime`."
                }
              ]
            }
          },
          {
            "title": "Check Time II",
            "id": 114894,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай проверим, доставлено ли до 10 утра!\n\n1. Проверь, что `deliveryTime` раньше, чем `requestBeforeTime`, и установи результат сравнения как значение новой переменной `const` с именем `beforeTimeCheck`.\n2. Выведи в консоль `\"Delivery is before \" + requestBeforeTime + \"? \" + beforeTimeCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);\r\nconst beforeTimeCheck = deliveryTime <= requestBeforeTime;\r\nconsole.log(\"Delivery is before \" + requestBeforeTime + \"? \" + beforeTimeCheck);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can use <= to see if the `deliveryTime` is before or equal to the `requestBeforeTime`."
                }
              ]
            }
          },
          {
            "title": "Check Time III",
            "id": 114898,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Отлично! Шейла будет дома в это время! Но давай теперь упростим проверку времени с помощью логического оператора AND.\n\n1. Проверь, что `beforeTimeCheck` и `afterTimeCheck` равны `true`, и установи это логическое выражение как значение новой переменной `const` с именем `timeResult`.\n2. Выведи в консоль `\"Fulfilled Sheila's time preference? \" + timeResult`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);\r\nconst beforeTimeCheck = deliveryTime <= requestBeforeTime;\r\nconsole.log(\"Delivery is before \" + requestBeforeTime + \"? \" + beforeTimeCheck);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);\r\nconst beforeTimeCheck = deliveryTime <= requestBeforeTime;\r\nconsole.log(\"Delivery is before \" + requestBeforeTime + \"? \" + beforeTimeCheck);\r\nconst timeResult = beforeTimeCheck && afterTimeCheck;\r\nconsole.log(\"Fulfilled Sheila's time preference? \" + timeResult);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can use the AND operator  `&&`  for the check. It returns `false` if *any* of the conditions are `false`. It returns `true` if *both* of the conditions are `true`."
                }
              ]
            }
          },
          {
            "title": "Check day and time",
            "id": 114896,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, нам нужно проверить, соответствовала ли доставка предпочтениям Шейлы по дню и времени, и вывести результат проверки!\n\n1. Проверь, являются ли оба `timeResult` и `dayResult` значением `true`, и установи это логическое выражение как значение новой переменной `const` с именем `overallCheck`.\n2. Выведи в консоль `\"Program scheduled well? \" + overallCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);\r\nconst beforeTimeCheck = deliveryTime <= requestBeforeTime;\r\nconsole.log(\"Delivery is before \" + requestBeforeTime + \"? \" + beforeTimeCheck);\r\nconst timeResult = beforeTimeCheck && afterTimeCheck;\r\nconsole.log(\"Fulfilled Sheila's time preference? \" + timeResult);",
                  "solvedContent": "const firstDay = \"Monday\";\r\nconst secondDay = \"Friday\";\r\nconsole.log(\"Available days: \" + firstDay + \" and \" + secondDay);\r\nconst deliveryDay = \"Friday\";\r\nconsole.log(\"Delivery Day: \" + deliveryDay);\r\nconst firstDayCheck = deliveryDay === firstDay;\r\nconsole.log(\"Successful delivery on the first day? \" + firstDayCheck);\r\nconst secondDayCheck = deliveryDay === secondDay;\r\nconsole.log(\"Successful delivery on the second day? \" + secondDayCheck);\r\nconst dayResult = firstDayCheck || secondDayCheck;\r\nconsole.log(\"Fulfilled Sheila's day preference? \" + dayResult);\r\nconst requestBeforeTime = 10;\r\nconst requestAfterTime = 8;\r\nconsole.log(\"Request delivery after \" + requestAfterTime + \" but before \" +\r\n  requestBeforeTime);\r\nconst deliveryTime = 9;\r\nconsole.log(\"Delivery Time: \" + deliveryTime);\r\nconst afterTimeCheck = deliveryTime >= requestAfterTime;\r\nconsole.log(\"Delivery is after \" + requestAfterTime + \"? \" + afterTimeCheck);\r\nconst beforeTimeCheck = deliveryTime <= requestBeforeTime;\r\nconsole.log(\"Delivery is before \" + requestBeforeTime + \"? \" + beforeTimeCheck);\r\nconst timeResult = beforeTimeCheck && afterTimeCheck;\r\nconsole.log(\"Fulfilled Sheila's time preference? \" + timeResult);\r\nconst overallCheck = timeResult && dayResult;\r\nconsole.log(\"Program scheduled well? \" + (overallCheck));"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}