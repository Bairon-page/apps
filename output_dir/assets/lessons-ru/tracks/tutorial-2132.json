{
  "tutorial": {
    "id": 2132,
    "version": 9,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Параметры маршрута",
    "descriptionContent": "Узнай, как создавать параметры маршрута с помощью Express JS",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13583,
        "title": "Маршруты и параметры",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro 1",
            "id": 122193,
            "contentType": "interactive",
            "images": [
              {
                "id": "2b3ea393-2db4-4f19-8df3-fb4d9d1d7d75"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В Express мы используем маршруты для обработки входящих запросов. Маршрут — это заданный URL-путь и HTTP-метод.</p><p>Когда запрос сопоставляется с маршрутом, маршрут обрабатывает запрос и отправляется ответ.</p><img src=\"2b3ea393-2db4-4f19-8df3-fb4d9d1d7d75\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Intro II (New)",
            "id": 122384,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В Express путь маршрута может быть строкой, строковым шаблоном или даже регулярным выражением!</p><p>Эта гибкость в пути позволяет нам сопоставлять и обрабатывать широкий спектр запросов.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/movies'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the movies directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/movies/:id'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello from the movies directory for movie ID: \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"10\" endIndex=\"16\" /><option startIndex=\"97\" endIndex=\"103\" /><option startIndex=\"104\" endIndex=\"107\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>movies</code>, затем <code>movies</code>, и наконец <code>:id</code>.</p></body></html>"
          },
          {
            "title": "Accessing Specific Endpoints",
            "id": 122194,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Маршруты могут указывать на директории. Например, путь <code>/</code> направляет пользователей в корневую директорию.</p><p>Давай направим пользователей в каталог <code>/movies</code> во втором маршруте.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/movies'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the movies directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"88\" endIndex=\"89\" /><option startIndex=\"89\" endIndex=\"96\" /><option correct=\"false\"><content><text value=\"books\" /></content></option><option correct=\"false\"><content><text value=\"songs\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>/</code>, а затем <code>movies'</code>.</p></body></html>"
          },
          {
            "title": "Static Routing Limitations ",
            "id": 122195,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что если мы хотим получить доступ к фильму с id <code>35</code>? Мы можем добавить конкретный маршрут GET с путем <code>/movies/35</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/movies'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the movies directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/movies/35'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"'Hello. I am the movie with the id 35 in the movies directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"96\" endIndex=\"106\" /></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>/movies/35</code>.</p></body></html>"
          },
          {
            "title": "Dynamic Path Parameters",
            "id": 122196,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Но что, если у нас много фильмов? Вот тут и приходят на помощь динамические параметры пути в Express.</p><p>Мы добавляем <code>/:</code> и имя параметра к пути. Как здесь с <code>id</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/movies'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the movies directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/movies/:id'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello there. I am a route with a parameter called id!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"103\" endIndex=\"104\" /><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"107\" /><option correct=\"false\"><content><text value=\"year\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>/</code>, затем <code>:</code>, и наконец <code>id</code>.</p></body></html>"
          },
          {
            "title": "req.params",
            "id": 122197,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Помнишь <code>req.params</code> из объекта запроса? С его помощью мы можем получить доступ к значениям параметров, указанным в пути маршрута.</p><p>Здесь, если мы хотим получить значение <code>id</code> фильма, мы пишем <code>req.params.id</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/movies/:id'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`Hello. I am the movie with the id \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\" in the movies directory!`\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"89\" endIndex=\"92\" /><option startIndex=\"92\" endIndex=\"99\" /><option startIndex=\"99\" endIndex=\"102\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, затем <code>.params</code>, и наконец <code>.id</code>.</p></body></html>"
          },
          {
            "title": "Multiple Params ",
            "id": 122198,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем добавить более одного параметра в путь маршрута, например, параметр <code>name</code> для директории <code>movies</code>.</p><p>Здесь запрос с путем <code>/movies/35/Aliens</code> присваивает значение <code>35</code> параметру <code>id</code> и <code>Aliens</code> параметру <code>name</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/movies/:id/:name'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`Hello. I am the movie with the id \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\" \" /><text type=\"break\" /><text value=\"   and the name \" /><text value=\"${req.params.name}\" class=\"subst\" /><text value=\" \" /><text type=\"break\" /><text value=\"   in the movies directory!`\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"108\" /><option startIndex=\"129\" endIndex=\"144\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>req.params.id</code>, а затем <code>req.params.name</code>.</p></body></html>"
          },
          {
            "title": "Destructuring Multiple Params",
            "id": 122206,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы также можем использовать деструктуризацию для доступа к значениям параметров из объекта <code>req.params</code> и сохранения их в переменных.</p><p>Давайте деструктурируем параметры с помощью синтаксиса <code>const { id, name } = req.params</code>, чтобы сохранить их в двух переменных, <code>id</code> и <code>name</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"'/movies/:id/:name'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" { id, name } = req.params;\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`Hello. I am the movie with \" /><text type=\"break\" /><text value=\"  the id \" /><text value=\"${id}\" class=\"subst\" /><text value=\" and the name \" /><text value=\"${name}\" class=\"subst\" /><text value=\" \" /><text type=\"break\" /><text value=\"  in the movies directory!`\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"58\" endIndex=\"62\" /><option startIndex=\"67\" endIndex=\"77\" /><option correct=\"false\"><content><text value=\"res\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>name</code>, а затем <code>req.params</code>.</p></body></html>"
          },
          {
            "title": "Question: Route Paths",
            "id": 122199,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что такое путь маршрута в Express?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Путь маршрута — это строка, строковый шаблон или регулярное выражение, которое соответствует пути, отправленному с HTTP-запросом</item><item value=\"2\" correct=\"false\">Путь маршрута — это значение, которое никогда не может быть изменено динамически</item></selection><p visible-if=\"wrong\">Путь маршрута — это строка, строковый шаблон или регулярное выражение, которое соответствует пути, отправленному с HTTP-запросом.</p></body></html>"
          },
          {
            "title": "Example: Accessing Specific Endpoints",
            "id": 122200,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Настрой маршрут <code>users</code> для GET-запроса.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/users'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the users directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"143\" endIndex=\"146\" /><option startIndex=\"148\" endIndex=\"149\" /><option startIndex=\"149\" endIndex=\"154\" /><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>get</code>, затем <code>/</code>, и наконец <code>users</code>.</p></body></html>"
          },
          {
            "title": "Example: Static Routing Limitations",
            "id": 122201,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Получите доступ к пользователю с именем <code>john</code> из каталога <code>users</code> с использованием фиксированного маршрута.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/users/john'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'You are now on John\\'s profile page!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"149\" endIndex=\"154\" /><option startIndex=\"155\" endIndex=\"159\" /><option correct=\"false\"><content><text value=\"name=john\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>users</code>, а затем <code>john</code>.</p></body></html>"
          },
          {
            "title": "Question: Route Parameters",
            "id": 122202,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой правильный синтаксис для добавления параметра к пути в Express?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Путь, за которым следует <code>/:</code> и имя параметра</item><item value=\"2\" correct=\"false\">Путь, за которым следует имя параметра, <code>=</code> и значение параметра</item></selection><p visible-if=\"wrong\">Путь, за которым следует <code>/:</code> и имя параметра.</p></body></html>"
          },
          {
            "title": "Example: Route Parameters",
            "id": 122203,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Добавь параметр <code>lesson</code> в директорию <code>chapters</code>. Затем добавь параметр <code>id</code> в директорию <code>tracks</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/chapters/:lesson'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"'Hello. I am a specific lesson in the chapters directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/tracks/:id'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello. I am a specific track in the tracks directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"158\" endIndex=\"165\" /><option startIndex=\"273\" endIndex=\"279\" /><option startIndex=\"280\" endIndex=\"283\" /><option correct=\"false\"><content><text value=\"name\" /></content></option><option correct=\"false\"><content><text value=\"/\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>:lesson</code>, затем <code>tracks</code>, и наконец <code>:id</code>.</p></body></html>"
          },
          {
            "title": "Question: req.params",
            "id": 122204,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как мы можем получить доступ к фильму с id <code>125</code> из директории <code>movies</code>, когда путь маршрута <code>/movies/:id</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>localhost:3000/movies/125</code></item><item value=\"2\" correct=\"false\"><code>localhost:3000/movies/id=125</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>localhost:3000/movies/125</code>.</p></body></html>"
          },
          {
            "title": "Example: Multiple Params",
            "id": 122205,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Выведи параметры <code>brand</code> и <code>color</code>, которые специфичны для маршрута <code>phone</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/phone/:brand/:color'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`Phone's brand: \" /><text value=\"${req.params.brand}\" class=\"subst\" /><text value=\" \" /><text type=\"break\" /><text value=\" - Phone's color: \" /><text value=\"${req.params.color}\" class=\"subst\" /><text value=\"`\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"218\" endIndex=\"234\" /><option startIndex=\"257\" endIndex=\"273\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req.params.brand</code>, а затем <code>req.params.color</code>.</p></body></html>"
          },
          {
            "title": "Example: Destructuring Multiple Params",
            "id": 122207,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Помоги деструктурировать параметры <code>color</code> и <code>make</code> в директории <code>cars</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/cars/:make:/color'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" { make, color } = req.params;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Car's make: \" /><text value=\"${make}\" class=\"subst\" /><text value=\" - Car's color: \" /><text value=\"${color}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"210\" endIndex=\"220\" /></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req.params</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}