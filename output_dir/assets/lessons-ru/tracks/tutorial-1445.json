{
  "tutorial": {
    "id": 1445,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Полиморфные объекты",
    "descriptionContent": "Полиморфизм",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10395,
        "title": "Полиморфизм",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 93715,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Методы представляют собой поведения. Например, метод <code>speak()</code> отображает текст в консоли.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /></content><output><content><text value=\"Meow\" /></content></output></code></body></html>"
          },
          {
            "title": "Inheritence",
            "id": 95663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>С помощью наследования мы можем расширить функциональность дочернего класса. Но что, если мы хотим реализовать поведение классов по-разному друг от друга?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"121\" endIndex=\"125\" /><option startIndex=\"126\" endIndex=\"132\" /></options></interaction></interactions><output><content><text value=\"Meow\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>Lion</code>, а затем <code>Feline</code>.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 93714,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Здесь мы видим, что <code>lion</code> мяукает, что неправильно. Мы хотим, чтобы <code>speak()</code> вел себя по-разному в зависимости от его класса. Это называется <strong>полиморфизм</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /><text type=\"break\" /><text value=\"lion = Lion()\" /><text type=\"break\" /><text value=\"lion.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"225\" endIndex=\"229\" /><option startIndex=\"229\" endIndex=\"230\" /><option startIndex=\"230\" endIndex=\"235\" /><option startIndex=\"235\" endIndex=\"236\" /><option startIndex=\"236\" endIndex=\"237\" /></options></interaction></interactions><output><content><text value=\"Meow\" /><text type=\"break\" /><text value=\"Meow\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>lion</code>, затем <code>.</code>, а затем <code>speak</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 95664,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Подкласс может переопределять методы, которые он наследует от своего суперкласса. Мы просто задаем метод с тем же именем в подклассе.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;ROAR!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /><text type=\"break\" /><text value=\"lion = Lion()\" /><text type=\"break\" /><text value=\"lion.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"184\" endIndex=\"187\" /><option startIndex=\"188\" endIndex=\"193\" /><option startIndex=\"193\" endIndex=\"194\" /><option startIndex=\"194\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /></options></interaction></interactions><output><content><text value=\"Meow\" /><text type=\"break\" /><text value=\"ROAR!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>def</code>, затем <code>speak</code>, а затем <code>(</code>, <code>self</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Result",
            "id": 95665,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Полиморфизм гарантирует, что будет выполнен правильный метод в зависимости от класса вызывающего объекта.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;ROAR!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /><text type=\"break\" /><text value=\"lion = Lion()\" /><text type=\"break\" /><text value=\"lion.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"263\" endIndex=\"267\" /><option startIndex=\"267\" endIndex=\"268\" /><option startIndex=\"268\" endIndex=\"273\" /><option startIndex=\"273\" endIndex=\"274\" /><option startIndex=\"274\" endIndex=\"275\" /></options></interaction></interactions><output><content><text value=\"Meow\" /><text type=\"break\" /><text value=\"ROAR!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>lion</code>, затем <code>.</code>, а затем <code>speak</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Overridden example",
            "id": 93716,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Экземпляры <code>Electric</code> унаследуют переопределенный метод из <code>Electric</code>, а не оригинальный из <code>Car</code>. Что выведет <code>tesla.drive()</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Vroom!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Electric\" class=\"title\" /><text value=\"(Car)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Whirr!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"tesla = Electric()\" /><text type=\"break\" /><text value=\"tesla.drive()\" /></content><output><content><text value=\"Whirr!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Вжик!</item><item value=\"2\" correct=\"false\">Вжух!</item></selection><p visible-if=\"wrong\">Обязательно выбери Вжик!.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 93717,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Полиморфизм относится к способности объектов делать что из следующего?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Настроить их реализацию унаследованного поведения</item><item value=\"2\" correct=\"false\">Определение совершенно новых поведений</item></selection><p visible-if=\"wrong\">Настроить их реализацию унаследованного поведения.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 93718,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как подкласс переопределяет унаследованные методы?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Определение унаследованного метода в подклассе и изменение поведения</item><item value=\"2\" correct=\"false\">Подклассы не могут переопределять унаследованные методы</item></selection><p visible-if=\"wrong\">Определение унаследованного метода в подклассе и изменение поведения.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 93719,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как мы можем настроить <code>Cowboy</code>, чтобы он имел ту же функциональность, что и <code>Person</code>, за исключением того, что <code>greet()</code> выводит <code>Howdy!</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hello!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"wave\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Waving&quot;\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Добавь подкласс <code>Person</code> под названием <code>Cowboy</code> и измени его так, чтобы он выводил <code>Howdy!</code> в <code>greet()</code></item><item value=\"2\" correct=\"false\">Замените <code>Hello!</code> на <code>Howdy!</code> внутри <code>Person</code></item></selection><p visible-if=\"wrong\">Добавь подкласс <code>Person</code> под названием <code>Cowboy</code> и измени его так, чтобы он выводил <code>Howdy!</code> в <code>greet()</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 93720,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что отображает <code>professor.greet()</code> в консоли?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hello!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Professor\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Salutations!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"professor = Professor()\" /><text type=\"break\" /><text value=\"professor.greet()\" /></content><output><content><text value=\"Salutations!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Приветствия!</item><item value=\"2\" correct=\"false\">Привет!</item></selection><p visible-if=\"wrong\">Обязательно выбери Приветствия!.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 93722,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Переопредели унаследованный метод так, чтобы <code>duck.speak()</code> отображал <code>Quack</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Chirp&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Duck\" class=\"title\" /><text value=\"(Bird)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Quack&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"duck = Duck()\" /><text type=\"break\" /><text value=\"duck.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"74\" /><option startIndex=\"75\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"85\" /><option startIndex=\"85\" endIndex=\"86\" /><option startIndex=\"98\" endIndex=\"105\" /></options></interaction></interactions><output><content><text value=\"Quack\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>def</code>, затем <code>speak</code>, а затем <code>(</code>, <code>self</code>, <code>)</code>, <code>\"Quack\"</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 93732,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Переопредели метод на уровне подкласса так, чтобы и <code>duck1.speak()</code>, и <code>duck2.speak()</code> отображали <code>Quack</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Chirp&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Duck\" class=\"title\" /><text value=\"(Bird)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Quack&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"duck1 = Duck()\" /><text type=\"break\" /><text value=\"duck2 = Duck()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"duck1.speak()\" /><text type=\"break\" /><text value=\"duck2.speak()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"75\" endIndex=\"86\" /></interactions><output><content><text value=\"Quack\" /><text type=\"break\" /><text value=\"Quack\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>speak(self)</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 93723,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Размести код в правильных методах так, чтобы метод <code>unlock()</code> класса <code>Smartphone</code> выводил <code>Enter thumbprint</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cell\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"unlock\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Enter passcode&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Smartphone\" class=\"title\" /><text value=\"(Cell)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"unlock\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Enter thumbprint&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"smartphone = Smartphone()\" /><text type=\"break\" /><text value=\"smartphone.unlock()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"109\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"133\" /><option startIndex=\"133\" endIndex=\"134\" /><option correct=\"false\"><content><text value=\"print()\" /></content></option></options></interaction></interactions><output><content><text value=\"Enter thumbprint\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>print</code>, затем <code>(</code>, а затем <code>\"Enter thumbprint\"</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 93724,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вызови функцию <code>display</code> на правильной переменной документа, чтобы <code>Rendering Microsoft Word file</code> отобразилось в консоли.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Document\" class=\"title\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"   print(\" /><text value=\"&quot;Rendering file&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"PDF\" class=\"title\" /><text value=\"(Document)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Rendering PDF file&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"MicrosoftWord\" class=\"title\" /><text value=\"(Document)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Rendering Microsoft Word file&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"doc1 = Document() \" /><text type=\"break\" /><text value=\"doc2 = PDF() \" /><text type=\"break\" /><text value=\"doc3 = MicrosoftWord() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"doc3.display()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"307\" endIndex=\"311\" /><option startIndex=\"311\" endIndex=\"312\" /><option startIndex=\"312\" endIndex=\"319\" /><option startIndex=\"319\" endIndex=\"320\" /><option startIndex=\"320\" endIndex=\"321\" /><option correct=\"false\"><content><text value=\"doc1\" /></content></option><option correct=\"false\"><content><text value=\"doc2\" /></content></option></options></interaction></interactions><output><content><text value=\"Rendering Microsoft Word file\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>doc3</code>, затем <code>.</code>, а затем <code>display</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}