{
  "tutorial": {
    "id": 2807,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Классы",
    "descriptionContent": "Узнай о классах в TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14822,
        "title": "Классы",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 130865,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Теперь давайте рассмотрим классы в TypeScript. Аналогично классам в JavaScript, мы определяем их с помощью ключевого слова <code>class</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option correct=\"false\"><content><text value=\"function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>class</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130866,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Для JavaScript нет разницы при добавлении конструктора в класс.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"27\" /><option correct=\"false\"><content><text value=\"initialize\" /></content></option><option correct=\"false\"><content><text value=\"init\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>constructor</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130867,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Когда мы передаем параметры в конструктор, нам нужно указать тип параметра.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"28\" endIndex=\"32\" /><option startIndex=\"34\" endIndex=\"40\" /><option startIndex=\"32\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>name</code>, затем <code>:</code>, и наконец <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130868,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Когда мы определяем параметр класса, мы также хотим указать его тип.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"20\" /><option startIndex=\"20\" endIndex=\"21\" /><option startIndex=\"22\" endIndex=\"28\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>name</code>, затем <code>:</code>, и наконец <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 131065,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Создание экземпляра и использование класса работает так, как ты ожидаешь.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sheila = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Person(\" /><text value=\"&quot;Sheila&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(sheila.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"97\" endIndex=\"100\" /><option startIndex=\"101\" endIndex=\"107\" /><option startIndex=\"131\" endIndex=\"137\" /><option startIndex=\"138\" endIndex=\"142\" /><option correct=\"false\"><content><text value=\"Person\" /></content></option><option correct=\"false\"><content><text value=\"sheila\" /></content></option></options></interaction></interactions><output><content><text value=\"Sheila\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>new</code>, затем <code>Person</code>, а затем <code>sheila</code>, <code>name</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 130852,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В JavaScript все свойства доступны снаружи. Ключевое слово <code>public</code> в TypeScript делает это явным.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Person(\" /><text value=\"&quot;Sheila&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"22\" /><option correct=\"false\"><content><text value=\"access\" /></content></option></options></interaction></interactions><output><content><text value=\"Sheila\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>public</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 130853,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ключевое слово <code>private</code> в TypeScript делает свойство или метод класса недоступным из-за пределов этого класса.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"private\" class=\"keyword\" /><text value=\" id: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"id: \" /><text value=\"number\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".id = id;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Employee(\" /><text value=\"123\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.id); \" /><text value=\"// Error\" class=\"comment\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"25\" /></options></interaction></interactions><output><content><text value=\"error TS2341: Property 'id' is private and only accessible within class 'Employee'.\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>private</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 131291,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ключевое слово <code>protected</code> в TypeScript предотвращает доступ к свойству или методу класса за пределами этого класса и его подклассов.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"protected\" class=\"keyword\" /><text value=\" department: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"department: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".department = department;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Manager \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" printDepartment() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"this\" class=\"keyword\" /><text value=\".department);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" manager = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Manager(\" /><text value=\"&quot;Sales&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(manager.printDepartment());\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"27\" /></options></interaction></interactions><output><content><text value=\"Sales\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>protected</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 131064,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Используя модификаторы доступа, свойства класса определяются и инициализируются в параметрах конструктора без объявления свойств.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"public\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sheila = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Person(\" /><text value=\"&quot;Sheila&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(sheila.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"28\" endIndex=\"34\" /><option startIndex=\"35\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"41\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"Sheila\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>public</code>, затем <code>name</code>, а затем <code>:</code>, <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В чем разница между <code>public</code> и <code>private</code> в TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Публичные члены доступны везде, тогда как приватные члены доступны только внутри их содержащего класса</item><item value=\"2\" correct=\"false\">Публичные члены недоступны нигде, а приватные члены доступны везде</item></selection><p visible-if=\"wrong\">Публичные члены доступны везде, тогда как приватные члены доступны только внутри их содержащего класса.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 131146,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что делает модификатор доступа <code>protected</code> в TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Защищенные члены доступны внутри их содержащего класса и в подклассах</item><item value=\"2\" correct=\"false\">Защищенные члены доступны везде, аналогично публичным членам</item></selection><p visible-if=\"wrong\">Защищенные члены доступны внутри их содержащего класса и в подклассах.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130856,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Каков вывод <code>console.log(employee.name)</code>?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Employee(\" /><text value=\"&quot;Marc&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.name);\" /></content><output><content><text value=\"Marc\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">\"Марк\"</item><item value=\"2\" correct=\"false\">неопределено</item></selection><p visible-if=\"wrong\">Обязательно выбери \"Марк\".</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130857,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Является ли это допустимым кодом TypeScript?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"private\" class=\"keyword\" /><text value=\" id: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"id: \" /><text value=\"number\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".id = id;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Employee(\" /><text value=\"123\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.id);\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Нет, потому что свойство <code>id</code> является приватным и доступно только внутри класса <code>Employee</code></item><item value=\"2\" correct=\"false\">Да, так как <code>id</code> можно получить через <code>employee.id</code></item></selection><p visible-if=\"wrong\">Нет, потому что свойство <code>id</code> является приватным и доступно только внутри класса <code>Employee</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Установи модификатор доступа свойства <code>codeName</code> как private, а для <code>realName</code> как public.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" SecretAgent {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"private\" class=\"keyword\" /><text value=\" codeName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"public\" class=\"keyword\" /><text value=\" realName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"codeName: \" /><text value=\"string\" class=\"built_in\" /><text value=\", realName: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"this\" class=\"keyword\" /><text value=\".codeName = codeName;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"this\" class=\"keyword\" /><text value=\".realName = realName;\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"public\" class=\"keyword\" /><text value=\" introduce(): \" /><text value=\"string\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"`Hi, I am \" /><text value=\"${this.realName}\" class=\"subst\" /><text value=\", but my code name is classified.`\" /><text value=\";\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" agent = \" /><text value=\"new\" class=\"keyword\" /><text value=\" SecretAgent(\" /><text value=\"&quot;007&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;James Bond&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(agent.introduce());\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"29\" /><option startIndex=\"50\" endIndex=\"56\" /><option correct=\"false\"><content><text value=\"private\" /></content></option><option correct=\"false\"><content><text value=\"public\" /></content></option></options></interaction></interactions><output><content><text value=\"Hi, I am James Bond, but my code name is classified.\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>private</code>, а затем <code>public</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 14835,
        "title": "Абстрактные классы и методы",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 130950,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Абстрактный класс — это класс, который не может быть напрямую инстанцирован. Мы используем их как базовые классы, от которых могут быть унаследованы другие классы.</p><p>Мы можем использовать абстрактные классы для определения общей структуры, но не хотим, чтобы они использовались напрямую.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"8\" /><option startIndex=\"9\" endIndex=\"14\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>abstract</code>, а затем <code>class</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130951,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>После объявления ты не можешь создать экземпляр абстрактного класса. Давай попробуем!</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" x = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Animal(); \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"38\" /><option startIndex=\"47\" endIndex=\"48\" /><option startIndex=\"39\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"Error: Cannot create an instance of an abstract class.\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>new</code>, затем <code>Animal()</code>, и наконец <code>;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130953,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Внутри класса мы также можем создать абстрактный метод.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"optional\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>abstract</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130954,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Чтобы использовать абстрактный класс и его абстрактные методы, нам нужно расширить абстрактный класс, используя ключевое слово <code>extends</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"66\" endIndex=\"73\" /><option correct=\"false\"><content><text value=\"inherits\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130955,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>После расширения, нам нужно предоставить реализацию для абстрактного метода внутри дочернего класса.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"34\" endIndex=\"43\" /><option startIndex=\"84\" endIndex=\"93\" /><option correct=\"false\"><content><text value=\"function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>makeSound</code>, а затем <code>makeSound</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130956,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Теперь мы можем создать экземпляр этого класса и вызвать абстрактный метод.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" doggy = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog();\" /><text type=\"break\" /><text value=\"doggy.makeSound();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"146\" endIndex=\"149\" /><option startIndex=\"159\" endIndex=\"168\" /><option correct=\"false\"><content><text value=\"Animal\" /></content></option></options></interaction></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>Dog</code>, а затем <code>makeSound</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 131070,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Наконец, имеет смысл явно указать, что наш абстрактный метод <code>makeSound</code> должен быть общедоступным.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" nelly = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog();\" /><text type=\"break\" /><text value=\"nelly.makeSound();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"31\" /><option correct=\"false\"><content><text value=\"private\" /></content></option></options></interaction></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>public</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 131069,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Конечно, абстрактный класс также может определять неабстрактные методы, которые можно вызывать напрямую.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" eat(): \" /><text value=\"void\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Animal is eating.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" nelly = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog();\" /><text type=\"break\" /><text value=\"nelly.makeSound();\" /><text type=\"break\" /><text value=\"nelly.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"62\" endIndex=\"80\" /><option startIndex=\"247\" endIndex=\"252\" /></options></interaction></interactions><output><content><text value=\"Woof!\" /><text type=\"break\" /><text value=\"Animal is eating.\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>public eat(): void</code>, а затем <code>eat()</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131067,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Можешь ли ты создать экземпляр абстрактного класса напрямую?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Нет</item><item value=\"2\" correct=\"false\">Да</item></selection><p visible-if=\"wrong\">Обязательно выбери Нет.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 131066,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Дополните код так, чтобы и <code>Circle</code>, и <code>Square</code> использовали родительский класс <code>Shape</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Shape {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" draw(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Circle \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Shape {\" /><text type=\"break\" /><text value=\" draw(): \" /><text value=\"void\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Drawing a Circle!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Square \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Shape {\" /><text type=\"break\" /><text value=\" draw(): \" /><text value=\"void\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Drawing a Square!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" circle = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Circle();\" /><text type=\"break\" /><text value=\"circle.draw();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" square = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Square();\" /><text type=\"break\" /><text value=\"square.draw();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"20\" /><option startIndex=\"56\" endIndex=\"62\" /><option startIndex=\"71\" endIndex=\"76\" /><option startIndex=\"143\" endIndex=\"149\" /><option startIndex=\"158\" endIndex=\"163\" /><option correct=\"false\"><content><text value=\"Shape\" /></content></option></options></interaction></interactions><output><content><text value=\"Drawing a Circle!\" /><text type=\"break\" /><text value=\"Drawing a Square!\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>Shape</code>, затем <code>Circle</code>, а затем <code>Shape</code>, <code>Square</code>, <code>Shape</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 131068,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как определить абстрактный метод в TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">С помощью ключевого слова <code>abstract</code></item><item value=\"2\" correct=\"false\">Каждый метод в абстрактном классе является абстрактным методом</item></selection><p visible-if=\"wrong\">С помощью ключевого слова <code>abstract</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 131072,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Убедись, что и класс, и его метод являются абстрактными.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"8\" /><option startIndex=\"25\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>abstract</code>, а затем <code>abstract</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 131071,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какие методы мы можем добавить в абстрактный класс?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Абстрактные методы и неабстрактные методы</item><item value=\"2\" correct=\"false\">Только абстрактные методы</item><item value=\"3\" correct=\"false\">Только неабстрактные методы</item></selection><p visible-if=\"wrong\">Абстрактные методы и неабстрактные методы.</p></body></html>"
          }
        ]
      }
    ]
  }
}