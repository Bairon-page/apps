{
  "tutorial": {
    "id": 2110,
    "version": 14,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Объекты запроса и ответа",
    "descriptionContent": "Изучите основы Express JS",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13544,
        "title": "Объект Request",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "app.get()",
            "id": 121523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Метод <code>get</code> в Express определяет конкретный маршрут, который соответствует входящим запросам <code>GET</code> к указанному пути и вызывает функцию обратного вызова.</p><p>Мы можем создать конечные точки для всех HTTP-запросов. Давайте начнем с <code>/</code>, так называемой корневой конечной точки.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"79\" endIndex=\"82\" /><option startIndex=\"83\" endIndex=\"86\" /><option startIndex=\"87\" endIndex=\"90\" /></options></interaction></interactions><output><content><text value=\"The server is listening on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>app</code>, затем <code>get</code>, и наконец <code>\"/\"</code>.</p></body></html>"
          },
          {
            "title": "Req and Res",
            "id": 122150,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Функция обратного вызова принимает два аргумента: <strong>объект запроса</strong> и <strong>объект ответа</strong>. Они часто записываются как <code>req</code> и <code>res</code>.</p><p>Все конечные точки требуют пути и используют объекты <code>req</code> и <code>res</code> в качестве параметров в своей функции обратного вызова.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(req);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"93\" endIndex=\"96\" /><option startIndex=\"98\" endIndex=\"101\" /><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\"  method: &quot;GET&quot;,\" /><text type=\"break\" /><text value=\"  url: &quot;/&quot;,\" /><text type=\"break\" /><text value=\"  headers: {\" /><text type=\"break\" /><text value=\"    host: &quot;localhost:3000&quot;,\" /><text type=\"break\" /><text value=\"    ...\" /><text type=\"break\" /><text value=\"  },\" /><text type=\"break\" /><text value=\"  ...\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, а затем <code>res</code>.</p></body></html>"
          },
          {
            "title": " req object/req.method",
            "id": 121782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Объект <code>req</code> имеет свойства с полезной информацией, которые могут быть использованы для управления и ответа на запросы.</p><p>Свойство <code>req.method</code>, например, содержит информацию о типе HTTP-запроса, который был отправлен.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"142\" endIndex=\"145\" /><option startIndex=\"145\" endIndex=\"146\" /><option startIndex=\"146\" endIndex=\"152\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, затем <code>.</code>, и наконец <code>method</code>.</p></body></html>"
          },
          {
            "title": " req.hostname",
            "id": 121780,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><strong>Имя хоста</strong> идентифицирует устройство или сервер, делающий запрос. Это может быть полезно при принятии решения, одобрить или отклонить запрос.</p><p>Давай получим доступ к <code>hostname</code>, чтобы завершить вывод в консоль.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Hostname: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"183\" endIndex=\"186\" /><option startIndex=\"186\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"195\" /><option correct=\"false\"><content><text value=\"path\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Hostname: localhost:3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, затем <code>.</code>, и наконец <code>hostname</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132290,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Распаковка метода запроса и имени хоста чаще всего имеет ограниченное применение. Однако запрос может содержать более полезное содержимое.</p></body></html>"
          },
          {
            "title": " req.params.name - Copy",
            "id": 132291,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Значения параметров могут быть полезны в самых разных ситуациях, позволяя сделать ответ более динамичным в зависимости от запроса.</p><p>Мы можем получить доступ к значению параметра из маршрута с параметрами, такими как <code>/flag/:type</code>, с помощью <code>req.params.type</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu/:type&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Menu endpoint called&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Type parameter: \" /><text value=\"${req.params.type}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"188\" endIndex=\"191\" /><option startIndex=\"191\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"203\" /><option correct=\"false\"><content><text value=\"state\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Menu endpoint called\" /><text type=\"break\" /><text value=\"Type parameter: breakfast\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, затем <code>.</code>, а затем <code>params</code>, <code>.</code>, <code>type</code>.</p></body></html>"
          },
          {
            "title": " req.params.name",
            "id": 121783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем указать параметры в маршруте, добавляя заполнители с префиксом двоеточия в путь маршрута, например, <code>/:type</code>.</p><p>Когда мы вызываем маршрут с параметром, например, <code>/menu/dinner</code>, <code>:type</code> в <code>/menu/:type</code> захватывает значение <code>\"dinner\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu/:type&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Menu endpoint called&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Type parameter: \" /><text value=\"${req.params.type}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"94\" endIndex=\"99\" /><option correct=\"false\"><content><text value=\"type\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Menu endpoint called\" /><text type=\"break\" /><text value=\"Type parameter: dinner\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>:type</code>.</p></body></html>"
          },
          {
            "title": "Question: app.get()",
            "id": 121527,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какие аргументы получает функция обратного вызова <code>app.get</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Объект запроса и ответа</item><item value=\"2\" correct=\"false\">Удаленный IP-адрес запроса</item></selection><p visible-if=\"wrong\">Объект запроса и ответа.</p></body></html>"
          },
          {
            "title": "Question: req.hostname",
            "id": 121784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что содержит <code>req.hostname</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Он содержит имя хоста запрашивающего устройства или сервера</item><item value=\"2\" correct=\"false\">Он содержит имя хоста веб-сайта</item></selection><p visible-if=\"wrong\">Он содержит имя хоста запрашивающего устройства или сервера.</p></body></html>"
          },
          {
            "title": "Question: req.params.name",
            "id": 121790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Если мы обращаемся к <code>/user/Tabatha</code>, что содержит <code>req.params.name</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/user/:name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Name parameter: \" /><text value=\"${req.params.name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name parameter: Tabatha\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Tabatha</code></item><item value=\"2\" correct=\"false\"><code>user</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>Tabatha</code>.</p></body></html>"
          },
          {
            "title": "Example: app.get()",
            "id": 121530,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Дополните код, чтобы принимать входящие запросы на корневом маршруте.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"88\" endIndex=\"89\" /><option correct=\"false\"><content><text value=\"root\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>/</code>.</p></body></html>"
          },
          {
            "title": "Example: req.method",
            "id": 121789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код так, чтобы <code>method</code> HTTP-запроса отображался в консоли.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"142\" endIndex=\"152\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req.method</code>.</p></body></html>"
          },
          {
            "title": "Example: req.hostname",
            "id": 121787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Отобразите имя хоста запрашивающего сервера в консоли.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Hostname: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (req.hostname === \" /><text value=\"'localhost'\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Request Accepted'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Request Denied'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"183\" endIndex=\"186\" /><option startIndex=\"186\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"195\" /><option correct=\"false\"><content><text value=\"host\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Hostname: localhost\" /><text type=\"break\" /><text value=\"Request Accepted\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, затем <code>.</code>, и наконец <code>hostname</code>.</p></body></html>"
          },
          {
            "title": "Example: req.params.name",
            "id": 121793,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код так, чтобы динамическое значение параметра имени питомца отображалось в консоли.</p><p>Не переживай, если ты еще не видел динамические параметры. Скоро мы к ним перейдем.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/pets/:petName&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Thet pet's name is: \" /><text value=\"${req.params.petName}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"217\" endIndex=\"224\" /><option correct=\"false\"><content><text value=\"name\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name parameter: lulo\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>petName</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13545,
        "title": "Объект Response",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 121794,
            "contentType": "interactive",
            "images": [
              {
                "id": "32ea475c-ef5f-4e9e-8bdd-674ad98fd220"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Аналогично объекту запроса, объект ответа также предоставляет свойства и методы, к которым мы можем получить доступ.</p><p>Объект <code>res</code> представляет HTTP-ответ, который наше приложение Express отправляет на фронтенд после получения запроса.</p><img src=\"32ea475c-ef5f-4e9e-8bdd-674ad98fd220\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "res.send()",
            "id": 121795,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Методы объекта <code>res</code> позволяют нам настраивать ответ сервера на входящие запросы.</p><p>Метод <code>res.send</code> отправляет HTTP-ответ обратно на фронтенд. Давайте отправим простой текст.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Welcome!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"162\" endIndex=\"166\" /><option startIndex=\"167\" endIndex=\"177\" /><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>send</code>, а затем <code>\"Welcome!\"</code>.</p></body></html>"
          },
          {
            "title": "The Request and Response Cycle",
            "id": 121524,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Взаимодействие между frontend и веб-сервером представляет собой цикл. Запрос отправляется, обрабатывается, и, наконец, возвращается ответ.</p><p>Давайте завершим цикл, используя метод <code>res</code> объекта <code>.send</code> для отправки ответа на фронтенд.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request method: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;This is the response&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"156\" endIndex=\"164\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res.send</code>.</p></body></html>"
          },
          {
            "title": "res.status()",
            "id": 121796,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>По умолчанию <code>res.send</code> автоматически устанавливает код состояния на <code>200 OK</code>, если вы не укажете другой код состояния с помощью <code>res.status</code>.</p><p>Хорошей практикой является явная установка кода состояния на <code>200</code>, чтобы указать на успешный запрос.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Successful Request&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"163\" endIndex=\"166\" /><option startIndex=\"166\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"173\" /><option startIndex=\"174\" endIndex=\"177\" /><option correct=\"false\"><content><text value=\"404\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.</code>, а затем <code>status</code>, <code>200</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy",
            "id": 132293,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы также можем выбрать ответ в формате HTML.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;&lt;p&gt;Welcome&lt;/p&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"167\" endIndex=\"183\" /><option correct=\"false\"><content><text value=\"&quot;Welcome&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>\"&lt;p&gt;Welcome&lt;/p&gt;\"</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy",
            "id": 132294,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>res.send</code> может отправлять полностью сформированные HTML-страницы. Однако это не очень распространено.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"`\" /><text type=\"break\" /><text value=\"    &lt;html&gt;\" /><text type=\"break\" /><text value=\"      &lt;head&gt;&lt;title&gt;My Page&lt;/title&gt;&lt;/head&gt;\" /><text type=\"break\" /><text value=\"      &lt;body&gt;\" /><text type=\"break\" /><text value=\"        &lt;h1&gt;Welcome to the Homepage!&lt;/h1&gt;\" /><text type=\"break\" /><text value=\"        &lt;p&gt;This is a working HTML page.&lt;/p&gt;\" /><text type=\"break\" /><text value=\"      &lt;/body&gt;\" /><text type=\"break\" /><text value=\"    &lt;/html&gt;\" /><text type=\"break\" /><text value=\"  `\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"160\" endIndex=\"163\" /><option startIndex=\"163\" endIndex=\"164\" /><option startIndex=\"164\" endIndex=\"168\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.</code>, и наконец <code>send</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy - Copy",
            "id": 132295,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Чаще всего мы хотим отправить обратно JSON с запрашиваемыми данными. Мы можем сделать это с помощью <code>res.json</code>.</p><p>Мы можем создать объект JavaScript и использовать <code>res.json</code>, чтобы автоматически преобразовать его в правильный формат JSON перед отправкой клиенту.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"168\" /><option startIndex=\"168\" endIndex=\"172\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.</code>, и наконец <code>json</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy 1",
            "id": 132296,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Конечно, мы можем и должны устанавливать статус явно.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"184\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.status(200)</code>, и наконец <code>.json</code>.</p></body></html>"
          },
          {
            "title": "Question: res.send()",
            "id": 121801,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что делает метод <code>send</code> объекта <code>res</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Он отправляет HTTP-ответ на фронтенд</item><item value=\"2\" correct=\"false\">Он отправляет HTTP-запрос на веб-сервер</item></selection><p visible-if=\"wrong\">Он отправляет HTTP-ответ на фронтенд.</p></body></html>"
          },
          {
            "title": "Question: res.status()",
            "id": 121800,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Устанавливает ли метод <code>status</code> определенный код состояния для HTTP-ответа?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;&lt;p&gt;Successful Request&lt;/p&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Да</item><item value=\"2\" correct=\"false\">Нет</item></selection><p visible-if=\"wrong\">Обязательно выбери Да.</p></body></html>"
          },
          {
            "title": "Example: res.send()",
            "id": 121804,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши цикл запроса и ответа между фронтендом и веб-сервером, отправив HTTP-ответ с правильным методом.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hello from the server!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"162\" endIndex=\"166\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>send</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132299,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как отправить HTML-ответ с помощью Express?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.send(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item><item value=\"2\" correct=\"false\"><code>res.html(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item><item value=\"3\" correct=\"false\"><code>res.json(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>res.send(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code>.</p></body></html>"
          },
          {
            "title": "Example: res.status()",
            "id": 121803,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Установи <code>200</code> в качестве статусного кода ответа.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Request succeeded&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"158\" endIndex=\"161\" /><option startIndex=\"161\" endIndex=\"162\" /><option startIndex=\"162\" endIndex=\"168\" /><option startIndex=\"168\" endIndex=\"169\" /><option startIndex=\"169\" endIndex=\"172\" /><option startIndex=\"172\" endIndex=\"173\" /><option correct=\"false\"><content><text value=\"send\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.</code>, а затем <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy 1 - Copy",
            "id": 132298,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Установите код состояния и ответьте с помощью JSON.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"184\" /><option correct=\"false\"><content><text value=\".send\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.status(200)</code>, и наконец <code>.json</code>.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 132300,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой метод используется для отправки пользовательского статусного кода вместе с JSON-ответом в Express?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.status().json()</code></item><item value=\"2\" correct=\"false\"><code>res.json()</code></item><item value=\"3\" correct=\"false\"><code>res.status().send()</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>res.status().json()</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}