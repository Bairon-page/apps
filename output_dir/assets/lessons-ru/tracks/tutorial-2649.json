{
  "tutorial": {
    "id": 2649,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Введение в Requests",
    "descriptionContent": "Введение в Requests",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14620,
        "title": "Основы запросов",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 129349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В разработке программного обеспечения взаимодействие с веб-сервисами является обычной задачей, часто связанной с отправкой запросов на серверы.</p><p>Библиотека Python <code>requests</code> упрощает процесс выполнения запросов.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"7\" endIndex=\"15\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>import</code>, а затем <code>requests</code>.</p></body></html>"
          },
          {
            "title": "Intro - Copy",
            "id": 129555,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Библиотека requests в Python используется для выполнения HTTP-запросов к указанному URL.</p><p>Библиотека requests упростит задачу, будь то доступ к данным веб-сайта или взаимодействие с веб-сервисом.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text value=\"character_data = response.json()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Name: \" /><text value=\"{character_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Status: \" /><text value=\"{character_data[\" /><text value=\"'status'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"90\" /><option startIndex=\"91\" endIndex=\"94\" /><option startIndex=\"95\" endIndex=\"98\" /><option correct=\"false\"><content><text value=\"load\" /></content></option></options></interaction></interactions><output><content><text value=\"Name: Rick Sanchez\" /><text type=\"break\" /><text value=\"Status: Alive\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>requests</code>, затем <code>get</code>, и наконец <code>url</code>.</p></body></html>"
          },
          {
            "title": "Import",
            "id": 129351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Чтобы использовать requests, мы должны импортировать его, используя ключевое слово <code>import</code>, за которым следует имя пакета <code>requests</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"http\" /></content></option><option correct=\"false\"><content><text value=\"python\" /></content></option><option startIndex=\"7\" endIndex=\"15\" /><option startIndex=\"0\" endIndex=\"6\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>import</code>, а затем <code>requests</code>.</p></body></html>"
          },
          {
            "title": "NumPy usage",
            "id": 129350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Затем мы можем вызвать <code>requests.get()</code> и передать ему URL, чтобы сделать HTTP GET запрос.</p><p>HTTP GET запросы являются наиболее распространенным типом запросов в интернете, они в основном предназначены для получения данных из заданного ресурса.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"22\" /><option startIndex=\"98\" endIndex=\"101\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>url</code>, а затем <code>url</code>.</p></body></html>"
          },
          {
            "title": "NumPy usage - Copy",
            "id": 129556,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Функция <code>get()</code> возвращает ответ, который мы можем сохранить в переменной.</p><p>Объект ответа имеет код состояния и данные или ошибку, прикрепленные к нему.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(response)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"112\" endIndex=\"120\" /></options></interaction></interactions><output><content><text value=\"&lt;Response [200]&gt;\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>response</code>, а затем <code>response</code>.</p></body></html>"
          },
          {
            "title": "Arrays",
            "id": 129353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Чтобы получить доступ к данным, нам нужно разобрать объект ответа. Мы делаем это с помощью <code>.json()</code>.</p><p>Анализируемые данные представляют собой словарь ключей и значений.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"111\" endIndex=\"119\" /><option startIndex=\"119\" endIndex=\"126\" /></options></interaction></interactions><output><content><text value=\"{'id': 1, 'name': 'Rick Sanchez', 'status': 'Alive', 'species': 'Human', 'type': '', 'gender': 'Male', ...}\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>response</code>, затем <code>response</code>, и наконец <code>.json()</code>.</p></body></html>"
          },
          {
            "title": "Arrays - Copy",
            "id": 129557,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы можем получить доступ к значениям, как и с любым другим словарем, с которым мы работаем.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\"]) \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;status&quot;\" class=\"string\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"108\" /><option startIndex=\"136\" endIndex=\"140\" /><option startIndex=\"140\" endIndex=\"148\" /><option startIndex=\"157\" endIndex=\"161\" /></options></interaction></interactions><output><content><text value=\"Rick Sanchez\" /><text type=\"break\" /><text value=\"Alive\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>data</code>, затем <code>data</code>, а затем <code>[\"name\"]</code>, <code>data</code>.</p></body></html>"
          },
          {
            "title": "Question: NumPy usage",
            "id": 129354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Когда следует использовать библиотеку Python requests?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Когда нужно легко и эффективно отправлять HTTP-запросы</item><item value=\"2\" correct=\"false\">Когда ты выполняешь оффлайн задачи, требующие больших вычислительных ресурсов</item></selection><p visible-if=\"wrong\">Когда нужно легко и эффективно отправлять HTTP-запросы.</p></body></html>"
          },
          {
            "title": "Question: Import",
            "id": 129355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как называется библиотека, которую мы используем для выполнения HTTP-запросов в Python?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>requests</code></item><item value=\"2\" correct=\"false\"><code>http_requests</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>requests</code>.</p></body></html>"
          },
          {
            "title": "Question: Import as np",
            "id": 129356,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Как мы можем разобрать объект ответа, чтобы получить данные?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>response.json()</code></item><item value=\"2\" correct=\"false\"><code>response.parse()</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>response.json()</code>.</p></body></html>"
          },
          {
            "title": "Example: Import",
            "id": 129358,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Напиши необходимый код для импорта библиотеки requests в Python.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"15\" /></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>import requests</code>.</p></body></html>"
          },
          {
            "title": "Example: Import as np",
            "id": 129359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Сделай GET запрос, используя библиотеку requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"90\" /><option startIndex=\"90\" endIndex=\"91\" /><option startIndex=\"91\" endIndex=\"94\" /><option startIndex=\"94\" endIndex=\"95\" /><option startIndex=\"95\" endIndex=\"98\" /><option startIndex=\"98\" endIndex=\"99\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"run\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>requests</code>, затем <code>.</code>, а затем <code>get</code>, <code>(</code>, <code>url</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Arrays - Copy - Copy",
            "id": 129558,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Выведи значение для ключа <code>\"status\"</code> в разобранном объекте ответа.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\"]) \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;status&quot;\" class=\"string\" /><text value=\"])\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"157\" endIndex=\"171\" /></interactions><output><content><text value=\"Rick Sanchez\" /><text type=\"break\" /><text value=\"Alive\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>data[\"status\"]</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 14622,
        "title": "Использование requests",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Array method",
            "id": 129371,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Работа с веб-API включает в себя отправку и получение данных через интернет.</p><p>При работе с ответом нам нужно обеспечить целостность данных. Для этого используется статус-код.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"128\" /><option correct=\"false\"><content><text value=\"success_code\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>status_code</code>.</p></body></html>"
          },
          {
            "title": "Array method - Copy",
            "id": 129559,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Объект ответа имеет прикрепленный к нему <code>status_code</code>.</p><p>Мы должны проверить, равно ли это <code>200</code>, чтобы убедиться, что данные были успешно получены.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"128\" /><option startIndex=\"129\" endIndex=\"131\" /><option startIndex=\"132\" endIndex=\"135\" /><option correct=\"false\"><content><text value=\"=\" /></content></option><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>status_code</code>, затем <code>==</code>, и наконец <code>200</code>.</p></body></html>"
          },
          {
            "title": "Array method 2",
            "id": 129372,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>После того как мы убедились, что данные были успешно получены, мы можем их распаковать.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"78\" /><option startIndex=\"103\" endIndex=\"111\" /><option startIndex=\"189\" endIndex=\"197\" /><option correct=\"false\"><content><text value=\"status_code\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>response</code>, затем <code>response</code>, и наконец <code>response</code>.</p></body></html>"
          },
          {
            "title": "Array cast",
            "id": 129373,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В некоторых случаях мы не получим то, что ожидаем. Например, нет Покемона с именем <em>Mimo</em>.</p><p>Мы всегда должны проверять <code>status_code</code>, и в случае ошибки мы не трогаем данные.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"283\" endIndex=\"287\" /><option startIndex=\"287\" endIndex=\"288\" /><option startIndex=\"293\" endIndex=\"325\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"&quot;failure&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>else</code>, затем <code>:</code>, и наконец <code>print(\"Failed to retrieve data\")</code>.</p></body></html>"
          },
          {
            "title": "Indexing",
            "id": 129374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вместо того чтобы напрямую сравнивать код состояния, мы также можем поместить вызов запроса в блок <code>try</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"response.status_code == 200\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>try</code>, а затем <code>:</code>.</p></body></html>"
          },
          {
            "title": "Indexing - Copy",
            "id": 129560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Затем мы добавляем блок <code>except</code>, чтобы поймать потенциальные ошибки. Здесь мы берем ошибку из объекта ошибки и используем ее как <code>error</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error: \" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"296\" endIndex=\"302\" /><option startIndex=\"303\" endIndex=\"330\" /><option correct=\"false\"><content><text value=\"else\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>except</code>, а затем <code>requests.HTTPError as error</code>.</p></body></html>"
          },
          {
            "title": "Indexing - Copy - Copy",
            "id": 129561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Мы должны вызвать <code>raise_for_status</code> на объекте ответа, чтобы выявить ошибки, которые мы затем можем поймать с помощью блока <code>except</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error: \" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"113\" endIndex=\"121\" /><option startIndex=\"122\" endIndex=\"138\" /><option correct=\"false\"><content><text value=\"check_error\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>response</code>, а затем <code>raise_for_status</code>.</p></body></html>"
          },
          {
            "title": "Question: Array method",
            "id": 129377,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой код состояния будет использоваться для успешного вызова?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">200</item><item value=\"2\" correct=\"false\">400</item></selection><p visible-if=\"wrong\">Обязательно выбери 200.</p></body></html>"
          },
          {
            "title": "Question: Array method 2",
            "id": 129378,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой метод мы можем вызвать, чтобы проверить ошибку в запросе API?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"3\" correct=\"false\"><code>response.check_error()</code></item><item value=\"3\" correct=\"true\"><code>response.raise_for_status()</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>response.raise_for_status()</code>.</p></body></html>"
          },
          {
            "title": "Question: Array cast",
            "id": 129379,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что происходит, когда мы отправляем запрос с использованием библиотеки Python <code>requests</code> на недопустимый URL?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Библиотека requests выдает ошибку</item><item value=\"2\" correct=\"false\">Ничего не происходит</item></selection><p visible-if=\"wrong\">Библиотека requests выдает ошибку.</p></body></html>"
          },
          {
            "title": "Question 2: Array cast",
            "id": 129380,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип ответа вы получите после отправки GET-запроса на конечную точку API?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"print(response)\" /></content><output><content><text value=\"&lt;Response [200]&gt;\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Объект Response</item><item value=\"4\" correct=\"false\">Список словарей</item></selection><p visible-if=\"wrong\">Объект Response.</p></body></html>"
          },
          {
            "title": "Question: Indexing",
            "id": 129381,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой ожидаемый вывод этого кода?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><output><content><text value=\"200\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>200</code></item><item value=\"2\" correct=\"false\"><code>Error</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>200</code>.</p></body></html>"
          },
          {
            "title": "Question: Size",
            "id": 129382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой будет код статуса ответа после выполнения этого кода, учитывая, что покемона с именем \"Mimo\" не существует?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/mimo&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><output><content><text value=\"404\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">200</item><item value=\"2\" correct=\"true\">404</item></selection><p visible-if=\"wrong\">Обязательно выбери 404.</p></body></html>"
          },
          {
            "title": "Example: Array method",
            "id": 129383,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Сохрани в переменной <code>response_json</code> JSON объект, возвращаемый функцией <code>requests.get()</code> после вызова определенного URL.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text value=\"response_json = response.json()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"98\" endIndex=\"111\" /><option startIndex=\"114\" endIndex=\"122\" /><option startIndex=\"123\" endIndex=\"127\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>response_json</code>, затем <code>response</code>, и наконец <code>json</code>.</p></body></html>"
          },
          {
            "title": "Example: Indexing",
            "id": 129385,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Используй <code>try</code>, а затем <code>except</code>, чтобы сделать запрос и поймать возможную ошибку.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/mimo&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"  response = requests.get(url)\" /><text type=\"break\" /><text value=\"  response.raise_for_status()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error:\" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"283\" endIndex=\"289\" /><option startIndex=\"290\" endIndex=\"308\" /><option startIndex=\"309\" endIndex=\"311\" /><option startIndex=\"312\" endIndex=\"317\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"else\" /></content></option></options></interaction></interactions><output><content><text value=\"404 Client Error: Not Found for url: https://pokedex.mimo.dev/api/pokemon/mimo\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>try</code>, затем <code>except</code>, а затем <code>requests.HTTPError</code>, <code>as</code>, <code>error</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}