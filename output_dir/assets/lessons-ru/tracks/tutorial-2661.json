{
  "tutorial": {
    "id": 2661,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Список дел - Часть 1",
    "descriptionContent": "Начни создавать своё приложение для списка дел. Этот первый шаг сосредоточен на создании базовой структуры и добавлении задач.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2661-icon-banner.svg",
    "chapters": [
      {
        "id": 14636,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129453,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в проект **ToDo List**. Здесь ты создашь список для всех своих дел.\n\nДавай начнем с создания пустого списка, который будет содержать задачи для списка дел.\n\n1. Создай переменную с именем `todo_list` и присвой ей пустой список `[]`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "todo_list = []"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129454,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Мы должны сообщить пользователю, если его список ToDo пуст. Сделайте это, проверив длину `todo_list` внутри оператора `if`.\n\n1. Используйте оператор `if`, который проверяет, пуст ли `todo_list`.\n2. Если он пуст, следует вывести строку `\"Your ToDo list is empty\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []",
                  "solvedContent": "todo_list = []\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129455,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Пустой список? Давайте исправим это, добавив несколько задач и отобразив их.\n\n1. Обновите первую строку, добавив два элемента в `todo_list`, которые мы можем отобразить;\n2. Добавьте блок `else` к оператору `if`, который будет выполняться, если список не пуст.\n3. Внутри блока `else` создайте переменную с именем `index` и присвойте ей значение `1`.\n4. Все еще в блоке `else`, начните цикл `for` для перебора каждого `task` в `todo_list`.\n5. В цикле `for` выведите на экран `index`, за которым следует `.` и затем `task`. Используйте f-строку для этого, как `f\"{index}. {task}\"`.\n6. После вывода задачи увеличьте `index` на `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129456,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наша программа должна попросить пользователя ввести новую задачу. Давайте используем функцию `input`, чтобы получить ввод от пользователя.\n\n1. Добавь функцию `input` с подсказкой `\"Enter the task: \"` прямо под строкой, где ты определяешь `todo_list`. Создай переменную с именем `new_task`, чтобы сохранить ввод, полученный от функции `input`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129457,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте добавим новую задачу пользователя в `todo_list` и подтвердим, что задача была добавлена.\n\n1. Перед блоком `if` добавьте переменную `new_task` в `todo_list`.\n2. Выведите `Task \"{new_task}\" added`, используя f-строку, чтобы включить задачу, которую добавил пользователь.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\ntodo_list.append(new_task)\nprint(f\"Task '{new_task}' added to the ToDo list\")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, давай запустим цикл, пока пользователь не решит выйти. Пока что мы сделаем так, чтобы он работал бесконечно. Мы изменим это во второй части проекта.\n\n1. Оберни весь код в цикл `while`, у которого условие установлено на `True`, при этом оставив самую первую строку, где ты определяешь переменную `todo_list`, снаружи.\n\nПосле реализации цикла `while`, добавь несколько задач и посмотри, как список растет.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\ntodo_list.append(new_task)\nprint(f\"Task '{new_task}' added to the ToDo list\")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}