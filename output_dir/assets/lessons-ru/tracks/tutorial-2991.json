{
  "tutorial": {
    "id": 2991,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Счетчик очков - Часть 1",
    "descriptionContent": "Создай React приложение для отслеживания очков двух команд, используя основные функции React",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2991-icon-banner.svg",
    "chapters": [
      {
        "id": 15164,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #7",
            "id": 133584,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать в проект **Score Keeper**, где мы будем использовать наши знания React для создания одностраничного приложения, чтобы отслеживать очки двух команд.\n\nМы начнем с простого шаблона React. Посмотри `index.html`, `index.jsx` и `App.jsx`, чтобы увидеть, с чего мы начинаем.\n\nПервый компонент, над которым мы будем работать, это компонент `ScoreKeeper`, который будет отслеживать счет.\n\n1. Импортируй React в файл `ScoreKeeper.jsx`.\n2. Создай пустой компонент `ScoreKeeper`.\n3. Экспортируй компонент `ScoreKeeper` как экспорт по умолчанию.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Hello, React</h1>\n    </div>\n  );\n}\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreKeeper = () => {};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7 - Copy",
            "id": 134300,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте начнем с реализации рендеринга компонента `ScoreKeeper`.\n\n1. Внутри компонента `ScoreKeeper` верните элемент `div`.\n2. Внутри `div` добавьте элемент `h1` с текстом `Score Keeper`.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Hello, React</h1>\n    </div>\n  );\n}\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreKeeper = () => {\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #13",
            "id": 133590,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Компонент `ScoreKeeper` пока не показывает многого, но давайте отобразим компонент внутри нашего компонента `App`, чтобы отслеживать будущие изменения.\n\n1. Импортируй компонент `ScoreKeeper` в файл `App.jsx`.\n2. В операторе `return` компонента `App` верни только компонент `ScoreKeeper`.\n3. Удали существующие элементы `h1` и `div`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Hello, React</h1>\n    </div>\n  );\n};\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n"
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreKeeper = () => {\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 133585,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь давай инициализируем переменные состояния для отслеживания очков.\n\n1. Импортируй `useState`, чтобы использовать переменные состояния.\n2. Внутри компонента `ScoreKeeper` определи две переменные состояния: `teamOneScore` с установщиком `setTeamOneScore` и `teamTwoScore` с установщиком `setTeamTwoScore`, обе инициализированы значением `0`.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreKeeper = () => {\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 133578,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте настроим компонент `ScoreView` для отображения очков, которые мы передадим через свойства.\n\n1. Импортируйте React в файл `ScoreView.jsx`.\n2. Создайте пустой компонент `ScoreView`.\n3. Экспортируйте компонент `ScoreView` как экспорт по умолчанию.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreView = () => {};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 133580,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте реализуем логику отображения в `ScoreView`.\n\n1. Обновите `ScoreView`, чтобы он принимал `props`.\n2. Внутри компонента `ScoreView` верните элемент `div`.\n3. Внутри `div` добавьте элемент `h2`, который отображает свойства `teamName` и `score` вместе, чтобы получилось что-то вроде: *Team A: 3*.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = () => {};\n\nexport default ScoreView;\n",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 133587,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Далее давай отобразим недавно созданный компонент `ScoreView`.\n\n1. Импортируй компонент `ScoreView` в `ScoreKeeper.jsx`.\n2. Внутри `div`, под `h1`, который отображает *Score Keeper*, добавь два экземпляра компонента `ScoreView`.\n   - Используй `\"Team One\"` и `\"Team Two\"` в качестве передаваемого свойства `teamName`.\n   - Передай переменную состояния `teamOneScore` как свойство `score` для первого компонента.\n   - Передай переменную состояния `teamTwoScore` как свойство `score` для второго компонента.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #11",
            "id": 133588,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, чтобы добавить необходимую функциональность, мы позволим обновлять очки при нажатии кнопок.\n\n1. Добавь два соответствующих элемента `button`, каждый непосредственно под соответствующим компонентом `ScoreView`.\n2. Установи их текстовое содержимое на `+1 Team One` и `+1 Team Two`.\n3. Для каждой `button` определи событие `onClick`, которое обновляет счет соответствующей команды на 1, используя функции `setTeamOneScore` и `setTeamTwoScore`.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}