{
  "tutorial": {
    "id": 2954,
    "version": 3,
    "type": "practiceRequired",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Подробное изучение Express",
    "descriptionContent": "Подробное изучение Express",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13776,
        "title": "Требуется практика Express #1",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Question: Built-in Middleware",
            "id": 120145,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Что такое встроенные функции middleware?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Функции, которые предоставляет Express для выполнения действий между запросом и ответом</item><item value=\"2\" correct=\"false\">Функции, которые ты создаешь для выполнения действий между запросом и ответом</item><item value=\"3\" correct=\"false\">Функции, которые создают для тебя другие стороны, чтобы ты мог их использовать</item></selection><p visible-if=\"wrong\">Функции, которые предоставляет Express для выполнения действий между запросом и ответом.</p></body></html>"
          },
          {
            "title": "Exercise: Built-in Middleware",
            "id": 120155,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код, чтобы запустить встроенное middleware <code>express.json</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request body username: \" /><text value=\"${req.body.username}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"63\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"67\" /><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"71\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"79\" /><option startIndex=\"79\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"85\" /><option correct=\"false\"><content><text value=\"require\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\":\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Request body email: johns@mimo.com\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>app</code>, затем <code>.</code>, а затем <code>use</code>, <code>express</code>, <code>.</code>, <code>json</code>, <code>()</code>.</p></body></html>"
          },
          {
            "title": "Question: router.param()",
            "id": 120323,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой тип маршрута соответствует методу <code>router.param(name, callback)</code>?<br /></p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Любой маршрут, который использует параметр <code>:name</code> и соответствует текущему запросу</item><item value=\"2\" correct=\"false\">Любой маршрут, который соответствует текущему запросу</item></selection><p visible-if=\"wrong\">Любой маршрут, который использует параметр <code>:name</code> и соответствует текущему запросу.</p></body></html>"
          },
          {
            "title": "Question: router.route()",
            "id": 120324,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой маршрут имеет экземпляр <code>router.route()</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Users&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"})\" /><text type=\"break\" /><text value=\".post(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Create&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Listening on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Listening on port 3000\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>\"/users\"</code></item><item value=\"2\" correct=\"false\"><code>\"/\"</code></item><item value=\"3\" correct=\"false\"><code>\"/express\"</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>\"/users\"</code>.</p></body></html>"
          },
          {
            "title": "Exercise: Custom Middleware",
            "id": 120156,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код, чтобы запустить пользовательское middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"checkEmailFormat\" class=\"title\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!req.body.email.includes(\" /><text value=\"&quot;@&quot;\" class=\"string\" /><text value=\")) { \" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"&quot;Not a valid email.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"  } \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(checkEmailFormat); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"217\" endIndex=\"220\" /><option startIndex=\"220\" endIndex=\"221\" /><option startIndex=\"221\" endIndex=\"224\" /><option startIndex=\"224\" endIndex=\"225\" /><option startIndex=\"225\" endIndex=\"241\" /><option startIndex=\"241\" endIndex=\"242\" /><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>app</code>, затем <code>.</code>, а затем <code>use</code>, <code>(</code>, <code>checkEmailFormat</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Exercise: next()",
            "id": 120158,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вызови правильную функцию, чтобы перейти к следующей функции middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!req.body.password) { \" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"&quot;Password is required&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" { \" /><text type=\"break\" /><text value=\"    next(); \" /><text type=\"break\" /><text value=\"  } \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.post(\" /><text value=\"&quot;/login&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Post successful...&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"206\" endIndex=\"212\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Post successful...\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>next()</code>.</p></body></html>"
          },
          {
            "title": "Exercise: Custom Middleware",
            "id": 122337,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Заверши код, чтобы запустить пользовательское middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"checkPhoneNumberFormat\" class=\"title\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" phoneNumber = req.body?.phone; \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!phoneNumber || !\" /><text value=\"/^\\d{10}$/\" class=\"regexp\" /><text value=\".test(phoneNumber)) { \" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"&quot;Not a valid phone number.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"  } \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(checkPhoneNumberFormat); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"288\" endIndex=\"291\" /><option startIndex=\"291\" endIndex=\"292\" /><option startIndex=\"292\" endIndex=\"295\" /><option startIndex=\"295\" endIndex=\"296\" /><option startIndex=\"296\" endIndex=\"318\" /><option startIndex=\"318\" endIndex=\"319\" /><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>app</code>, затем <code>.</code>, а затем <code>use</code>, <code>(</code>, <code>checkPhoneNumberFormat</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: router.METHOD()",
            "id": 120319,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Включи <code>get</code> как выбранный метод маршрутизатора.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/:id&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Team member Id:\" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Team member Id: \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"126\" endIndex=\"129\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Team member Id:1\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>get</code>.</p></body></html>"
          },
          {
            "title": "Question: Built-in Middleware",
            "id": 122333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Почему встроенные функции middleware полезны?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Чтобы помочь серверу анализировать тела, кодировать URL и так далее</item><item value=\"2\" correct=\"false\">Чтобы помочь серверу ответить</item><item value=\"3\" correct=\"false\">Они не полезны; нам нужно создать собственное middleware</item></selection><p visible-if=\"wrong\">Чтобы помочь серверу анализировать тела, кодировать URL и так далее.</p></body></html>"
          },
          {
            "title": "Question: router.route()",
            "id": 122375,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой маршрут имеет экземпляр <code>router.route</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\" .get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" res.send(\" /><text value=\"&quot;Get all users&quot;\" class=\"string\" /><text value=\"))\" /><text type=\"break\" /><text value=\" .post(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" res.send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\"));\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/main&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>/main/users</code></item><item value=\"2\" correct=\"false\"><code>/main</code></item><item value=\"3\" correct=\"false\"><code>/app/users</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>/main/users</code>.</p></body></html>"
          },
          {
            "title": "Question: Import express.Router()",
            "id": 120479,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой первый шаг для использования Express Router?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Мы объявляем переменную и присваиваем ей пакет Router</item><item value=\"2\" correct=\"false\">Мы добавляем метод <code>app.listen()</code> для создания сервера</item></selection><p visible-if=\"wrong\">Мы объявляем переменную и присваиваем ей пакет Router.</p></body></html>"
          },
          {
            "title": "Question: router.use()",
            "id": 120325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какое условие необходимо для выполнения функций middleware, подключенных в пути с помощью <code>router.use</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Запрашиваемая базовая часть пути должна совпадать с путем</item><item value=\"2\" correct=\"false\">Функции middleware должны сохранять порядок</item><item value=\"3\" correct=\"false\">Предварительных требований нет</item></selection><p visible-if=\"wrong\">Запрашиваемая базовая часть пути должна совпадать с путем.</p></body></html>"
          }
        ]
      },
      {
        "id": 13959,
        "title": "Требуется практика Express #2",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Question: App Level",
            "id": 122324,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой метод мы используем для привязки middleware на уровне приложения?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>app.use</code></item><item value=\"2\" correct=\"false\"><code>router.use</code></item><item value=\"3\" correct=\"false\"><code>req.use</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>app.use</code>.</p></body></html>"
          },
          {
            "title": "Exercise: next()",
            "id": 122329,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вызови правильную функцию, чтобы перейти к следующей функции middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Request method: &quot;\" class=\"string\" /><text value=\", req.method); \" /><text type=\"break\" /><text value=\"  next(); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.post(\" /><text value=\"&quot;/songs&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Song added&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"144\" endIndex=\"150\" /></interactions><output><content><text value=\"Server runs on port 3000\" /><text type=\"break\" /><text value=\"Request method: POST\" /><text type=\"break\" /><text value=\"Song added\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>next()</code>.</p></body></html>"
          },
          {
            "title": "res.redirect()",
            "id": 121798,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Дополните код, чтобы гарантировать, что клиент будет перенаправлен на <code>\"/userinfo\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/user&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.redirect(\" /><text value=\"&quot;/userinfo&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"166\" endIndex=\"174\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>redirect</code>.</p></body></html>"
          },
          {
            "title": "Example: res.redirect()",
            "id": 121805,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Перенаправление с <code>\"/about\"</code> на <code>\"/admin\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.redirect(\" /><text value=\"&quot;/admin&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;&lt;h1&gt;Admin Page&lt;/h1&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"163\" endIndex=\"175\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>res.redirect</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 132762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>В каком порядке выполняются несколько функций middleware?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Они выполняются в порядке, в котором они определены, слева направо</item><item value=\"2\" correct=\"false\">Мы не можем гарантировать порядок выполнения middleware</item></selection><p visible-if=\"wrong\">Они выполняются в порядке, в котором они определены, слева направо.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy  Copy - Copy",
            "id": 132915,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Перенаправить на <code>\"/new-blog\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/blog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" res.redirect(\" /><text value=\"&quot;/new-blog&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"43\" endIndex=\"51\" /></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>redirect</code>.</p></body></html>"
          },
          {
            "title": "Example: router.use()",
            "id": 120327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Вызови функцию <code>next</code> в конце <code>router.use</code>, чтобы разрешить выполнение следующей функции middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Router use in team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"76\" endIndex=\"82\" /></interactions><output><content><text value=\"listening on port 4000\" /><text type=\"break\" /><text value=\"Second call for team\" /></content></output></code><p visible-if=\"wrong\">Обязательно выбери <code>next()</code>.</p></body></html>"
          },
          {
            "title": "Question: Error Message",
            "id": 122451,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Когда данные, запрашиваемые клиентом, не существуют на сервере, что мы можем добавить к ответу в дополнение к статусу <code>404</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Сообщение пользователю о том, что данные не существуют</item><item value=\"2\" correct=\"false\">Сообщение пользователю попробовать выполнить запрос позже</item></selection><p visible-if=\"wrong\">Сообщение пользователю о том, что данные не существуют.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy - Copy",
            "id": 132448,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Получите параметр маршрута <code>id</code> и сохраните его в переменной с именем <code>userId</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/user/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id; \" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = database.find(userId);\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!user) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({ \" /><text value=\"error\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;User not found&quot;\" class=\"string\" /><text value=\" });\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\" res.json({ \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"`User ID: \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\", user });\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"63\" /><option startIndex=\"63\" endIndex=\"66\" /><option correct=\"false\"><content><text value=\".query\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>req</code>, затем <code>.params</code>, и наконец <code>.id</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132446,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Проверь, содержит ли URL параметр запроса с именем <code>name</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!req.query.name) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Missing name parameter&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`You passed in \" /><text value=\"${req.query.name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"49\" /><option startIndex=\"85\" endIndex=\"89\" /><option startIndex=\"153\" endIndex=\"157\" /><option correct=\"false\"><content><text value=\"id\" /></content></option><option correct=\"false\"><content><text value=\"id\" /></content></option><option correct=\"false\"><content><text value=\"id\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>name</code>, затем <code>name</code>, и наконец <code>name</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132916,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Какой из следующих методов перенаправит на <code>\"/new-route\"</code> со статусом <code>302</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.redirect(\"/new-route\")</code></item><item value=\"2\" correct=\"false\"><code>res.route(\"/new-route\")</code></item></selection><p visible-if=\"wrong\">Обязательно выбери <code>res.redirect(\"/new-route\")</code>.</p></body></html>"
          },
          {
            "title": "Question: next()",
            "id": 122325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Почему <code>next</code> вызывается в конце функции middleware?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Request logged&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\" next(); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/books&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;List of books sent&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server runs on port 3000\" /><text type=\"break\" /><text value=\"Request logged\" /><text type=\"break\" /><text value=\"List of books sent\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Это используется для продолжения выполнения функций middleware после выполнения первого middleware</item><item value=\"2\" correct=\"false\">Это здесь не нужно</item></selection><p visible-if=\"wrong\">Это используется для продолжения выполнения функций middleware после выполнения первого middleware.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 132911,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Перенаправь на правильный маршрут на основе параметра маршрута <code>v</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/:v&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (req.params.version == \" /><text value=\"&quot;2.0&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  res.redirect(\" /><text value=\"&quot;/2.0&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  res.redirect(\" /><text value=\"&quot;/1.0&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"86\" /><option startIndex=\"108\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option startIndex=\"112\" endIndex=\"120\" /><option startIndex=\"87\" endIndex=\"93\" /><option startIndex=\"121\" endIndex=\"127\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Обязательно выбери <code>res</code>, затем <code>.</code>, а затем <code>redirect</code>, <code>\"/2.0\"</code>, <code>res</code>, <code>.</code>, <code>redirect</code>, <code>\"/1.0\"</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}