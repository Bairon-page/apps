{
  "tutorial": {
    "id": 2904,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Список задач - Часть 2",
    "descriptionContent": "Добавление задач полезно, но мы также хотим их удалять. Это то, что мы планируем сделать во второй части проекта.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2904-icon-banner.svg",
    "chapters": [
      {
        "id": 14995,
        "title": "Глава №1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132196,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Добро пожаловать обратно в проект **Task List**. Мы изменим наш код, чтобы обрабатывать удаление элементов из списка.\n\n1. Определите новую функцию `removeItem`, которая принимает `items` в качестве аргумента.\n2. Внутри этой новой функции вызовите функцию `displayList`, чтобы пользователь мог увидеть список элементов перед тем, как выбрать, какой из них удалить.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\n\nfunction removeItem(items) {\n  displayList(items);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 132199,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Функция `removeItem` пока не делает многого. Однако, чтобы проверить, работает ли она, давай уже позволим выбрать этот вариант.\n\n1. Там, где ты представляешь варианты через операторы print пользователю, добавь возможность для пользователя удалить элементы из списка, введя `3`. (Ранее `3` было для выхода. Теперь это должно быть покрыто `4`.)\n2. Если пользователь вводит `3`, вызови `removeItem`.\n3. Наконец, обнови вариант выхода с `3` на `4` и убедись, что `running` устанавливается в `false`, если пользователь вводит `4`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\n\nfunction removeItem(items) {\n  displayList(items);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\n\nfunction removeItem(items) {\n  displayList(items);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Remove an item from the list\");\n  console.log(\"4. Exit\");\n\n  const choice = input(\"Enter your choice (1-4): \");\n\n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    removeItem(items);\n  } else if (choice == 4) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 132197,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда пользователь может выбрать удаление элемента, нам нужно спросить, какой элемент удалить.\n\nБудет недопустимо, если ввод не является числом или не находится в диапазоне доступных элементов. Мы проверим, что это не так.\n\n1. Измените функцию `removeItem`, чтобы она принимала второй аргумент: индекс элемента, который следует удалить.\n2. В вашей функции `removeItem` проверьте, что второй переданный аргумент больше `0` и меньше или равен `items.length`. Это проверит, что введенное пользователем число находится в диапазоне индексов элементов. (Мы ожидаем, что пользователь введет `1` для первого элемента, `2` для второго и так далее.)\n3. Если вы проверили, что выбор действителен, удалите этот элемент из массива `items`, который был передан в качестве аргумента. (Помните, что индексация массивов начинается с 0, а пользователь введет 1 для первого элемента.)\n4. Если выбор недействителен, потому что ввод либо не был числом, либо находился вне допустимого диапазона, выведите сообщение об ошибке в консоль.\n5. Прежде чем вызвать `removeItem` в вашем коде меню, напишите код, чтобы предложить пользователю ввести номер элемента, который он хочет удалить. Используйте `parseInt`, чтобы преобразовать введенное значение в число. Передайте это число в качестве второго аргумента.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\n\nfunction removeItem(items) {\n  displayList(items);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Remove an item from the list\");\n  console.log(\"4. Exit\");\n\n  const choice = input(\"Enter your choice (1-4): \");\n\n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    removeItem(items);\n  } else if (choice == 4) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nfunction removeItem(items, itemIndex) {\n  displayList(items);\n\n  if (itemIndex > 0 && itemIndex <= items.length) {\n    items.splice(itemIndex - 1, 1);\n  } else {\n    console.log(\"Invalid number. Please try again.\");\n  }\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Remove an item from the list\");\n  console.log(\"4. Exit\");\n\n  const choice = input(\"Enter your choice (1-4): \");\n\n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    const itemIndex = parseInt(input(\"Enter the number of the item to remove: \"), 10);\n    removeItem(items, itemIndex);\n  } else if (choice == 4) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 132198,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, добавь сообщение, чтобы пользователь знал, что его действие было успешным при удалении элемента.\n\n1. В случае, если функция `removeItem` удаляет элемент, верни удаленный элемент.\n2. Не возвращай ничего, если элемент не был удален.\n3. Получи возвращенный элемент функции и выведи сообщение в консоль, указывающее, какой элемент был удален.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nfunction removeItem(items, itemIndex) {\n  displayList(items);\n\n  if (itemIndex > 0 && itemIndex <= items.length) {\n    items.splice(itemIndex - 1, 1);\n  } else {\n    console.log(\"Invalid number. Please try again.\");\n  }\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Remove an item from the list\");\n  console.log(\"4. Exit\");\n\n  const choice = input(\"Enter your choice (1-4): \");\n\n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    const itemIndex = parseInt(input(\"Enter the number of the item to remove: \"), 10);\n    removeItem(items, itemIndex);\n  } else if (choice == 4) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nfunction removeItem(items, itemIndex) {\n  displayList(items);\n\n  if (itemIndex > 0 && itemIndex <= items.length) {\n    const removedItem = items.splice(itemIndex - 1, 1)[0];\n    return removedItem;\n  } else {\n    console.log(\"Invalid number. Please try again.\");\n  }\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Remove an item from the list\");\n  console.log(\"4. Exit\");\n\n  const choice = input(\"Enter your choice (1-4): \");\n\n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);  } else if (choice == 3) {\n    const itemIndex = parseInt(input(\"Enter the number of the item to remove: \"), 10);\n    const removedItem = removeItem(items, itemIndex);\n    if (removedItem) {\n      console.log(`\"${removedItem}\" has been removed from the list.`);\n    }\n  } else if (choice == 4) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}