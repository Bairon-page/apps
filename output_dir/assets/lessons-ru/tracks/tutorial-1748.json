{
  "tutorial": {
    "id": 1748,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Тёмный режим",
    "descriptionContent": "Создай переключатель темы для активации темного режима на веб-странице",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1748-icon-banner.svg",
    "chapters": [
      {
        "id": 11626,
        "title": "Тёмный режим",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro 2",
            "id": 106921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте используем наши знания о условных операторах, чтобы создать веб-страницу с кнопками, которые переключаются между светлым, тёмным и ниндзя режимами.\n\nВ этом проекте мы добавим JavaScript код, который изменяет переменные `label`, `color` и `image` в зависимости от выбранного режима.\n\nМы уже инициализировали переменные с некоторыми значениями по умолчанию. Осталось условно обновить их. Взгляни на код, прежде чем продолжить.\n\n1. `mode` позволит нам переключаться между режимами `dark`, `light` и `ninja`, которые определяют внешний вид пользовательского интерфейса.\n2. `color` хранит цвет фона для выбранного режима.\n3. `image` хранит путь к изображению, которое будет отображаться для выбранного режима.\n4. `label` информирует пользователя, какой режим они в данный момент используют.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\r\nlet color = \"ghostWhite\";\r\nlet image = \"/img/light-icon.png\";\r\nlet label = \"Light Mode\";",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "If statement",
            "id": 106888,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Поскольку существует три режима, нам нужно проверить значение режима.\n\nДавайте начнем с создания оператора `if`, который проверяет, является ли `mode` `\"dark\"`.\n\n1. Соберите оператор `if`, который проверяет, установлена ли переменная `mode` в `\"dark\"`. Оставьте его блок кода пустым на данный момент.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `if` statement is :\n```javascript\nif (condition) {<code block>}\n```"
                }
              ]
            }
          },
          {
            "title": "Else If",
            "id": 106892,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Твоя следующая задача — проверить, является ли `mode` равным `\"light\"`.\n\n1. Добавь оператор `else if`, который выполняется, когда `mode` равно `\"light\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\nelse if (mode === \"light\") {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `else if` is similar to that of an `if` statement.\n\nThe only difference is, you have to write `else if` instead of `if`."
                }
              ]
            }
          },
          {
            "title": "Else",
            "id": 106908,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Но что, если `mode` не `\"light\"` или `\"dark\"`? Для этой ситуации давай напишем оператор `else`.\n\n1. Добавь пустой оператор `else`, который выполняется, когда `mode` не `\"light\"` или `\"dark\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\nelse if (mode === \"light\") {}\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\nelse if (mode === \"light\") {}\nelse {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An `else` statement has no condition."
                }
              ]
            }
          },
          {
            "title": "Dark Mode",
            "id": 106899,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Переменные должны обновляться по-разному в каждом режиме.\n\n1. Когда `mode` равен `\"dark\"`, `color` должен обновиться на `\"darkSlateBlue\"` в блоке кода.\n2. Затем обновите `image` на `\"/img/dark-icon.png\"`.\n3. Наконец, обновите `label` на `\"Dark Mode\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n   \n\n\n} else if (mode === \"light\") {\n} else {}",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n} else {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can change a variable's value simply by assigning a new value to it again.\nMake sure to omit the `let` when you reassign a variable."
                }
              ]
            }
          },
          {
            "title": "Light Mode",
            "id": 106917,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Давайте также обновим переменные, когда `mode` равен `\"light\"`.\n\n1. Когда `mode` равен `\"light\"`, `color` должен обновиться на `\"ghostWhite\"`.\n2. Затем обновите `image` на `\"/img/light-icon.png\"`.\n3. Наконец, обновите `label` на `\"Light Mode\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  \n\n\n} else {}",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Ninja Mode",
            "id": 106916,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Наконец, пришло время обновить переменные в блоке кода `else`.\n\n1. В блоке кода `else` обнови `color` на `\"dimGray\"`.\n2. Затем обнови `image` на `\"/img/ninja-icon.png\"`.\n3. Наконец, обнови `label` на `\"Ninja Mode\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n   \n\n\n}",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Display current mode",
            "id": 106898,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь мы увидим ваш условный оператор в действии.\n\n1. Выведите переменную `label` в консоль в конце вашего кода.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\nconsole.log(label);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Switch theme",
            "id": 106914,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Теперь, когда `mode` имеет разные значения, значения `image`, `color` и `label` для нашей программы изменяются.\n\n1. Измени значение переменной `mode` на `\"ninja\"`, обновив его перед условным оператором или заменив значение при инициализации переменной.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\nconsole.log(label);",
                  "solvedContent": "let mode = \"ninja\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\nconsole.log(label);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}