{
  "tutorial": {
    "id": 2799,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Interfaces",
    "descriptionContent": "Learn about interfaces in TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14796,
        "title": "Interfaces",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #4 - Copy",
            "id": 130810,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Interfaces work similarly to type annotations in TypeScript, allowing you to define custom types for objects and enforce type safety.</p><p>We declare an interface with the keyword <code>interface</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"9\" /><option correct=\"false\"><content><text value=\"type\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>interface</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130811,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>After the <code>interface</code> keyword, we need a name.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Person\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"10\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"type\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>Person</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 130812,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Finally, we specify the attributes every object conforming to the new interface must include.</p><p>Notice we don't use an equal <code>=</code> sign here as we would when using type aliases.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"18\" /><option startIndex=\"20\" endIndex=\"24\" /><option startIndex=\"24\" endIndex=\"25\" /><option startIndex=\"26\" endIndex=\"33\" /><option startIndex=\"34\" endIndex=\"35\" /><option correct=\"false\"><content><text value=\"let\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>{</code> followed by <code>name</code> and then <code>:</code>, <code>string;</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130639,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assigning an interface to a new variable works exactly like specifying a type.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person: Person = {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"&quot;Lisa&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(person.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"10\" endIndex=\"16\" /><option startIndex=\"49\" endIndex=\"55\" /><option correct=\"false\"><content><text value=\"Lisa\" /></content></option></options></interaction></interactions><output><content><text value=\"Lisa\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>Person</code>, followed by <code>Person</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130813,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Using the <code>extends</code> keyword, we can create a new interface that inherits properties from an existing interface.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" species: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"interface\" class=\"keyword\" /><text value=\" Pet \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"62\" endIndex=\"68\" /><option correct=\"false\"><content><text value=\"=\" /></content></option><option correct=\"false\"><content><text value=\"let \" /></content></option><option correct=\"false\"><content><text value=\"number\" /></content></option><option startIndex=\"50\" endIndex=\"53\" /><option startIndex=\"54\" endIndex=\"61\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>Pet</code>, followed by <code>extends</code>, and finally <code>Animal</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 131286,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When a variable conforms to an interface that extends another one, it must satisfy both the extended and the base interface.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" species: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"interface\" class=\"keyword\" /><text value=\" Pet \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" doggy: Pet = {\" /><text type=\"break\" /><text value=\" species: \" /><text value=\"&quot;Dog&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"&quot;Buddy&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(doggy);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"109\" endIndex=\"124\" /><option correct=\"false\"><content><text value=\"species: &quot;Dog&quot;\" /></content></option><option startIndex=\"126\" endIndex=\"139\" /></options></interaction></interactions><output><content><text value=\"{species: &quot;Dog&quot;, name: &quot;Buddy&quot;}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>species: \"Dog\",</code>, followed by <code>name: \"Buddy\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130816,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which keyword is used to define an interface in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>interface</code></item><item value=\"2\" correct=\"false\"><code>type</code></item><item value=\"3\" correct=\"false\"><code>class</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>interface</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130817,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When creating the <code>car</code> variable, ensure that it confirms the <code>Car</code> interface.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Car {\" /><text type=\"break\" /><text value=\" brand: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" model: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" car: Car = {\" /><text type=\"break\" /><text value=\" brand: \" /><text value=\"&quot;Toyota&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" model: \" /><text value=\"&quot;Camry&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(car.brand);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"69\" endIndex=\"85\" /><option correct=\"false\"><content><text value=\"year: 1982,\" /></content></option></options></interaction></interactions><output><content><text value=\"Toyota\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>brand: \"Toyota\",</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11 - Copy",
            "id": 130818,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the code to create a <code>Book</code> and <code>EBook</code> interface.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Book {\" /><text type=\"break\" /><text value=\" title: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" author: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" pages: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"interface\" class=\"keyword\" /><text value=\" EBook \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Book {\" /><text type=\"break\" /><text value=\" fileSizeMB: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" format: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"9\" /><option startIndex=\"79\" endIndex=\"84\" /><option startIndex=\"85\" endIndex=\"92\" /><option startIndex=\"93\" endIndex=\"97\" /><option correct=\"false\"><content><text value=\"EBook\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>interface</code> followed by <code>EBook</code> and then <code>extends</code>, <code>Book</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130814,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What keyword is used to extend one interface from another in TypeScript?<br /><br /></p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>extends</code></item><item value=\"2\" correct=\"false\"><code>inherits</code></item><item value=\"3\" correct=\"false\"><code>implements</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11 - Copy - Copy",
            "id": 130819,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make sure our warrior game character extends the <code>Character</code> interface.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Character {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" health: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"interface\" class=\"keyword\" /><text value=\" Warrior \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Character {\" /><text type=\"break\" /><text value=\" weapon: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" strength: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"75\" endIndex=\"82\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>extends</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}