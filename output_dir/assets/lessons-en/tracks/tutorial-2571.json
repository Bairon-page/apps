{
  "tutorial": {
    "id": 2571,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "swift",
    "title": "Using Classes",
    "descriptionContent": "Using Classes",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14329,
        "title": "Classes",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro 1",
            "id": 127455,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>As we build programs, we'll often need to create many similar but distinct objects. Like various different configurations of a computer.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" computer1Size = \" /><text value=\"&quot;15&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer1Storage = \" /><text value=\"&quot;1TB&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer2Size = \" /><text value=\"&quot;13&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer2Storage = \" /><text value=\"&quot;256GB&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;computer1 display size: \\(computer1Size)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;computer1 storage space: \\(computer1Storage)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;computer2 display size: \\(computer2Size)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;computer2 storage space: \\(computer2Storage)&quot;\" class=\"string\" /><text value=\")\" /></content><output><content><text value=\"computer1 display size: 15\" /><text type=\"break\" /><text value=\"computer1 storage space: 1TB\" /><text type=\"break\" /><text value=\"computer2 display size: 13\" /><text type=\"break\" /><text value=\"computer2 storage space: 256GB\" /></content></output></code></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 127456,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Creating new variables for each of the different configurations of a computer would take a lot of time and could lead to mistakes.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" computer1_size = \" /><text value=\"&quot;15&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer1_storage = \" /><text value=\"&quot;1TB&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer2_size = \" /><text value=\"&quot;13&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer2_storage = \" /><text value=\"&quot;256GB&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer3_size = \" /><text value=\"&quot;27&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer3_storage = \" /><text value=\"&quot;2TB&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer4_size = \" /><text value=\"&quot;21&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer4_storage = \" /><text value=\"&quot;512GB&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer5_size = \" /><text value=\"&quot;11&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" computer5_storage = \" /><text value=\"&quot;128GB&quot;\" class=\"string\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"258\" endIndex=\"279\" /><option startIndex=\"280\" endIndex=\"281\" /><option startIndex=\"282\" endIndex=\"289\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>let computer5_storage</code>, followed by <code>=</code>, and finally <code>\"128GB\"</code>.</p></body></html>"
          },
          {
            "title": "Intro 3",
            "id": 127457,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To help us group data and functionality, we create a <strong>class</strong>. A class is a template that we use to create many similar but distinct things.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Computer\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" size: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" storage: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(size: \" /><text value=\"String\" class=\"type\" /><text value=\", storage: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".size = size\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".storage = storage\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"printSpecs\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Display size: \\(size)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Storage size: \\(storage)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" lowSpec = \" /><text value=\"Computer\" class=\"type\" /><text value=\"(size: \" /><text value=\"&quot;13&quot;\" class=\"string\" /><text value=\", storage: \" /><text value=\"&quot;256GB&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" highSpec = \" /><text value=\"Computer\" class=\"type\" /><text value=\"(size: \" /><text value=\"&quot;27&quot;\" class=\"string\" /><text value=\", storage: \" /><text value=\"&quot;1TB&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Low Spec Computer:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"lowSpec.printSpecs()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;High Spec Computer:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"highSpec.printSpecs()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option correct=\"false\"><content><text value=\"print\" /></content></option></options></interaction></interactions><output><content><text value=\"Low Spec Computer:\" /><text type=\"break\" /><text value=\"Display size: 13\" /><text type=\"break\" /><text value=\"Storage size: 256GB\" /><text type=\"break\" /><text value=\"High Spec Computer:\" /><text type=\"break\" /><text value=\"Display size: 27\" /><text type=\"break\" /><text value=\"Storage size: 1TB\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>class</code>.</p></body></html>"
          },
          {
            "title": "Intro 4",
            "id": 127458,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>By using a template, we can create different configurations without having to create individual variables like <code>size</code> and <code>storage</code> each time.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Computer\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" size: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" storage: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(size: \" /><text value=\"String\" class=\"type\" /><text value=\", storage: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"self\" class=\"keyword\" /><text value=\".size = size\" /><text type=\"break\" /><text value=\"   \" /><text value=\"self\" class=\"keyword\" /><text value=\".storage = storage\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"printSpecs\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Display size: &quot;\" class=\"string\" /><text value=\" + size)\" /><text type=\"break\" /><text value=\"    \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Storage size: &quot;\" class=\"string\" /><text value=\" + storage)\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" lowSpec = \" /><text value=\"Computer\" class=\"type\" /><text value=\"(size: \" /><text value=\"&quot;13&quot;\" class=\"string\" /><text value=\", storage: \" /><text value=\"&quot;256GB&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" midSpec = \" /><text value=\"Computer\" class=\"type\" /><text value=\"(size: \" /><text value=\"&quot;15&quot;\" class=\"string\" /><text value=\", storage: \" /><text value=\"&quot;512GB&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" highSpec = \" /><text value=\"Computer\" class=\"type\" /><text value=\"(size: \" /><text value=\"&quot;17&quot;\" class=\"string\" /><text value=\", storage: \" /><text value=\"&quot;1TB&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" premiumSpec = \" /><text value=\"Computer\" class=\"type\" /><text value=\"(size: \" /><text value=\"&quot;17&quot;\" class=\"string\" /><text value=\", storage: \" /><text value=\"&quot;2TB&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /></content></code></body></html>"
          },
          {
            "title": "Class",
            "id": 127459,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To start creating the template we add the keyword <code>class</code> followed by a name and a pair of parentheses. Here, we'll create the <code>class</code>, called <code>Person</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\"() \" /><text value=\"{}\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"12\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>class</code>, followed by <code>Person</code>.</p></body></html>"
          },
          {
            "title": "Class",
            "id": 127460,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To add code to the class, we indent from the keyword <code>class</code>. like with the <code>sayHello()</code> function here.</p><code version=\"2\" codelang=\"swift\" name=\"script.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"sayHello\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"  \" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"21\" /><option startIndex=\"22\" endIndex=\"30\" /><option startIndex=\"30\" endIndex=\"31\" /><option startIndex=\"31\" endIndex=\"32\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>func</code> followed by <code>sayHello</code> and then <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Class",
            "id": 127461,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Creating a variable inside a class works just like creating normal variables and constants. It needs to be properly assigned a value.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" nationality = \" /><text value=\"&quot;French&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"33\" endIndex=\"34\" /><option startIndex=\"35\" endIndex=\"43\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>=</code>, followed by <code>\"French\"</code>.</p></body></html>"
          },
          {
            "title": "Class",
            "id": 127462,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can add as many properties as we'd like inside a class, like with property <code>hobby</code> with the value <code>\"Cooking\"</code> here.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" nationality = \" /><text value=\"&quot;French&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" hobby = \" /><text value=\"&quot;Cooking&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"58\" endIndex=\"67\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>\"Cooking\"</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 127463,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Should the following code be group into a class?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" person1Name = \" /><text value=\"&quot;Jess&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person1Age = \" /><text value=\"24\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person2Name = \" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person2Age = \" /><text value=\"77\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person3Name = \" /><text value=\"&quot;Emily&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person3Age = \" /><text value=\"5\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Yes, a class could group a person with the variable's 'name' and 'age'</item><item value=\"2\" correct=\"false\">No, because there's no related data or functionality to store</item></selection><p visible-if=\"wrong\">Yes, a class could group a person with the variable's 'name' and 'age'.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 127464,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which of the following is the correct way to define a class using the keyword <code>class</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>Class grocery { }</code></item><item value=\"2\" correct=\"true\"><code>class Grocery { }</code></item></selection><p visible-if=\"wrong\"><code>class Grocery { }</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 127465,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which scenario does it make sense to use a class instead of multiple variables?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Coding an online store where there are items with a picture and name</item><item value=\"2\" correct=\"false\">Coding a one-time user-inputted function</item></selection><p visible-if=\"wrong\">Coding an online store where there are items with a picture and name.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 127466,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How many properties can we add to a class in Swift?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">As many as we want</item><item value=\"2\" correct=\"false\">Two properties</item></selection><p visible-if=\"wrong\">As many as we want.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 127467,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assemble a class using the keyword <code>class</code>, the class name <code>Flower</code>, and <code>{ }</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Flower\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color = \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"12\" /><option startIndex=\"13\" endIndex=\"14\" /><option startIndex=\"35\" endIndex=\"36\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>class</code> followed by <code>Flower</code> and then <code>{</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 127468,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add another property to the class called <code>species</code> and set the value to be <code>rose</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Flower\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color = \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" species = \" /><text value=\"&quot;rose&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"40\" /><option startIndex=\"41\" endIndex=\"48\" /><option startIndex=\"49\" endIndex=\"50\" /><option startIndex=\"51\" endIndex=\"57\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>let</code> followed by <code>species</code> and then <code>=</code>, <code>\"rose\"</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 127469,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assemble a <code>Bird</code> class and define a variable called 'can_fly' that has the value <code>true</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" canFly = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"19\" endIndex=\"25\" /><option startIndex=\"28\" endIndex=\"32\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>class</code>, followed by <code>canFly</code>, and finally <code>true</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}