{
  "tutorial": {
    "id": 1747,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "File Size Checker",
    "descriptionContent": "Write code that uses a function to check if a file's size is within the upload limits",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1747-icon-banner.svg",
    "chapters": [
      {
        "id": 11622,
        "title": "File Size Checker",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Function",
            "id": 106853,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's write code that uses a function to check if a file's size is within the upload limits.\n\nWe need to create a function that would check the size of the file\n\n1. Create a function called `checkSize()` with the parameter `fileSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function checkSize(fileSize) {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Max Size",
            "id": 106855,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's also create a variable that would store the maximum file size allowable. \n\n1. Create a constant called `maxSize` that holds the maximum allowed gigabytes and set it to `5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Min Size",
            "id": 106864,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Since we have a variable for the maximum file size, let's also have one for the minimum file size. \n\n1. Create a constant called `minSize` that holds the minimum allowed gigabytes and set it to `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Upload",
            "id": 106859,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We'll display whether or not the upload will be permitted based on the file size.\n\n1. Use a display statement to display `\"Upload Permitted?\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Comparison of maximum size",
            "id": 106856,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's tell the user if they have exceeded the maximum file size. We can do so by checking if `fileSize` is greater than the `maxSize`.\n\n1.  Create a constant `overMaxSize`, check if `fileSize` is greater than `maxSize`, and store the result in the constant\n2. Add another display statement that displays `\"The file is too large: \" + overMaxSize`. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `>` operator to check if a value is greater than another value."
                }
              ]
            }
          },
          {
            "title": "Comparison of minimum size",
            "id": 106858,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's also tell the users if their file upload is too small. We can check if `fileSize` is less than the `minSize`.\n\n1. Create a constant `underMinSize`, check if `fileSize` is less than `minSize`, and store the result in the constant.\n2. Add another display statement that displays `\"The file is too small: \"+ underMinSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `<` operator to check if a value is less than another value."
                }
              ]
            }
          },
          {
            "title": "Calling",
            "id": 106849,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we've created a function, let's put it to use. To use a function, we need to call it.\n\n1. Create a new constant that holds a number value, then pass that constant to the `checkSize()` function.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}\nconst movieSizeGB = 6;\ncheckSize(movieSizeGB);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to call a function is:\n```javascript\nfunctionName(value);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}