{
  "tutorial": {
    "id": 1368,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Using List Comprehensions",
    "descriptionContent": "list comp",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9986,
        "title": "List Comprehensions",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro 1",
            "id": 89365,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To create a list like <code>halved</code> based on another like <code>prices</code>, we need to first create an empty list, then fill it inside a loop.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"halved = []\" /><text type=\"break\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices:\" /><text type=\"break\" /><text value=\"  half_price = price/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"  halved.append(half_price)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"41\" /><option startIndex=\"89\" endIndex=\"114\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>halved = []</code>, followed by <code>halved.append(half_price)</code>.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 89366,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can build the same <code>halved</code> list as before, but in one line, using <strong>list comprehensions</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"37\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>halved</code>.</p></body></html>"
          },
          {
            "title": "Intro 3",
            "id": 89367,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The list comprehension creating <code>halved_lc</code> is an equivalent, but more compact version of the code creating <code>halved_loop</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved_lc = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved_lc)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved_loop = []\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices:\" /><text type=\"break\" /><text value=\"  half_price = price/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"  halved_loop.append(half_price)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved_loop)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"40\" /><option startIndex=\"91\" endIndex=\"102\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /><text type=\"break\" /><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>halved_lc</code>, followed by <code>halved_loop</code>.</p></body></html>"
          },
          {
            "title": "List comprehensions",
            "id": 89369,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A list comprehension is a way to create a new list like <code>halved</code> by applying an expression on each element of an existing list, like <code>prices</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"39\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>halved</code>, followed by <code>=</code>.</p></body></html>"
          },
          {
            "title": "Square brackets",
            "id": 89368,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Since a list comprehension returns a new list, we start with square brackets <code>[]</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"68\" endIndex=\"69\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>[</code>, followed by <code>]</code>.</p></body></html>"
          },
          {
            "title": "For loop",
            "id": 89370,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>List comprehensions use <code>for</code> loops to iterate through each element of the original list, like here with <code>for price in prices</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"49\" endIndex=\"68\" /></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>for price in prices</code>.</p></body></html>"
          },
          {
            "title": "For loop 2",
            "id": 89371,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Like with any <code>for</code> loop, <code>price</code> is the variable that holds the list elements one by one, while <code>prices</code> is the list we're looping over.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"58\" /><option startIndex=\"62\" endIndex=\"68\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>price</code>, followed by <code>prices</code>.</p></body></html>"
          },
          {
            "title": "Expression",
            "id": 89372,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>At the beginning of the list comprehension, we write an expression to apply on each element, like halving each price with <code>price/2</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"41\" endIndex=\"48\" /></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>price/2</code>.</p></body></html>"
          },
          {
            "title": "Variable ",
            "id": 89374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>By assigning a list comprehension to a variable like <code>halved</code>, we are actually saving the resulting list into the variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"39\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>halved</code>, followed by <code>=</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro 3",
            "id": 89514,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the difference between the list stored in <code>codes_a</code> and <code>codes_b</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"flights = [\" /><text value=\"&quot;1122&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;5788&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;0044&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"codes_a = [\" /><text value=\"&quot;BA&quot;\" class=\"string\" /><text value=\" + flight \" /><text value=\"for\" class=\"keyword\" /><text value=\" flight \" /><text value=\"in\" class=\"keyword\" /><text value=\" flights]\" /><text type=\"break\" /><text value=\"print(codes_a)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"codes_b = []\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" flight \" /><text value=\"in\" class=\"keyword\" /><text value=\" flights:\" /><text type=\"break\" /><text value=\"  code = \" /><text value=\"&quot;BA&quot;\" class=\"string\" /><text value=\" + flight\" /><text type=\"break\" /><text value=\"  codes_b.append(code)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(codes_b)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /></content><output><content><text value=\"['BA1122', 'BA5788', 'BA0044']\" /><text type=\"break\" /><text value=\"['BA1122', 'BA5788', 'BA0044']\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">There's no difference, they are equivalent</item><item value=\"2\" correct=\"false\">Unlike <code>codes_b</code>, <code>codes_a</code> doesn't store a list</item></selection><p visible-if=\"wrong\">There's no difference, they are equivalent.</p></body></html>"
          },
          {
            "title": "Question: List comprehensions",
            "id": 89515,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What do we use list comprehensions for?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">For creating new lists based on existing ones in less code</item><item value=\"2\" correct=\"false\">For changing existing lists, without keeping the original</item></selection><p visible-if=\"wrong\">For creating new lists based on existing ones in less code.</p></body></html>"
          },
          {
            "title": "Question: Square brackets",
            "id": 89516,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What do we use to surround the expression and loop belonging to a list comprehension?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Square brackets <code>[]</code></item><item value=\"2\" correct=\"false\">Nothing, we use indentation just like we do inside loops</item></selection><p visible-if=\"wrong\">Square brackets <code>[]</code>.</p></body></html>"
          },
          {
            "title": "Question: For loop",
            "id": 89517,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How does the code inside a list comprehension access each element of the original list?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Using a <code>for</code> loop to iterate through each element</item><item value=\"2\" correct=\"false\">It doesn't, it can just access the first element</item></selection><p visible-if=\"wrong\">Using a <code>for</code> loop to iterate through each element.</p></body></html>"
          },
          {
            "title": "Question: Expression",
            "id": 89519,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does <code>m/1000</code> represent in this list comprehension?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"meters = [\" /><text value=\"100\" class=\"number\" /><text value=\", \" /><text value=\"3800\" class=\"number\" /><text value=\", \" /><text value=\"4000\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"kilometers = [m/\" /><text value=\"1000\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" m \" /><text value=\"in\" class=\"keyword\" /><text value=\" meters]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(kilometers)\" /></content><output><content><text value=\"[0.1, 3.8, 4.0]\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">An expression that is applied on each element accessed in the <code>for</code> loop</item><item value=\"2\" correct=\"false\">A condition</item></selection><p visible-if=\"wrong\">An expression that is applied on each element accessed in the <code>for</code> loop.</p></body></html>"
          },
          {
            "title": "Question: Variable",
            "id": 89520,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the variable <code>km</code> store?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"miles = [\" /><text value=\"100\" class=\"number\" /><text value=\", \" /><text value=\"57\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"km = [value * \" /><text value=\"1.609\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" value \" /><text value=\"in\" class=\"keyword\" /><text value=\" miles]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(km)\" /></content><output><content><text value=\"[160.9, 91.713, 64.36, 32.18]\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A list of values represented as kilometers</item><item value=\"2\" correct=\"false\">Only the first value of the <code>miles</code> list, converted to kilometers</item></selection><p visible-if=\"wrong\">A list of values represented as kilometers.</p></body></html>"
          },
          {
            "title": "Example: Intro 3",
            "id": 89521,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code an expression inside this list comprehension, so that it creates the same list as the one created by the for loop.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"answers = [\" /><text value=\"True\" class=\"literal\" /><text value=\", \" /><text value=\"False\" class=\"literal\" /><text value=\", \" /><text value=\"False\" class=\"literal\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"opposite = []\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" answer \" /><text value=\"in\" class=\"keyword\" /><text value=\" answers:\" /><text type=\"break\" /><text value=\"  opposite.append(\" /><text value=\"not\" class=\"keyword\" /><text value=\" answer)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(opposite)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print([\" /><text value=\"not\" class=\"keyword\" /><text value=\" answer \" /><text value=\"for\" class=\"keyword\" /><text value=\" answer \" /><text value=\"in\" class=\"keyword\" /><text value=\" answers])\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"125\" endIndex=\"128\" /><option startIndex=\"129\" endIndex=\"135\" /></options></interaction></interactions><output><content><text value=\"[False, True, True]\" /><text type=\"break\" /><text value=\"[False, True, True]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>not</code>, followed by <code>answer</code>.</p></body></html>"
          },
          {
            "title": "Example: Square brackets",
            "id": 89523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the list comprehension assigned to the <code>renewed</code> variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"expiry_years = [\" /><text value=\"2018\" class=\"number\" /><text value=\", \" /><text value=\"2020\" class=\"number\" /><text value=\", \" /><text value=\"2019\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"renewed = [year + \" /><text value=\"4\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" year \" /><text value=\"in\" class=\"keyword\" /><text value=\" expiry_years]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(renewed)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"46\" /><option startIndex=\"79\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option><option correct=\"false\"><content><text value=\"(\" /></content></option><option correct=\"false\"><content><text value=\")\" /></content></option></options></interaction></interactions><output><content><text value=\"[2022, 2024, 2023]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>[</code>, followed by <code>]</code>.</p></body></html>"
          },
          {
            "title": "Example: For loop",
            "id": 89524,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Inside this list comprehension, add a <code>for</code> loop to iterate through each <code>age</code> in the <code>ages</code> list.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"ages = [\" /><text value=\"15\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"19\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"can_drive = [age &gt;= \" /><text value=\"18\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" age \" /><text value=\"in\" class=\"keyword\" /><text value=\" ages]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(can_drive)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"47\" /><option startIndex=\"48\" endIndex=\"51\" /><option startIndex=\"52\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"59\" /></options></interaction></interactions><output><content><text value=\"[False, True, True]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>for</code> followed by <code>age</code> and then <code>in</code>, <code>ages</code>.</p></body></html>"
          },
          {
            "title": "Example: For loop 2",
            "id": 89525,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the for loop inside this list comprehension by filling it with the variable we use during the iteration, as well as the list name.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"results = [\" /><text value=\"3.12\" class=\"number\" /><text value=\", \" /><text value=\"8.2\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"corrected = [result + \" /><text value=\"1\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" result \" /><text value=\"in\" class=\"keyword\" /><text value=\" results]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(corrected)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"54\" endIndex=\"60\" /><option startIndex=\"64\" endIndex=\"71\" /></options></interaction></interactions><output><content><text value=\"[4.12, 9.2, 8]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>result</code>, followed by <code>results</code>.</p></body></html>"
          },
          {
            "title": "Example: Expression",
            "id": 89526,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create a list of booleans telling us which ages are old enough for driving by coding an expression that checks if <code>age</code> is greater than <code>17</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"ages = [\" /><text value=\"15\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"19\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"can_drive = [age &gt; \" /><text value=\"17\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" age \" /><text value=\"in\" class=\"keyword\" /><text value=\" ages]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(can_drive)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"34\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"39\" /><option startIndex=\"40\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"[False, True, True]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>age</code>, followed by <code>&gt;</code>, and finally <code>17</code>.</p></body></html>"
          },
          {
            "title": "Example: Variable",
            "id": 89527,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create the variable <code>corrected</code>, then save the list created by the list comprehension in the variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"results = [\" /><text value=\"3.12\" class=\"number\" /><text value=\", \" /><text value=\"8.2\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"corrected = [result + \" /><text value=\"1\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" result \" /><text value=\"in\" class=\"keyword\" /><text value=\" results]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(corrected)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"26\" endIndex=\"37\" /></interactions><output><content><text value=\"[4.12, 9.2, 8]\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>corrected =</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}