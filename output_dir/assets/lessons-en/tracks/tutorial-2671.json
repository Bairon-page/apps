{
  "tutorial": {
    "id": 2671,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Library - Part 1",
    "descriptionContent": "Dive into OOP by crafting book objects. This first part of the project introduces you to creating and managing your own digital bookshelf.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2671-icon-banner.svg",
    "chapters": [
      {
        "id": 14646,
        "title": "Chapter #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 129536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Welcome to the **Library** project, where we'll use object-oriented programming to create a library system to keep track of books. We'll start with the `Book` class.\n\n1. Create a new class named `Book`.\n2. In the `__init__` method, add `self`, `title`, and `author` as parameters.\n3. Store `title` in `self.title`.\n4. Store `author` in `self.author`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Add an `available` property to the `Book` class. This property signifies whether the book is available for checkout or not.\n\n1. In the `__init__` method, set `self.available` to `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Create a `checkout` method for the `Book` class. This method will change the `available` property to `False` if the book is available and return `True`. If the book isn't available, it should return `False`.\n\n1. Add a `checkout` method.\n   - Use an if/else statement to check if the book is available.\n   - Change the `available` status to `False` if the book is available, and return `True`.\n   - If the book isn't available, return `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, add a `return_book` method to the `Book` class. This method will change the available property to `True`.\n\n1. Add a `return_book` method. In this method, set `self.available` to `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's display the information about a given book.\n\n1. Add a `display_info` method. Use an f-string and the `print` function to print the book information.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 129541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "It's time to put the `Book` class to work.\n\n1. Create three variables: `book1`, `book2`, `book3`. Assign them three different books and give them all different titles and author values.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 129542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, create a list named `books`, and put all the books into the list.\n\n1. Create a list named `books` and add `book1`, `book2`, and `book3` to it.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 129543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finally, use a for loop to display the information of each book in the `books` list.\n\n1. Use a for loop to iterate through the `books` list. Call the `display_info` method for each book.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]\nfor book in books:\n  book.display_info()"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}