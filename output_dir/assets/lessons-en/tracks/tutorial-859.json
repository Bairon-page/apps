{
  "tutorial": {
    "id": 859,
    "version": 19,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Extending Classes",
    "descriptionContent": "Learn how to write new classes based on other classes' functionality.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6493,
        "title": "Inheritance",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro 1",
            "id": 56351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Imagine we're making a zoo game. The animals in the zoo have a lot in common, but they're also different in many ways.</p><p>That's where <strong>inheritance</strong> comes into play.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 56362,
            "contentType": "interactive",
            "images": [
              {
                "id": "e2b1c6fa-3d58-45ca-a767-16c9bfdd35a8"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can create an <code>Animal</code> class to bundle the <strong>main features</strong> of the animals.</p><p>Then, using inheritance, we can <em>extend</em> it with <strong>additional functionality</strong> for the different kinds of animals.</p><img src=\"e2b1c6fa-3d58-45ca-a767-16c9bfdd35a8\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Extends",
            "id": 56814,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To inherit features from a class, we need to use the <code>extends</code> keyword in the class definition.</p><p>By coding <code>extends</code>, we'll make the <code>Dog</code> class inherit from the <code>Animal</code> class.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"71\" endIndex=\"78\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Property inheritance",
            "id": 56815,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Inheritance gives a class all the <strong>properties and methods</strong> of the class it's extending or inheriting from.</p><p>See it for yourself: create an object from the <code>Dog</code> class and display it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Pug&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(dog);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"104\" /><option startIndex=\"105\" endIndex=\"108\" /><option startIndex=\"109\" endIndex=\"114\" /><option startIndex=\"129\" endIndex=\"132\" /></options></interaction></interactions><output><content><text value=\"Dog { name: 'Pug' }\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>new</code> followed by <code>Dog</code> and then <code>\"Pug\"</code>, <code>dog</code>.</p></body></html>"
          },
          {
            "title": "Subclass and superclass",
            "id": 56816,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Since <code>Dog</code> inherits from <code>Animal</code>, it's a <strong>subclass</strong> of the <code>Animal</code> class. The <code>Animal</code> class, then, is its <strong>superclass</strong>.</p><p>Make sure the <code>Dog</code> class inherits the properties of its superclass, <code>Animal</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"71\" endIndex=\"78\" /><option startIndex=\"79\" endIndex=\"85\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>Dog</code>, followed by <code>extends</code>, and finally <code>Animal</code>.</p></body></html>"
          },
          {
            "title": "Question: Inherits",
            "id": 56353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does it mean when we say class <code>A</code> inherited from class <code>B</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Class <code>A</code> can access all of class <code>B</code>'s properties and methods</item><item value=\"2\" correct=\"false\">They can access each other's properties and methods</item></selection><p /><p visible-if=\"wrong\">Class <code>A</code> can access all of class <code>B</code>'s properties and methods.</p></body></html>"
          },
          {
            "title": "Question: Extends",
            "id": 56354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the keyword to make a class inherit from another?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>extends</code></item><item value=\"2\" correct=\"false\"><code>inherits</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Question: Superclass",
            "id": 56357,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What do we call a class that other classes inherit from?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Superclass</item><item value=\"2\" correct=\"false\">General class</item></selection><p visible-if=\"wrong\">Make sure to pick Superclass.</p></body></html>"
          },
          {
            "title": "Question: Subclass",
            "id": 56969,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the subclass inherit from the superclass?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"2\" correct=\"true\">Its methods and properties</item><item value=\"3\" correct=\"false\">Its name</item></selection><p visible-if=\"wrong\">Its methods and properties.</p></body></html>"
          },
          {
            "title": "Example: Extends",
            "id": 108645,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make the <code>Dishwasher</code> class inherit from the <code>Appliance</code> class.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(brand) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".brand = brand;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dishwasher\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"84\" endIndex=\"91\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Example: Property inheritance",
            "id": 108646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create an object from the <code>Dishwasher</code> class and display it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(brand) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".brand = brand;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dishwasher\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" kitchenAppliance = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dishwasher(\" /><text value=\"&quot;Laundrys&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(kitchenAppliance);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"130\" endIndex=\"133\" /><option startIndex=\"134\" endIndex=\"144\" /><option startIndex=\"145\" endIndex=\"155\" /><option startIndex=\"170\" endIndex=\"186\" /></options></interaction></interactions><output><content><text value=\"Dishwasher { brand: 'Laundrys' }\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>new</code> followed by <code>Dishwasher</code> and then <code>\"Laundrys\"</code>, <code>kitchenAppliance</code>.</p></body></html>"
          },
          {
            "title": "Example: Subclass and superclass",
            "id": 108727,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make sure the <code>Dishwasher</code> class inherits the properties of its superclass, <code>Appliance</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(brand) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".brand = brand;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dishwasher\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"83\" /><option startIndex=\"84\" endIndex=\"91\" /><option startIndex=\"92\" endIndex=\"101\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>Dishwasher</code>, followed by <code>extends</code>, and finally <code>Appliance</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 11902,
        "title": "Inheritance Advanced",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Constructor inheritance",
            "id": 108631,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If a subclass doesn't have a <code>constructor()</code> method, the superclass' constructor becomes the <strong>default constructor</strong>.</p><p>The <code>name</code> property of <code>dog</code> gets created through the <code>Animal</code> class' constructor. Try and access it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Pug&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(dog.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"129\" endIndex=\"132\" /><option startIndex=\"132\" endIndex=\"133\" /><option startIndex=\"133\" endIndex=\"137\" /><option correct=\"false\"><content><text value=\"animal.name\" /></content></option></options></interaction></interactions><output><content><text value=\"Pug\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>dog</code>, followed by <code>.</code>, and finally <code>name</code>.</p></body></html>"
          },
          {
            "title": "Method inheritance",
            "id": 108632,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A subclass also inherits its superclass' <strong>methods</strong>.</p><p>Try calling the <code>eat()</code> method through the <code>Dog</code> instance.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"this\" class=\"keyword\" /><text value=\".name + \" /><text value=\"&quot; is eating&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Chocolate Lab&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"180\" endIndex=\"183\" /><option startIndex=\"183\" endIndex=\"184\" /><option startIndex=\"184\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"188\" /><option startIndex=\"188\" endIndex=\"189\" /></options></interaction></interactions><output><content><text value=\"Chocolate Lab is eating\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>dog</code> followed by <code>.</code> and then <code>eat</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Multiple subclasses",
            "id": 108633,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can create as many subclasses of <code>Animal</code> as we want. They'll <em>all</em> have access to the properties of the <code>Animal</code> class.</p><p>Make the <code>Bird</code> class inherit from the <code>Animal</code> class and call <code>eat()</code> on a <code>Bird</code> object.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"this\" class=\"keyword\" /><text value=\".name + \" /><text value=\"&quot; is eating&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Chocolate Lab&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" bird = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Bird(\" /><text value=\"&quot;Blue Jay&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.eat();\" /><text type=\"break\" /><text value=\"bird.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"148\" endIndex=\"152\" /><option startIndex=\"153\" endIndex=\"160\" /><option startIndex=\"161\" endIndex=\"167\" /><option startIndex=\"260\" endIndex=\"263\" /><option startIndex=\"263\" endIndex=\"264\" /><option startIndex=\"264\" endIndex=\"265\" /></options></interaction></interactions><output><content><text value=\"Chocolate Lab is eating\" /><text type=\"break\" /><text value=\"Blue Jay is eating\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>Bird</code> followed by <code>extends</code> and then <code>Animal</code>, <code>eat</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Additional functionality",
            "id": 108634,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Inheritance becomes useful when subclasses have <strong>additional functionality</strong>, like their own methods.</p><p>Only dogs can bark. Add a <code>bark()</code> method to the <code>Dog</code> class and call it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" bark() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Poodle&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.bark();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"89\" endIndex=\"95\" /><option startIndex=\"158\" endIndex=\"161\" /><option startIndex=\"161\" endIndex=\"162\" /><option startIndex=\"162\" endIndex=\"168\" /></options></interaction></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>bark()</code> followed by <code>dog</code> and then <code>.</code>, <code>bark()</code>.</p></body></html>"
          },
          {
            "title": "One-way inheritance",
            "id": 108635,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Inheritance works <strong>one way</strong> only. Not all instances of <code>Animal</code> are a kind of <code>Dog</code>, so they <em>can't</em> access specific <code>Dog</code> functionality.</p><p>What would happen if we try to make the bird <code>.bark();</code>, would it work?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" bark() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Sparky&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.bark();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" bird = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Animal(\" /><text value=\"&quot;Parrot&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"bird.bark();\" /></content><output><content><text value=\"\" /><text type=\"break\" /><text value=\"TypeError: bird.bark is not a function\" /><text type=\"break\" /><text value=\"\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, an error will show up</item><item value=\"2\" correct=\"false\">Yes, some species of birds can bark</item></selection><p visible-if=\"wrong\">No, an error will show up.</p></body></html>"
          },
          {
            "title": "Question: Constructor inheritance",
            "id": 56970,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How can we create an instance from <code>Bike</code> with a set <code>speed</code> property?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Vehicle\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(speed) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".speed = speed;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bike\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Vehicle\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">With <code>const bike = new Bike(\"15 km/h\");</code></item><item value=\"2\" correct=\"false\">We can't, because <code>Bike</code> has no constructor with that property</item></selection><p visible-if=\"wrong\">With <code>const bike = new Bike(\"15 km/h\");</code>.</p></body></html>"
          },
          {
            "title": "Question: Method inheritance",
            "id": 56967,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How might we set a bookmark for the <code>cookBook</code> object?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Book\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(title) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".title = title;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".page = \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" setBookmark(page) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".page = page;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cookbook\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Book\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" cookBook = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Cookbook(\" /><text value=\"&quot;Pie&quot;\" class=\"string\" /><text value=\");\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">With <code>cookBook.setBookmark(11);</code></item><item value=\"2\" correct=\"false\">With <code>Book.setBookmark(11);</code></item></selection><p visible-if=\"wrong\">With <code>cookBook.setBookmark(11);</code>.</p></body></html>"
          },
          {
            "title": "Question: Multiple subclasses",
            "id": 108733,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How many subclasses can you create from a superclass?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">As many as you want</item><item value=\"2\" correct=\"false\">At most ten</item></selection><p visible-if=\"wrong\">As many as you want.</p></body></html>"
          },
          {
            "title": "Question: Additional functionality",
            "id": 108734,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Can subclasses only use the methods that their superclass has?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, subclasses can also have methods of their own</item><item value=\"2\" correct=\"false\">Subclasses <em>can't</em> have methods of their own</item></selection><p visible-if=\"wrong\">No, subclasses can also have methods of their own.</p></body></html>"
          },
          {
            "title": "Question: One-way inheritance",
            "id": 108735,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Can all subclasses created from a superclass access each other's methods?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, subclass-specific methods can't be accessed by other subclasses</item><item value=\"2\" correct=\"false\">Yes, all subclasses share all their specific methods</item></selection><p visible-if=\"wrong\">No, subclass-specific methods can't be accessed by other subclasses.</p></body></html>"
          },
          {
            "title": "Example: Constructor inheritance",
            "id": 108728,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Display the <code>company</code> property of <code>employee1</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee1.company);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"179\" endIndex=\"188\" /><option startIndex=\"188\" endIndex=\"189\" /><option startIndex=\"189\" endIndex=\"196\" /></options></interaction></interactions><output><content><text value=\"Human Rights Lawyers Limited\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>employee1</code>, followed by <code>.</code>, and finally <code>company</code>.</p></body></html>"
          },
          {
            "title": "Example: Method inheritance",
            "id": 108729,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Try calling the <code>clockIn()</code> method through the <code>Lawyer</code> instance.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" clockIn() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Starting work at &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".company);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"employee1.clockIn();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"234\" endIndex=\"243\" /><option startIndex=\"243\" endIndex=\"244\" /><option startIndex=\"244\" endIndex=\"251\" /><option startIndex=\"251\" endIndex=\"252\" /><option startIndex=\"252\" endIndex=\"253\" /><option startIndex=\"253\" endIndex=\"254\" /></options></interaction></interactions><output><content><text value=\"Starting work at Human Rights Lawyers Limited\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>employee1</code> followed by <code>.</code> and then <code>clockIn</code>, <code>(</code>, <code>)</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Example: Multiple subclasses",
            "id": 108730,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make the <code>LineCook</code> class inherit from the <code>Employee</code> class and call <code>clockIn()</code> on a <code>LineCook</code> object.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" clockIn() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Starting work at &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".company);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"LineCook\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee2 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" LineCook(\" /><text value=\"&quot;Tasty Veggie Bar&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"employee1.clockIn();\" /><text type=\"break\" /><text value=\"employee2.clockIn();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"187\" endIndex=\"194\" /><option startIndex=\"195\" endIndex=\"203\" /><option startIndex=\"342\" endIndex=\"351\" /><option startIndex=\"351\" endIndex=\"352\" /><option startIndex=\"352\" endIndex=\"359\" /><option startIndex=\"359\" endIndex=\"360\" /><option startIndex=\"360\" endIndex=\"361\" /></options></interaction></interactions><output><content><text value=\"Starting work at Human Rights Lawyers Limited\" /><text type=\"break\" /><text value=\"Starting work at Tasty Veggie Bar\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>extends</code> followed by <code>Employee</code> and then <code>employee2</code>, <code>.</code>, <code>clockIn</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: Additional functionality",
            "id": 108731,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add a <code>work()</code> method to the <code>Lawyer</code> class and call it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" clockIn() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Starting work at &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".company);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" work() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time to make justice!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"employee1.work();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"172\" endIndex=\"180\" /><option startIndex=\"222\" endIndex=\"223\" /><option startIndex=\"288\" endIndex=\"297\" /><option startIndex=\"297\" endIndex=\"298\" /><option startIndex=\"298\" endIndex=\"302\" /><option startIndex=\"302\" endIndex=\"303\" /><option startIndex=\"303\" endIndex=\"304\" /></options></interaction></interactions><output><content><text value=\"Time to make justice!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>work() {</code> followed by <code>}</code> and then <code>employee1</code>, <code>.</code>, <code>work</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}