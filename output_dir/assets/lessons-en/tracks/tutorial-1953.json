{
  "tutorial": {
    "id": 1953,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Flight Booking App",
    "descriptionContent": "Create a simple flight booking app using Types and Comparisons",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1953-icon-banner.svg",
    "chapters": [
      {
        "id": 12588,
        "title": "Flight Booking App",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 113811,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's use our knowledge of Types and Comparisons to create a simple flight booking app.\n\nWe've provided some starter code. Take a look at the description below to see what's already there.\n\n1. In `index.html`, there's an `h1` element, followed by a `div` element. Inside the `div` element, there are a few `p` elements that show information regarding flight booking.\n2. In `style.css`, we've assigned style properties for all the elements.\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n background: mintcream;\r\n font-family: Poppins;\r\n text-align: center;\r\n}\r\n\r\nh1 {\r\n background: turquoise;\r\n padding: 10px;\r\n color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n border-style: dashed;\r\n}\r\n\r\np {\r\n font-weight: bold;\r\n}\r\n\r\nspan {\r\n font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logging Name",
            "id": 113812,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "There are a few things to keep in mind when we book a flight, like necessary ID information, the kind of luggage included, etc.\n \nIn this app, we'll start out with some required information for booking a flight.\n\nFirst, we'll get the passenger's name.\n\n1. Create a constant named `nameOnPass` and store the name of your choice in the constant.\n2. Print `\"Passenger Name: \" + nameOnPass` in the console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to print anything in the console.\n\nUse `const <constantName> = <constantValue>` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Checking ID",
            "id": 113813,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, the ID needs to be checked. To be confirmed, the name on the ID needs to be the same as the one provided by the passenger.\n\n1. Create a constant named `nameOnId`. Store a name of your choice in it. The name can be the same as the previous name or a different one. The result will be `true` if the name matches and `false` if the name does not match.\n2. Check if `nameOnPass` equals `nameOnId` and store the comparison in a constant named `nameMatch`.\n3. Print `\"ID confirmed? \" + nameMatch` in the console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `===` operator to check if one value equals another value."
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Length",
            "id": 113814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that the passenger's ID is confirmed, we need to check if the hand baggage is eligible for the flight by checking the length and height of the baggage.\n\nLet's start with the length. The length needs to be less than 30cm to pass.\n\n1. Create a constant named `length` and store the number of your choice in it.\n2. Check if `length` is less than 30, and store the comparison in a constant named `doesLengthPass`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `<` operator to check if a value is greater than another value. "
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Height",
            "id": 113815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We'll do the same check with the height. The height needs to be less than 55 cm to pass.\n\n1. Create a `const` variable named `height` and store the number of your choice in it.\n2. Check if `height` is less than 55, and store the comparison in a constant named `doesHeightPass`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the previous code. "
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Eligibility",
            "id": 113816,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finally, after checking the length and the height, we can check if the hand baggage is eligible or not. \n\nBut here's a tricky thing. We have two conditions: `doesLengthPass` that checks if `length` is less than 30 and `doesHeightPass` that checks if `height` is less than 55. \n\nWe need *both* conditions to be `true` for the hand baggage to be eligible. How can we check both conditions together? We'll use a logical operator called **AND** (used as `&&` ). `AND` returns `true` only if both conditions are `true`.\n\n1.  To check both the conditions together with `&&`, simply put `&&` between the conditions. In this case, write `doesLengthPass && doesHeightPass` and store it in a constant named `isHandBaggageEligible`. Check the hint for an example.\n2. Print `\"Is Hand Baggage Eligible? \" + isHandBaggageEligible` in the console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Here's an example to explain the outcome. Say, the length is 23 and the height is 60. Here, `isLengthExcess` will store `true` since the length is less than 30 and `isHeightExcess` will store `false` since the height is less than 55. Since one condition is `false`, `isLengthExcess && isHeightExcess` will return `false`. "
                }
              ]
            }
          },
          {
            "title": "Round Trip Check",
            "id": 113817,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Perfect! Now, we'll check if the flight is a round trip or not. \n\nOn this app, a user can book more than one type of flight, both round-trip or one-way. We want to identify round-trip flights. \n\nHow will we confirm it's round-trip rather than 2 one-way flights? We want to create a check to confirm if it is round-trip by checking whether the destination of the current flight and the origin of the returning flight are the same.\n\n1. Create a constant named `flightDes` and store a city of your choice in it. This constant will represent the destination of the current flight. \n2. Create another constant named `returnFrom` and store a city of your choice in it. The city can be the same as `flightDes`. This constant will represent the place where the passenger is returning from.\n3. Check if `flightDes` equals `returnFrom` and store the comparison in a constant named `isRoundTrip`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logging Round Trip Check",
            "id": 113823,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "After checking, we want to display the result. \n\n1. Print `\"Round Trip Check? \"` followed by `isRoundTrip` in the console. ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Flight Capacity Check",
            "id": 113818,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "ID? Check. Hand Baggage? Check. Round Trip? Check.\n\nBut wait! Is the flight even available? Let's check again to make sure!\n\n1. Create a constant named `bookings` and store the number of your choice in it. This constant represents the current number of bookings for the flight, i.e. how many flight seats have been filled.\n2. Create another constant named `totalCapacity` and store the number of your choice in it. This constant represents the total number of seats on the flight.\n3. Check if the filled number of seats is less than the total number of seats in the flight and store the comparison in a constant named `isFlightAvailable`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Check if `bookings` is less than `totalCapacity`.\n2. Use `<` operator to check if a value is less than another value. "
                }
              ]
            }
          },
          {
            "title": "Logging Flight Capacity Check",
            "id": 113824,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, we want to display if the flight is available or not.\n\n1. Print `\"Are seats available? \"` followed by `isFlightAvailable` in the console. ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to print anything in the console."
                }
              ]
            }
          },
          {
            "title": "Displaying Information",
            "id": 113819,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Good job! We've successfully checked and displayed the user flight booking information!\n\nLet's take this to the next step by displaying the result in the HTML page that we already have.\n\nBy doing this, we'll be able to see how our console output displays on the HTML page that will be viewed by the user.\n\n1. Copy and paste the given code *below the existing code*. This will update the HTML page with the result values that we printed in the console before. Don't worry about fully understanding the code yet as we'll learn more about it in further lessons. But if you still wish to learn a bit about it, check out the hint section.\n```javascript\ndocument.querySelector(\"#name\").innerHTML = nameOnPass;\ndocument.querySelector(\"#id\").innerHTML = nameMatch;\ndocument.querySelector(\"#bag\").innerHTML = isHandBaggageEligible;\ndocument.querySelector(\"#des\").innerHTML = isRoundTrip;\ndocument.querySelector(\"#seat\").innerHTML = isFlightAvailable;\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);\r\ndocument.querySelector(\"#name\").innerHTML = nameOnPass;\r\ndocument.querySelector(\"#id\").innerHTML = nameMatch;\r\ndocument.querySelector(\"#bag\").innerHTML = isHandBaggageEligible;\r\ndocument.querySelector(\"#des\").innerHTML = isRoundTrip;\r\ndocument.querySelector(\"#seat\").innerHTML = isFlightAvailable;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "`document.querySelector` returns the HTML element that matches a CSS selector.\nFor example, `document.querySelector(\"h1\")` will return the `h1` element in this code. \nSimilarly, `document.querySelector(\"#name\"`) will return the `span` element whose `id` attribute is set to `name`. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}