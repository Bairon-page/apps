{
  "tutorial": {
    "id": 2895,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Blackjack - Part 2",
    "descriptionContent": "In the second part of the project, we'll complete the game to allow us to play against the computer",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2895-icon-banner.svg",
    "chapters": [
      {
        "id": 14986,
        "title": "Chapter #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1 - Copy",
            "id": 132216,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Welcome back to the **Blackjack** project. In the first part, we allowed the player to draw as many cards as they wanted as long as they didn't hit 21 or more.\n\nIn the second part, we'll transform it into a real Blackjack game. We'll start by ensuring the player already has two cards ready at the start of the game.\n\n1. Instead of initializing `playerHand` as an empty array, draw two cards and assign them to the array to let the player start with two cards.\n2. Instead of initializing `playerValue` as `0`, use the `calculateHandValue` function to calculate the player value after drawing the initial two cards.\n3. Display the initial hand with the `displayHand` function.\n4. Print `playerValue` to show the player the initial score from the first two cards.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [];\nlet playerValue = 0;\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 132133,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, we will include the dealer in our game. We will start by creating a variable for the dealer's hand, `dealerHand`, and initialize it with two cards drawn from the deck.\n\n1. Next to where you initialize the `playerHand`,  create a new `dealerHand` variable. Initialize this variable as an array with two randomly drawn cards.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 132134,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, we want to keep track of the value of the dealer's hand.\n\n1. Next to where you create the `playerValue` variable, add a `dealerValue` variable and assign it the return value of the function `calculateHandValue` when passing the `dealerHand` as argument.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 132217,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In Blackjack, first, the dealer is only showing one card. At the game's end, the dealer shows all their cards. Let's create a function to resemble that behavior.\n\n1. Create a new `displayDealerHand` function that takes two arguments, `hand` and `firstCardOnly`.\n2. If the second argument, `firstCardOnly`, is `true`, print the first rank of the first card from the `hand` argument only. And print a `?` for the second one.\n3. If the second argument is `false`, print the rank for every card in the passed array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy - Copy",
            "id": 132219,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Time to put the newly created function into good use.\n\n1. After displaying the player's hand and displaying the player's score, call the `displayDealerHand` function. Pass the variable `dealerHand` as the first argument and `true` as the second to only reveal the first card. Do all of that before the `while` loop.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 132135,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, we implement the logic for the dealer. If the player busts, this means the player total is over 21, the dealer automatically wins - we want to incorporate this logic into our app. \n\n1. After the `while` loop, add an `if` statement to check if the `playerValue` is above `21`. If that's the case, display that the player loses.\n2. Inside the `else` clause, add a while loop with the condition `dealerValue < 17`.\n3. Inside that loop, add a new random card via `drawCard` to the dealer's hand.\n4. Recalculate the dealer's total score with `calculateHandValue` and assign the return value to `dealerValue` to break out of the loop once the dealer hits 17 or more.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);\n\nif (playerValue > 21) {\n  console.log('You bust! Dealer wins.');\n} else {\n  while (dealerValue < 17) {\n    dealerHand.push(drawCard());\n    dealerValue = calculateHandValue(dealerHand);\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 132137,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Once the dealer is done (meaning they've got 17 or more total, or they've busted with a total over 21), we need to decide who won.\n\n1. At the top of the file, create a new variable called `winner` but don't assign a value.\n2. If the player won, assign `\"Player\"` to the newly created variable.\n3. If the dealer won, assign `\"Dealer\"` to it.\n4. Finally, if it's a tie, assign `\"Tie\"` to the `winner variable`.\n5. Print who won to let the player know.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);\n\nif (playerValue > 21) {\n  console.log('You bust! Dealer wins.');\n} else {\n  while (dealerValue < 17) {\n    dealerHand.push(drawCard());\n    dealerValue = calculateHandValue(dealerHand);\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nlet winner;\n\nconst cards = [{\n  rank: '2',\n  value: 2\n}, {\n  rank: '3',\n  value: 3\n}, {\n  rank: '4',\n  value: 4\n}, {\n  rank: '5',\n  value: 5\n}, {\n  rank: '6',\n  value: 6\n}, {\n  rank: '7',\n  value: 7\n}, {\n  rank: '8',\n  value: 8\n}, {\n  rank: '9',\n  value: 9\n}, {\n  rank: '10',\n  value: 10\n}, {\n  rank: 'J',\n  value: 10\n}, {\n  rank: 'Q',\n  value: 10\n}, {\n  rank: 'K',\n  value: 10\n}, {\n  rank: 'A',\n  value: 11\n}];\n\nfunction drawCard() {\n  return cards[Math.floor(Math.random() * cards.length)];\n}\n\nfunction calculateHandValue(hand) {\n  let value = 0;\n  let aceCount = 0;\n\n  for (let card of hand) {\n    value += card.value;\n    if (card.rank === 'A') {\n      aceCount += 1;\n    }\n  }\n\n  while (value > 21 && aceCount > 0) {\n    value -= 10;\n    aceCount -= 1;\n  }\n\n  return value;\n}\n\nfunction displayHand(hand) {\n  let ranks = '';\n\n  for (let i = 0; i < hand.length; i++) {\n    ranks += hand[i].rank;\n    if (i < hand.length - 1) {\n      ranks += ', ';\n    }\n  }\n\n  console.log(`Your hand: ${ranks}`);\n}\n\nfunction displayDealerHand(hand, firstCardOnly) {\n  let ranks = '';\n\n  if (firstCardOnly) {\n    ranks = hand[0].rank + ', ?';\n  } else {\n    for (let i = 0; i < hand.length; i++) {\n      ranks += hand[i].rank;\n      if (i < hand.length - 1) {\n        ranks += ', ';\n      }\n    }\n  }\n\n  console.log(`Dealer's hand: ${ranks}`);\n}\n\nlet playerHand = [drawCard(), drawCard()];\nlet dealerHand = [drawCard(), drawCard()];\nlet playerValue = calculateHandValue(playerHand);\nlet dealerValue = calculateHandValue(dealerHand);\ndisplayHand(playerHand);\nconsole.log(`Your score: ${playerValue}`);\ndisplayDealerHand(dealerHand, true);\n\nwhile (playerValue < 21) {\n  const action = input('Do you want to (h)it or (s)tand? ');\n  if (action === 'h') {\n    playerHand.push(drawCard());\n    playerValue = calculateHandValue(playerHand);\n    displayHand(playerHand);\n    console.log(`Your score: ${playerValue}`);\n  } else if (action === 's') {\n    break;\n  } else {\n    console.log('Invalid input, please choose \"h\" to hit or \"s\" to stand.');\n  }\n}\n\nconsole.log(`Your final score: ${playerValue}`);\n\nif (playerValue > 21) {\n  console.log('You bust! Dealer wins.');\n  winner = \"Dealer\";\n} else {\n  while (dealerValue < 17) {\n    dealerHand.push(drawCard());\n    dealerValue = calculateHandValue(dealerHand);\n  }\n}\nif (dealerValue > 21 || playerValue > dealerValue) {\n  winner = \"Player\";\n} else if (playerValue < dealerValue) {\n  winner = \"Dealer\";\n} else {\n  winner = \"Tie\";\n}\n\nconsole.log(`Winner: ${winner}`);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}