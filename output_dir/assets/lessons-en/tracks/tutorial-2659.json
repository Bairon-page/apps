{
  "tutorial": {
    "id": 2659,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Rock, Paper, Scissors - Part 1",
    "descriptionContent": "Build your very own game! We'll set the stage in this first part by crafting the basic game logic. We'll let the player and the computer choose an option and determine the winner.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2659-icon-banner.svg",
    "chapters": [
      {
        "id": 14633,
        "title": "Chapter #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129425,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Welcome to the **Rock, Paper, Scissors** project, where we'll build a rock, paper, scissors game. \n\n1. Start by using the `print` function to display a message. Inside the `print` function's parentheses, insert a string like `\"Let's play rock, paper, or scissors\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129426,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Prompt the player to make their choice. To capture user input, use the `input` function and store the user's input in a variable.\n\n1. Declare a variable `player_choice` to capture the player's input and save it in the variable. Within parentheses of the `input` function, include an appropriate prompt on choosing rock, paper, or scissors.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 129432,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "To check what the user picked, we want to transform the choice into a lowercase string. So, no matter if the user types in `Rock` or `rock`, or even `ROCK`, we can recognize it correctly.\n\n1. Add `.lower()` at the end of the `input` function to convert the input string to lowercase. It should look like the following snippet:\n   ```Python\n   player_choice = input(\"Choose rock, paper, or scissors: \").lower()\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129427,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's set up the computer's choice. \n\n1. At the very top of the file, add `import random` to allow us to use a special Python function.\n2. Declare a variable `choices` and assign it a list containing `[\"rock\", \"paper\", \"scissors\"]`. We'll learn soon more about lists. For now, just know that it's a collection of values.\n3. Declare a variable `computer_choice`. Assign the newly created variable the result of `random.choice(choices)`, which picks a random option from the list:\n   ```Python\n   computer_choice = random.choice(choices)\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129428,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The player has chosen, the computer picked, and now let's reveal the computer's choice.\n\n1. Use the `print` function to display an f-string to print `\"Computer chose: \"` and then the value of `computer_choice`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129429,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, we'll determine who is the winner. We need a combination of `if`, `elif`, and `else` statements to compare the `player_choice` and the `computer_choice`.\n\n1. Write an `if` statement that checks if the player's choice beats the computer's choice:\n   ```\n   if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n   ```\n2. Use `elif` to check for the case of a tie when the player's choice equals the computer's choice.\n3. Finally, add an `else` statement.\n4. In each case, set a variable `winner` to the string \"Player\", \"Tie\", or \"Computer\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finally, print out a message based on who wins.\n\n1. Write an `if` statement that checks if `winner` equals `\"Player\"`.\n2. If true, print `\"You won\"`.\n3. Write an `elif` statement that checks if `winner` equals `\"Computer\"`.\n4. If true, print `\"Computer won\"`.\n5. Write an `else` clause that prints `\"It's a tie\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}