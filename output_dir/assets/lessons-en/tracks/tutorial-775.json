{
  "tutorial": {
    "id": 775,
    "version": 20,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Deciding with Arrays",
    "descriptionContent": "Learn how to count an array's item and to base decisions on the length of arrays.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6065,
        "title": "Lengths",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Counting and decision-making",
            "id": 52855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Let's find out how we can count the elements in arrays and use this information in smart ways.</p></body></html>"
          },
          {
            "title": "Array length",
            "id": 52858,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We use the word <code>length</code> after the array name and a period <code>.</code> to get the number of elements in an array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><output><content><text value=\"3\" /></content></output></code></body></html>"
          },
          {
            "title": "Length 2",
            "id": 52859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Try it yourself: start with the array name and add a period <code>.</code> and then <code>length</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"71\" /><option correct=\"false\"><content><text value=\"items\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>tasks</code>, followed by <code>.</code>, and finally <code>length</code>.</p></body></html>"
          },
          {
            "title": "Printing",
            "id": 52864,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add <code>console.log()</code> around <code>tasks.length</code> to display the length of the <code>tasks</code> array in the console.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"47\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"71\" endIndex=\"72\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>console.log</code>, followed by <code>(</code>, and finally <code>)</code>.</p></body></html>"
          },
          {
            "title": "Assigning 1",
            "id": 52860,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can also store the length of an array in a variable.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" length = tasks.length;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(length);\" /></content><output><content><text value=\"3\" /></content></output></code></body></html>"
          },
          {
            "title": "Assigning 2",
            "id": 52861,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create a <code>length</code> variable and store the length of the array in it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" length = tasks.length;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"59\" /><option startIndex=\"60\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"74\" /><option correct=\"false\"><content><text value=\"items\" /></content></option></options></interaction></interactions><output><content><text value=\"3\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>length</code>, followed by <code>=</code>, and finally <code>tasks.length</code>.</p></body></html>"
          },
          {
            "title": "Array length",
            "id": 52867,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>No matter how many elements there are in an array, <code>length</code> will count them for us.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dusting&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;laundry&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><output><content><text value=\"5\" /></content></output></code></body></html>"
          },
          {
            "title": "Multiple values 2",
            "id": 53486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Try it yourself: count the elements in the <code>tasks</code> array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dusting&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;laundry&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"86\" /><option startIndex=\"86\" endIndex=\"87\" /><option startIndex=\"87\" endIndex=\"93\" /><option correct=\"false\"><content><text value=\"howMany\" /></content></option></options></interaction></interactions><output><content><text value=\"5\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>tasks</code>, followed by <code>.</code>, and finally <code>length</code>.</p></body></html>"
          },
          {
            "title": "No values 1",
            "id": 52870,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Even if the <code>tasks</code> array is empty, <code>tasks.length</code> gives us the number of elements in it.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><output><content><text value=\"0\" /></content></output></code></body></html>"
          },
          {
            "title": "No values 2",
            "id": 53487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Store an empty array in <code>tasks</code> to see that its length is <code>0</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"15\" /><option startIndex=\"15\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option></options></interaction></interactions><output><content><text value=\"0\" /></content></output></code><p /><p visible-if=\"wrong\">Make sure to pick <code>[</code>, followed by <code>]</code>.</p></body></html>"
          },
          {
            "title": "If 1",
            "id": 52871,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can use the length of an array to create <strong>conditional statements</strong> that depend on its number of elements.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (tasks.length &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Ugh, more work!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /></content><output><content><text value=\"Ugh, more work!\" /></content></output></code></body></html>"
          },
          {
            "title": "If 2",
            "id": 52872,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Give it a go: only display the message if <code>tasks.length</code> is greater than <code>0</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (tasks.length &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Ugh, more work!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"63\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"&lt;\" /></content></option></options></interaction></interactions><output><content><text value=\"Ugh, more work!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>tasks.length</code>, followed by <code>&gt;</code>, and finally <code>0</code>.</p></body></html>"
          },
          {
            "title": "For loop",
            "id": 52873,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can also use the length of an array to create <strong>for loops</strong> that go through all of its elements.</p><p>For that, we repeat a loop as many times as there are elements in the array using the <code>length</code> property.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Ana&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><output><content><text value=\"Ana\" /><text type=\"break\" /><text value=\"Eve\" /><text type=\"break\" /><text value=\"Sam\" /></content></output></code></body></html>"
          },
          {
            "title": "Two executions",
            "id": 52874,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Repeat the for loop two times by specifying that <code>i</code> needs to be less than the <code>length</code> of the array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"52\" /><option correct=\"false\"><content><text value=\"i &gt;\" /></content></option></options></interaction></interactions><output><content><text value=\"Anna\" /><text type=\"break\" /><text value=\"Tim\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>i &lt;</code>.</p></body></html>"
          },
          {
            "title": "Using length",
            "id": 53209,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Execute the for loop three times by specifying that <code>i</code> needs to be less than <code>friends.length</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"57\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"60\" endIndex=\"74\" /></options></interaction></interactions><output><content><text value=\"Anna\" /><text type=\"break\" /><text value=\"Tim\" /><text type=\"break\" /><text value=\"Eve\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>i</code>, followed by <code>&lt;</code>, and finally <code>friends.length</code>.</p></body></html>"
          },
          {
            "title": "Indices",
            "id": 53190,
            "contentType": "interactive",
            "images": [
              {
                "id": "0debb578-789e-4916-a546-1dffe569a0c5"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><img src=\"0debb578-789e-4916-a546-1dffe569a0c5\" visible-if=\"always\" /><p>The counter variable, <code>i</code>, stores the values <code>0</code>, <code>1</code>, and <code>2</code> as the loop repeats. But <code>0</code>, <code>1</code>, and <code>2</code> are also the <strong>indices</strong> of the elements in <code>friends</code>.</p></body></html>"
          },
          {
            "title": "Counter variable",
            "id": 52875,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>So every time the loop repeats, <code>i</code> stores an <strong>index</strong> of an element in the <code>friends</code> array. And we can use the index to access the element.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><output><content><text value=\"Anna\" /><text type=\"break\" /><text value=\"Tim\" /><text type=\"break\" /><text value=\"Eve\" /></content></output></code></body></html>"
          },
          {
            "title": "Looping through",
            "id": 52876,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Take the loop for a spin: use the counter variable, <code>i</code>, as the index to display all the elements in <code>friends</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ana&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"102\" endIndex=\"109\" /><option startIndex=\"109\" endIndex=\"110\" /><option startIndex=\"110\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option correct=\"false\"><content><text value=\"x\" /></content></option></options></interaction></interactions><output><content><text value=\"Tim\" /><text type=\"break\" /><text value=\"Ana\" /><text type=\"break\" /><text value=\"Sam\" /><text type=\"break\" /><text value=\"Eve\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>friends</code> followed by <code>[</code> and then <code>i</code>, <code>]</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}