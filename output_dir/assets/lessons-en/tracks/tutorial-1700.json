{
  "tutorial": {
    "id": 1700,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Ticket Machine",
    "descriptionContent": "Use CSS Grid to create a layout for a ticketing machine",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1700-icon-banner.svg",
    "chapters": [
      {
        "id": 11445,
        "title": "Ticket Machine",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro 2",
            "id": 105814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "For this project, we are going to use grid gaps to create a ticket interface for a banking app.\n\nWe'll start off with the following HTML template containing the interface buttons and CSS rules to style and align them.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Creating a grid",
            "id": 105815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We want to display the buttons on a grid so that we can better control their placement on the page. \n\nIf you look at the HTML code, you'll see that all buttons are inside a `div` element with a `grid-container` class. We'll create a rule for that class to control how the buttons inside display.\n\n1. Create a rule for the `grid-container` class.\n2. Create a grid by setting the `display` property to the right value.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Add a `display: grid;` rule to display elements inside a parent on a grid."
                }
              ]
            }
          },
          {
            "title": "Grid columns",
            "id": 105837,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We'd like to display our four buttons on two columns with two buttons each. Let's add a rule to create two equally large columns.\n\n1. Inside the `.grid-container` rule, code a property to create two equally large columns that take one fraction of the available space each.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Set the columns with the `grid-template-columns` property.\n2. The number of property values defines the number of columns.\n3. A value like `1fr` means that a column takes one fraction of the available space.\n4. Use this template to help you define your property: \n```css \ngrid-template-columns: <fraction> <fraction>;\n```"
                }
              ]
            }
          },
          {
            "title": "Column gap",
            "id": 105843,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "If you run your code, you'll see that right now the buttons on the two columns are too close together. Let's add a column gap to separate them.\n\n1. Inside the `.grid-container` rule, code a property to create a `5px` gap between the two grid columns.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\ncolumn-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Row gap",
            "id": 105845,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that the columns are no longer sticking together, it's time to fix the rows.\n\n1. Inside the `.grid-container` rule, code a property to create a `25px` gap between the two grid rows.\n",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\nrow-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Gap shorthand",
            "id": 105846,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We've used `column-gap` and `row-gap` to set the spaces separately, but we can actually do that in one line. Let's change our code.\n\n1. Use the gap shorthand to set row gaps to `25px` and column gaps to `5px` in just one line.\n2. Delete the `column-gap` and `row-gap` properties since we've replaced them with the shorthand.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The gap shorthand looks like: \n```css\ngap: <rowGap> <columnGap>;\n```"
                }
              ]
            }
          },
          {
            "title": "Overview",
            "id": 105847,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Awesome job! The ticket interface for the banking app is done.\n\nWe don't run tests here, so feel free to experiment with the elements and rules. Try adding more buttons and adapting the grid layout accordingly.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}