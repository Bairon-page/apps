{
  "tutorial": {
    "id": 2370,
    "version": 3,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Functions",
    "descriptionContent": "Challenge yourself with some practice on functions",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13841,
        "title": "Calculate Price with Tax",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Price with Tax",
            "id": 123347,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You're building a web application for a restaurant that calculates the total price of an item after tax. \n\n1. Complete the `calculate_tax` function that takes a specific price and updates it with an added tax of 10%. \n2. Make sure to return the updated `price` after the calculation.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_tax(price):\n    ",
                  "solvedContent": "def calculate_tax(price):\n    price += price * 0.1\n    return price"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13846,
        "title": "Can Swim",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Can Swim",
            "id": 123359,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You're going for a quick swim in the pool but you can't stand cold water. Let's make sure the water temperature is suitable for swimming!\n\n1. Inside the function, write an `if else` statement to check the water temperature. If the temperature is above 30, return `True`. Otherwise, return `False`.\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def can_swim(temperature):",
                  "solvedContent": "def can_swim(temperature):\n if temperature > 30:\n  return True\n else:\n  return False"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13848,
        "title": "Total Amount",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Total",
            "id": 123348,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "It's your birthday and your friends decided to gift you some money. They added the money in a jar and gave it to you.\n\n1. Update the `calculate_total` function to **loop** over all the amounts of money in the jar, add them together, and return the total `sum`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_total(jar):\n sum = 0\n \n\n",
                  "solvedContent": "def calculate_total(jar):\n sum = 0\n for money in jar:\n  sum += money\n return sum"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13847,
        "title": "The Wizard Game",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "The Wizard Spells",
            "id": 123360,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You work on developing a wizard game. Your task is to build a damage modifier for spells that the characters can cast. Each spell can cause a different amount of damage to the `enemy_health`.\nUpdate the `cast_spell` function.\n\n1. If the spell name is `\"Incendio\"`, set `damage` to `30`\n2. If the spell name is `\"Avda Kedavra\"`, set `damage` to `100`\n3. Update the `enemy_health` by subtracting the `damage` from `enemy_health`.\n4. Return `enemy_health` from the function.\n\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n\n elif spell_name == 'Avada Kedavra':",
                  "solvedContent": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n  damage = 30\n elif spell_name == 'Avada Kedavra':\n  damage = 100\n enemy_health = enemy_health - damage\n return enemy_health"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13849,
        "title": "Check In Stock Availability",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Check In Stock Availability",
            "id": 123374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You work in an optical store. Your task is to code a program that checks if there are enough eyeglasses in the inventory. The `check_stock` function takes a list `eyeglasses`  as a parameter and has a variable `in_stock` that is initially set to `False`.\n\n1. If the number of eyeglasses is greater than or equal to `5`, set `in_stock` to `True` and print the message `\"Eyeglasses in stock\"`.\n2. Otherwise, print the message `\"Out of stock\"`.\n3. Return the `in_stock` variable from the function.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def check_stock(eyeglasses):\n in_stock = False\n",
                  "solvedContent": "def check_stock(eyeglasses):\n in_stock = False\n if (len(eyeglasses) >= 5):\n  in_stock = True\n  print(\"Eyeglasses in stock\")\n else:\n  print(\"Out of stock\")\n return in_stock\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}