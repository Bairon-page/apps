{
  "tutorial": {
    "id": 1307,
    "version": 7,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Understanding Functions",
    "descriptionContent": "Learn how to name functions and why you can think of them as black boxes.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9783,
        "title": "Naming functions",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Descriptive names",
            "id": 87014,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Giving functions descriptive names like <code>get_final_price</code> helps us know at a glance what they do.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_final_price\" class=\"title\" /><text value=\"(price, tax)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" price + tax\" /><text type=\"break\" /><text type=\"break\" /><text value=\"price = get_final_price(\" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"1.5\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(price)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"19\" /><option correct=\"false\"><content><text value=\"price\" /></content></option></options></interaction></interactions><output><content><text value=\"31.5\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>get_final_price</code>.</p></body></html>"
          },
          {
            "title": "Verb",
            "id": 87015,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Functions are actions, so their name often starts with a verb, like here with <code>create</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"create_email\" class=\"title\" /><text value=\"(name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" name + \" /><text value=\"&quot;@hutmail.com&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"email = create_email(\" /><text value=\"&quot;jo&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(email)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"4\" endIndex=\"10\" /></interactions><output><content><text value=\"jo@hutmail.com\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>create</code>.</p></body></html>"
          },
          {
            "title": "Functions that return values",
            "id": 87017,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Functions that return values often start with verbs like <code>get</code> as in <code>get_telephone</code>, <code>compute</code>, or <code>calculate</code> like <code>calculate_sum</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_telephone\" class=\"title\" /><text value=\"(prefix, number)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" prefix + number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate_sum\" class=\"title\" /><text value=\"(num_1, num_2)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num_1 + num_2\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"7\" /><option startIndex=\"65\" endIndex=\"74\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>get</code>, followed by <code>calculate</code>.</p></body></html>"
          },
          {
            "title": "Function that return booleans",
            "id": 87018,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>As a special case, functions that return boolean values often start with <code>is</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"is_freezing\" class=\"title\" /><text value=\"(temperature)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" temperature &lt; \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"freezing = is_freezing(\" /><text value=\"-3\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(freezing)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"6\" /><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"True\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>is</code>.</p></body></html>"
          },
          {
            "title": "Same naming practice",
            "id": 87019,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The key is to keep the same naming practice for functions that perform a similar task, like <code>calculate_sum</code> and <code>calculate_difference</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate_sum\" class=\"title\" /><text value=\"(num_1, num_2)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num_1 + num_2\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate_difference\" class=\"title\" /><text value=\"(num_1, num_2)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num_1 - num_2\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"13\" /><option startIndex=\"61\" endIndex=\"70\" /><option correct=\"false\"><content><text value=\"display\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>calculate</code>, followed by <code>calculate</code>.</p></body></html>"
          },
          {
            "title": "Question: Descriptive names",
            "id": 87020,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why is it important to give functions descriptive names?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">To know at a glance what the function does</item><item value=\"2\" correct=\"false\">To avoid getting an error</item></selection><p visible-if=\"wrong\">To know at a glance what the function does.</p></body></html>"
          },
          {
            "title": "Question: Verb",
            "id": 87021,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What do function names usually start with?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Verbs like <code>create</code></item><item value=\"2\" correct=\"false\">Nouns like <code>first_name</code></item></selection><p visible-if=\"wrong\">Verbs like <code>create</code>.</p></body></html>"
          },
          {
            "title": "Question: Functions that return values",
            "id": 87023,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What are some verbs that functions that return values might start with?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>compute</code>, <code>calculate</code>, <code>get</code></item><item value=\"2\" correct=\"false\"><code>has</code>, <code>is</code></item></selection><p visible-if=\"wrong\"><code>compute</code>, <code>calculate</code>, <code>get</code>.</p></body></html>"
          },
          {
            "title": "Question: Function that return booleans",
            "id": 87024,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What are some verbs that functions that return booleans might start with?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>is</code>, <code>has</code>, <code>can</code></item><item value=\"2\" correct=\"false\"><code>get</code>, <code>make</code>, <code>calculate</code></item></selection><p visible-if=\"wrong\"><code>is</code>, <code>has</code>, <code>can</code>.</p></body></html>"
          },
          {
            "title": "Question: Same naming practice",
            "id": 87025,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does keeping the same function naming mean?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Using the same verb for functions that perform similar tasks</item><item value=\"2\" correct=\"false\">Using the same verb regardless of what functions do</item></selection><p visible-if=\"wrong\">Using the same verb for functions that perform similar tasks.</p></body></html>"
          },
          {
            "title": "Example: Descriptive names",
            "id": 87026,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Give a descriptive name to this function that displays an item and it's price.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_item_price\" class=\"title\" /><text value=\"(item, price)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;\" /><text value=\"{item}\" class=\"subst\" /><text value=\": $\" /><text value=\"{price}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"display_item_price(\" /><text value=\"&quot;chocolate&quot;\" class=\"string\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"22\" /><option correct=\"false\"><content><text value=\"display_item\" /></content></option></options></interaction></interactions><output><content><text value=\"chocolate: $3\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>display_item_price</code>.</p></body></html>"
          },
          {
            "title": "Example: Verb",
            "id": 87027,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make sure this function's name starts with a verb.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"generate_username\" class=\"title\" /><text value=\"(name, b_day)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text value=\"f&quot;\" /><text value=\"{name}\" class=\"subst\" /><text value=\"_\" /><text value=\"{b_day}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"user = generate_username(\" /><text value=\"&quot;ty&quot;\" class=\"string\" /><text value=\", \" /><text value=\"17\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(user)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"user\" /></content></option></options></interaction></interactions><output><content><text value=\"ty_17\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>generate</code>.</p></body></html>"
          },
          {
            "title": "Example: Functions that return values",
            "id": 87032,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code a name for this function that calculates the free seats left at a performance.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_free_seats\" class=\"title\" /><text value=\"(booked, total)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" total - booked\" /><text type=\"break\" /><text type=\"break\" /><text value=\"free = get_free_seats(\" /><text value=\"13\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(free)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"has_free_seats\" /></content></option></options></interaction></interactions><output><content><text value=\"7\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>get_free_seats</code>.</p></body></html>"
          },
          {
            "title": "Example: Same naming practice",
            "id": 87034,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Keep the naming consistent by having both similar functions start with the same verb.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_successor\" class=\"title\" /><text value=\"(number)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" number + \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_predecessor\" class=\"title\" /><text value=\"(number)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" number - \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"successor = get_successor(\" /><text value=\"1\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(successor)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"predecessor = get_predecessor(\" /><text value=\"1\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(predecessor)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"52\" endIndex=\"55\" /></interactions><output><content><text value=\"2\" /><text type=\"break\" /><text value=\"0\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>get</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}