{
  "tutorial": {
    "id": 2673,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Communicating with an API",
    "descriptionContent": "Communicating with an API",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14655,
        "title": "What is an API?",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 129639,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Application programming interfaces, also known as <code>API</code>, facilitate communication between two programs.</p><p><code>APIs</code> send <em>requests</em> from a sender program to a receiver program. Then, they send <em>responses</em> from the receiver to the sender program.</p></body></html>"
          },
          {
            "title": "Intro: Similar real life example I",
            "id": 129640,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Many things in our daily life work like an <code>API</code>. One example is a waiter and the kitchen staff.<br /></p><p>A waiter, like a sender program, sends an order to the kitchen. Then the kitchen, as a receiver program, sends back the food as a response.</p></body></html>"
          },
          {
            "title": "How to use API?*",
            "id": 129641,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Now, back to programs. The code below sends a <code>GET</code> request to an <code>API</code>. Can you guess what a <code>GET</code> request does?</p><p>If everything works, we should receive the data along with a status code of <code>200</code>, telling us everything went OK.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"GET https://mimo.org/courses HTTP/\" /><text value=\"1.1\" class=\"number\" /></content><output><content><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Request some data</item><item value=\"2\" correct=\"false\">Create a new user</item></selection><p visible-if=\"wrong\">Request some data.</p></body></html>"
          },
          {
            "title": "How did the API get the data?",
            "id": 129642,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>That's right! The code was for us to request some data. <code>https://mimo.org/courses</code> is the <code>API</code> that helped us get it!</p><p>But where did the <code>API</code> get the information from? Remember that <code>API</code> allows communication between 2 programs.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>API</code> connects to another program to retrieve information from a database</item><item value=\"2\" correct=\"false\">The <code>API</code> is the database</item></selection><p visible-if=\"wrong\">The <code>API</code> connects to another program to retrieve information from a database.</p></body></html>"
          },
          {
            "title": "API controls the request and response",
            "id": 129643,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To interact with databases, we need to write code. An <code>API</code> allows us to do that in a simpler way.</p><p>But you need to use the correct method to perform actions. To retrieve data, we use <code>GET</code>. What do you think we use to insert data?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>POST</code></item><item value=\"2\" correct=\"false\"><code>DELETE</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>POST</code>.</p></body></html>"
          },
          {
            "title": "Write a request*",
            "id": 129644,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>That's correct! We can insert data into a database using <code>POST</code> requests.</p><p>Unlike <code>GET</code> requests, we need to send a body with the information for <code>POST</code> requests. Complete the request below.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_user&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"44\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"DELETE\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 201 Created\" /><text type=\"break\" /><text value=\"{ &quot;success&quot;: true, &quot;message&quot;: &quot;User created successfully&quot;, &quot;data&quot;: { &quot;id&quot;: 123, &quot;username&quot;: &quot;test_user&quot;, &quot;name&quot;: &quot;tester&quot; } }\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>POST</code>, followed by <code>\"username\": \"test_user\"</code>.</p></body></html>"
          },
          {
            "title": "Write a request* - Copy",
            "id": 129681,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When working with Python, we use the <code>requests</code> library to create requests.</p><p>Create a GET request to receive the courses available on Mimo.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://mimo.org/courses&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"39\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"{ &quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>get</code>.</p></body></html>"
          },
          {
            "title": "Write a request* - Copy - Copy",
            "id": 129682,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can also make POST requests with the requests library.</p><p>Send a POST request to create a new user.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://mimo.org/users&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"data = { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_user&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.post(url, json=data) \" /><text type=\"break\" /><text value=\"print(response.json())\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"88\" /><option startIndex=\"136\" endIndex=\"140\" /><option correct=\"false\"><content><text value=\"delete\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"{ &quot;success&quot;: true, &quot;message&quot;: &quot;User created successfully&quot;, &quot;data&quot;: { &quot;id&quot;: 123, &quot;username&quot;: &quot;test_user&quot;, &quot;name&quot;: &quot;tester&quot; } }\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>\"username\": \"test_user\"</code>, followed by <code>post</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 129646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does <code>API</code> stand for?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Application Programming Interface</item><item value=\"2\" correct=\"false\">Assisting Programming Interface</item></selection><p visible-if=\"wrong\">Application Programming Interface.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 129647,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Here's another real-life example. You write a script to send data to a web server, what is the correct role for each involved party?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Your script is the sender, the server's endpoint is the <code>API</code>, the server is the receiver</item><item value=\"2\" correct=\"false\">Your script is the <code>API</code>, the server's endpoint is the sender, the server is the receiver</item><item value=\"3\" correct=\"false\">Your script is the sender, the server's endpoint is the receiver, the server is the <code>API</code></item></selection><p visible-if=\"wrong\">Your script is the sender, the server's endpoint is the <code>API</code>, the server is the receiver.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 129648,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How does an <code>API</code> work?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It sends the sender's request to the receiver and the receiver's response to the sender</item><item value=\"2\" correct=\"false\">It just connects the sender and receiver and lets them do their thing</item><item value=\"3\" correct=\"false\">It just monitors to make sure sender and receiver are sending messages to each other</item></selection><p visible-if=\"wrong\">It sends the sender's request to the receiver and the receiver's response to the sender.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 129649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens if we send something unexpected to the <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>API</code> can ignore it and send only what is expected from the body to the receiver</item><item value=\"2\" correct=\"false\">The <code>API</code> must send the unexpected body to the receiver</item></selection><p visible-if=\"wrong\">The <code>API</code> can ignore it and send only what is expected from the body to the receiver.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 129650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Do we need one <code>API</code> for one action?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, we can perform different actions using different methods</item><item value=\"2\" correct=\"false\">Yes, one <code>API</code> can only perform one action</item></selection><p visible-if=\"wrong\">No, we can perform different actions using different methods.</p></body></html>"
          }
        ]
      },
      {
        "id": 14656,
        "title": "Why use an API?",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Why API? 1",
            "id": 129653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Now that you know what an <code>API</code> is, why should we use it? One reason is that <code>APIs</code> can help us build a system more quickly.</p></body></html>"
          },
          {
            "title": "Why API? 2",
            "id": 129654,
            "contentType": "interactive",
            "images": [
              {
                "id": "62f8f11e-7605-4590-bb91-6ee2236fc19f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Back-end developers don't need to wait for front-end development to be completed to test their program.</p><p>They can test their program by simply sending requests to the <code>API</code> and checking if the responses are correct.</p><img src=\"62f8f11e-7605-4590-bb91-6ee2236fc19f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "How to use API-DELETE*",
            "id": 129655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We've gone through <code>GET</code> and <code>POST</code> requests but there are still <code>DELETE</code>, <code>PUT</code>, and <code>PATCH</code> requests to learn about.</p><p><code>DELETE</code> requests <em>must</em> have an identifier to let the <code>API</code> know what to delete.  Like the identifier <code>6</code> here.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"DELETE http://mimo.org/api/courses/\" /><text value=\"6\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"35\" endIndex=\"36\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"POST\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 200 Deleted\" /><text type=\"break\" /><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>DELETE</code>, followed by <code>6</code>.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy",
            "id": 129683,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We use the <code>delete</code> method to call a delete endpoint using requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;http://mimo.org/api/courses/1&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.delete(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"75\" /><option startIndex=\"76\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"remove\" /></content></option><option correct=\"false\"><content><text value=\"del\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 200 Deleted\" /><text type=\"break\" /><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>requests</code>, followed by <code>delete</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 1",
            "id": 129656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> requests are similar to <code>POST</code> requests but they are used to <strong>replace</strong> an object previously created.</p><p>Since <code>PUT</code> requests are used to replace existing objects, they need identification to know which object to replace.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"27\" endIndex=\"28\" /><option correct=\"false\"><content><text value=\"DELETE\" /></content></option><option correct=\"false\"><content><text value=\"POST\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;,\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;tester&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>PUT</code>, followed by <code>1</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 2",
            "id": 129657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If an invalid identification or no identification is provided in a <code>PUT</code> request, a new object will be created.</p><p>The status code of the response will be <code>201</code> for object created and <code>204</code> for object replaced.  Code a <code>PUT</code> request with no identification.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"26\" /></options></interaction></interactions><output><content><text value=\"HTTP/1.1 201 Created\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;,\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;tester&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>/users</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 3",
            "id": 129658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When using a <code>PUT</code> request, it removes all existing data and inserts the data based on the body of the request.</p><p>Complete the <code>PUT</code> request <strong>without</strong> the <code>name</code> field. The user with <code>1</code> as their <code>id</code> will no longer have a value for <code>name</code>, it will become empty.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\",\" /></content></option><option correct=\"false\"><content><text value=\"&quot;name&quot;: &quot;test&quot;\" /></content></option><option startIndex=\"42\" endIndex=\"65\" /></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>PUT</code>, followed by <code>\"username\": \"test_User\"</code>.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy - Copy",
            "id": 129684,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We use the <code>put</code> method to call a put endpoint using requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"'http://blog.com/api/posts/1'\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"data = {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"'username'\" class=\"string\" /><text value=\": \" /><text value=\"'New name'\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    \" /><text value=\"'userId'\" class=\"string\" /><text value=\": \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.put(url, json=data)\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"130\" endIndex=\"133\" /><option correct=\"false\"><content><text value=\"patch\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;New name&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>put</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PATCH",
            "id": 129659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PATCH</code> requests are used to update some fields of an object so identification is needed to determine which object to update.</p><p>Values of all unmentioned fields will remain unchanged. Use <code>1</code> as the identification for the request below.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PATCH https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Barry&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"29\" endIndex=\"30\" /><option correct=\"false\"><content><text value=\"PUT\" /></content></option><option correct=\"false\"><content><text value=\"DELETE\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;Barry&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>PATCH</code>, followed by <code>1</code>.</p></body></html>"
          },
          {
            "title": "How to use API-PATCH 2",
            "id": 129660,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Now, try changing the <code>username</code> to <code>the_bat</code> for the user with the <code>id</code> that equals <code>4</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PATCH https://mimo.org/users/\" /><text value=\"4\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;the_bat&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"30\" /><option startIndex=\"47\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"59\" endIndex=\"68\" /><option correct=\"false\"><content><text value=\"1\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;the_bat&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>4</code> followed by <code>\"username\"</code> and then <code>:</code>, <code>\"the_bat\"</code>.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy - Copy - Copy",
            "id": 129685,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We use the <code>patch</code> method to call a patch endpoint using requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;http://example.com/api/tasks/123&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"data = {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;completed&quot;\" class=\"string\" /><text value=\": \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.patch(url, json=data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"113\" endIndex=\"118\" /><option correct=\"false\"><content><text value=\"put\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;completed&quot;: true\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>patch</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 129661,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When creating or updating resources with methods like <code>POST</code>, <code>PUT</code>, or <code>PATCH</code> in a Python web application, what do we need to consider?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Data Validation</item><item value=\"2\" correct=\"false\">Access Fees</item></selection><p visible-if=\"wrong\">Data Validation.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 129662,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If we only want to change one attribute of a dictionary, what function should we use?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>requests.patch()</code></item><item value=\"2\" correct=\"false\"><code>requests.replace()</code></item><item value=\"3\" correct=\"false\"><code>requests.remove()</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>requests.patch()</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 129663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How should we replace an object we already created?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Making a <code>PUT</code> request</item><item value=\"2\" correct=\"false\">Making a <code>DELETE</code> request to delete the object then make a <code>POST</code> request</item></selection><p visible-if=\"wrong\">Making a <code>PUT</code> request.</p></body></html>"
          },
          {
            "title": "Question 6",
            "id": 129666,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens if we do not provide identification when making a <code>PUT</code> request?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nothing will be replaced, a new object will be created</item><item value=\"2\" correct=\"false\">All objects will be replaced</item><item value=\"3\" correct=\"false\">Nothing happens</item></selection><p visible-if=\"wrong\">Nothing will be replaced, a new object will be created.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 129667,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Write the Python code to send a <code>DELETE</code> request to <code>https://mimo.org/lessons</code> to remove the lesson with the identification <code>1001</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.delete(\" /><text value=\"&quot;https://mimo.org/lessons/1001&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"43\" /><option startIndex=\"44\" endIndex=\"75\" /><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"200\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>delete</code>, followed by <code>\"https://mimo.org/lessons/1001\"</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 129668,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Write the code to send a <code>PUT</code> request using Python to <code>https://mimo.org/users</code> to replace the user with the identification <code>17</code>.</p><p>The user's name should be changed to <code>Bob</code> and the username should be changed to <code>bobbyman</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://mimo.org/users/17&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"data = { \" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;bobbyman&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Bob&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.put(url, json=data) \" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"140\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"delete\" /></content></option></options></interaction></interactions><output><content><text value=\"204\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>put</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}