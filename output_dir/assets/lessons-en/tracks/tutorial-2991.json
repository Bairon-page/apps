{
  "tutorial": {
    "id": 2991,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Score Keeper - Part 1",
    "descriptionContent": "Build a React app to track scores for two teams by making use of essential React features",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2991-icon-banner.svg",
    "chapters": [
      {
        "id": 15164,
        "title": "Chapter #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #7",
            "id": 133584,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Welcome to the **Score Keeper** project, where we'll use our React knowledge to build a single-page application to track the scores of two teams.\n\nWe'll start off with a simple React template. Check out `index.html`, `index.jsx`, and `App.jsx` to see what we're starting with.\n\nThe first component we'll work on is the `ScoreKeeper` component, which will keep track of the score.\n\n1. Import React in the `ScoreKeeper.jsx` file.\n2. Create an empty `ScoreKeeper` component.\n3. Export the `ScoreKeeper` component as the default export.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Hello, React</h1>\n    </div>\n  );\n}\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreKeeper = () => {};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7 - Copy",
            "id": 134300,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's start with implementing the rendering of the `ScoreKeeper` component.\n\n1. Inside the `ScoreKeeper` component, return a `div` element.\n2. Inside the `div`, add an `h1` element with the text `Score Keeper`.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Hello, React</h1>\n    </div>\n  );\n}\n\nexport default App;",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreKeeper = () => {\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #13",
            "id": 133590,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The `ScoreKeeper` component is not showing much at this point, but let's render the component within our `App` component to keep track of future changes.\n\n1. Import the `ScoreKeeper` component inside the `App.jsx` file.\n1. Inside the `App` component's `return` statement, return only the `ScoreKeeper` component.\n2. Delete the existing `h1` and `div` elements.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Hello, React</h1>\n    </div>\n  );\n};\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n"
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreKeeper = () => {\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 133585,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's initialize the state variables to keep track of the scores.\n\n1. Import `useState` to enable state variable usage.\n2. Inside the `ScoreKeeper` component, define two state variables: `teamOneScore` with the setter `setTeamOneScore` and `teamTwoScore` with the setter `setTeamTwoScore`, both initialized to `0`.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreKeeper = () => {\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 133578,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's set up the `ScoreView` component to render the scores that we'll pass through properties.\n\n1. Import React in the `ScoreView.jsx` file.\n2. Create an empty `ScoreView` component\n3. Export the `ScoreView` component as the default export.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreView = () => {};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 133580,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's implement the rendering logic within `ScoreView`.\n\n1. Update `ScoreView` to accept `props`.\n1. Inside the `ScoreView` component, return a `div` element.\n2. Inside the `div`, add an `h2` element that displays the properties `teamName` and `score` together to display something like: *Team A: 3*.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = () => {};\n\nexport default ScoreView;\n",
                  "solvedContent": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 133587,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, let's display the newly created `ScoreView` component.\n\n1. Import the `ScoreView` component inside `ScoreKeeper.jsx`.\n2. Inside the `div`, below the `h1` that displays *Score Keeper*, add two instances of the `ScoreView` component.\n   - Use `\"Team One\"` and `\"Team Two\"` as the passed `teamName` property.\n   - Pass the state variable `teamOneScore` as the `score` property for the first component.\n   - Pass the state variable `teamTwoScore` as the `score` property for the second component.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #11",
            "id": 133588,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finally, to add the needed functionality, we'll allow the scores to be updated when the buttons are clicked.\n\n1. Add two corresponding `button` elements, each directly below the corresponding `ScoreView` component.\n2. Set their text content to `+1 Team One` and `+1 Team Two`.\n3. For each `button`, define an `onClick` event that updates the respective team's score by 1 using the `setTeamOneScore` and `setTeamTwoScore` functions.",
              "preselectedFileIndex": 4,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}