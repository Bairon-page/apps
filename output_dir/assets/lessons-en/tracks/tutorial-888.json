{
  "tutorial": {
    "id": 888,
    "version": 15,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Overriding Methods",
    "descriptionContent": "Want the same behavior in the subclass but slightly different results? Overriding is the key.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6714,
        "title": "Method Override",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 57986,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Say we're developing a role-playing game with humans and wizards. Wizards are special humans who can attack with magic spells.</p><p>That's where <strong>method overriding</strong> comes in handy.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 57996,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can create a <code>Human</code> class and have a <code>Wizard</code> class extend it.</p><p>Then, using method overriding, we can change the <code>Wizard</code> class's attacking behavior.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57997,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Overriding a method replaces the code of the method in the superclass with that of the subclass.</p><p>Call the <code>receiveDamage()</code> method from the <code>Wizard</code> class to see what happens to the <code>health</code> property.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"293\" endIndex=\"299\" /><option startIndex=\"299\" endIndex=\"300\" /><option startIndex=\"300\" endIndex=\"315\" /><option startIndex=\"315\" endIndex=\"316\" /></options></interaction></interactions><output><content><text value=\"100\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>wizard</code> followed by <code>.</code> and then <code>receiveDamage()</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57998,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To override a method, we give it the <em>same</em> name and parameters as the method in the superclass.</p><p>We can override <code>receiveDamage()</code> from the superclass by coding the same method in the subclass.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"173\" endIndex=\"188\" /></interactions><output><content><text value=\"100\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>receiveDamage()</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57999,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Overriding means that we can have the <em>same method</em> in the subclass but <em>customize</em> its behavior for what's needed in the subclass.</p><p>When we call <code>receiveDamage()</code> method on <code>human</code> and <code>wizard</code> we'll see their similar behavior but different results.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" human = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Human(\" /><text value=\"&quot;ax&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"human.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(human.health);\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"260\" endIndex=\"265\" /><option startIndex=\"266\" endIndex=\"281\" /><option startIndex=\"346\" endIndex=\"352\" /><option startIndex=\"353\" endIndex=\"368\" /></options></interaction></interactions><output><content><text value=\"90\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>human</code> followed by <code>receiveDamage()</code> and then <code>wizard</code>, <code>receiveDamage()</code>.</p></body></html>"
          },
          {
            "title": "Super",
            "id": 58001,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If we need the behavior from the superclass's method, we can call it with the <code>super</code> keyword.</p><p>Type in the correct keyword to call the <code>attack()</code> method from the Human class.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Swing &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".attack();\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.attack();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"184\" endIndex=\"189\" /></interactions><output><content><text value=\"Swing staff\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>super</code>.</p></body></html>"
          },
          {
            "title": "Something extra",
            "id": 58002,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When overriding, we can build on the subclass behavior. After swinging their staff, a wizard can say a spell.</p><p>Add wizard-specific behavior to the <code>Wizard</code> class's <code>attack()</code> method.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Swing &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".attack();\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Zimzalabim!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.attack();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"202\" endIndex=\"213\" /><option startIndex=\"214\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"Swing staff\" /><text type=\"break\" /><text value=\"Zimzalabim!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>console.log</code>, followed by <code>\"Zimzalabim!\"</code>.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57988,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why would we want a method in a subclass to override a method from a superclass?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">To customize the method in the subclass</item><item value=\"2\" correct=\"false\">To change the superclass's method for subclasses</item></selection><p visible-if=\"wrong\">To customize the method in the subclass.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57989,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the subclass method need to have in common with the superclass method when overriding it?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The name and parameters</item><item value=\"2\" correct=\"false\">The method body</item></selection><p visible-if=\"wrong\">The name and parameters.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57990,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Is the method in the <code>Rabbit</code> class overriding the <code>Mammal</code> class's method?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Mammal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" eat(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(food + \" /><text value=\"&quot; nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rabbit\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Mammal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" eatVeggies(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (food === \" /><text value=\"&quot;lettuce&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(food + \" /><text value=\"&quot; nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, it has a different name</item><item value=\"2\" correct=\"false\">Yes, it has the same parameter</item></selection><p visible-if=\"wrong\">No, it has a different name.</p></body></html>"
          },
          {
            "title": "Question: Super",
            "id": 58556,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which keyword do we use when we call a superclass's method in the subclass?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>super</code></item><item value=\"2\" correct=\"false\"><code>this</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>super</code>.</p></body></html>"
          },
          {
            "title": "Question: Extra",
            "id": 109184,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Can a subclass still use the original superclass's method, once it overrides it?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, when calling that method by its name without <code>super</code>, the subclass will use the overriding method</item><item value=\"2\" correct=\"false\">Yes, the subclass uses the superclass's method by default, even after overriding</item></selection><p visible-if=\"wrong\">No, when calling that method by its name without <code>super</code>, the subclass will use the overriding method.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods",
            "id": 108789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Override <code>brush()</code> from the superclass by coding the same method in the subclass.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"brush1.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"118\" /><option startIndex=\"119\" endIndex=\"120\" /><option startIndex=\"149\" endIndex=\"150\" /></options></interaction></interactions><output><content><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>brush</code> followed by <code>()</code> and then <code>{</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods 2",
            "id": 108788,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Call the <code>brush()</code> method on the <code>ElectricBrush</code> instance to see what happens.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myBrush = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"myBrush.brush();\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"190\" endIndex=\"205\" /></interactions><output><content><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>myBrush.brush()</code>.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods 3",
            "id": 108790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Call the <code>brush()</code> method on <code>brush1</code> and <code>brush2</code> to see their different behavior.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ToothBrush();\" /><text type=\"break\" /><text value=\"brush1.brush();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush2 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"brush2.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"186\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"201\" /><option startIndex=\"238\" endIndex=\"244\" /><option startIndex=\"244\" endIndex=\"253\" /></options></interaction></interactions><output><content><text value=\"Cleaning teeth.\" /><text type=\"break\" /><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>brush1</code> followed by <code>.brush();</code> and then <code>brush2</code>, <code>.brush();</code>.</p></body></html>"
          },
          {
            "title": "Example: Super",
            "id": 109183,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add code so that the electric brush can both clean <em>and</em> buzz.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".brush();\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myBrush = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"myBrush.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"123\" endIndex=\"128\" /><option startIndex=\"128\" endIndex=\"134\" /><option startIndex=\"134\" endIndex=\"137\" /></options></interaction></interactions><output><content><text value=\"Cleaning teeth.\" /><text type=\"break\" /><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>super</code>, followed by <code>.brush</code>, and finally <code>();</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}