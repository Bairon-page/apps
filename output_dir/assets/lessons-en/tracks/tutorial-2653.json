{
  "tutorial": {
    "id": 2653,
    "version": 4,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Modules & APIs",
    "descriptionContent": "Challenge Exercises\nbased on Modules & APIs",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14676,
        "title": "Import math",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Import math",
            "id": 129704,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ricky is doing a Math project. He's trying to create a radian and degree converter using Python but he forgot to import the module. Help Ricky to import the `math` package.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "\r\n\r\ndef degree_to_radian(degree):\r\n    print(f'{degree} degree = {math.radians(degree)} radian')\r\n\r\ndef radian_to_degree(radian):\r\n    print(f'{radian} radian = {math.degrees(radian)} degree')\r\n\r\ndegree_to_radian(90)\r\nradian_to_degree(0.785)",
                  "solvedContent": "import math\r\n\r\ndef degree_to_radian(degree):\r\n    print(f'{degree} degree = {math.radians(degree)} radian')\r\n\r\ndef radian_to_degree(radian):\r\n    print(f'{radian} radian = {math.degrees(radian)} degree')\r\n\r\ndegree_to_radian(90)\r\nradian_to_degree(0.785)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14677,
        "title": "Housing Prices",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Housing Prices",
            "id": 129705,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "As part of the research for an article she is writing, Mia created a program to get the median price of housing properties in an area. Her program runs fine but since she is only using 1 function, we don't have to import the entire `statistics` module. **Change** her import statement to only import the `median` function from the `statistics` module. Then remove `statistics` when using the `median` function.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import statistics\r\n\r\nprices = [300000, 270000, 389000, 295000, 321000, 288000, 232000, 200000,323000]\r\nresult = statistics.median(prices)\r\nprint(f\"Median property price for the area is ${result}\")",
                  "solvedContent": "from statistics import median\r\n\r\nprices = [300000, 270000, 389000, 295000, 321000, 288000, 232000, 200000,323000]\r\nresult = median(prices)\r\nprint(f\"Median property price for the area is ${result}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14678,
        "title": "Simplify Module Import",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Simplify Module Import",
            "id": 129706,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "As the manager of the basketball club, Kugo is tabulating and analyzing the club's performance. Kugo finds that `statistics` is too long to type and wants to simplify it to just `s` but he forgot to rename the module when he imported it. Help Kugo rename his import to `s`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import statistics\r\n\r\nscores = [87, 76, 75, 65, 54, 50, 43, 23, 56, 68, 97]\r\nprint(f'The highest score the team scored was {max(scores)}')\r\nprint(f'The lowest score the team scored was {min(scores)}')\r\nprint(f'The average score the team scored was {s.mean(scores)}')\r\nprint(f'The median score the team scored was {s.median(scores)}')",
                  "solvedContent": "import statistics as s\r\n\r\nscores = [87, 76, 75, 65, 54, 50, 43, 23, 56, 68, 97]\r\nprint(f'The highest score the team scored was {max(scores)}')\r\nprint(f'The lowest score the team scored was {min(scores)}')\r\nprint(f'The average score the team scored was {s.mean(scores)}')\r\nprint(f'The median score the team scored was {s.median(scores)}')"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14679,
        "title": "Fix Variable Error",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Fix Variable Error",
            "id": 129707,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sammy is new to Python and is trying to create a `name` variable with `\"Sammy\"` as its value. When Sammy tries to run the code, a `NameError` comes up. Fix the code to successfully save the value in the variable.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "name == \"Sammy\"",
                  "solvedContent": "name = \"Sammy\""
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14680,
        "title": "Multiple Errors",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Multiple Errors",
            "id": 129708,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A driving center requested you to code a program to check the age of the students. The program is meant to print `\"Underaged!\"` if `age` is less than `18`. However, the code was poorly written and there is a `SyntaxError` and `IndentationError`. Fix these errors so that the program can run properly!",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "age = 16\r\nif age < 18\r\nprint(\"Underaged!\")",
                  "solvedContent": "age = 16\r\nif age < 18:\r\n print(\"Underaged!\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14681,
        "title": "Calculator Error",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Calculator Error",
            "id": 129709,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jamie's trying to create a calculator but is facing a `TypeError` in the addition operation. Fix the code so that the console prints `4` after the calculation.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "first_number = \"3\"\r\nsecond_number = 1\r\n\r\nprint(first_number + second_number)",
                  "solvedContent": "first_number = 3\r\nsecond_number = 1\r\n\r\nprint(first_number + second_number)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13876,
        "title": "Error - BMI calculator",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Error fixing - BMI calculator",
            "id": 123501,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Here's a piece of code for a BMI (body mass index) calculator that contains multiple errors. Can you identify what type of errors they are and fix them?",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "weight == 50\r\nheight = \"1.6\"\r\nprint(weihgt/(height*height))",
                  "solvedContent": "weight = 50\r\nheight = 1.6\r\nprint(weight/(height*height))"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}