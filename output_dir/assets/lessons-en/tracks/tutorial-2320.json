{
  "tutorial": {
    "id": 2320,
    "version": 2,
    "type": "practiceRequired",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Loops 1",
    "descriptionContent": "Loops 1",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13698,
        "title": "Loops 1",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Example: -= operator",
            "id": 78225,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Subtract 50 from the variable's value.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"wallet = \" /><text value=\"231\" class=\"number\" /><text type=\"break\" /><text value=\"wallet -= \" /><text value=\"50\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(wallet)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"22\" /><option correct=\"false\"><content><text value=\"--\" /></content></option><option correct=\"false\"><content><text value=\"+=\" /></content></option></options></interaction></interactions><output><content><text value=\"181\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>-=</code>.</p></body></html>"
          },
          {
            "title": "Question: Self-assigning strings",
            "id": 78036,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does this code display in the console?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"recipe = \" /><text value=\"&quot;flour salt&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"recipe = recipe + \" /><text value=\"&quot; pepper&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(recipe)\" /></content><output><content><text value=\"flour salt pepper\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>flour salt pepper</code></item><item value=\"2\" correct=\"false\"><code>pepper flour salt</code></item><item value=\"3\" correct=\"false\"><code>list pepper</code></item></selection><p visible-if=\"wrong\"><code>flour salt pepper</code>.</p></body></html>"
          },
          {
            "title": "Question: += operator",
            "id": 78245,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does this code display in the console?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"languages = \" /><text value=\"&quot;Python&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"languages += \" /><text value=\"&quot; SQL&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(languages)\" /></content><output><content><text value=\"Python SQL\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Python SQL</code></item><item value=\"2\" correct=\"false\"><code>SQL Python</code></item><item value=\"3\" correct=\"false\"><code>Nothing is printed in the console</code></item></selection><p visible-if=\"wrong\"><code>Python SQL</code>.</p></body></html>"
          },
          {
            "title": "Question: Why self-assigning matters",
            "id": 78001,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why is self-assigning such a powerful programming concept?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Because it lets us track data that changes over time</item><item value=\"2\" correct=\"false\">Because it's needed to create conditionals</item><item value=\"3\" correct=\"false\">Because it's needed to add values</item></selection><p visible-if=\"wrong\">Because it lets us track data that changes over time.</p></body></html>"
          },
          {
            "title": "Example: Why self-assigning matters",
            "id": 78039,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Subtract one from the <code>lives</code> variable's value.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"lives = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"lives = lives - \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Lives left:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(lives)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"lives = lives - \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Lives left:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(lives)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Game over!&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"76\" /><option startIndex=\"77\" endIndex=\"78\" /><option startIndex=\"79\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"+\" /></content></option></options></interaction></interactions><output><content><text value=\"Lives left:\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"Lives left:\" /><text type=\"break\" /><text value=\"0\" /><text type=\"break\" /><text value=\"Game over!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>lives</code>, followed by <code>-</code>, and finally <code>1</code>.</p></body></html>"
          },
          {
            "title": "Question: Infinite loop",
            "id": 78339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What is an infinite loop?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A loop that runs its code block over and over again forever</item><item value=\"2\" correct=\"false\">A loop that runs its code block once</item><item value=\"3\" correct=\"false\">A loop that skips its code block</item></selection><p visible-if=\"wrong\">A loop that runs its code block over and over again forever.</p></body></html>"
          },
          {
            "title": "Question: While keyword",
            "id": 78320,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What keyword do we use to create a while loop?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>while</code></item><item value=\"2\" correct=\"false\"><code>if</code></item><item value=\"3\" correct=\"false\"><code>print</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>while</code>.</p></body></html>"
          },
          {
            "title": "Example: While",
            "id": 78604,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add the missing keyword to create a <code>while</code> loop.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"while\" class=\"keyword\" /><text value=\" \" /><text value=\"False\" class=\"literal\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Prevent new entries&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"5\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>while</code>.</p></body></html>"
          },
          {
            "title": "Example: Infinite loop",
            "id": 78342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create an infinite loop.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"while\" class=\"keyword\" /><text value=\" \" /><text value=\"True\" class=\"literal\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Searching for Wifi&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"10\" /><option startIndex=\"10\" endIndex=\"11\" /><option correct=\"false\"><content><text value=\"False\" /></content></option><option correct=\"false\"><content><text value=\"()\" /></content></option></options></interaction></interactions><output><content><text value=\"Searching for Wifi\" /><text type=\"break\" /><text value=\"Searching for Wifi\" /><text type=\"break\" /><text value=\"Searching for Wifi\" /><text type=\"break\" /><text value=\"Searching for Wifi\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text value=\"Looks like your code runs forever. It may be that an infinite loop exists in your code.\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>while</code>, followed by <code>True</code>, and finally <code>:</code>.</p></body></html>"
          },
          {
            "title": "Example: Condition",
            "id": 78341,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Skip the code block of the <code>while</code> loop by setting the condition to <code>False</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"while\" class=\"keyword\" /><text value=\" \" /><text value=\"False\" class=\"literal\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Updating entries..&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"11\" /><option startIndex=\"11\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"True\" /></content></option><option correct=\"false\"><content><text value=\";\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>False</code>, followed by <code>:</code>.</p></body></html>"
          },
          {
            "title": "Example: Updating the variable",
            "id": 78686,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Inside the code block, stop the loop after running its code block by setting <code>more_alerts</code> to <code>False</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"more_alerts = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"while\" class=\"keyword\" /><text value=\" more_alerts == \" /><text value=\"True\" class=\"literal\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;New alerts&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  more_alerts = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"71\" endIndex=\"90\" /></interactions><output><content><text value=\"New alerts\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>more_alerts = False</code>.</p></body></html>"
          },
          {
            "title": "Example: Variable in the condition",
            "id": 78651,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make sure this <code>while</code> loop repeats its code block while <code>is_electric</code> is equal to <code>True</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"is_electric = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"while\" class=\"keyword\" /><text value=\" is_electric == \" /><text value=\"True\" class=\"literal\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Boogie woogie woogie&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  is_electric = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"26\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"40\" /><option startIndex=\"41\" endIndex=\"46\" /><option correct=\"false\"><content><text value=\"False\" /></content></option></options></interaction></interactions><output><content><text value=\"Boogie woogie woogie\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>is_electric</code>, followed by <code>==</code>, and finally <code>True:</code>.</p></body></html>"
          },
          {
            "title": "Question: Creating the variable",
            "id": 78635,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's wrong with this code?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text type=\"break\" /><text value=\"while\" class=\"keyword\" /><text value=\" is_loading:\" /><text type=\"break\" /><text value=\"  is_loading = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Waiting for data...&quot;\" class=\"string\" /><text value=\")\" /></content><output><content><text value=\"Traceback (most recent call last):\" /><text type=\"break\" /><text value=\"  File &quot;file.py&quot;, line 1, in &lt;module&gt;\" /><text type=\"break\" /><text value=\"    while is_loading:\" /><text type=\"break\" /><text value=\"NameError: name 'is_loading' is not defined\" /><text type=\"break\" /><text value=\"\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The variable is in the condition before we created it</item><item value=\"2\" correct=\"false\">The <code>while</code> loop has a display statement inside of it</item><item value=\"3\" correct=\"false\"><code>is_loading</code> is not a valid variable name</item></selection><p visible-if=\"wrong\">The variable is in the condition before we created it.</p></body></html>"
          },
          {
            "title": "Example: Creating the variable",
            "id": 78668,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To run the loop, assign <code>True</code> to <code>is_looping</code> outside of the code block.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"is_looping = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"while\" class=\"keyword\" /><text value=\" is_looping == \" /><text value=\"True\" class=\"literal\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;and again!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  is_looping = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"13\" endIndex=\"17\" /></interactions><output><content><text value=\"and again!\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>True</code>.</p></body></html>"
          },
          {
            "title": "Question: Updating the variable",
            "id": 78667,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How do we know this loop doesn't stop?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"keep_going = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"while\" class=\"keyword\" /><text value=\" keep_going == \" /><text value=\"True\" class=\"literal\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;We will rock you!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  keep_going = \" /><text value=\"True\" class=\"literal\" /></content><output><content><text value=\"We will rock you!\" /><text type=\"break\" /><text value=\"We will rock you!\" /><text type=\"break\" /><text value=\"We will rock you!\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text value=\"Looks like your code runs forever. It may be that an infinite loop exists in your code.\" /><text type=\"break\" /><text value=\"\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Because the <code>keep_going</code> variable doesn't update to <code>False</code> inside of the code block</item><item value=\"2\" correct=\"false\">Because all <code>while</code> loops don't stop</item><item value=\"3\" correct=\"false\">Because the <code>keep_going</code> variable updates to <code>False</code></item></selection><p visible-if=\"wrong\">Because the <code>keep_going</code> variable doesn't update to <code>False</code> inside of the code block.</p></body></html>"
          }
        ]
      }
    ]
  }
}