{
  "tutorial": {
    "id": 2010,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Gift Shop Report",
    "descriptionContent": "Use your array operations knowledge to create a gift shop report",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2010-icon-banner.svg",
    "chapters": [
      {
        "id": 12785,
        "title": "Gift Shop Report",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 115889,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In this project, you'll use your knowledge of JavaScript array operators, like `.reduce()`, `.map()`, and `.filter()`, to analyze a newly opened gift shop's sales data. \n\nWe're going to focus on analyzing the first week's sales, so let's first create a variable named `firstWeekSales` to store an array containing only the first week's sales data. To practice writing succinct syntax, you should use an inline function.\n\n1. Call the appropriate JavaScript function on the `sales` array to generate a new array containing only the first week's sales data. Store your result in `firstWeekSales`.\n2. Then, `console.log` the text `\"First Week Sales: \"` concatenated with `firstWeekSales` to check your work. You should only have 7 values in your new array. \n\nExample Output:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 116143,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, we need to create a corresponding array of the first week's customer data. As mentioned in the last step, we'll be using an inline function for further practice.\n\n1. Create a variable named `firstWeekCustomers` and use syntax similar to the previous step to store an array of the first 7 days of customer data. \n2. Like before, `console.log` the text `\"First Week Customers: \"` concatenated with `firstWeekCustomers` to check your work. You should only have 7 values in your new array.\n\nYour output from both your file should be the following:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\nFirst Week Customers: 25,30,20,35,36,32,44\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 116144,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's simplify our syntax by incorporating arrow functions. You should keep the same `console.log` statements.\n\n1. Convert the two `.filter()` inline functions to arrow functions. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 116145,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We have an array of the first week's sales figures. Let's calculate its sum to find the gift shop's weekly sales total.\n\n1. Create a new variable named `firstWeekSalesSum`.\n2. Then, call the appropriate built-in JavaScript function on the `firstWeekSales` array to calculate its sum. Store this value in your newly created `firstWeekSalesSum` variable. You should use an arrow function.\n3. Finally, `console.log` the text `\"First Week Sales Sum: \"` concatenated with the `firstWeekSalesSum` variable to check your work.\n\nYour output should be:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\nFirst Week Customers: 25,30,20,35,36,32,44\nFirst Week Sales Sum: 4550 \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 116147,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's now perform the same operation on `firstWeekCustomers` to finda the first week's total customers. Again, you should use an arrow function to simplify your syntax.\n\n1. Create a new variable named `firstWeekCustomersSum`.\n2. Then, call the appropriate JavaScript function on the `firstWeekCustomers` array to calculate its sum, then store this value in your newly created `firstWeekCustomersSum ` variable. You should use an arrow function.\n3. Finally, `console.log` the text `\"First Week Customers Sum: \"` concatenated with the `firstWeekCustomersSum` variable to check your work.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6",
            "id": 116148,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's use our calculated totals to find the daily and customer sales averages.\n\n1. Create a variable named `firstWeekAverage` and calculate the daily sales average using `firstWeekSalesSum`. \n2. Then, create a variable named `firstWeekCustomerAvg` and calculate the average sales per customer using `firstWeekSalesSum` and `firstWeekCustomersSum`.\n3. To check your work, `console.log` the text `\"First Week Average: \"` concatenated with the `firstWeekAverage` variable.\n4. Finally, `console.log` the text `\"First Week Customer Average: \"` concatenated with the `firstWeekCustomerAvg` variable.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 116149,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The gift shop owner has requested some more detailed analytics for the first week. They would like to see each day's average sale per customer, labeled with corresponding day of the week. Let's first create the array of daily sales averages.\n\n1. Create a new variable named `firstWeekDailyAverage`.\n2. Then, call the `.map()` function on the `firstWeekSales` array to calculate each day's average sale per customer, storing the new array in `firstWeekDailyAverage`. You should use the array `index` value to reference the `firstWeekCustomers` array and perform your calculation (each day's sales divided by the number of customers on that day).\n2. Then, `console.log` your resulting `firstWeekDailyAverage` variable to check your work. Do not add any text.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\nconsole.log(firstWeekDailyAverage);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8",
            "id": 116150,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's now use `.map()` to label each daily average. \n\n1. First, delete the `console.log` statement logging `firstWeekDailyAverage`.\n2. Next, create a variable named `labeled` and call `.map()` on the `firstWeekDailyAverage` variable. Your function should concatenate the corresponding day of the week (you can use the `index` value to reference the `daysofTheWeek` array) with a space and that day's average rounded to 2 decimal places.\n3. Then, `console.log` the `labeled` variable.\n\nFor example, your resulting array might contain a value: `Monday 28.55`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nconsole.log(firstWeekDailyAverage);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\nconsole.log(labeled);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To round a number, you can call `.toFixed()` with the number of decimals passed as a parameter."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 116152,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finally, let's combine the labeled values into a string. It's considered best practice to make our output as human-readable as possible, so each value should be separated by a comma and a space\n\n1. First, delete the `console.log` statement logging the `labeled` variable.\n2. Next, create a variable named `labeledString`. \n3. Then, call the appropriate JavaScript function on the `labeled` array to concatenate the values into a single string stored in `labeledString`. Each value should be separated by a comma and a space.\n4. Finally, `console.log` your newly created `labeledString` variable to check your work.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\n\nlet labeledString = labeled.reduce(function(prev, curr) {\n return prev + \", \" + curr;\n});\nconsole.log(labeledString);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}