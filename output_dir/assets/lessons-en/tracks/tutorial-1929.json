{
  "tutorial": {
    "id": 1929,
    "version": 11,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Social Media Posts",
    "descriptionContent": "Use your HTML, CSS, and JS skills to add posts to a social media page",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1929-icon-banner.svg",
    "chapters": [
      {
        "id": 12524,
        "title": "Social Media Posts",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 113196,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's use our knowledge of Dynamic Webpages to create a Social media website.\n\nWe've already added the HTML and CSS code, but the site is not functional yet.\n\nThere is a logo, an input box, alerts and a post.\n\nCheck out the code and run it before moving further to the next lesson.\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n text-align: center;\r\n}\r\n\r\nh1 {\r\n font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n width: 100%;\r\n height: 150px;\r\n padding: 12px;\r\n box-sizing: border-box;\r\n border: none;\r\n border-radius: 4px;\r\n background-color: seashell;\r\n resize: none;\r\n}\r\n\r\n#addBtn {\r\n padding: 10px;\r\n margin: 10px;\r\n font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n padding: 12px;\r\n margin: 12px;\r\n text-align: justify;\r\n background-color: lavenderblush;\r\n font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n padding: 12px;\r\n margin: 12px;\r\n background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n padding: 12px;\r\n margin: 12px;\r\n background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Post 1 - Define function",
            "id": 113197,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In social media, we can post whatever we want, at the click of a button.\n\nWe'll implement the same in our project!\n\nLet's start simply by creating a new function. This function will add a new post every time the user clicks on the `Add` button.\n\n1. Go to `script.js`.\n2. Create a new function named `addPost`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function addPost(){\r\n\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to create a function is :\n```javascript\nfunction functionName() {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Adding Post 2 - Calling function",
            "id": 113218,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "To use a function, we always need to call the function.\n\nBefore we add code to the `addPost` function, we'll call it in our HTML file to see changes in our DOM as we add the code.\n\n1. Go to `index.html` and find the `Add` button.\n2. Add an `onclick` attribute to this button and set it to `addPost()`. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The `Add` button is below the `textarea` element in `index.html`."
                }
              ]
            }
          },
          {
            "title": "Adding Post 3 - Creating New Div",
            "id": 113225,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "If you look at the code for the first post, you'll see that the post is in a `div` element.\n\nHence, every time the user adds a post, we need to create a new `div` element.\n\nAlso, it might happen that the user doesn't give any input! In this case, we don't want anything to be posted.\n\nHence, we can frame our code in such a way that if the input is not `\"\"`, then there's a post.\n\nAnd the best way to do it is by using conditionals!\n\n1. Go to the `script.js` file and access the `textarea` element by ID. You can get its ID from the HTML code.\n2. Get the value of the `textarea` element.\n3. Store this value in a variable named `input`. \n4. Form an `if` statement checking if the `input` is not `\"\"`.\n5. Inside the `if` statement, create a new `div` new element and store it in a variable named `postDiv`.\n6. Use `.className` to assign the `post` class to the new `div`. To change attribute values in JavaScript, you can always use the dot operator. For example, `element.className = \"new\"` will assign a class named `new` to the element.\n7. Use `getElementById` or `querySelector` to access the HTML `body` by its ID and append the `postDiv` to the `body`.\n8. Run the code, type something and click on the `Add` button. You should see a new empty `div` at the bottom.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `.value` to get the value of the element.\n2. Use `!=` operator to check if `input` is not equal to `\"\"`.\n3. Use `createElement` to create a new element in JavaScript.\n4. The structure of `if` looks like this:\n```javascript\nif(condition) {\n \n}\n```"
                }
              ]
            }
          },
          {
            "title": "Adding Post 4 - Adding paragraph to div",
            "id": 113250,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The `div` part is done.\n\nBut now, we also need to display the user's input. For that, we'll create new paragraphs every time the user clicks the `Add` button.\n\n1. Inside the `if` statement, create a paragraph element and store it in a variable named `p`.\n2. Change the `innerHTML` of the paragraph to the value stored in `input`.\n3. Append the paragraph to the `postDiv`.\n4. Run the code, type something, and hit `Add`. You should see a new `div` with some text at the bottom.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `createElement` to create a new element in JavaScript.\n2. Use `appendChild` to append one element to other in JavaScript.\n3. Remember that the `input` variable already stores the value of the input `textarea` element."
                }
              ]
            }
          },
          {
            "title": "Adding Post 5 - Like Button",
            "id": 113228,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Good job! But what's a social media post without a like or comment button.\n\nHence, next up are the two buttons - `Like` and `Comment`. \n\nFirst, let's create the `Like` button. \n\n1. Create a new `button` element below the paragraph inside the `if` statement and store it in a variable named `likeButton`.\n2. Change the `innerHTML` of the button to `Like`.\n3. Append the button to the `postDiv`. \n4. Run the code, post some text and see the `Like` button appear at the bottom of your post.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `createElement` to create a new element in JavaScript.\n2. Use `appendChild` to append one element to other in JavaScript."
                }
              ]
            }
          },
          {
            "title": "Adding Post 6 - Comment Button",
            "id": 113233,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Time for the `Comment` button.\n\nIt's the same as the `Like` button!\n\n1. Create a new `button` element below the `Like` button and store it in a variable named `commentButton`.\n2. Change the `innerHTML` of the button to `Comment`.\n3. Append the button to the `postDiv`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the previous code.\n "
                }
              ]
            }
          },
          {
            "title": "Adding Post 7 - Final touches",
            "id": 113244,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The elements that we created look good so far. \n\nHowever, there's a small thing. Every time the post gets added, the input box should also clear up.\n\n1. Set the `input` box's value to `\"\"` using ID.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Check the ID of elements from the HTML code and use `document.getElementById` or `querySelector` to access it."
                }
              ]
            }
          },
          {
            "title": "Coding counter",
            "id": 113245,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wow! Our social media site adds posts now!\n\nAlso, notice that there's a small green box that indicates the number of posts. \n\nRight now, it doesn't change when we add a new post. So let's work on this!\n\n1. Create a new variable named `counter` above the `addPost()` function and set it to `1`. We're setting it to `1` initially because we've got one post already, but we'll update it later. So make sure it's not a constant.\n2. We want to only increase the counter when users enter a text and post, so let's go to the `if` block inside the `addPost` function. Increment the counter's value by `1`. \n3. Access the `span` element that holds the number of posts. Check the HTML code for the ID.\n4. Change the `innerHTML` of the `span` to `counter`.  \n5. Run the code and check the output. ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable =\n          'true';</b>\". Voila! You can now edit the webpage text that you are\n        in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\nbody{\r\n  text-align: center;\r\n}\r\n\r\nh1{\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn{\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. You can increment a variable's value by 1 either directly like `varName = varName + 1` or by using shorthand operators like `varName += 1` or by using increment operator like `varName++`.\n2. Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change whenever the user adds a new post."
                }
              ]
            }
          },
          {
            "title": "Remove 1 - Defining function",
            "id": 113246,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "So far so good! We're almost done.\n\nThere's just one last thing that we need to tackle - the `Remove alert` button.\n\nWhen the user clicks this button, the whole alert should disappear. \n\nLet's kick this off with a new empty function.\n\n1. Create a new function named `remove` outside of the `addPost()` function.  ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\n",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to create a function is :\n```javascript\nfunction functionName() {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Remove 2 - Calling function",
            "id": 113248,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Before we code the functionality for our new function, let's call it when the button is clicked!\n\n1. Find the `Remove alert` button. \n2. Add an `onclick` attribute to this button and set it to `remove()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button onclick=\"remove()\">Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The `Remove alert` button is below the paragraph element inside the `notification` `div`.  "
                }
              ]
            }
          },
          {
            "title": "Remove 3 - Removing element",
            "id": 113249,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Removing an element is fairly simple. \n\nAll we have to do is access the element that we want to remove and then remove it using `removeChild`.\n\n1. Get the notifications `div` using its ID and store it in a variable named `notificationDiv`.\n2. Remove this `div` from the `body`. ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button onclick=\"remove()\">Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {\r\n \r\n}",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {\r\n  const notificationDiv = document.getElementById(\"notification\");\r\n  document.getElementById(\"body\").removeChild(notificationDiv);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `removeChild` to remove an element from another. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}