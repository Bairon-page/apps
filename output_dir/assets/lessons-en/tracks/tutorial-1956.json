{
  "tutorial": {
    "id": 1956,
    "version": 7,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Library Books",
    "descriptionContent": "Practice JavaScript objects",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1956-icon-banner.svg",
    "chapters": [
      {
        "id": 12600,
        "title": "Library Books",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 113950,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In this project, we'll create and interact with two \"book\"-themed JavaScript objects. Let's work on the first object!\n\n1. First, declare a new JavaScript object and assign it to a variable named `book1`. Use `const` to create the variable. \n2. Then, create a `title` property and set its value to `\"Pride and Prejudice\"`. \n3. Finally, create an `author` property and set its value to `\"Jane Austen\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to declare a JavaScript object, you can use curly-brace notation, like so: \n\n```\nconst object1 = {\n   property1: \"Blue\",\n   property2: \"Medium\"\n};\n```"
                }
              ]
            }
          },
          {
            "title": "Step 2",
            "id": 114012,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's confirm that we created the `book1` object and appropriately set its properties. When finished, you should see `book1` 's title and author logged to the console.\n\n1. Immediately after the `book1` object declaration, write a `console.log` statement that logs `book1` 's `title` followed by the text `\" by \"` and its `author`. Don't forget to add a space before and after `by`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};\nconsole.log(book1.title + \" by \" + book1.author);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 114013,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Books have a lot more properties than just `title` and `author`. For example, the number of pages, its average reading time, or the number of copies available. Let's add a few more properties to `book1`. \n\n1. Add a `pages` property set to the numeric value `432`. \n2. Next, add an `avgTime` property containing the text `\"7 Hours\"`. \n3. Finally, add a `copies` property set to the numeric value `3`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n};\nconsole.log(book1.title + \" by \" + book1.author);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 114014,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's check that we can access our newly created properties and log them to the console. \n\n1. Write a `console.log` statement that logs `book1` 's `pages` property followed by a colon ( `:`, don't forget the space!) and the `avgTime` property. \n2. Then, write a `console.log` statement that logs the `copies` property followed by the text `\" copies available\"` . ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 114015,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we have a property to track the number of copies available, let's implement a function to checkout a copy and appropriately modify the `copies` property. \n\n1. First, declare an object method named `checkOut` that takes no parameters. \n2. Then, in this function body, have the code access and decrease the `copies` property by `1`. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To access an object property from within the object, you need to use the keyword `this`."
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 114019,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's implement an object method to check a copy back in when readers return a given book.\n\n1. Declare and implement a `checkIn` function in a similar fashion to the `checkOut` method you just wrote. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 114020,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "It's time to test out our new object methods! \n\n1. Immediately following the `console.log` statements, call the `book1` `checkOut` function and then `console.log` the number of `book1` copies available. \n2. Next, call the `book1` `checkIn` function and then `console.log` the number of `book1` copies available. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8",
            "id": 114018,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Objects are easy to manipulate and re-use! Let's create a second \"book\"-themed object and access its properties and methods. \n\n1. First, copy the `book1` object into a new object named `book2`. This object should come after the `book1` object, but before the `console.log` statements and object method calls.  Use `const` to create it.\n2. Then, modify the `book2` object contents to reflect \"The Old Man and the Sea\" by \"Ernest Hemingway\", which is 127 pages and should take 3 hours to read. There are 2 copies in the library system and it should also have the same \"check in/out\" functionality. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 9",
            "id": 114021,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's check that we can use the `book2` object the same way we could use the `book1` object. \n\n1. Modify the code references for the `console.log` statements and object method calls to reference your newly created `book2` object. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book2.title + \" by \" + book2.author);\nconsole.log(book2.pages + \": \" + book2.avgTime);\nconsole.log(book2.copies + \" copies available\");\nbook2.checkOut();\nconsole.log(book2.copies);\nbook2.checkIn();\nconsole.log(book2.copies);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}