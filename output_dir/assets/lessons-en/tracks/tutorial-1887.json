{
  "tutorial": {
    "id": 1887,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "School Canteen",
    "descriptionContent": "Use object properties and methods to identify children's food restrictions at a canteen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1887-icon-banner.svg",
    "chapters": [
      {
        "id": 12355,
        "title": "School Canteen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Creating an Allergies Object",
            "id": 111948,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Kids can have multiple food-related allergies. Let's help school cooks have a detailed list of everybody's dietary needs. \n\nWe'll call the dietary needs \"allergies\" just for simplicity.a\n\nLet's start by creating an `allergies` object.\n\n1. Create a variable `allergies`.  Use `const`\n2. Store an empty object inside it.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const allergies = {};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Nesting objects",
            "id": 111950,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Inside the `allergies` object, let's include some of the most common troublesome foods as empty nested objects.\n\n1. Create a new property in the `allergies` object called `nuts`.\n2. Nest inside the `nuts` property an empty object `{}`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {};",
                  "solvedContent": "const allergies = {\n  nuts: {}\n};"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember we can nest objects inside objects like this: \n```JS\nconst object = {\n  property: {}\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Including troublesome foods",
            "id": 111955,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's include some more troublesome foods as empty objects.\n\n1. Add an empty nested `milk` object in the `allergies` object.\n2. Create another empty nested `gluten` object in the `allergies` object.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {\n  nuts: {}\n};",
                  "solvedContent": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you need to separate properties in an object using `commas`.\n```javascript\nconst object = {\n property1: {},\n property2 : {},\n property3: {}\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Create Array in Property",
            "id": 111956,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's now *update* each of the allergies properties by creating a `children` array inside them. We'll use this array to store the names of the children that have this allergy.\n\nAccess the objects inside the `allergies` object with `.`.\n \n1.  Update the `allergies` nested objects (`nuts`, `milk`, `gluten` ) by creating a `children` property inside each of them with an empty `array`. \n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};",
                  "solvedContent": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = [];\nallergies.milk.children = [];\nallergies.gluten.children = [];"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you can update a property's value by accessing the property and using the assign `=` operator.\n```javascript\nconst object = {\n property1: {}\n}\nobject.property1.subproperty1 = []\n```"
                }
              ]
            }
          },
          {
            "title": "Listing children",
            "id": 111957,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now let's list the `children` who cannot eat those foods in the `children` arrays.\n\n1. Code the following names: `\"Becca\"`, `\"Max\"`, `\"Phil\"` inside of the `children` array of `nuts`.\n2. Code the following names: `\"Simon\"`, `\"Ada\"`, `\"Stacy\"` inside of the `children` array of `milk`.\n3. Code the following names: `\"Paul\"`, `\"Lisa\"`, `\"Beth\"`, `\"Alex\"` inside of the `children` array of `gluten`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = [];\nallergies.milk.children = [];\nallergies.gluten.children = [];",
                  "solvedContent": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Access and display the array",
            "id": 111958,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Great! Now the cooks can easily find the names of the kids allergic to some foods. Let's try it!\n\n1. Display in the `console` all the children allergic to milk.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];",
                  "solvedContent": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];\nconsole.log(allergies.milk.children);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember to use `console.log` to display the output."
                }
              ]
            }
          },
          {
            "title": "Calculate with arrays",
            "id": 111959,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Cooks can already know the names of the children, but they need to know how many restrictions there are for each food.\n\nCreate now a new property inside each of the nested objects to know how many children are allergic to each specific food.\n\n1. Access the `allergies` properties (`nuts`, `milk`, `gluten` ) and include a new `total` property for each food.\n2. Set the `total` property as the sum of the children who are intolerant to that ingredient.\n\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];\nconsole.log(allergies.milk.children);",
                  "solvedContent": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];\nconsole.log(allergies.milk.children);\nallergies.nuts.total = allergies.nuts.children.length;\nallergies.milk.total = allergies.milk.children.length;\nallergies.gluten.total = allergies.gluten.children.length;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you can get the length of a given array using `array.length` and include it in a new property: `allergies.nuts.total = allergies.nuts.children.length`.  "
                }
              ]
            }
          },
          {
            "title": "Create and access Object Methods",
            "id": 112053,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's now create a new method in the `allergies` object to calculate the number of all children with food restrictions.\n\n1. Access the `allergies` object and include a new `getTotalNumber` property.\n2. Make the `getTotalNumber` property a `function` that displays in the console the total number of children with food restrictions in this format: `\"There are \" + totalNumber + \" children with food restrictions.\"`\n3. Execute the `getTotalNumber` function to display the total number of children with restrictions in the console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];\nconsole.log(allergies.milk.children);\nallergies.nuts.total = allergies.nuts.children.length;\nallergies.milk.total = allergies.milk.children.length;\nallergies.gluten.total = allergies.gluten.children.length;",
                  "solvedContent": "const allergies = {\n  nuts: {},\n  milk: {},\n  gluten: {}\n};\nallergies.nuts.children = ['Becca', 'Max', 'Phil'];\nallergies.milk.children = ['Simon', 'Ada', 'Stacy'];\nallergies.gluten.children = ['Paul', 'Lisa', 'Beth', 'Alex'];\nconsole.log(allergies.milk.children);\nallergies.nuts.total = allergies.nuts.children.length;\nallergies.milk.total = allergies.milk.children.length;\nallergies.gluten.total = allergies.gluten.children.length;\nallergies.getTotalNumber = function() {\n  const totalNumber = this.nuts.total + this.milk.total + this.gluten.total;\n  console.log(\"There are \" + totalNumber +\n    \" children with food restrictions.\");\n};\nallergies.getTotalNumber();"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you have the number of each of the children with restrictions inside the `total` property of the specific food object.\n\nAlso, remember that properties are accessed differently when they are requested from inside and outside the object. \n`this` can help you with the solution. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}