{
  "tutorial": {
    "id": 2994,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Score Keeper - Part 2",
    "descriptionContent": "In this second part, weâ€™ll bring the Score Keeper app to life with styling",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2994-icon-banner.svg",
    "chapters": [
      {
        "id": 15167,
        "title": "Chapter #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 133593,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Welcome back to the **Score Keeper** project. In the second part, we'll style the app.\n\n1. To make the React bundler happy, we must link the `index.css` file.\n2. Since we are here, change the title to *Score Keeper*.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>Score Keeper</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>"
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 134867,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's start to style the app. We'll use multiple CSS files to keep our styling nicely grouped.\n\n1. In the `App` component, import the `App.css` file.\n2. In the `App.css` file, create a rule targeting the `body` element with the following properties to apply basic styling:\n   - Set the `background-color` to `lightcyan`.\n   - Set the `font-family` to `Arial, sans-serif`.\n   - Set the `color` to `darkslategray`.\n   - Set the `text-align` to `center`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>Score Keeper</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}"
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 133600,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "To enhance the style of our `ScoreKeeper` component, we use the `ScoreKeeper.css` file. We'll also make use of CSS classes to keep the CSS clean.\n\n1. In the `ScoreKeeper` component, import the `ScoreKeeper.css` file.\n2. Add the class `\"score-keeper-container\"` to the `div` element that wraps all returned JSX in the `ScoreKeeper` component.\n3. In the `ScoreKeeper.css` file, create a rule targeting the newly added class with the following properties to apply styling:\n   - Set the `background-color` to `white`.\n   - Set the `text-align` to `center`.\n   - Set the `margin` to `20px auto`.\n   - Set the `width` to `80%`.\n   - Set the `max-width` to `640px`.\n   - Set the `padding` to `20px`.\n   - Set the `border-radius` to `10px`.\n   - Set the `box-shadow` to `0 4px 8px rgba(0, 0, 0, 0.1)`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy",
            "id": 135170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's style the `h1` element to make the title of `ScoreKeeper` stand out.\n\n1. In the `ScoreKeeper` component, add the class `\"score-keeper-heading\"` to the `h1` element.\n2. In the same `ScoreKeeper.css` file, create a rule for the class you just added  with the following properties to apply styling:\n   - Set the `color` to `teal`.\n   - Set the `font-size` to `2.5em`.\n   - Set the `margin-bottom` to `20px`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy - Copy",
            "id": 135171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's style the `button` elements to make them fit our theme.\n\n1. In the `ScoreKeeper` component, add the class `\"score-keeper-button\"` to all `button` elements.\n2. In the same `ScoreKeeper.css` file, create a rule for the class you just added  with the following properties to apply styling:\n   - Set the `margin` to `10px`.\n   - Set the `padding` to `10px 20px`.\n   - Set the `font-size` to `1em`.\n   - Set the `color` to `white`.\n   - Set the `background-color` to `teal`.\n   - Set the `border` to `none`.\n   - Set the `border-radius` to `5px`.\n   - Set the `cursor` to `pointer`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "s",
            "id": 135172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Add a hover effect to the `button` elements for better user experience and feedback.\n\n1. In the `ScoreKeeper.css`, add a `.score-keeper-button:hover` selector and use it to change the `background-color` to `darkslategray` when hovering over the button.",
              "preselectedFileIndex": 7,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.score-keeper-button:hover {\n  background-color: darkslategray;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "s - Copy - Copy",
            "id": 135175,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Last but not least, let's highlight the leading team. Whenever a team is in the lead, we want to display it clearly with unique styling for that team.\n\n1. In the `ScoreKeeper` component, pass each `ScoreView` component a new property called `leading`. The value should be `true` if that team's score is greater than the other's score. Otherwise, it should be `false`.\n2. In the `ScoreView` component, construct a class from the passed property `leading` that you apply to the `div` wrapper element.\n   - If the passed property `leading` is `true`, apply `score-view-wrapper-leading-true`.\n   - If the passed property `leading` is `false`, apply `score-view-wrapper-leading-false`.\n3. In the `ScoreView` component, import the `ScoreView.css` file.\n4. In the `ScoreView.css` file, create a rule targeting the `.score-view-wrapper-leading-true` class with the following properties:\n   - Set the `background-color` to `teal`.\n   - Set the `color` to `white`.\n   - Set the `border-radius` to `5px`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": "import React from \"react\";\nimport \"./ScoreView.css\";\n\nconst ScoreView = (props) => {\n  return (\n    <div className={`score-view-wrapper-leading-${props.leading}`}>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": ".score-view-wrapper-leading-true {\n  color: white;\n  background-color: teal;\n  border-radius: 5px;\n}"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} leading={teamOneScore > teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} leading={teamTwoScore > teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.score-keeper-button:hover {\n  background-color: darkslategray;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}