{
  "tutorial": {
    "id": 2296,
    "version": 1,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "sql",
    "title": "SQL Filters 1",
    "descriptionContent": "SQL Filters 1",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12509,
        "title": "Filtering With Ranges",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Between a range",
            "id": 113072,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You are looking for clothes online, and you want to filter the clothes in the medium range price, not too cheap, and not too expensive. Use the keyword `BETWEEN` to find clothes that is between priced between 29.99 and 49.99.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM clothes\nWHERE price BETWEEN ",
                  "solvedContent": "SELECT *\nFROM clothes\nWHERE price BETWEEN 29.99 AND 49.99"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"clothes\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"description\"},{\"CellType\":\"Header\",\"Content\":\"price\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"T-shirt\"},{\"CellType\":\"Data\",\"Content\":\"19.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Blue Jeans\"},{\"CellType\":\"Data\",\"Content\":\"29.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"Socks\"},{\"CellType\":\"Data\",\"Content\":\"59.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Scarf\"},{\"CellType\":\"Data\",\"Content\":\"39.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Jacket\"},{\"CellType\":\"Data\",\"Content\":\"11.99\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"description\"},{\"CellType\":\"Header\",\"Content\":\"price\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Blue Jeans\"},{\"CellType\":\"Data\",\"Content\":\"29.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Scarf\"},{\"CellType\":\"Data\",\"Content\":\"39.99\"}]}]}]}"
            }
          },
          {
            "title": "Between a range inclusive",
            "id": 113066,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You're still shopping for clothes and you decided to include the items with the price of 19.99 on the low end. Write a query that includes items between 19.99 and 49.99.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\n",
                  "solvedContent": "SELECT *\nFROM clothes\nWHERE price BETWEEN 19.99 AND 49.99"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"clothes\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"description\"},{\"CellType\":\"Header\",\"Content\":\"price\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"T-shirt\"},{\"CellType\":\"Data\",\"Content\":\"19.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Blue Jeans\"},{\"CellType\":\"Data\",\"Content\":\"29.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"Socks\"},{\"CellType\":\"Data\",\"Content\":\"59.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Scarf\"},{\"CellType\":\"Data\",\"Content\":\"39.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Jacket\"},{\"CellType\":\"Data\",\"Content\":\"11.99\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"description\"},{\"CellType\":\"Header\",\"Content\":\"price\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"T-shirt\"},{\"CellType\":\"Data\",\"Content\":\"19.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Blue Jeans\"},{\"CellType\":\"Data\",\"Content\":\"29.99\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Scarf\"},{\"CellType\":\"Data\",\"Content\":\"39.99\"}]}]}]}"
            }
          },
          {
            "title": "Between a range, distinct",
            "id": 113065,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You're analyzing the academic achievement of your some students. You're trying to see if any student has a score between 90 and 100 in any subject. Use `BETWEEN` for the range, and `DISTINCT` to list each student's `name` only once, regardless of how many times they match.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT name\nFROM students\nWHERE score \nBETWEEN",
                  "solvedContent": "SELECT DISTINCT name\nFROM students\nWHERE score \nBETWEEN 90.00 and 100.00;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"students\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"subject\"},{\"CellType\":\"Header\",\"Content\":\"score\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"91.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"90.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"92.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"95.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"89.5\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"}]}]}]}"
            }
          },
          {
            "title": "Between a range, distinct order",
            "id": 113073,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Find all distinct student names with scores between 85.00 and 100.00, ordered by name.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT DISTINCT\nFROM\nWHERE \nBETWEEN \nORDER BY",
                  "solvedContent": "SELECT DISTINCT name\nFROM students\nWHERE score \nBETWEEN 85.00 and 100.00\nORDER BY name;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"students\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"subject\"},{\"CellType\":\"Header\",\"Content\":\"score\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"91.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"90.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"92.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"95.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"89.5\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"}]}]}]}"
            }
          },
          {
            "title": "Range, distinct descending order",
            "id": 113074,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Order your student names by the following criteria: distinct names, scores between 85.00 and 100.00, ordered by score, descending. Your result will list the name of the student with the highest score, and then other students with lower scores, but whose scores are still over 85.00 points.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT DISTINCT \nFROM \nWHERE \nBETWEEN \nORDER BY\nDESC;",
                  "solvedContent": "SELECT DISTINCT name\nFROM students\nWHERE score \nBETWEEN 85.00 and 100.00\nORDER BY score \nDESC;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"students\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"subject\"},{\"CellType\":\"Header\",\"Content\":\"score\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"91.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"90.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"92.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"95.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"89.5\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"}]}]}]}"
            }
          },
          {
            "title": "Range, distinct ascending order",
            "id": 113075,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Order the names of students with the following criteria: distinct names, scores between 85.00 and 100.00, ordered by score, and in descending order.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT DISTINCT \nFROM \nWHERE \nBETWEEN \nORDER BY",
                  "solvedContent": "SELECT DISTINCT name\nFROM students\nWHERE score \nBETWEEN 85.00 and 100.00\nORDER BY score DESC;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"students\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"subject\"},{\"CellType\":\"Header\",\"Content\":\"score\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"91.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"90.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"92.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"95.5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"},{\"CellType\":\"Data\",\"Content\":\"Maths\"},{\"CellType\":\"Data\",\"Content\":\"89.5\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Jane\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Max\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Anne\"}]}]}]}"
            }
          }
        ]
      },
      {
        "id": 12506,
        "title": "Filtering By Patterns",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "LIKE with a pattern",
            "id": 113033,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We have a table with pet names. Find any pet names that have an `x` letter in it.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM petnames\nWHERE name LIKE",
                  "solvedContent": "SELECT *\nFROM petnames\nWHERE name LIKE '%x%';"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"petnames\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"popularity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Fido\"},{\"CellType\":\"Data\",\"Content\":\"50\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Rex\"},{\"CellType\":\"Data\",\"Content\":\"60\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"Zizou\"},{\"CellType\":\"Data\",\"Content\":\"30\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Apollo\"},{\"CellType\":\"Data\",\"Content\":\"70\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Baxter\"},{\"CellType\":\"Data\",\"Content\":\"65\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"popularity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Rex\"},{\"CellType\":\"Data\",\"Content\":\"60\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Baxter\"},{\"CellType\":\"Data\",\"Content\":\"65\"}]}]}]}"
            }
          },
          {
            "title": "LIKE with a pattern, ORDERED",
            "id": 113037,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Find any pet name that has an `a` letter in it and display the results sorted by `popularity`. Use the `ORDER BY` command to complete the task.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM petnames\n",
                  "solvedContent": "SELECT *\nFROM petnames\nWHERE name LIKE '%a%' \nORDER BY popularity;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"petnames\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"popularity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Fido\"},{\"CellType\":\"Data\",\"Content\":\"50\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Rex\"},{\"CellType\":\"Data\",\"Content\":\"60\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"Zizou\"},{\"CellType\":\"Data\",\"Content\":\"30\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Apollo\"},{\"CellType\":\"Data\",\"Content\":\"70\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Baxter\"},{\"CellType\":\"Data\",\"Content\":\"65\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"popularity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Baxter\"},{\"CellType\":\"Data\",\"Content\":\"65\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Apollo\"},{\"CellType\":\"Data\",\"Content\":\"70\"}]}]}]}"
            }
          },
          {
            "title": "LIKE with a pattern, ORDERED DESC",
            "id": 113032,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Find pet names that have the letter `o` in them, and order them by popularity, in descending order. Use the `DESC` keyword to complete the task.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM petnames\n",
                  "solvedContent": "SELECT *\nFROM petnames\nWHERE name LIKE '%o%'\nORDER BY popularity DESC;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"petnames\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"popularity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Fido\"},{\"CellType\":\"Data\",\"Content\":\"50\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Rex\"},{\"CellType\":\"Data\",\"Content\":\"60\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"Zizou\"},{\"CellType\":\"Data\",\"Content\":\"30\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Apollo\"},{\"CellType\":\"Data\",\"Content\":\"70\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Baxter\"},{\"CellType\":\"Data\",\"Content\":\"65\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"popularity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Apollo\"},{\"CellType\":\"Data\",\"Content\":\"70\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Fido\"},{\"CellType\":\"Data\",\"Content\":\"50\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"Zizou\"},{\"CellType\":\"Data\",\"Content\":\"30\"}]}]}]}"
            }
          },
          {
            "title": "Movies with love in title",
            "id": 113034,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Filter this database table containing titles of movies and shows so that you only get those that have the word \"love\" in them.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *",
                  "solvedContent": "SELECT *\nFROM movies\nWHERE title LIKE '%love%';"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"movies\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Everybody loves Raymond\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Goldfinger\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"The World Is Not Enough\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Love Actually\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"From Russia with Love\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Everybody loves Raymond\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Love Actually\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"From Russia with Love\"}]}]}]}"
            }
          },
          {
            "title": "Last word of title is love",
            "id": 113038,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Filter only the movies where the title ends in the word \"love\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM movies\nWHERE title LIKE ",
                  "solvedContent": "SELECT *\nFROM movies\nWHERE title LIKE '%love';"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"movies\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Everybody loves Raymond\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Goldfinger\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"The World Is Not Enough\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Love Actually\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"From Russia with Love\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"From Russia with Love\"}]}]}]}"
            }
          },
          {
            "title": "First word of title is love",
            "id": 113039,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Find movies that start with the word \"love\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "",
                  "solvedContent": "SELECT *\nFROM movies\nWHERE title LIKE 'love%';"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"movies\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Everybody loves Raymond\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Goldfinger\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"The World Is Not Enough\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Love Actually\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"From Russia with Love\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Love Actually\"}]}]}]}"
            }
          }
        ]
      },
      {
        "id": 12501,
        "title": "Filtering With Options",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Exact match",
            "id": 112976,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You are given a table of major cities. You need to filter the table so that you can find the data for Tokyo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM cities\nWHERE city = ",
                  "solvedContent": "SELECT *\nFROM cities\nWHERE city = 'Tokyo'"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"cities\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Mexico City\"},{\"CellType\":\"Data\",\"Content\":\"Mexico\"},{\"CellType\":\"Data\",\"Content\":\"8850000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"UK\"},{\"CellType\":\"Data\",\"Content\":\"8982000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Berlin\"},{\"CellType\":\"Data\",\"Content\":\"Germany\"},{\"CellType\":\"Data\",\"Content\":\"3645000\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]}]}]}"
            }
          },
          {
            "title": "Several columns using IN",
            "id": 112978,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Find all the cities from these three countries: USA, UK, and Japan. Use the `IN` keyword to filter this data.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM cities\n",
                  "solvedContent": "SELECT *\nFROM cities\nWHERE country IN ('USA', 'UK', 'Japan');"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"cities\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Mexico City\"},{\"CellType\":\"Data\",\"Content\":\"Mexico\"},{\"CellType\":\"Data\",\"Content\":\"8850000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"UK\"},{\"CellType\":\"Data\",\"Content\":\"8982000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Berlin\"},{\"CellType\":\"Data\",\"Content\":\"Germany\"},{\"CellType\":\"Data\",\"Content\":\"3645000\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"UK\"},{\"CellType\":\"Data\",\"Content\":\"8982000\"}]}]}]}"
            }
          },
          {
            "title": "Inequality operator with words",
            "id": 112979,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Using the `cities` table, filter for all cities except London, using the inequality operator `<>`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM cities\n;",
                  "solvedContent": "SELECT *\nFROM cities\nWHERE city <> 'London';"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"cities\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Mexico City\"},{\"CellType\":\"Data\",\"Content\":\"Mexico\"},{\"CellType\":\"Data\",\"Content\":\"8850000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"UK\"},{\"CellType\":\"Data\",\"Content\":\"8982000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Berlin\"},{\"CellType\":\"Data\",\"Content\":\"Germany\"},{\"CellType\":\"Data\",\"Content\":\"3645000\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Mexico City\"},{\"CellType\":\"Data\",\"Content\":\"Mexico\"},{\"CellType\":\"Data\",\"Content\":\"8850000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Berlin\"},{\"CellType\":\"Data\",\"Content\":\"Germany\"},{\"CellType\":\"Data\",\"Content\":\"3645000\"}]}]}]}"
            }
          },
          {
            "title": "Inequality operator with numbers",
            "id": 112980,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Filter the `cities` table, find all the cities where the population is not `3645000`, using the `<>` operator. You should get back the table that doesn't include the city of Berlin.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM \nWHERE ;",
                  "solvedContent": "SELECT *\nFROM cities\nWHERE population <> 3645000;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"cities\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Mexico City\"},{\"CellType\":\"Data\",\"Content\":\"Mexico\"},{\"CellType\":\"Data\",\"Content\":\"8850000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"UK\"},{\"CellType\":\"Data\",\"Content\":\"8982000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Berlin\"},{\"CellType\":\"Data\",\"Content\":\"Germany\"},{\"CellType\":\"Data\",\"Content\":\"3645000\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"city\"},{\"CellType\":\"Header\",\"Content\":\"country\"},{\"CellType\":\"Header\",\"Content\":\"population\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Tokyo\"},{\"CellType\":\"Data\",\"Content\":\"Japan\"},{\"CellType\":\"Data\",\"Content\":\"13960000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Mexico City\"},{\"CellType\":\"Data\",\"Content\":\"Mexico\"},{\"CellType\":\"Data\",\"Content\":\"8850000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"New York\"},{\"CellType\":\"Data\",\"Content\":\"USA\"},{\"CellType\":\"Data\",\"Content\":\"8419000\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"UK\"},{\"CellType\":\"Data\",\"Content\":\"8982000\"}]}]}]}"
            }
          },
          {
            "title": "Greater than and less than",
            "id": 112981,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "At a local university, there was a survey of the average words-per-minute writing speed of students from various departments.\n\nYour task is to filter the results so that you find those departments whose students have the average words-per-minute value over 49.5 and under 60.5. \n\nUse the `BETWEEN` keyword to find the needed data.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM departments\nWHERE wpm ",
                  "solvedContent": "SELECT *\nFROM departments\nWHERE wpm BETWEEN 49.5 AND 60.5;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"departments\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"department\"},{\"CellType\":\"Header\",\"Content\":\"wpm\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"History\"},{\"CellType\":\"Data\",\"Content\":\"49.52\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"IT\"},{\"CellType\":\"Data\",\"Content\":\"89.75\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"55.22\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Spanish\"},{\"CellType\":\"Data\",\"Content\":\"60.1\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"department\"},{\"CellType\":\"Header\",\"Content\":\"wpm\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"History\"},{\"CellType\":\"Data\",\"Content\":\"49.52\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"English\"},{\"CellType\":\"Data\",\"Content\":\"55.22\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Spanish\"},{\"CellType\":\"Data\",\"Content\":\"60.1\"}]}]}]}"
            }
          },
          {
            "title": "Multiple options",
            "id": 112982,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You work in a science magazine and you are looking at a database of previous articles. You need to find all articles whose author's name is `Mark` or `Anna` or `Jane`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT *\nFROM articles\nWHERE authorname \nIN",
                  "solvedContent": "SELECT *\nFROM articles\nWHERE authorname \nIN ('Mark', 'Anna', 'Jane');"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"articles\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"},{\"CellType\":\"Header\",\"Content\":\"authorname\"},{\"CellType\":\"Header\",\"Content\":\"authorlastname\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"1\"},{\"CellType\":\"Data\",\"Content\":\"Life on Mars?\"},{\"CellType\":\"Data\",\"Content\":\"James\"},{\"CellType\":\"Data\",\"Content\":\"Smith\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Nuclear Fusion Now\"},{\"CellType\":\"Data\",\"Content\":\"Mark\"},{\"CellType\":\"Data\",\"Content\":\"Jones\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"New Energy\"},{\"CellType\":\"Data\",\"Content\":\"Bob\"},{\"CellType\":\"Data\",\"Content\":\"Martin\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Life of Ants\"},{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"Smith\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Unexplored Amazon\"},{\"CellType\":\"Data\",\"Content\":\"Anna\"},{\"CellType\":\"Data\",\"Content\":\"Wilson\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"id\"},{\"CellType\":\"Header\",\"Content\":\"title\"},{\"CellType\":\"Header\",\"Content\":\"authorname\"},{\"CellType\":\"Header\",\"Content\":\"authorlastname\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"Nuclear Fusion Now\"},{\"CellType\":\"Data\",\"Content\":\"Mark\"},{\"CellType\":\"Data\",\"Content\":\"Jones\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"Life of Ants\"},{\"CellType\":\"Data\",\"Content\":\"Jane\"},{\"CellType\":\"Data\",\"Content\":\"Smith\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Unexplored Amazon\"},{\"CellType\":\"Data\",\"Content\":\"Anna\"},{\"CellType\":\"Data\",\"Content\":\"Wilson\"}]}]}]}"
            }
          }
        ]
      }
    ]
  }
}