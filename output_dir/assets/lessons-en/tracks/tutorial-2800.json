{
  "tutorial": {
    "id": 2800,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Special Properties",
    "descriptionContent": "Learn about special properties in TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14801,
        "title": "Special Properties",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 130668,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Optional properties are not required in the objects that implement the interface. We mark a property as optional with a question mark <code>?</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" firstName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" lastName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" middleName?: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"69\" endIndex=\"70\" /><option correct=\"false\"><content><text value=\"!\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>?</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 130820,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If an interface has an optional property, an object can include or omit that property without causing a type error.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\"  firstName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  lastName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  middleName?: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person1: Person = {\" /><text type=\"break\" /><text value=\"  firstName: \" /><text value=\"&quot;Al&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"  lastName: \" /><text value=\"&quot;Smith&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" person2: Person = {\" /><text type=\"break\" /><text value=\"  firstName: \" /><text value=\"&quot;Bo&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"  lastName: \" /><text value=\"&quot;Jones&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"  middleName: \" /><text value=\"&quot;Max&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(person1);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(person2);\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"219\" endIndex=\"230\" /><option startIndex=\"231\" endIndex=\"236\" /><option correct=\"false\"><content><text value=\"firstName\" /></content></option><option correct=\"false\"><content><text value=\"lastName\" /></content></option></options></interaction></interactions><output><content><text value=\"{firstName: &quot;Al&quot;, lastName: &quot;Smith&quot;}\" /><text type=\"break\" /><text value=\"{firstName: &quot;Bo&quot;, lastName: &quot;Jones&quot;, middleName: &quot;Max}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>middleName:</code>, followed by <code>\"Max\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130670,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In TypeScript, <code>readonly</code> properties prevent modifications after initialization, keeping their values constant.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Character = {\" /><text type=\"break\" /><text value=\" readonly id: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"28\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>readonly</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130821,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Readonly properties can not be changed afterwards. Try to assign a new value to cause an error.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Character = {\" /><text type=\"break\" /><text value=\" readonly id: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" anna: Character = {\" /><text type=\"break\" /><text value=\" id: \" /><text value=\"1\" class=\"number\" /><text value=\",\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"anna.id = \" /><text value=\"2\" class=\"number\" /><text value=\"; \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"28\" /><option startIndex=\"119\" endIndex=\"120\" /><option startIndex=\"113\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"116\" /><option startIndex=\"117\" endIndex=\"118\" /></options></interaction></interactions><output><content><text value=\"Error: Cannot assign to &quot;id&quot; because it is a read-only property.\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>readonly</code> followed by <code>.</code> and then <code>id</code>, <code>=</code>, <code>2</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130672,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Multiple attributes can be marked as <code>readonly</code> in an object type.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Computer {\" /><text type=\"break\" /><text value=\" readonly \" /><text value=\"type\" class=\"keyword\" /><text value=\": \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" readonly brand: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" readonly memoryInGB: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"30\" /><option startIndex=\"46\" endIndex=\"54\" /><option startIndex=\"71\" endIndex=\"79\" /><option correct=\"false\"><content><text value=\"readonly\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>readonly</code>, followed by <code>readonly</code>, and finally <code>readonly</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 130822,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Just like multiple attributes can be marked as optional in an object type.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Food = {\" /><text type=\"break\" /><text value=\" \" /><text value=\"type\" class=\"keyword\" /><text value=\": \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" brand?: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" color?: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"36\" /><option startIndex=\"52\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\"!\" /></content></option><option correct=\"false\"><content><text value=\"!\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>?</code>, followed by <code>?</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130673,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What modifier do we use to make a property optional?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>?</code></item><item value=\"2\" correct=\"false\"><code>optional</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>?</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130676,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Make sure the <code>age</code> attribute is optional.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" User = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age?: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"35\" endIndex=\"36\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>?</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130674,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which keyword is used to prevent a property from being modified after it is assigned initially?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>readonly</code></item><item value=\"2\" correct=\"false\"><code>permanent</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>readonly</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130675,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which of the following is the correct way to define an optional property?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>middleName?: string;</code></item><item value=\"2\" correct=\"false\"><code>optional middleName: string;</code></item></selection><p visible-if=\"wrong\"><code>middleName?: string;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 130678,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ensure both <code>x</code> and <code>y</code> are <code>readonly</code> properties.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Point {\" /><text type=\"break\" /><text value=\"  readonly x: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  readonly y: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"42\" endIndex=\"50\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>readonly</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}