{
  "tutorial": {
    "id": 2150,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Timeout and Intervals in JS",
    "descriptionContent": "Learn about the asynchronous methods in JavaScript: setTimeout, setInterval and clearInterval.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13418,
        "title": "setTimeout",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>JavaScript has some native methods that execute code asynchronously, such as <code>setTimeout()</code> and <code>setInterval()</code>.</p><p>In this chapter, we'll take a look at the <code>setTimeout()</code> method.</p></body></html>"
          },
          {
            "title": "setTimeout()",
            "id": 120594,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The <code>setTimeout()</code> method sets a timer, in milliseconds, that executes a function or code block when the timer expires.</p><p>Code your first <code>setTimeout</code> method in the example code.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "setTimeout() 2",
            "id": 120595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The code here is asynchronous. That means that while we wait for the <em>callback</em> to be executed, the code after the <code>setTimeout</code> method runs.</p><p>The console output  from the <code>setTimeout</code> method will show last because of the delay in the <code>setTimeout</code> method.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Delay Parameter",
            "id": 120596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The <code>delay</code> parameter is the time, in milliseconds, that passes before the function or code block executes.</p><p>In the following code, set a <code>2000</code> millisecond delay for the code block to execute.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed after 2 seconds'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"99\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed after 2 seconds\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>2000</code>.</p></body></html>"
          },
          {
            "title": "Delay of 0",
            "id": 120598,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> is always asynchronous, even if the <code>delay</code> parameter is omitted or we set it as <code>0</code>.</p><p>With a <code>delay</code> of <code>0</code>, the code after the <code>setTimeout()</code> method executes immediately, but the callback function is executed as <em>soon as possible</em>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last, even if we set 0 seconds '\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"112\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last, even if we set 0 seconds \" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>0</code>.</p></body></html>"
          },
          {
            "title": "Callback Function",
            "id": 120597,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> executes the <code>callback</code> after the specified <code>delay</code>.</p><p>The code <em>after</em> the <code>setTimeout</code> continues to execute regardless of whether a callback or code block is used.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Executed Last because of setTimeout&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(callback, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"119\" endIndex=\"127\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>callback</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120760,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What statement is true regarding JavaScript methods?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JavaScript has some methods that execute code asynchronously</item><item value=\"2\" correct=\"false\">JavaScript only has methods that execute code synchronously</item></selection><p visible-if=\"wrong\">JavaScript has some methods that execute code asynchronously.</p></body></html>"
          },
          {
            "title": "Question: setTimeout()",
            "id": 120761,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the <code>setTimeout()</code> method do?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It executes a callback function when a timer expires</item><item value=\"2\" correct=\"false\">It only sets a timer</item></selection><p visible-if=\"wrong\">It executes a callback function when a timer expires.</p></body></html>"
          },
          {
            "title": "Question: setTimeout() 2",
            "id": 120762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What statement is true regarding the <code>setTimeout()</code> method?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It is an asynchronous JavaScript method</item><item value=\"2\" correct=\"false\">It is a synchronous JavaScript method</item></selection><p visible-if=\"wrong\">It is an asynchronous JavaScript method.</p></body></html>"
          },
          {
            "title": "Question: Delay Parameter",
            "id": 120763,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the <code>delay</code> parameter of <code>setTimeout()</code> do?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It specifies how many milliseconds pass before the callback is executed</item><item value=\"2\" correct=\"false\">It causes all of the code to stop executing</item></selection><p visible-if=\"wrong\">It specifies how many milliseconds pass before the callback is executed.</p></body></html>"
          },
          {
            "title": "Question: Delay of 0",
            "id": 120764,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the default value of the <code>delay</code> parameter when we don't pass a value to it?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">0 milliseconds</item><item value=\"2\" correct=\"false\">1000 milliseconds</item></selection><p visible-if=\"wrong\">0 milliseconds.</p></body></html>"
          },
          {
            "title": "Question: Callback Function",
            "id": 120765,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When is the callback function of <code>setTimeout()</code> executed?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">After the timer set by the <code>delay</code> parameter expires</item><item value=\"2\" correct=\"false\">Before the timer set by the <code>delay</code> parameter expires</item></selection><p visible-if=\"wrong\">After the timer set by the <code>delay</code> parameter expires.</p></body></html>"
          },
          {
            "title": "Example: setTimeout()",
            "id": 120767,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the <code>setTimeout()</code> method to complete the code.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"9000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"194\" endIndex=\"204\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 1000 solutions\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay Parameter",
            "id": 120769,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code an <code>8000</code> millisecond delay in the <code>setTimeout()</code> method.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"8000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"238\" endIndex=\"242\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 875 solutions\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>8000</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay of 0",
            "id": 120770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the code so that the callback function executes as soon as possible.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last because of setTimeout(), even with no delay'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"129\" /></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout(), even with no delay\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example: Callback Function",
            "id": 120771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the callback function that prints the result of <code>calculate()</code>, for the first parameter of <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"printAnswer\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"setTimeout(printAnswer, \" /><text value=\"5000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"256\" endIndex=\"267\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 450 solutions\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>printAnswer</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13419,
        "title": "setInterval and clearInterval",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> is another native JavaScript method that executes code asynchronously.</p><p>With <code>setInterval</code> we can execute some code every set period of time. Let's learn more about this method.</p></body></html>"
          },
          {
            "title": "setInterval()",
            "id": 120836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> takes a callback function and an interval as parameters. Here, the <code>toggleBlinker</code> switches on and off the blinkers.</p><p>Pass the callback function and the interval to the <code>setInterval</code> call.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"187\" endIndex=\"198\" /><option startIndex=\"199\" endIndex=\"212\" /><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>setInterval</code>, followed by <code>toggleBlinker</code>, and finally <code>500</code>.</p></body></html>"
          },
          {
            "title": "Interval",
            "id": 120608,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval</code> executes the callback function forever, with a delay of the specified number of milliseconds we pass as the second parameter.</p><p>The first execution of the callback occurs after the time specified. It doesn't execute immediately.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>500</code>.</p></body></html>"
          },
          {
            "title": "setInterval() Callback",
            "id": 120607,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If we run the code we might get a timeout error because there's no stop to the <code>setInterval</code>.</p><p>Add <code>500</code> milliseconds here to see the code go on and off forever every <code>500</code> milliseconds!</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"177\" endIndex=\"180\" /></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text value=\"Timeout\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>500</code>.</p></body></html>"
          },
          {
            "title": "Stopping the Interval",
            "id": 120609,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To stop <code>setInterval()</code> from running indefinitely, we can use the <code>clearInterval</code> method.<br /></p><p>We can save the <code>setInterval</code> in a <code>blinkerInterval</code> variable. Then use <code>clearInterval(blinkerInterval)</code> inside a <code>setTimeout</code> to be executed after <code>2500</code> milliseconds.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"26\" /><option startIndex=\"27\" endIndex=\"42\" /><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /><option startIndex=\"283\" endIndex=\"287\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>let</code> followed by <code>blinkerInterval</code> and then <code>clearInterval</code>, <code>blinkerInterval</code>, <code>2500</code>.</p></body></html>"
          },
          {
            "title": "intervalID/clearInterval()",
            "id": 120611,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The <code>clearInterval()</code> method takes the <code>blinkerInterval</code> as its sole parameter.</p><p>On execution, it stops the repeating action of the <code>setInterval()</code> method.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>clearInterval</code>, followed by <code>blinkerInterval</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What is a JavaScript method that executes code asynchronously?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>setInterval()</code></item><item value=\"2\" correct=\"false\"><code>.filter()</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>setInterval()</code>.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Delay",
            "id": 120784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the <code>delay</code> parameter specify for the <code>setInterval()</code> method?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The number of milliseconds that'll pass between executions of the callback</item><item value=\"2\" correct=\"false\">The number of minutes that'll pass between executions of the callback</item></selection><p visible-if=\"wrong\">The number of milliseconds that'll pass between executions of the callback.</p></body></html>"
          },
          {
            "title": "Question: Stopping the Interval",
            "id": 120785,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What statement is true regarding the <code>setInterval()</code> method?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It runs indefinitely unless we add additional code to stop it</item><item value=\"2\" correct=\"false\">It only allows the callback to execute 10 times</item></selection><p visible-if=\"wrong\">It runs indefinitely unless we add additional code to stop it.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Callback",
            "id": 120783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What are two common parameters that <code>setInterval()</code> has?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A callback function and a delay</item><item value=\"2\" correct=\"false\"><code>setInterval()</code> only accepts a callback function as a parameter</item></selection><p visible-if=\"wrong\">A callback function and a delay.</p></body></html>"
          },
          {
            "title": "Question: intervalID/clearInterval()",
            "id": 120787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What method can we use to stop the execution of <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>clearInterval()</code></item><item value=\"2\" correct=\"false\"><code>setTimeout</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>clearInterval()</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Callback",
            "id": 120790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the callback function for the countdown to start with a <code>setInterval</code> and also stop if <code>countdown &lt; 0</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" countdown = \" /><text value=\"3\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" countdownInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(countdown);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" countdown--;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &lt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  clearInterval(countdownInterval);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;GO&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"1000\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"56\" /><option startIndex=\"154\" endIndex=\"167\" /><option startIndex=\"168\" endIndex=\"185\" /><option startIndex=\"25\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"3\" /><text type=\"break\" /><text value=\"2\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"GO\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>countdownInterval</code> followed by <code>setInterval</code> and then <code>clearInterval</code>, <code>countdownInterval</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Delay",
            "id": 120791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Finish the code by setting the delay between the executions of the callback function to <code>600</code> milliseconds.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" count = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" intervalID;\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (count &lt; \" /><text value=\"3\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  count += \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Callback executed&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  clearInterval(intervalID);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;The interval was cleared after 3 executions&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" intervalID = setInterval(callback, \" /><text value=\"600\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"start();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"284\" endIndex=\"287\" /></interactions><output><content><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"The interval was cleared after 3 executions\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>600</code>.</p></body></html>"
          },
          {
            "title": "Example: intervalID/clearInterval()",
            "id": 120794,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the <code>clearInterval()</code> method to stop the execution of the callback function after <code>2</code> seconds.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" intervalId;\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"startInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  intervalId = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"if\" class=\"keyword\" /><text value=\" (direction === \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;right&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    }\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(direction);\" /><text type=\"break\" /><text value=\"  }, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"stopInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  clearInterval(intervalId);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Interval stopped&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"startInterval();\" /><text type=\"break\" /><text value=\"setTimeout(stopInterval, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"277\" endIndex=\"290\" /><option startIndex=\"370\" endIndex=\"382\" /><option startIndex=\"384\" endIndex=\"388\" /></options></interaction></interactions><output><content><text value=\"right\" /><text type=\"break\" /><text value=\"left\" /><text type=\"break\" /><text value=\"right\" /><text type=\"break\" /><text value=\"Interval stopped\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>clearInterval</code>, followed by <code>stopInterval</code>, and finally <code>2000</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}