{
  "tutorial": {
    "id": 1780,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Savings Calculator",
    "descriptionContent": "Use loops to create a customer receipt program",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1780-icon-banner.svg",
    "chapters": [
      {
        "id": 11755,
        "title": "Discount Calculator",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 107602,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's use our knowledge of Reusable Programs to calculate discounts at a bargain store.\n\nFirst, let's get familiar with the provided code: there's an array containing item prices and a function to return the number of cents from that price. The function uses `.toString()` to convert the price from a number to a string. It then uses `.split(\".\")` to divide the price into dollars and cents using the `.` passed in as its argument, and returns the second element of the resulting array.\n\nTo begin, you'll write two helper functions. Let's tackle the first: `getsDiscount(rec)`. This function will first sum the receipt prices using a `for` loop. Then, using an `if-else` statement, the function will return true if the total is greater than $50, otherwise, it'll return false. \n\nNote that the `getDiscount(rec)` function has a parameter `rec`, which will take arrays that contain the receipt.\n\n1. Within the function body, declare a `total` variable and set its value equal to 0. \n2. Write a `for` loop to iterate from 0 to the length of the `rec` array.\n3. Update the `total` variable during each `for` loop iteration by adding a new receipt.\n4. Finally, after the `for` loop, write an `if-else` statement that returns `true` if the `total` is greater than $50 and false otherwise. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {}",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 107606,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, let's write the second helper function, `findDiscount()`. This function will take a single parameter: `price`. Based on the number of cents in the price, the function will use `if`, `else-if`, and `else` statements to return a \"discount factor\" (a% discount expressed as a decimal).\n\n1. First, declare the function `findDiscount()`. The function should take in a single parameter: `price`. \n2. Next, declare a variable named `cents`. Use the provided `getCents()` function to store the number of cents of the price in the `cents` variable.\n3. Finally, write a series of `if`, `else-if`, and `else` statements to return discount factors based on the number of `cents`.\n    - If the price is 67 cents, the function should return `0.3`, representing a 30% discount.\n    - If the price is 95 cents, the function should return `0.4`, representing a 40% discount.\n    - If the price is 99 cents, the function should return `0.5`, representing a 50% discount.\n    - Otherwise, the function should return `0`, representing no discount.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Syntax of calling a function and storing its return value in a variable: `const varName = functionName(arg1, arg2...)`.\n2. Because the cents are returned in string format from `getCents()`, we must use the equality operator `==` instead of the strict equality operator `===`.\n3. Use a `return` statement to return a value from a function.\n"
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 107607,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we've created our two helper functions, let's write the function to calculate the receipt total, considering any applicable discounts.\n\n1. Declare a function `calculateTotal` that takes a parameter `receipt`. Just like `getsDiscount` function, `receipt` parameter will take arrays containing the receipts.\n2. Inside the function, initialize two variables `total` and `totalSavings` to 0. `total` will store the total amount after discount and `totalSavings` will store the total saved amount after discount.\n3. Call the `calculateTotal()` function at the end of the `index.js` file, so that we can keep a track of the outputs. Pass `receipt` as the value.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `let` to initialize `total` and `totalSavings` since the values of the variables will change depending on the prices."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 107608,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, we'll write a `for` loop to iterate through the `receipt` array to get the original prices.\n\n1. Following the variable declarations, write a `for` loop that uses a counter variable to iterate through the `receipt` items. \n2. Then, within the loop body, save the current receipt element to a variable named `originalPrice`.\n3. To check if the loop iterates correctly through the `receipt` array, display the value of `originalPrice` inside the loop. The output should look like the snippet given below.\n\n```javascript\n21.99\n10.67\n18.5\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    console.log(originalPrice);\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. To access the current element of an array based on the iteration, you can use `array[counter]`. For example, if the counter variable is `i`, the current element of the `arr` array would be `arr[i]` in a loop.\n2. Start the `for` loop's counter with 0 since an array's index starts from 0."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 107609,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, let's write the logic for applying a discount to each price. We'll write an `if` statement that checks if the `getsDiscount()` function returns `true` or `false` (remember that additional item discounts only apply when the customer spends over $50).\n\n1. Remove the statement that logs `originalPrice` in the console since we no longer need it.\n2. Write an `if` statement that uses the result of the `getsDiscount()` function as its condition. \n3. Next, if `getsDiscount(receipt)` returns `true`, then declare a `discountRate` variable. \n4. The `discountRate` variable should store the result of calling the `findDiscount()` function with the variable `originalPrice` as its parameter.\n5. Similar to original price, display `discountRate` in the console inside the conditional to check if it is working properly. The output should look like this:\n\n```javascript\n0.5\n0.3\n0\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    console.log(originalPrice);\n  }\n}\n\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      console.log(discountRate);\n    }\n  }\n}\n\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Syntax of calling a function and storing it in a variable : `const varName = functionName(arg1, arg2...)`."
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 107610,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, we've got a loop that iterates through each price in the `receipt` array and finds its discount factor. We'll now calculate the savings for each item by multiplying the price by the discount factor. Finally, we'll sum each savings amount in the `totalSavings` variable we created earlier so that we can display this information to the user later on.\n\n1. Remove the statement that logs `discountRate` in the console since we no longer need it.\n2. Immediately after the `discountRate` variable declaration, declare a variable named `savings` and assign it the result of multiplying `originalPrice` with `discountRate`. \n3. Next, add `savings` to `totalSavings` and store the resulting sum in the `totalSavings` variable. \n4. From within the conditional, display `totalSavings` in the console to check that everything's working. Here's a snippet of the output:\n\n```javascript\n10.995\n14.196\n14.196\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      console.log(discountRate);\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      console.log(totalSavings);\n    }\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use arithmetic operators (`+`, `-`, `*`, `/`) to perform arithmetic operations on variables."
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 108070,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we've calculated the savings, let's calculated each discounted price. We'll first subtract the savings calculated in the previous step from the `originalPrice`. Then, we'll sum these discounted prices in the `total` variable we created earlier, giving us a customer total.\n\n1. Remove the statement that logs `totalSavings` in the console since we no longer need it.\n2. Immediately after the operation to sum `totalSavings`, create a variable named `discountedPrice` to store the difference between the the`originalPrice` and `savings` variables. \n3. Next, add the `discountedPrice` to the `total` variable and store this result in the `total` variable.\n4. Display `total` in the console from inside the conditional. The output should look like this:\n\n```javascript\n10.995\n18.464\n36.964\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      console.log(totalSavings);\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use arithmetic operators (`+`, `-`, `*`, `/`) to perform arithmetic operations on variables."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 108071,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We now need to write the logic for when the customer does not get a discount. There'll be no discount factor or savings to calculate, so we can simply sum these prices in the `total` variable. \n\n1. Remove the statement that logs `total` inside the `if` statement.\n2. Write an `else` statement that adds the `originalPrice` to the `total` variable and then saves this result in the `total` variable.\n3. Display the value of `total` again, inside the `else` statement.\n4. With the current `receipt` array, the `else` statement won't execute. Hence, we'll execute the same with another array that'll trigger it. We'll remove it later.\n    - After the `receipt` array definition, create another array named `rec2` which stores `[2.99, 1.46, 5.67]`.\n    - In the `calculateTotal` function call, pass `rec2` as a value instead of `receipt`.\n5. The output should look like this:\n\n```javascript\n2.99\n4.45\n10.120000000000001\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\nconst rec2 = [2.99, 1.46, 5.67];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n    } else {\n      total += originalPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(rec2);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `if-else` statement is:\n```javascript\nif(condition) {\n\n} else {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 107611,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finally, let's add a `console.log` statement to ensure our logic is working correctly. We'll write an `if` statement at the end of the `if` block (but still inside the `if` block) that checks whether there's a discount. If there is one, then the program will display the savings in the following format:\n\n```javascript\nItem 1 Savings: $4.50\n```\n\n1. Remove the statement that logs `total` inside the `else` statement.\n2. Remove the `rec2` array definition code. Also, in the `calculateTotal` function call, change the value from `rec2` to `receipt` again.\n3. Inside the `if` block after its existing code, write another `if` statement that checks if the `discountRate` is not equal to 0. \n4. If not equal to 0, then log the item savings to the console according to the format example above. \n5. To format the values to two numbers after the decimal point, add `.toFixed(2)` to the end of `savings`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\nconst rec2 = [2.99, 1.46, 5.67];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n    } else {\n      total += originalPrice;\n      console.log(total);\n    }\n  }\n}\ncalculateTotal(rec2);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      if (discountRate !== 0) {\n        console.log(\"Item \" + i + \" Savings: $\" + savings.toFixed(2));\n      }\n    } else {\n      total += originalPrice;\n    }\n  }\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display the result in the console."
                }
              ]
            }
          },
          {
            "title": "Step 10",
            "id": 107612,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finish the program by logging a message to the user summarizing their savings. Once your changes are complete, call the function at the end of the program!\n\n1. Write a `console.log` statement at the end of the `calculateTotal` function that logs the `totalSavings` variable in a format similar to the below example. \n2. Write another `console.log` statement at the end of the `calculateTotal` function that logs the `total` variable in a format similar to the below example. \n3. Call the `calculateTotal()` function at the end of the `index.js` file.\n\n```javascript\nTotal Saved: $16.56\nTotal Post-Discount: $48.56\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      if (discountRate !== 0) {\n        console.log(\"Item \" + i + \" Savings: $\" + savings.toFixed(2));\n      }\n    } else {\n      total += originalPrice;\n    }\n  }\n}\ncalculateTotal(receipt);",
                  "solvedContent": "const receipt = [21.99, 10.67, 18.50];\n\nfunction getCents(price) {\n  const splitPrice = price.toString().split(\".\");\n  return splitPrice[1];\n}\n\nfunction getsDiscount(rec) {\n  let total = 0;\n  for (let i = 0; i < rec.length; i++) {\n    total += rec[i];\n  }\n  if (total > 50) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findDiscount(price) {\n  const cents = getCents(price);\n  if (cents == 67) {\n    return 0.3;\n  } else if (cents == 95) {\n    return 0.4;\n  } else if (cents == 99) {\n    return 0.5;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotal(receipt) {\n  let total = 0;\n  let totalSavings = 0;\n  for (let i = 0; i < receipt.length; i++) {\n    const originalPrice = receipt[i];\n    if (getsDiscount(receipt)) {\n      const discountRate = findDiscount(originalPrice);\n      const savings = originalPrice * discountRate;\n      totalSavings += savings;\n      const discountedPrice = originalPrice - savings;\n      total += discountedPrice;\n      if (discountRate !== 0) {\n        console.log(\"Item \" + i + \" Savings: $\" + savings.toFixed(2));\n      }\n    } else {\n      total += originalPrice;\n    }\n  }\n  console.log(\"Total Saved: $\" + totalSavings.toFixed(2));\n  console.log(\"Total Post-Discount: $\" + total.toFixed(2));\n}\ncalculateTotal(receipt);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display the result in the console."
                }
              ]
            }
          }
        ]
      }
    ]
  }
}