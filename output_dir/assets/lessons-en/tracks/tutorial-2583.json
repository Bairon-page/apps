{
  "tutorial": {
    "id": 2583,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "swift",
    "title": "Using True and False",
    "descriptionContent": "Using True and False",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14345,
        "title": "Booleans",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "True",
            "id": 127639,
            "contentType": "interactive",
            "images": [
              {
                "id": "26682a0e-d638-46f2-b617-09a49f8c4fac"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><img src=\"26682a0e-d638-46f2-b617-09a49f8c4fac\" visible-if=\"always\" /><p>There's a special value that's <em>neither</em> a string <em>nor</em> a number: <code>true</code>.</p><p>There are no quotes around it, and it's not a numeric value.</p></body></html>"
          },
          {
            "title": "Displaying true",
            "id": 127640,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>true</code> is great for situations like checking if a switch is on or if a feature is enabled.</p><p>Display <code>true</code> in the console.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Allow updates&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"29\" endIndex=\"33\" /></interactions><output><content><text value=\"Allow updates\" /><text type=\"break\" /><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>true</code>.</p></body></html>"
          },
          {
            "title": "Saving true ",
            "id": 127641,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can store <code>true</code> in a variable just like a string or a number.</p><p>Store <code>true</code> in a variable and display it in the console.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" correct = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(correct)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"18\" /><option startIndex=\"25\" endIndex=\"32\" /></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>true</code>, followed by <code>correct</code>.</p></body></html>"
          },
          {
            "title": "False",
            "id": 127642,
            "contentType": "interactive",
            "images": [
              {
                "id": "8261bf24-5eaa-4c32-91bb-0008c4dce8bc"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>false</code> is another special value and the opposite of <code>true</code>. We can use it like <code>true</code>.</p><img src=\"8261bf24-5eaa-4c32-91bb-0008c4dce8bc\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Displaying false",
            "id": 127643,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Save the value <code>false</code> in the variable <code>status</code> and display <code>status</code> in the console.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Device charged&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" status = \" /><text value=\"false\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(status)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"42\" /><option startIndex=\"49\" endIndex=\"55\" /><option correct=\"false\"><content><text value=\"let\" /></content></option></options></interaction></interactions><output><content><text value=\"Device charged\" /><text type=\"break\" /><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>false</code>, followed by <code>status</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 127644,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's a good use for the values <code>true</code> and <code>false</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Showing if a feature is switched on or off</item><item value=\"2\" correct=\"false\">Storing values from one to five</item></selection><p visible-if=\"wrong\">Showing if a feature is switched on or off.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 127645,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why is <code>false</code> not a string?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" autoPlay = \" /><text value=\"false\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">There are no quotes around it</item><item value=\"2\" correct=\"false\">It's stored inside a variable</item></selection><p visible-if=\"wrong\">There are no quotes around it.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 127646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pick the one that's best for showing that a user unsubscribed from a service.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>var subscribed = false</code></item><item value=\"2\" correct=\"false\"><code>var subscribed = true</code></item></selection><p visible-if=\"wrong\"><code>var subscribed = false</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 127647,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why is <code>\"false\"</code> not the same as <code>false</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">There are quotes around it, so <code>\"false\"</code> is a string</item><item value=\"2\" correct=\"false\"><code>\"false\"</code> and <code>false</code> are the same</item></selection><p visible-if=\"wrong\">There are quotes around it, so <code>\"false\"</code> is a string.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 127648,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Show the status of the auto-update setting by displaying <code>false</code> in the console.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Auto update&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"false\" class=\"literal\" /><text value=\")\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"27\" /><option startIndex=\"27\" endIndex=\"32\" /><option startIndex=\"32\" endIndex=\"33\" /></options></interaction></interactions><output><content><text value=\"Auto update\" /><text type=\"break\" /><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>print</code> followed by <code>(</code> and then <code>false</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 127649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create the constant <code>autoSaveImage</code> and store <code>true</code> inside it.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" autoSaveImage = \" /><text value=\"true\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"17\" /><option startIndex=\"20\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>let</code>, followed by <code>autoSaveImage</code>, and finally <code>true</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 127650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Prevent cookies by creating the variable and storing <code>false</code> in it.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" allowCookies = \" /><text value=\"false\" class=\"literal\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"&quot;false&quot;\" /></content></option><option startIndex=\"4\" endIndex=\"16\" /><option startIndex=\"19\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>allowCookies</code>, followed by <code>false</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 127651,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Adjust the auto-play settings by coding <code>true</code>.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" autoPlay = \" /><text value=\"true\" class=\"literal\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"15\" endIndex=\"19\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>true</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 14346,
        "title": "Negating Values",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "True to false",
            "id": 127652,
            "contentType": "interactive",
            "images": [
              {
                "id": "43fe9335-d3fc-495c-901c-9b0ab2bf6bc5"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><img src=\"43fe9335-d3fc-495c-901c-9b0ab2bf6bc5\" visible-if=\"always\" /><p>A <code>!</code> sign in front of <code>true</code> makes the expression result in <code>false</code>. If something is not true, it has to be false.</p><p>The <code>!</code> sign is the <strong>negation operator</strong>. It turns values into their <strong>opposite</strong>.</p></body></html>"
          },
          {
            "title": "Change true to false",
            "id": 127653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When we change a value to its opposite with <code>!</code>, we negate it.</p><p>Put a <code>!</code> sign before <code>true</code> to change its value.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"11\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>!</code>, followed by <code>true</code>.</p></body></html>"
          },
          {
            "title": "Change false to true",
            "id": 127654,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The <code>!</code> operator before <code>false</code> changes its value, too. If a value is not <code>false</code>, it has to be <code>true</code>.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"false\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"12\" /></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>!</code>, followed by <code>false</code>.</p></body></html>"
          },
          {
            "title": "Negate variables",
            "id": 127655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can use the <code>!</code> operator with variables to negate the values they store.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isMorning = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(!isMorning)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"28\" /><option startIndex=\"28\" endIndex=\"37\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>!</code>, followed by <code>isMorning</code>.</p></body></html>"
          },
          {
            "title": "Saving negation",
            "id": 127656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can save a whole negation in another variable, too.</p><p>Create the variable <code>isEvening</code> and use <code>!</code> to change <code>isMorning</code> to <code>false</code>.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isMorning = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isEvening = !isMorning\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(isEvening)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"34\" /><option startIndex=\"35\" endIndex=\"36\" /><option startIndex=\"37\" endIndex=\"38\" /><option startIndex=\"38\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>isEvening</code> followed by <code>=</code> and then <code>!</code>, <code>isMorning</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 127657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the <code>!</code> operator do in Swift?</p><selection multiple=\"multiple\"><item correct=\"true\" value=\"1\">It turns <code>true</code> or <code>false</code> Boolean values into their opposite</item><item correct=\"false\" value=\"2\">It checks if values are equal</item></selection><p visible-if=\"wrong\">It turns <code>true</code> or <code>false</code> Boolean values into their opposite.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 127658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why does this code display <code>false</code> in the console?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" latestVersion = !\" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(latestVersion)\" /></content><output><content><text value=\"false\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>!</code> operator in front of <code>true</code> turns its value into false</item><item value=\"2\" correct=\"false\">Variables always display as <code>false</code> in the console</item></selection><p visible-if=\"wrong\">The <code>!</code> operator in front of <code>true</code> turns its value into false.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 127659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What do we call the <code>!</code> sign in front of <code>true</code> or <code>false</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>!</code> sign is the negation operator</item><item value=\"2\" correct=\"false\">The <code>!</code> sign is the addition operator</item></selection><p visible-if=\"wrong\">The <code>!</code> sign is the negation operator.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 127660,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which value does <code>result</code> store?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" result = !\" /><text value=\"true\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>false</code></item><item value=\"2\" correct=\"false\"><code>true</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>false</code>.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 127661,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use the negation operator and store a value in the variable.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" allowPopups = !\" /><text value=\"true\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"19\" /><option startIndex=\"19\" endIndex=\"23\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>!</code>, followed by <code>true</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 127662,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Display <code>false</code> in the console.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"!false\" /></content></option><option startIndex=\"6\" endIndex=\"11\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>!true</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 127663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create the variable and save the negated value in it.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" openSlot = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isAvailable = !openSlot\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"23\" /><option startIndex=\"24\" endIndex=\"35\" /><option startIndex=\"38\" endIndex=\"47\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>let</code>, followed by <code>isAvailable</code>, and finally <code>!openSlot</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 127664,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code <code>!true</code> inside the print statement.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"6\" endIndex=\"11\" /></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>!true</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}