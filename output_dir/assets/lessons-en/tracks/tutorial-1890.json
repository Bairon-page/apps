{
  "tutorial": {
    "id": 1890,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "sql",
    "title": "SQL Basics",
    "descriptionContent": "Challenges are more difficult exercises that will test your skills.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12364,
        "title": "SELECT FROM",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Intro",
            "id": 112057,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In these Challenges we're going to use SQL to create, read, update, and delete data in a table. You'll need to add your own code according to the requirements, which will then be tested, and feedback provided automatically. To see how this works:\n\n1. Select the column 'name' for each title in the 'games' database.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT\r\nFROM games;",
                  "solvedContent": "SELECT name\r\nFROM games;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"games\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"genre\"},{\"CellType\":\"Header\",\"Content\":\"copies\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Mortal Kombat\"},{\"CellType\":\"Data\",\"Content\":\"Fighting\"},{\"CellType\":\"Data\",\"Content\":\"5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"TMNT Arcade Edition\"},{\"CellType\":\"Data\",\"Content\":\"Arcade\"},{\"CellType\":\"Data\",\"Content\":\"10\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Super Mario Bros\"},{\"CellType\":\"Data\",\"Content\":\"Platformer\"},{\"CellType\":\"Data\",\"Content\":\"3\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Mortal Kombat\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"TMNT Arcade Edition\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Super Mario Bros\"}]}]}]}"
            }
          }
        ]
      },
      {
        "id": 12390,
        "title": "Selecting Data",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Select Data",
            "id": 112221,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's select two columns of data from the `games` table to find out how many `copies` of each game we have.\n\n1. Select the `name` and `copies` columns from the `games` table.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT\r\nFROM ",
                  "solvedContent": "SELECT name, copies\r\nFROM games;"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"games\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"genre\"},{\"CellType\":\"Header\",\"Content\":\"copies\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Mortal Kombat\"},{\"CellType\":\"Data\",\"Content\":\"Fighting\"},{\"CellType\":\"Data\",\"Content\":\"5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"TMNT Arcade Edition\"},{\"CellType\":\"Data\",\"Content\":\"Arcade\"},{\"CellType\":\"Data\",\"Content\":\"10\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Super Mario Bros\"},{\"CellType\":\"Data\",\"Content\":\"Platformer\"},{\"CellType\":\"Data\",\"Content\":\"3\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"copies\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Mortal Kombat\"},{\"CellType\":\"Data\",\"Content\":\"5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"TMNT Arcade Edition\"},{\"CellType\":\"Data\",\"Content\":\"10\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Super Mario Bros\"},{\"CellType\":\"Data\",\"Content\":\"3\"}]}]}]}"
            }
          }
        ]
      },
      {
        "id": 12395,
        "title": "Selecting Data With Duplicate Values",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Select From Duplicate Values",
            "id": 112235,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Consider the `orders` table here and notice the duplicate values that exist within the data set. Let's filter the values to find only the `distinct` value for our query.\n\n1. Find the `distinct` values in the `location` column in the `orders` table. Make sure to only select the `location` column.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT DISTINCT\r\nFROM \r\n",
                  "solvedContent": "SELECT DISTINCT location\r\nFROM orders;\r\n"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"orders\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"location\"},{\"CellType\":\"Header\",\"Content\":\"quantity\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Larry Butz\"},{\"CellType\":\"Data\",\"Content\":\"London\"},{\"CellType\":\"Data\",\"Content\":\"5\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"William Wonka\"},{\"CellType\":\"Data\",\"Content\":\"Fantasia\"},{\"CellType\":\"Data\",\"Content\":\"3\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Billy Broccoli\"},{\"CellType\":\"Data\",\"Content\":\"Seoul\"},{\"CellType\":\"Data\",\"Content\":\"10\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"William Wonka\"},{\"CellType\":\"Data\",\"Content\":\"Fantasia\"},{\"CellType\":\"Data\",\"Content\":\"2\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"location\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"London\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Fantasia\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Seoul\"}]}]}]}"
            }
          }
        ]
      },
      {
        "id": 12392,
        "title": "Filtering Data",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filter Data",
            "id": 112223,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Take a look at this `seeds` table that stores types of crops with their season of growth. Let's find out what type of crop we can grow for a season. \n\n1. Select all of the entries from the `seeds` table, showing only seeds with a `season` of `Spring`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "SELECT\r\nFROM",
                  "solvedContent": "SELECT *\r\nFROM seeds\r\nWHERE season = 'Spring';"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"seeds\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"growth_days\"},{\"CellType\":\"Header\",\"Content\":\"season\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Broccoli\"},{\"CellType\":\"Data\",\"Content\":\"6\"},{\"CellType\":\"Data\",\"Content\":\"Spring\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Strawberry\"},{\"CellType\":\"Data\",\"Content\":\"8\"},{\"CellType\":\"Data\",\"Content\":\"Spring\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Eggplant\"},{\"CellType\":\"Data\",\"Content\":\"7\"},{\"CellType\":\"Data\",\"Content\":\"Autumn\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Carrot\"},{\"CellType\":\"Data\",\"Content\":\"5\"},{\"CellType\":\"Data\",\"Content\":\"Winter\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"name\"},{\"CellType\":\"Header\",\"Content\":\"growth_days\"},{\"CellType\":\"Header\",\"Content\":\"season\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Broccoli\"},{\"CellType\":\"Data\",\"Content\":\"6\"},{\"CellType\":\"Data\",\"Content\":\"Spring\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"Strawberry\"},{\"CellType\":\"Data\",\"Content\":\"8\"},{\"CellType\":\"Data\",\"Content\":\"Spring\"}]}]}]}"
            }
          }
        ]
      },
      {
        "id": 12406,
        "title": "Organizing Values Using Statements",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Organize Values With Multiple Statements",
            "id": 112433,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Here's a self-care journal, sharing the `type` of self-care one participates in during the week. Let's sort through the data to discover what `types` could be prioritized, based on `difficulty` and `times_per_week`.  \n\n1. Select the `type` of self-care and the `times_per_week` performed from the `selfcare` table.\n2. Create a condition that selects only the values whose `difficulty` is set to `medium`. \n3. Order the data to descend by `times_per_week`, higher values first.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.sql",
                  "codeLanguage": "sql",
                  "content": "",
                  "solvedContent": "SELECT type, times_per_week\r\nFROM selfcare\r\nWHERE difficulty = 'medium'\r\nORDER BY times_per_week DESC;\r\n"
                }
              ],
              "hints": [],
              "sourceDatabaseTables": "{\"Tables\":[{\"Name\":\"selfcare\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"type\"},{\"CellType\":\"Header\",\"Content\":\"times_per_week\"},{\"CellType\":\"Header\",\"Content\":\"difficulty\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"meditation\"},{\"CellType\":\"Data\",\"Content\":\"4\"},{\"CellType\":\"Data\",\"Content\":\"hard\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"running\"},{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"medium\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"reading\"},{\"CellType\":\"Data\",\"Content\":\"2\"},{\"CellType\":\"Data\",\"Content\":\"easy\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"crafting\"},{\"CellType\":\"Data\",\"Content\":\"3\"},{\"CellType\":\"Data\",\"Content\":\"medium\"}]}]}]}",
              "solutionDatabaseTables": "{\"Tables\":[{\"Name\":\"Result\",\"Rows\":[{\"Cells\":[{\"CellType\":\"Header\",\"Content\":\"type\"},{\"CellType\":\"Header\",\"Content\":\"times_per_week\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"crafting\"},{\"CellType\":\"Data\",\"Content\":\"3\"}]},{\"Cells\":[{\"CellType\":\"Data\",\"Content\":\"running\"},{\"CellType\":\"Data\",\"Content\":\"2\"}]}]}]}"
            }
          }
        ]
      }
    ]
  }
}