{
  "tutorial": {
    "id": 1874,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Friend Recommendations",
    "descriptionContent": "Use your arrays skills to make friend recommendations",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1874-icon-banner.svg",
    "chapters": [
      {
        "id": 12324,
        "title": "Friend Recommendations",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "samsFriend Array",
            "id": 111916,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's use our knowledge of arrays to analyze two friend lists to recommend new friends.\n\nStart by creating an array to store friends for Sam.  We'll use this array to store all of Sam's friends.\n\n1. Create a `const` variable named `samsFriends` and set its value to an empty array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const samsFriends = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Sam's Friends",
            "id": 111918,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We can now add some friends to the `samsFriends` array. \n\nWe can use the `push()` method to add multiple names to our array at once.  Use a single `push()` statement in the following manner: `samsFriends.push(\"friend1\", \"friend2\", etc)`.\n\n1. Use the array method `push()` to add `\"morgan\", \"riley\", \"jessie\", \"skyler\", and \"frankie\"` to the `samsFriends` array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\n",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to use the `push()` method on the `samsFriends` array by using `samsFriends.push()`."
                }
              ]
            }
          },
          {
            "title": "ashersFriends Array",
            "id": 111919,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we have created the `samsFriends` array and added friends, let's create a new array to store Asher's friends.\n\n1. Create a `const` variable named `ashersFriends` and set its value to an empty array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\n",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Asher's Friends",
            "id": 111920,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We can now add some friends to the `ashersFriends` array.\n\n1. Use the array method `push()` to add `\"morgan\", \"aiden\", \"angel\", \"ariel\", and \"skyler\"` to the`ashersFriends` array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\n",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Recommendation Array",
            "id": 111921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we have created Sam's and Asher's friends lists, let's create another array to store the friends to recommend to Asher.\n\n1. Create a `const` variable named `friendsRecommendationAsher` and set its value to an empty array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "For loop Part 1",
            "id": 111922,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "With our arrays in place, we need to loop through each name in Sam's list and check if Asher also has that person as a friend.\n\n1. Start by creating a new `let` variable `currentFriend` and assign `\"\"` as its value.\n2. Creating a `for` loop that iterates through the `samsFriends` array.\n3. In the `for` loop body, set the value of the `currentFriend` variable to the element at index `i` (or whatever variable you are using for the iterator) in the `samsFriends` array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Make sure the `for` loop looks like `for (let i = 0; i < samsFriends.length; i++){}`.\n"
                }
              ]
            }
          },
          {
            "title": "For loop Part 2",
            "id": 111923,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's check if each friend from Asher's array is also included in Sam's array. We'll use the array method `includes()` for this check. The `includes(searchElement)` method will check if an array contains this searchElement and returns `true` or `false`.\n1. Let's add this check to our loop by first creating the `let` variable `isCommonFriend` and set its value as `false`.\n2. Next, check if `currentFriend` is in `ashersFriends` using `ashersFriends.includes()` and passing `currentFriend` as the argument of the method. Assign the result to `isCommonFriend`.\"\n\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n}",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": " 1. Make sure to use `ashersFriends.includes()` to check if a friend from Sam's list is also in Asher's list.\""
                }
              ]
            }
          },
          {
            "title": "For loop Part 3",
            "id": 111924,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we've checked if the `currentFriend` is in Asher's list, let's create an `if` statement to add the friend to the `friendsRecommendationAsher` array if Asher *doesn't* have that friend in common.\n\n1. Create an `if` statement that uses `push()` to add `currentFriend` to the `friendsRecommendationAsher` array if `isCommonFriend` is `false`.\n",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n}",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n  if (!isCommonFriend) {\r\n    friendsRecommendationAsher.push(currentFriend);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. If `isCommonFriend` is `false`, use `friendsRecommendationAsher.push(<argument>)` to add the friend to our array."
                }
              ]
            }
          },
          {
            "title": "Display Recommended Friends",
            "id": 111936,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we've added some friends to the `friendsRecommendationAsher` array, let's display our list of recommended friends.\n\n1. Outside of the loop, use `console.log()` to display the text `\"Friends Recommended for Asher:\"`.\n2. On the next line console.log the `friendsRecommendationAsher` variable.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n  if (!isCommonFriend) {\r\n    friendsRecommendationAsher.push(currentFriend);\r\n  }\r\n}",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n  if (!isCommonFriend) {\r\n    friendsRecommendationAsher.push(currentFriend);\r\n  }\r\n}\r\nconsole.log(\"Friends Recommended for Asher:\");\r\nconsole.log(friendsRecommendationAsher);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}