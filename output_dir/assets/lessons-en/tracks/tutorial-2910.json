{
  "tutorial": {
    "id": 2910,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "PUT Requests",
    "descriptionContent": "Learn how to use a PUT request to send data to a server",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15004,
        "title": "PUT",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 132321,
            "contentType": "interactive",
            "images": [
              {
                "id": "5d5e1f86-5b01-497f-8ee6-04ace8d2921f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> is a request method used to update or replace a resource on the server.</p><p>Unlike <code>POST</code>, which typically creates new resources, <code>PUT</code> is used when the client sends data to modify an existing resource.</p><img src=\"5d5e1f86-5b01-497f-8ee6-04ace8d2921f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "PUT",
            "id": 132322,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> is a request method that we use to update existing data on the server, like modifying an existing course Mimo wants to revise.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>PUT</code>.</p></body></html>"
          },
          {
            "title": "PUT URL",
            "id": 132323,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> relies on a URL containing the server address, along with the type of resource the new data is <em>related</em> to.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"20\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>mimo.org</code>.</p></body></html>"
          },
          {
            "title": "PUT URL 2",
            "id": 132324,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>This <code>PUT</code> request's URL shows that an existing course should be updated or replaced under courses.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"28\" /><option startIndex=\"28\" endIndex=\"31\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>/courses</code>, followed by <code>/10</code>.</p></body></html>"
          },
          {
            "title": "PUT URL Query Parameters",
            "id": 132325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In a <code>PUT</code> request, the payload contains the full updated data for the resource being modified.</p><p>We send the entire updated resource, as it replaces the current one, meaning missing fields may be removed.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;languages&quot;\" class=\"string\" /><text value=\": [\" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"33\" endIndex=\"34\" /><option startIndex=\"88\" endIndex=\"89\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>{</code>, followed by <code>}</code>.</p></body></html>"
          },
          {
            "title": "Question: PUT",
            "id": 132326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What do we use <code>PUT</code> requests for?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">For updating or replacing existing data on the server</item><item value=\"2\" correct=\"false\">For retrieving data from the server</item></selection><p visible-if=\"wrong\">For updating or replacing existing data on the server.</p></body></html>"
          },
          {
            "title": "Question: PUT URL",
            "id": 132327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How does the browser know where to send the data in the <code>PUT</code> request?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Through the server address in the request's URL</item><item value=\"2\" correct=\"false\">By reading the data that the request is sending</item></selection><p visible-if=\"wrong\">Through the server address in the request's URL.</p></body></html>"
          },
          {
            "title": "Question: PUT URL 2",
            "id": 132328,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Looking at this URL, what might the data we're sending be related to?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/458\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted [Revised]&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;After all ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">An update to an existing article</item><item value=\"2\" correct=\"false\"> A new article submitted by someone</item></selection><p visible-if=\"wrong\">An update to an existing article.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 132330,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code an HTTP request method that <em>updates</em> data from a server.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/112\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\"POST\" /></content></option><option correct=\"false\"><content><text value=\"GET\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>PUT</code>.</p></body></html>"
          },
          {
            "title": "Example: PUT URL",
            "id": 132331,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Send a <code>PUT</code> request to a server at <code>fakenews.com</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/458\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted [Revised]&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;After all ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"3\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>PUT</code>.</p></body></html>"
          },
          {
            "title": "Example: PUT URL 2",
            "id": 132332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Through the <code>PUT</code> request's URL, let the server know which article to update.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/458\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted [Revised]&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;After all ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"24\" endIndex=\"25\" /><option startIndex=\"25\" endIndex=\"32\" /><option startIndex=\"32\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"36\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>/</code> followed by <code>article</code> and then <code>/</code>, <code>458</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132383,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In a <code>PUT</code> request, do you send only the data you want to change or the entire updated resource?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">You send the entire updated resource</item><item value=\"2\" correct=\"false\">You only send the data you want to change</item></selection><p visible-if=\"wrong\">You send the entire updated resource.</p></body></html>"
          }
        ]
      },
      {
        "id": 15005,
        "title": "Request & Response",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "PUT Body",
            "id": 132333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> requests look very similar to <code>POST</code> requests in Express.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"7\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>put</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2",
            "id": 132334,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Like with <code>POST</code> requests, we define the endpoint for <code>PUT</code> requests as well.</p><p>However, we must also include the specific resource identifier in the URL to specify which resource should be updated.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"9\" endIndex=\"10\" /><option startIndex=\"10\" endIndex=\"15\" /><option startIndex=\"15\" endIndex=\"16\" /><option startIndex=\"16\" endIndex=\"19\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>/</code> followed by <code>users</code> and then <code>/</code>, <code>:id</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy",
            "id": 132386,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> requests often rely on route parameters to identify the specific resource that should be updated.</p><p>We use <code>req.params.id</code> to unpack a route parameter with the name <code>id</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"54\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"67\" /></options></interaction></interactions><output><content><text value=\"Update user with id 937\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>req</code> followed by <code>.</code> and then <code>params</code>, <code>.</code>, <code>id</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy",
            "id": 132345,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Like <code>POST</code> requests, <code>PUT</code> requests also contain data in their request body.</p><p>In a <code>PUT</code> request, we send the entire updated resource, as it replaces the current one, meaning missing fields may be removed.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"140\" /><option startIndex=\"140\" endIndex=\"145\" /></options></interaction></interactions><output><content><text value=\"Update user with id 937\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin25&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>req</code>, followed by <code>.body</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy",
            "id": 132346,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To allow accessing the body, we need to tell our express app to use <code>express.json</code>, a built-in middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"101\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Update user with id 937\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin25&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>express.json()</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy",
            "id": 132347,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If we want to access the passed data, we parse it. As soon as we've done that, we can access and work with the data in the request body.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Updated username: \" /><text value=\"${username}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Updated email: \" /><text value=\"${email}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"177\" endIndex=\"185\" /><option startIndex=\"214\" endIndex=\"219\" /></options></interaction></interactions><output><content><text value=\"Update user with id 937\" /><text type=\"break\" /><text value=\"Updated username: _crazyPumpkin25\" /><text type=\"break\" /><text value=\"Updated email: mia@mimo.org\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>username</code>, followed by <code>email</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy - Copy",
            "id": 132348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Similar to other methods, we can and should send back a response.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"104\" /><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"109\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>res</code>, followed by <code>.</code>, and finally <code>send</code>.</p></body></html>"
          },
          {
            "title": "a",
            "id": 132349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The default status if everything goes according to plan and a new element is created or added to the database is <code>200 OK</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"116\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>.</code>, followed by <code>status(200)</code>.</p></body></html>"
          },
          {
            "title": "a - Copy",
            "id": 135903,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We first specify the HTTP status code and then send the response body to the client.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"117\" /><option startIndex=\"117\" endIndex=\"121\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>.</code> followed by <code>status(200)</code> and then <code>.</code>, <code>send</code>.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy - Copy",
            "id": 132350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To update an existing user, we might require certain parameters, such as an email, to be sent with the request.</p><p>If we have all the data and can add the user, we send <code>200 OK</code>. If data is missing, we send <code>400 Bad Request</code> with an error message.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"210\" endIndex=\"213\" /><option startIndex=\"258\" endIndex=\"261\" /></options></interaction></interactions><output><content><text value=\"Email is required\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>400</code>, followed by <code>200</code>.</p></body></html>"
          },
          {
            "title": "PUT Headers",
            "id": 132336,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A <code>PUT</code> request has headers providing extra context, like <code>Content-Type</code> which tells us the format of the request body.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/937\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin25&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"46\" endIndex=\"59\" /><option startIndex=\"60\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>Content-Type:</code>, followed by <code>application/json</code>.</p></body></html>"
          },
          {
            "title": "PUT Headers 2",
            "id": 132335,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>You can see that this <code>PUT</code> request's body <code>Content-Type</code> is <code>application/json</code>, the most common content type.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/937\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin25&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"60\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>application</code>, followed by <code>/</code>, and finally <code>json</code>.</p></body></html>"
          },
          {
            "title": "Question: PUT Body",
            "id": 132337,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Where do <code>PUT</code> requests store the data they send to the server?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">In the request body</item><item value=\"2\" correct=\"false\">Only in the URL, as query parameter values</item></selection><p visible-if=\"wrong\">In the request body.</p></body></html>"
          },
          {
            "title": "Example: PUT Body JSON",
            "id": 132343,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create a <code>PUT</code> endpoint to update a specific user.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hello from the endpoint!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"3\" endIndex=\"4\" /><option startIndex=\"4\" endIndex=\"7\" /><option startIndex=\"8\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"&quot;/users&quot;\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>app</code> followed by <code>.</code> and then <code>put</code>, <code>\"/users/:id\"</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Body 2",
            "id": 132338,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What might this <code>PUT</code> request send to the server?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/112/comment/49\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy!!!&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">An update to a comment to an article</item><item value=\"2\" correct=\"false\">A user's data, including username and description</item></selection><p visible-if=\"wrong\">An update to a comment to an article.</p></body></html>"
          },
          {
            "title": "Question: POST Body JSON",
            "id": 132339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's one popular option for formatting a <code>PUT</code> request's data?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JSON</item><item value=\"2\" correct=\"false\">HTTP</item></selection><p visible-if=\"wrong\">Make sure to pick JSON.</p></body></html>"
          },
          {
            "title": "Question: POST Headers",
            "id": 132340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What will the status code be if all the required data is provided and the request is successful?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>200 OK</code></item><item value=\"2\" correct=\"false\"><code>400 Bad Request</code></item></selection><p visible-if=\"wrong\"><code>200 OK</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Body 2",
            "id": 132342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Set the correct codes.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"210\" endIndex=\"213\" /><option startIndex=\"258\" endIndex=\"261\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>400</code>, followed by <code>200</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Headers",
            "id": 132344,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Send back a response along with the correct status code.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"104\" /><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option startIndex=\"112\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"117\" /><option startIndex=\"117\" endIndex=\"121\" /><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>res</code> followed by <code>.</code> and then <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code>, <code>.</code>, <code>send</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Headers 2",
            "id": 132341,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does a <code>PUT</code> request's <code>Content-Type</code> header tell us?<br /></p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment/49\" /><text type=\"break\" /><text value=\"Host: fakenews.com\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy!!!&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The format of the data we're sending to the server</item><item value=\"2\" correct=\"false\">The format of the data in the server's database</item></selection><p visible-if=\"wrong\">The format of the data we're sending to the server.</p></body></html>"
          }
        ]
      }
    ]
  }
}