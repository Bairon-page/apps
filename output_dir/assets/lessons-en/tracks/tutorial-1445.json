{
  "tutorial": {
    "id": 1445,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Polymorphic Objects",
    "descriptionContent": "Polymorpism",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10395,
        "title": "Polymorphism",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 93715,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Methods represent behaviors. For example, a <code>speak()</code> method displays text in the console.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /></content><output><content><text value=\"Meow\" /></content></output></code></body></html>"
          },
          {
            "title": "Inheritence",
            "id": 95663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>With inheritance, we can extend a child class's functionality. But what if we want to implement class behaviors differently from each other?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"121\" endIndex=\"125\" /><option startIndex=\"126\" endIndex=\"132\" /></options></interaction></interactions><output><content><text value=\"Meow\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>Lion</code>, followed by <code>Feline</code>.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 93714,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Here we see <code>lion</code> meowing which is wrong. We want different behavior of <code>speak()</code> based on its class. This is called <strong>polymorphism</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /><text type=\"break\" /><text value=\"lion = Lion()\" /><text type=\"break\" /><text value=\"lion.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"225\" endIndex=\"229\" /><option startIndex=\"229\" endIndex=\"230\" /><option startIndex=\"230\" endIndex=\"235\" /><option startIndex=\"235\" endIndex=\"236\" /><option startIndex=\"236\" endIndex=\"237\" /></options></interaction></interactions><output><content><text value=\"Meow\" /><text type=\"break\" /><text value=\"Meow\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>lion</code> followed by <code>.</code> and then <code>speak</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 95664,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A subclass can override the methods it inherits from its superclass. We simply set the same name method on the subclass.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;ROAR!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /><text type=\"break\" /><text value=\"lion = Lion()\" /><text type=\"break\" /><text value=\"lion.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"184\" endIndex=\"187\" /><option startIndex=\"188\" endIndex=\"193\" /><option startIndex=\"193\" endIndex=\"194\" /><option startIndex=\"194\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /></options></interaction></interactions><output><content><text value=\"Meow\" /><text type=\"break\" /><text value=\"ROAR!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>def</code> followed by <code>speak</code> and then <code>(</code>, <code>self</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Result",
            "id": 95665,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Polymorphism ensures that the proper method will be executed based on the calling object’s class.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Feline\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"lick\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Licking paw&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lion\" class=\"title\" /><text value=\"(Feline)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"prey\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Pounces on prey&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;ROAR!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"cat = Cat()\" /><text type=\"break\" /><text value=\"cat.speak()\" /><text type=\"break\" /><text value=\"lion = Lion()\" /><text type=\"break\" /><text value=\"lion.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"263\" endIndex=\"267\" /><option startIndex=\"267\" endIndex=\"268\" /><option startIndex=\"268\" endIndex=\"273\" /><option startIndex=\"273\" endIndex=\"274\" /><option startIndex=\"274\" endIndex=\"275\" /></options></interaction></interactions><output><content><text value=\"Meow\" /><text type=\"break\" /><text value=\"ROAR!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>lion</code> followed by <code>.</code> and then <code>speak</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Overridden example",
            "id": 93716,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Instances of <code>Electric</code> will inherit the overridden method from <code>Electric</code>, not the original one from <code>Car</code>. What will <code>tesla.drive()</code> log?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Vroom!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Electric\" class=\"title\" /><text value=\"(Car)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Whirr!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"tesla = Electric()\" /><text type=\"break\" /><text value=\"tesla.drive()\" /></content><output><content><text value=\"Whirr!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Whirr!</item><item value=\"2\" correct=\"false\">Vroom!</item></selection><p visible-if=\"wrong\">Make sure to pick Whirr!.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 93717,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Polymorphism refers to objects' ability to do which of the following?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Customize their implementation of an inherited behavior</item><item value=\"2\" correct=\"false\">Define completely new behaviors</item></selection><p visible-if=\"wrong\">Customize their implementation of an inherited behavior.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 93718,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How does a subclass override its inherited methods?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Defining the inherited method in the subclass and changing the behavior</item><item value=\"2\" correct=\"false\">Subclasses cannot override inherited methods</item></selection><p visible-if=\"wrong\">Defining the inherited method in the subclass and changing the behavior.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 93719,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How can we customize a <code>Cowboy</code>' to have the same functionality as <code>Person</code> except <code>greet()</code> prints <code>Howdy!</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hello!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"wave\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Waving&quot;\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Add a subclass of <code>Person</code> called <code>Cowboy</code> and change it to print <code>Howdy!</code> in <code>greet()</code> </item><item value=\"2\" correct=\"false\">Replace <code>Hello!</code> with <code>Howdy!</code> inside <code>Person</code></item></selection><p visible-if=\"wrong\">Add a subclass of <code>Person</code> called <code>Cowboy</code> and change it to print <code>Howdy!</code> in <code>greet()</code> .</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 93720,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does <code>professor.greet()</code> display in the console?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hello!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Professor\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Salutations!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"professor = Professor()\" /><text type=\"break\" /><text value=\"professor.greet()\" /></content><output><content><text value=\"Salutations!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Salutations!</item><item value=\"2\" correct=\"false\">Hello!</item></selection><p visible-if=\"wrong\">Make sure to pick Salutations!.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 93722,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Override the inherited method so that <code>duck.speak()</code> displays <code>Quack</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Chirp&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Duck\" class=\"title\" /><text value=\"(Bird)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Quack&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"duck = Duck()\" /><text type=\"break\" /><text value=\"duck.speak()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"74\" /><option startIndex=\"75\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"85\" /><option startIndex=\"85\" endIndex=\"86\" /><option startIndex=\"98\" endIndex=\"105\" /></options></interaction></interactions><output><content><text value=\"Quack\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>def</code> followed by <code>speak</code> and then <code>(</code>, <code>self</code>, <code>)</code>, <code>\"Quack\"</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 93732,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Override the method at the subclass level so that both <code>duck1.speak()</code> and <code>duck2.speak()</code> display <code>Quack</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Chirp&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Duck\" class=\"title\" /><text value=\"(Bird)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"speak\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Quack&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"duck1 = Duck()\" /><text type=\"break\" /><text value=\"duck2 = Duck()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"duck1.speak()\" /><text type=\"break\" /><text value=\"duck2.speak()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"75\" endIndex=\"86\" /></interactions><output><content><text value=\"Quack\" /><text type=\"break\" /><text value=\"Quack\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>speak(self)</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 93723,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Place the code in the correct methods so that <code>Smartphone</code>'s <code>unlock()</code> method prints <code>Enter thumbprint</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cell\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"unlock\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Enter passcode&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Smartphone\" class=\"title\" /><text value=\"(Cell)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"unlock\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Enter thumbprint&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"smartphone = Smartphone()\" /><text type=\"break\" /><text value=\"smartphone.unlock()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"109\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"133\" /><option startIndex=\"133\" endIndex=\"134\" /><option correct=\"false\"><content><text value=\"print()\" /></content></option></options></interaction></interactions><output><content><text value=\"Enter thumbprint\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>print</code> followed by <code>(</code> and then <code>\"Enter thumbprint\"</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 93724,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Call the function <code>display</code> on the correct document variable so that <code>Rendering Microsoft Word file</code> displays in the console.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Document\" class=\"title\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"   print(\" /><text value=\"&quot;Rendering file&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"PDF\" class=\"title\" /><text value=\"(Document)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Rendering PDF file&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"MicrosoftWord\" class=\"title\" /><text value=\"(Document)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Rendering Microsoft Word file&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"doc1 = Document() \" /><text type=\"break\" /><text value=\"doc2 = PDF() \" /><text type=\"break\" /><text value=\"doc3 = MicrosoftWord() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"doc3.display()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"307\" endIndex=\"311\" /><option startIndex=\"311\" endIndex=\"312\" /><option startIndex=\"312\" endIndex=\"319\" /><option startIndex=\"319\" endIndex=\"320\" /><option startIndex=\"320\" endIndex=\"321\" /><option correct=\"false\"><content><text value=\"doc1\" /></content></option><option correct=\"false\"><content><text value=\"doc2\" /></content></option></options></interaction></interactions><output><content><text value=\"Rendering Microsoft Word file\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>doc3</code> followed by <code>.</code> and then <code>display</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}