{
  "tutorial": {
    "id": 2943,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Intro to Express Router",
    "descriptionContent": "Learn what the Express router is and how to utilize it",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15060,
        "title": "Express Router Intro",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro I",
            "id": 122347,
            "contentType": "interactive",
            "images": [
              {
                "id": "8b89f984-1613-4186-8386-fb9bb6c81533"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The Express router helps organize web application's routes into separate, manageable pieces.</p><p>The Express router keeps routes organized, making it easier to find and use them, just like putting toys in separate boxes!</p><img src=\"8b89f984-1613-4186-8386-fb9bb6c81533\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To use the Express router, we first need to require the Express module and then access the router.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"67\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>express</code>, followed by <code>.Router()</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132772,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We define routes on the router in the same way as we do on the express application.</p><p>The only difference is that we call them on the router variable and not on the app variable.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"80\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>router</code>, followed by <code>.get</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132773,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The router allows us to group similar routes together and use them in the main app. We use a router as we use middleware with <code>app.use</code>.</p><p>We can now call <code>http://localhost:3000/greet</code> as we would when we directly define routes on the main app.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"195\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"202\" /><option startIndex=\"203\" endIndex=\"209\" /></options></interaction></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>app</code> followed by <code>.</code> and then <code>use</code>, <code>router</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The router acts like a mini-application, allowing us to move it into its own file for better organization and improved readability.</p><p>In <code>app.js</code>, we import the router to integrate it into our main application.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"78\" endIndex=\"85\" /><option startIndex=\"65\" endIndex=\"75\" /><option startIndex=\"112\" endIndex=\"122\" /><option startIndex=\"86\" endIndex=\"100\" /></options></interaction></interactions></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Make sure to pick <code>userRoutes</code> followed by <code>require</code> and then <code>\"./userRoutes\"</code>, <code>userRoutes</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132778,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Of course, to allow importing the <code>router</code> as module, we need to export a module.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"172\" endIndex=\"178\" /><option startIndex=\"178\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"186\" /><option startIndex=\"189\" endIndex=\"195\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>module</code> followed by <code>.</code> and then <code>exports</code>, <code>router</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Adding <code>\"/user\"</code> when integrating the router into the main application, prefixes all routes in the router.</p><p>The route defined as <code>\"/greet\"</code> in the router can now be accessed via <code>\"/user/greet\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/user&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"195\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"202\" /></options></interaction></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>app</code>, followed by <code>.</code>, and finally <code>use</code>.</p></body></html>"
          },
          {
            "title": "Router in Files",
            "id": 122359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Access the Express router.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"67\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>express</code> followed by <code>.</code> and then <code>Router</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What is the correct way to import a router in your main app file?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>const router = require(\"./routerFile\");</code></item><item value=\"2\" correct=\"false\"><code>import router from \"./routerFile\";</code></item></selection><p visible-if=\"wrong\"><code>const router = require(\"./routerFile\");</code>.</p></body></html>"
          },
          {
            "title": "GET Endpoint",
            "id": 122349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create a <code>GET</code> endpoint using the router.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"app\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>router</code>, followed by <code>.</code>, and finally <code>get</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 132791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What type of request does <code>router.get()</code> handle?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>GET</code> requests</item><item value=\"2\" correct=\"false\">All possible requests</item></selection><p visible-if=\"wrong\"><code>GET</code> requests.</p></body></html>"
          },
          {
            "title": "app.use()",
            "id": 122362,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use the imported routes.</p><code version=\"2\" codelang=\"javascript\" name=\"index.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" usersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./users.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", usersRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"76\" /><option startIndex=\"103\" endIndex=\"106\" /><option startIndex=\"106\" endIndex=\"107\" /><option startIndex=\"107\" endIndex=\"110\" /><option startIndex=\"121\" endIndex=\"132\" /><option correct=\"false\"><content><text value=\"router\" /></content></option></options></interaction></interactions><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"users.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Make sure to pick <code>usersRouter</code> followed by <code>app</code> and then <code>.</code>, <code>use</code>, <code>usersRouter</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132792,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens if you prefix routes in the router like in this example with <code>\"/user\"</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"app.use(\" /><text value=\"&quot;/user&quot;\" class=\"string\" /><text value=\", router);\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">All routes in the router will be accessible under the <code>\"/user\"</code> path, such as <code>\"/user/greet\"</code></item><item value=\"2\" correct=\"false\">The router will only accept requests that match the exact path <code>\"/user\"</code></item></selection><p visible-if=\"wrong\">All routes in the router will be accessible under the <code>\"/user\"</code> path, such as <code>\"/user/greet\"</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 15065,
        "title": "The Router Object",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro I",
            "id": 122363,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Now that we've covered the basics of Express's router object, let's explore some of its methods.</p><p>The Express Router allows us to divide our application into small, maintainable sections, each with its own routing. But there is more!</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132808,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Let's make the Express app use our <code>userRoutes</code> router.</p><p>The router works as middleware itself.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"107\" /><option startIndex=\"107\" endIndex=\"111\" /><option startIndex=\"112\" endIndex=\"122\" /></options></interaction></interactions></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Make sure to pick <code>app</code>, followed by <code>.use</code>, and finally <code>userRoutes</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132798,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Of course, we can use <code>GET</code>, <code>POST</code>, <code>PATCH</code>, <code>DELETE</code>, and more.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Returned!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.post(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Posted!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.patch(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Patched!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.delete(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Deleted!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"139\" endIndex=\"143\" /><option startIndex=\"263\" endIndex=\"269\" /><option startIndex=\"200\" endIndex=\"205\" /><option startIndex=\"77\" endIndex=\"80\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>get</code> followed by <code>post</code> and then <code>patch</code>, <code>delete</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy - Copy",
            "id": 132809,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The router itself can also host middleware. For example, we can use the built-in JSON middleware to parse incoming body objects.</p><p>We do that by calling <code>use</code> on the router instead of the app.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.post(\" /><text value=\"&quot;/new&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" body = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(body);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"172\" endIndex=\"178\" /><option startIndex=\"178\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"182\" /><option startIndex=\"183\" endIndex=\"197\" /><option correct=\"false\"><content><text value=\"app\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>router</code> followed by <code>.</code> and then <code>use</code>, <code>express.json()</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4  - Copy - Copy",
            "id": 132810,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Similar to built-in middleware, the router can use custom middleware as well. Let's make our router use the custom <code>logRequest</code> middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logRequest = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Incoming request type: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(logRequest);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"189\" endIndex=\"199\" /><option startIndex=\"76\" endIndex=\"86\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>logRequest</code>, followed by <code>logRequest</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 132800,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A neat trick is to pass the middleware function directly to <code>router.use</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time: &quot;\" class=\"string\" /><text value=\", \" /><text value=\"Date\" class=\"built_in\" /><text value=\".now());\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"10\" /><option startIndex=\"11\" endIndex=\"27\" /><option startIndex=\"28\" endIndex=\"30\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>router.use</code>, followed by <code>(req, res, next)</code>, and finally <code>=&gt;</code>.</p></body></html>"
          },
          {
            "title": "Example: router.use()",
            "id": 122377,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the correct Express function at the end of the first route-level middleware function to allow the next middleware to execute.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;First middleware for /team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;First middleware for /team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Second middleware for /team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"221\" endIndex=\"225\" /><option startIndex=\"225\" endIndex=\"226\" /><option startIndex=\"226\" endIndex=\"227\" /><option startIndex=\"227\" endIndex=\"228\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"First middleware for /team\" /><text type=\"break\" /><text value=\"Second middleware for /team\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>next</code> followed by <code>(</code> and then <code>)</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Example: use()",
            "id": 122382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Let's look at an example that shows how multiple routers can give Express apps a nice structure.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" studentsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./students.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" teachersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./teachers.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" subjectsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./subjects.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(studentsRouter);\" /><text type=\"break\" /><text value=\"app.use(teachersRouter);\" /><text type=\"break\" /><text value=\"app.use(subjectsRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"215\" endIndex=\"229\" /><option startIndex=\"236\" endIndex=\"239\" /><option startIndex=\"257\" endIndex=\"260\" /><option correct=\"false\"><content><text value=\"express\" /></content></option><option correct=\"false\"><content><text value=\"teacherRouter\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"students.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/students&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get students&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"teachers.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/teachers&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get teachers&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"subjects.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/subjects&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get subjects&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Make sure to pick <code>studentsRouter</code>, followed by <code>use</code>, and finally <code>app</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132837,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Can we handle multiple HTTP requests in a single router?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Yes, you can handle as many request types as you want</item><item value=\"2\" correct=\"false\">No, we need multiple routers for that</item></selection><p visible-if=\"wrong\">Yes, you can handle as many request types as you want.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 132831,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Create a <code>GET</code> route for the <code>\"/\"</code> endpoint using the router.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"app\" /></content></option><option correct=\"false\"><content><text value=\"put\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>router</code>, followed by <code>.</code>, and finally <code>get</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132803,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the code to make the router use both defined custom middleware functions.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"timeLog\" class=\"title\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time: &quot;\" class=\"string\" /><text value=\", \" /><text value=\"Date\" class=\"built_in\" /><text value=\".now());\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(req.method, \" /><text value=\"&quot;Request: &quot;\" class=\"string\" /><text value=\", req.path, req.body);\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"66\" endIndex=\"72\" /><option startIndex=\"73\" endIndex=\"76\" /><option startIndex=\"163\" endIndex=\"169\" /><option startIndex=\"170\" endIndex=\"173\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>router</code> followed by <code>use</code> and then <code>router</code>, <code>use</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132835,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How can you handle a <code>DELETE</code> request in a router?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">By using <code>router.delete(\"/path\", handler)</code></item><item value=\"2\" correct=\"false\">By using <code>router.remove(\"/path\", handler)</code></item></selection><p visible-if=\"wrong\">By using <code>router.delete(\"/path\", handler)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4  - Copy - Copy - Copy",
            "id": 132833,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the code to make the router use our custom middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logRequest = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Incoming request type: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(logRequest);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"178\" endIndex=\"184\" /><option startIndex=\"184\" endIndex=\"185\" /><option startIndex=\"185\" endIndex=\"188\" /><option correct=\"false\"><content><text value=\"app\" /></content></option><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>router</code>, followed by <code>.</code>, and finally <code>use</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}