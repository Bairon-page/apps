{
  "tutorial": {
    "id": 2558,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "swift",
    "title": "Understanding Functions",
    "descriptionContent": "Understanding Functions",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14303,
        "title": "Naming Functions",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Clear and descriptive",
            "id": 127172,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Function names should be descriptive and should indicate the main purpose of the function. This function prints something in the console.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(word: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(word)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display(word: \" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"display(word: \" /><text value=\"&quot;Bye&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"hide\" /></content></option></options></interaction></interactions><output><content><text value=\"Hi\" /><text type=\"break\" /><text value=\"Bye\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>display</code>.</p></body></html>"
          },
          {
            "title": "Prefix",
            "id": 127173,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Functions are actions, so their names should contain at least one verb. When using multiple words, the verb is a <strong>prefix</strong>, like <code>sumTotal</code>.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"sumTotal\" class=\"title\" /><text value=\"(price: Double, tax: Double)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(price + tax)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"sumTotal(price: \" /><text value=\"1000\" class=\"number\" /><text value=\", tax: \" /><text value=\"250\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"8\" /><option startIndex=\"8\" endIndex=\"13\" /></options></interaction></interactions><output><content><text value=\"1250\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>sum</code>, followed by <code>Total</code>.</p></body></html>"
          },
          {
            "title": "Get",
            "id": 127174,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Functions that mainly return a value without changing it in any way start with verbs like <code>get</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getName\" class=\"title\" /><text value=\"(fullName: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" fullName[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fullName = [\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Juan&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" firstName = getName(fullName: fullName)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"createName\" /></content></option><option correct=\"false\"><content><text value=\"showFirstName\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>getName</code>.</p></body></html>"
          },
          {
            "title": "Booleans",
            "id": 127175,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>As a special case, functions that return boolean values often start with <code>is</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isFreezing\" class=\"title\" /><text value=\"(temperature: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" temperature &lt; \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" freezing = isFreezing(temperature: -\" /><text value=\"3\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(freezing)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"15\" /><option correct=\"false\"><content><text value=\"getFreezing\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>isFreezing</code>.</p></body></html>"
          },
          {
            "title": "Stay consistent",
            "id": 127176,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Function names should be consistent. If one function is called <code>calculateDifference</code>, a similar function should have the same verb prefix.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"calculateSum\" class=\"title\" /><text value=\"(a: Int, b: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Int\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + b\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"calculateDifference\" class=\"title\" /><text value=\"(a: Int, b: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Int\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" a - b\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sum = calculateSum(a: \" /><text value=\"30\" class=\"number\" /><text value=\", b: \" /><text value=\"11\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" difference = calculateDifference(a: \" /><text value=\"30\" class=\"number\" /><text value=\", b:\" /><text value=\"11\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(sum)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(difference)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"getSum\" /></content></option></options></interaction></interactions><output><content><text value=\"41\" /><text type=\"break\" /><text value=\"19\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>calculateSum</code>.</p></body></html>"
          },
          {
            "title": "Example: Booleans",
            "id": 127183,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>As a special case, functions that return boolean values often start with <code>is</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isEqual\" class=\"title\" /><text value=\"(number: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" number == \" /><text value=\"10\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" number = \" /><text value=\"10\" class=\"number\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(isEqual(number: number))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"getFreezing\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>isEqual</code>.</p></body></html>"
          },
          {
            "title": "Question: Clear and descriptive",
            "id": 127177,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why do we give functions descriptive names?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">So we can figure out what they do by the name alone</item><item value=\"2\" correct=\"false\">So our code runs on a computer</item></selection><p visible-if=\"wrong\">So we can figure out what they do by the name alone.</p></body></html>"
          },
          {
            "title": "Question: Prefix verb",
            "id": 127178,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's necessary for a function name to have?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A verb</item><item value=\"2\" correct=\"false\">A noun</item></selection><p visible-if=\"wrong\">A verb.</p></body></html>"
          },
          {
            "title": "Question: Prefix",
            "id": 127179,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Where do we add the verb in a function name?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">At the beginning, as a prefix</item><item value=\"2\" correct=\"false\">At the end, as a suffix</item></selection><p visible-if=\"wrong\">At the beginning, as a prefix.</p></body></html>"
          },
          {
            "title": "Question: Stay consistent",
            "id": 127180,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How do we name similar functions?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">We stay consistent and use the same verb</item><item value=\"2\" correct=\"false\">We give all functions the exact same name</item></selection><p visible-if=\"wrong\">We stay consistent and use the same verb.</p></body></html>"
          },
          {
            "title": "Example: Clear and descriptive",
            "id": 127181,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the correct name and function call to display the user name.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayUserName\" class=\"title\" /><text value=\"(user: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(user)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" user = \" /><text value=\"&quot;Don Quixote&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"displayUserName(user: user)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"20\" /><option startIndex=\"78\" endIndex=\"93\" /><option correct=\"false\"><content><text value=\"createID\" /></content></option><option correct=\"false\"><content><text value=\"getUser\" /></content></option></options></interaction></interactions><output><content><text value=\"Don Quixote\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>displayUserName</code>, followed by <code>displayUserName</code>.</p></body></html>"
          },
          {
            "title": "Example: Prefix",
            "id": 127182,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code an appropriate function name for a function that returns a value.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getTotal\" class=\"title\" /><text value=\"(price: Double, tax: Double)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Double\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" price + tax\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"13\" /><option correct=\"false\"><content><text value=\"show.Total\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>getTotal</code>.</p></body></html>"
          },
          {
            "title": "Example: Stay consistent",
            "id": 127184,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the correct verb prefix for this function.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayName\" class=\"title\" /><text value=\"(name: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(name[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayAlias\" class=\"title\" /><text value=\"(name: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(name[\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fullName = [\" /><text value=\"&quot;Clark Kent&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Superman&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayName(name: fullName)\" /><text type=\"break\" /><text value=\"displayAlias(name: fullName)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"59\" endIndex=\"66\" /></interactions><output><content><text value=\"Clark Kent\" /><text type=\"break\" /><text value=\"Superman\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>display</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 14304,
        "title": "Functions as black boxes",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 127185,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A function is like a <strong>black box</strong> because with a great name we can call a function without reading the code defined inside it.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;J.D. Salinger&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"displayAuthor(author: author)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"59\" /></options></interaction></interactions><output><content><text value=\"J.D. Salinger\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>displayAuthor(author: author)</code>.</p></body></html>"
          },
          {
            "title": "Multiple calls",
            "id": 127186,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>For example, without reading the code defined inside the functions, can you guess what happens when this code runs?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"displayTitle()\" /><text type=\"break\" /><text value=\"displayAuthor()\" /><text type=\"break\" /><text value=\"displayYear()\" /></content><output><content><text value=\"Title: Tortilla Flat\" /><text type=\"break\" /><text value=\"Author: John Steinbeck\" /><text type=\"break\" /><text value=\"Published in: 1934\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A title, an author, and a date display in the console</item><item value=\"2\" correct=\"false\"><code>Hello, world</code> displays in the console</item></selection><p visible-if=\"wrong\">A title, an author, and a date display in the console.</p></body></html>"
          },
          {
            "title": "Input and Output",
            "id": 127187,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>While we don't have to remember the code of every function in a program, we do have to pass the right <strong>input</strong> to get the right <strong>output</strong>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" title = \" /><text value=\"&quot;Tortilla Flat&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" date = \" /><text value=\"1935\" class=\"number\" /><text type=\"break\" /><text value=\"displayAuthor(author: author)\" /><text type=\"break\" /><text value=\"displayTitle(title: title)\" /><text type=\"break\" /><text value=\"displayYear(date: date)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"124\" endIndex=\"129\" /><option startIndex=\"149\" endIndex=\"153\" /></options></interaction></interactions><output><content><text value=\"Author: John Steinbeck\" /><text type=\"break\" /><text value=\"Title: Tortilla Flat\" /><text type=\"break\" /><text value=\"Published in: 1935\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>title</code>, followed by <code>date</code>.</p></body></html>"
          },
          {
            "title": "Strings and numbers",
            "id": 127188,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The right input depends on what types of values we pass to a function. Pass the string first, followed by the number.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayScore\" class=\"title\" /><text value=\"(name: String, points: Int)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;\\(name): \\(points)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"displayScore(name: \" /><text value=\"&quot;John&quot;\" class=\"string\" /><text value=\", points: \" /><text value=\"350\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"99\" endIndex=\"105\" /><option startIndex=\"115\" endIndex=\"118\" /></options></interaction></interactions><output><content><text value=\"John: 350\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>\"John\"</code>, followed by <code>350</code>.</p></body></html>"
          },
          {
            "title": "Adding numbers",
            "id": 127189,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The value types matter when functions perform operations. For example, when adding two numbers, the values we pass have to be numbers.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"sumScore\" class=\"title\" /><text value=\"(score: Int, bonus: Int)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(score + bonus)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"sumScore(score: \" /><text value=\"100\" class=\"number\" /><text value=\", bonus: \" /><text value=\"50\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"95\" /><option correct=\"false\"><content><text value=\"&quot;100&quot;\" /></content></option><option correct=\"false\"><content><text value=\"&quot;50&quot;\" /></content></option><option correct=\"false\"><content><text value=\"&quot;100, 50&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"150\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>100, bonus: 50</code>.</p></body></html>"
          },
          {
            "title": "Other values",
            "id": 127190,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A function's output doesn't have to be the same type as the input. This function has a number as input and a boolean as output.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isRentingAge\" class=\"title\" /><text value=\"(age: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" age &gt;= \" /><text value=\"25\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"isRentingAge(age: \" /><text value=\"25\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"77\" endIndex=\"79\" /><option correct=\"false\"><content><text value=\"&quot;25&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>25</code>.</p></body></html>"
          },
          {
            "title": "Display vs return",
            "id": 127191,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When we think about a function's output, we can think about what it <strong>displays</strong> or what it <strong>returns</strong> to be used somewhere else in the code.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isRentingAge\" class=\"title\" /><text value=\"(age: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" age &gt;= \" /><text value=\"25\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" canRent = isRentingAge(age: \" /><text value=\"25\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(canRent)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"39\" endIndex=\"45\" /><option correct=\"false\"><content><text value=\"()\" /></content></option><option correct=\"false\"><content><text value=\"print()\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>return</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 127192,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why are functions like black boxes?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Because we can use them without knowing the code inside them</item><item value=\"2\" correct=\"false\">Because we never know their input or output</item></selection><p visible-if=\"wrong\">Because we can use them without knowing the code inside them.</p></body></html>"
          },
          {
            "title": "Question: Multiple calls",
            "id": 127193,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does this code display in the console?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"displayCurrentDate()\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It displays the current date</item><item value=\"2\" correct=\"false\">It displays the current year</item></selection><p visible-if=\"wrong\">It displays the current date.</p></body></html>"
          },
          {
            "title": "Question: Input for conditionals",
            "id": 127194,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How do we decide a function's input?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Based on the output we want</item><item value=\"2\" correct=\"false\">Based on how many values we have available</item></selection><p visible-if=\"wrong\">Based on the output we want.</p></body></html>"
          },
          {
            "title": "Question: Strings and numbers",
            "id": 127195,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens when we pass the wrong type of value to a function?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The program won't compile</item><item value=\"2\" correct=\"false\">It doesn't matter, the function still works</item></selection><p visible-if=\"wrong\">The program won't compile.</p></body></html>"
          },
          {
            "title": "Question: Other values",
            "id": 127197,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens when a function's input is a different type than the output?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isSameWord\" class=\"title\" /><text value=\"(word: String)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" word == \" /><text value=\"&quot;bombastic&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isBombastic = isSameWord(word: \" /><text value=\"&quot;bombastic&quot;\" class=\"string\" /><text value=\")\" /></content><output><content><text value=\"true\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The function works, the input can be a different type compared to the output</item><item value=\"2\" correct=\"false\">It won't work, input and output have to be the same type</item></selection><p visible-if=\"wrong\">The function works, the input can be a different type compared to the output.</p></body></html>"
          },
          {
            "title": "Question: Display vs return",
            "id": 127198,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which of these can be considered as output?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">What a function returns</item><item value=\"2\" correct=\"false\">The operations a function carries out</item></selection><p visible-if=\"wrong\">What a function returns.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 127199,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the right function name.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;J.D. Salinger&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"displayAuthor(name: author)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"display()\" /></content></option></options></interaction></interactions><output><content><text value=\"J.D Salinger\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>displayAuthor</code>.</p></body></html>"
          },
          {
            "title": "Example: Input and Output",
            "id": 127200,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pass the right <strong>input</strong> to get the right <strong>output</strong>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" title = \" /><text value=\"&quot;East of Eden&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"displayFirstName(fullName: author)\" /><text type=\"break\" /><text value=\"displayLastName(fullName: author)\" /><text type=\"break\" /><text value=\"displayTitle(title: title)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"84\" endIndex=\"90\" /><option startIndex=\"118\" endIndex=\"124\" /><option startIndex=\"146\" endIndex=\"151\" /></options></interaction></interactions><output><content><text value=\"First name: John\" /><text type=\"break\" /><text value=\"Last name: Steinbeck\" /><text type=\"break\" /><text value=\"Title: East of Eden\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>author</code>, followed by <code>author</code>, and finally <code>title</code>.</p></body></html>"
          },
          {
            "title": "Example: Strings and numbers",
            "id": 127201,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the parameters so that their names match the order of the values passed.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayScore\" class=\"title\" /><text value=\"(points: Int, name: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;\\(name): \\(points)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"displayScore(points: \" /><text value=\"350\" class=\"number\" /><text value=\", name: \" /><text value=\"&quot;John&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"24\" /><option startIndex=\"31\" endIndex=\"35\" /></options></interaction></interactions><output><content><text value=\"John: 350\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>points</code>, followed by <code>name</code>.</p></body></html>"
          },
          {
            "title": "Example: Adding numbers",
            "id": 127202,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the right values to get a number as output.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"snooze\" class=\"title\" /><text value=\"(time: Int, snooze: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Int\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" time + snooze\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" newAlarmTime = snooze(time: \" /><text value=\"1300\" class=\"number\" /><text value=\", snooze: \" /><text value=\"15\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(newAlarmTime)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"102\" endIndex=\"118\" /><option correct=\"false\"><content><text value=\"&quot;1300&quot;,&quot;15&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"1315\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>1300, snooze: 15</code>.</p></body></html>"
          },
          {
            "title": "Example: Other values",
            "id": 127203,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Display the boolean <code>false</code> in the console.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isSameWord\" class=\"title\" /><text value=\"(word: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(word == \" /><text value=\"&quot;dexterous&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"isSameWord(word: \" /><text value=\"&quot;dexter&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"89\" /><option correct=\"false\"><content><text value=\"&quot;dexterous&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>\"dexter\"</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 14305,
        "title": "Functions with Arrays",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 127204,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Let's learn about functions with arrays as parameters. Pass the <code>students</code> array to the <code>displayNames()</code> function to get started.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNames(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"90\" endIndex=\"102\" /><option startIndex=\"102\" endIndex=\"109\" /><option startIndex=\"110\" endIndex=\"118\" /><option startIndex=\"118\" endIndex=\"119\" /></options></interaction></interactions><output><content><text value=\"[&quot;Laurel&quot;, &quot;Yanni&quot;]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>displayNames</code> followed by <code>(names:</code> and then <code>students</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Entire array",
            "id": 127205,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When we pass arrays to functions we can choose among a number of results based on the array. For example, we can display the entire array.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNames(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"50\" /></options></interaction></interactions><output><content><text value=\"&quot;[Laurel, Yanni]&quot;\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>names</code>.</p></body></html>"
          },
          {
            "title": "Array length",
            "id": 127206,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We could also display the length of the array. In this example, using <code>names.count</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNumberOfNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names.\" /><text value=\"count\" class=\"built_in\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNumberOfNames(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"64\" /><option correct=\"false\"><content><text value=\"length\" /></content></option></options></interaction></interactions><output><content><text value=\"2\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>names</code>, followed by <code>.</code>, and finally <code>count</code>.</p></body></html>"
          },
          {
            "title": "First value",
            "id": 127207,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A third example is using a single element of the array, for example by coding <code>names[0]</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayFirstName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayFirstName(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"48\" endIndex=\"53\" /><option startIndex=\"53\" endIndex=\"54\" /><option startIndex=\"54\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /></options></interaction></interactions><output><content><text value=\"Laurel\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>names</code> followed by <code>[</code> and then <code>0</code>, <code>]</code>.</p></body></html>"
          },
          {
            "title": "Return value",
            "id": 127208,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Often times we pass an array to a function because we want to <strong>return</strong> a part of it.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getFirstName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" names[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" firstMember = getFirstName(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"55\" /><option startIndex=\"56\" endIndex=\"64\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>return</code>, followed by <code>names[0]</code>.</p></body></html>"
          },
          {
            "title": "Return processed value",
            "id": 127209,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can use multiple elements from an array to return a certain kind of output we need for the next step in our code.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getListOfNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" names[\" /><text value=\"0\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot;, &quot;\" class=\"string\" /><text value=\" + names[\" /><text value=\"1\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Vera&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rubin&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" list = getListOfNames(names: students)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(list)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"57\" /><option startIndex=\"58\" endIndex=\"84\" /></options></interaction></interactions><output><content><text value=\"Vera, Rubin\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>return</code>, followed by <code>names[0] + \", \" + names[1]</code>.</p></body></html>"
          },
          {
            "title": "Question: Entire array",
            "id": 127210,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does this code display in the console?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayGroup\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Daniel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jim&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayGroup(names: names)\" /></content><output><content><text value=\"[&quot;Daniel&quot;, &quot;Jim&quot;]\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The entire <code>names</code> array</item><item value=\"2\" correct=\"false\">The first value of the <code>names</code> array</item></selection><p visible-if=\"wrong\">The entire <code>names</code> array.</p></body></html>"
          },
          {
            "title": "Question: Array length",
            "id": 127211,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does this code display in the console?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayGroupInfo\" class=\"title\" /><text value=\"(array: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(array.\" /><text value=\"count\" class=\"built_in\" /><text value=\")\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(array[\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" group = [\" /><text value=\"&quot;Lorenzo&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayGroupInfo(array: group)\" /></content><output><content><text value=\"2\" /><text type=\"break\" /><text value=\"Yanni\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The array count followed by the value <code>Yanni</code></item><item value=\"2\" correct=\"false\">The array count followed by the value <code>Lorenzo</code></item></selection><p visible-if=\"wrong\">The array count followed by the value <code>Yanni</code>.</p></body></html>"
          },
          {
            "title": "Question: First value",
            "id": 127212,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What output does this have?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displaySecondMember\" class=\"title\" /><text value=\"(group: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(group[\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" group = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displaySecondMember(group: group)\" /></content><output><content><text value=\"Yanni\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The second value of the array</item><item value=\"2\" correct=\"false\">The first value of the array</item></selection><p visible-if=\"wrong\">The second value of the array.</p></body></html>"
          },
          {
            "title": "Question: Return processed value",
            "id": 127213,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does this code display in the console?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getFullName\" class=\"title\" /><text value=\"(group: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" group[\" /><text value=\"1\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\" + group[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" scientist = [\" /><text value=\"&quot;Vera&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rubin&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fullname = getFullName(group: scientist)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(fullname)\" /></content><output><content><text value=\"Rubin Vera\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Rubin Vera</code></item><item value=\"2\" correct=\"false\"><code>Vera Rubin</code></item></selection><p visible-if=\"wrong\"><code>Rubin Vera</code>.</p></body></html>"
          },
          {
            "title": "Example: Entire array",
            "id": 127214,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the value that displays the entire array.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Ada&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Lovelace&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayName(names: names)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"49\" /><option correct=\"false\"><content><text value=\"names.count\" /></content></option><option correct=\"false\"><content><text value=\"names[0]\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;Ada&quot;, &quot;Lovelace&quot;]\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>names</code>.</p></body></html>"
          },
          {
            "title": "Example: Array length",
            "id": 127215,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Display the count of the <code>names</code> array.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNameCount\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names.\" /><text value=\"count\" class=\"built_in\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Salvador&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Felipe&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jacinto&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Dalí&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;y&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Domenech&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNameCount(names: names)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"54\" /><option startIndex=\"54\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"60\" /><option correct=\"false\"><content><text value=\"size\" /></content></option><option correct=\"false\"><content><text value=\"[0]\" /></content></option><option correct=\"false\"><content><text value=\"[5]\" /></content></option></options></interaction></interactions><output><content><text value=\"6\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>names</code>, followed by <code>.</code>, and finally <code>count</code>.</p></body></html>"
          },
          {
            "title": "Example: First value",
            "id": 127216,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Display the first array element.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayFirstValue\" class=\"title\" /><text value=\"(values: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(values[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" temperatures = [\" /><text value=\"&quot;60F&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;83F&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayFirstValue(values: temperatures)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"51\" endIndex=\"60\" /></interactions><output><content><text value=\"60F\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>values[0]</code>.</p></body></html>"
          },
          {
            "title": "Example: Return",
            "id": 127217,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Return the array's second element.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getSecondName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" names[\" /><text value=\"1\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Flossie&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Wong-Staal&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" secName = getSecondName(names: names)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(secName)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"50\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"65\" /><option correct=\"false\"><content><text value=\".count\" /></content></option></options></interaction></interactions><output><content><text value=\"Wong-Staal\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>return</code>, followed by <code>names[1]</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}