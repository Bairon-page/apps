{
  "tutorial": {
    "id": 1948,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Wishlist Items",
    "descriptionContent": "Use Loops to add your wishlist items to your shopping cart and total up the price",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1948-icon-banner.svg",
    "chapters": [
      {
        "id": 12568,
        "title": "Wishlist Program",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Create Total Variable",
            "id": 113705,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's use our knowledge of for loops to add our wishlist items to our shopping cart and total up the price.\n\nWe've already added a `wishlist` array that stores a user's wishlist, a `prices` array that stores those items' prices, a `quantity` array that stores the quantity of each wishlist item, and an `availableStock` array that stores the available stock for those items.  \n\nThe indices of each array map to a product.  \n\nNow, let's add a way to keep track of the total price of our items.\n\n1. Create a variable named `total` and assign it `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "First for Loop",
            "id": 113706,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's start creating our first for loop to go through our wishlist array.\n\n1. Code a for loop with a counter variable `i` set to `0`.\n2. Assemble the condition so that it runs its code block while `i` is less than the `wishlist` length.\n3. Inside the parentheses, increment the counter variable by `1`.\n4. Inside the body of the for loop, display the counter variable to test that the loop is working.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < wishlist.length`, hence we loop through each item of our wishlist no matter the size.\n2. It is important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Adding to Shopping Cart",
            "id": 113707,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's display adding our wishlist items to the shopping cart.  We want it to display something like \n```\n1 Red T-shirt added to your shopping cart.\n```\n\n1. Inside the for loop, replace the contents of the `console.log` by building a string to display something like `<quantity> <wishlist item> added to your shopping cart.`  Look at the hint if you'd like to see how this is done.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `wishlist` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(quantity[i] + \" \" + wishlist[i] + \" added to your shopping cart.\"\n```"
                }
              ]
            }
          },
          {
            "title": "Calculate the Total",
            "id": 113708,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's calculate the total of our items using our for loop.  We'll use addition assignment so that we don't have to keep creating a new `total` variable each time.\n\n1. Inside the for loop body and under the `console.log()`, multiply the current element of the `prices` array with the current element of the `quantity` array. Use addition assignment to add this to the `total` variable.  Look at the hint if you'd like help with this.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The addition assignment operator is `+=`"
                }
              ]
            }
          },
          {
            "title": "Display Total Price",
            "id": 113719,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's display the total price after adding up all of the prices.\n\n1. After the for loop, `display` our total.  It should display like `Total Price: $<total>`.  Look at the hint if you'd like to see how this is done.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "```JS\nconsole.log(\"Total Price: $\" + total);\n```"
                }
              ]
            }
          },
          {
            "title": "Second for Loop",
            "id": 113720,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, let's start writing our second for loop to subtract the quantity of our wishlist items from the available stock.\n\n1. Code a for loop with a counter variable `i` set to `0`.\n2. Assemble the condition so that it runs its code block while `i` is less than the `availableStock` array length.\n3. Inside the parentheses, increment the counter variable by `1`.\n4. Inside the body of the for loop, display the counter variable to test that the loop is working properly.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < availableStock.length`, hence we loop through each item of our `availableStock` array no matter the size.\n2. It's important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Update Available Stock",
            "id": 113721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's subtract the quantity of our wishlist items from the `availableStock` array.\n\n1. Inside of the body of the second for loop and above the `console.log`, use self assignment to subtract the current item in the `quantity` array from the current item of the `availableStock` array.  Look at the hint if you'd like to see how this is done.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\navailableStock[i] -= quantity[i];\n```"
                }
              ]
            }
          },
          {
            "title": "Display Available Stock",
            "id": 113722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's display our updated available stock of each item in our loop.\n\n1. Inside of the second for loop, replace the contents of the `console.log` by building a string to display something like `There are <number> <item> left.`  Look at the hint if you'd like to see how this is done.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `wishlist` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}