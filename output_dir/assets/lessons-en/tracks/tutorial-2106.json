{
  "tutorial": {
    "id": 2106,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "sql",
    "title": "SQL Table Creation",
    "descriptionContent": "Learn how to create a table and populate it.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13234,
        "title": "SQL Table Creation",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 118911,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Before we can start querying a database table, we need to, of course, first create the table and populate it.</p><p>Let's take a first look at creating a <code>Directory</code> table with columns for the <code>floor</code> number and <code>company</code>.</p><database visible-if=\"always\" bootstrapScript=\"CREATE TABLE Directory (&#xA; floor INTEGER,&#xA; company TEXT&#xA;);&#xA;&#xA;INSERT INTO Directory (floor, company) VALUES (1, &quot;ACME Inc.&quot;);\"><tables><table name=\"Directory\"><row><header content=\"floor\" /><header content=\"company\" /></row><row><data content=\"1\" /><data content=\"ACME Inc.\" /></row></table></tables></database></body></html>"
          },
          {
            "title": "Basic Syntax",
            "id": 118912,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The basic syntax for creating a SQL table always starts with the keywords <code>CREATE TABLE</code> followed by the table name.</p><p>Now, it's your turn to create the <code>Directory</code> table.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"7\" endIndex=\"12\" /><option startIndex=\"13\" endIndex=\"22\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>CREATE</code>, followed by <code>TABLE</code>, and finally <code>Directory</code>.</p></body></html>"
          },
          {
            "title": "Column Definition",
            "id": 118913,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Next, we need to declare which columns we want to create. We add each column's name, followed by its data type.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\" \" /><text value=\"floor\" class=\"keyword\" /><text value=\" \" /><text value=\"INTEGER\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" company \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"26\" endIndex=\"31\" /><option startIndex=\"32\" endIndex=\"39\" /></options></interaction></interactions><output><table name=\"Result\"><row><data content=\"No result!\" /></row></table></output></code><p visible-if=\"wrong\">Make sure to pick <code>floor</code>, followed by <code>INTEGER</code>.</p></body></html>"
          },
          {
            "title": "Column Definition II",
            "id": 121132,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Valid column data types include <code>INTEGER</code>, <code>REAL</code> (for floats) , or <code>TEXT</code>. You can also use <code>BLOB</code> or <code>NULL</code>, but we won't cover those here.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\" \" /><text value=\"floor\" class=\"keyword\" /><text value=\" \" /><text value=\"INTEGER\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" company \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"42\" endIndex=\"49\" /><option startIndex=\"50\" endIndex=\"54\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>company</code>, followed by <code>TEXT</code>.</p></body></html>"
          },
          {
            "title": "Inserting Values",
            "id": 120194,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Once the table structure is created, all that's left is to insert a few values. We've already covered this concept.</p><p>We can insert as many values as we want whenever we want.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\" \" /><text value=\"floor\" class=\"keyword\" /><text value=\" \" /><text value=\"INTEGER\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" company \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"INSERT\" class=\"keyword\" /><text value=\" \" /><text value=\"INTO\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text value=\"floor\" class=\"keyword\" /><text value=\", company) \" /><text value=\"VALUES\" class=\"keyword\" /><text value=\" (\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"'Acme Inc.'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"INSERT\" class=\"keyword\" /><text value=\" \" /><text value=\"INTO\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text value=\"floor\" class=\"keyword\" /><text value=\", company) \" /><text value=\"VALUES\" class=\"keyword\" /><text value=\" (\" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"'Homeflix'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"70\" /><option startIndex=\"98\" endIndex=\"104\" /></options></interaction></interactions><output><table name=\"Directory\"><row><header content=\"floor\" /><header content=\"company\" /></row><row><data content=\"1\" /><data content=\"Acme Inc.\" /></row><row><data content=\"2\" /><data content=\"Homeflix\" /></row></table></output></code><p visible-if=\"wrong\">Make sure to pick <code>INSERT</code>, followed by <code>INTO</code>, and finally <code>VALUES</code>.</p></body></html>"
          },
          {
            "title": "Seeing a created table",
            "id": 120195,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Here is the <code>Directory</code> table with values added.</p><p>Take note of how the rows and columns are structured and how they end up looking in a table.</p><database visible-if=\"always\" bootstrapScript=\"CREATE TABLE Directory (&#xA; floor INTEGER,&#xA; company TEXT&#xA;);&#xA;&#xA;INSERT INTO Directory (floor, company) VALUES (1, 'Acme Inc.');&#xA;INSERT INTO Directory (floor, company) VALUES (2, 'Homeflix');\"><tables><table name=\"Directory\"><row><header content=\"floor\" /><header content=\"company\" /></row><row><data content=\"1\" /><data content=\"Acme Inc.\" /></row><row><data content=\"2\" /><data content=\"Homeflix\" /></row></table></tables></database><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\" \" /><text value=\"floor\" class=\"keyword\" /><text value=\" \" /><text value=\"INTEGER\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" company \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"INSERT\" class=\"keyword\" /><text value=\" \" /><text value=\"INTO\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text value=\"floor\" class=\"keyword\" /><text value=\", company) \" /><text value=\"VALUES\" class=\"keyword\" /><text value=\" (\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"'Acme Inc.'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"INSERT\" class=\"keyword\" /><text value=\" \" /><text value=\"INTO\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text value=\"floor\" class=\"keyword\" /><text value=\", company) \" /><text value=\"VALUES\" class=\"keyword\" /><text value=\" (\" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"'Homeflix'\" class=\"string\" /><text value=\");\" /></content></code></body></html>"
          },
          {
            "title": "Column Definition II - Copy",
            "id": 132699,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can add <code>IF NOT EXISTS</code> to ensure the table is only created if it doesn't exist already to avoid errors.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" \" /><text value=\"IF\" class=\"keyword\" /><text value=\" \" /><text value=\"NOT\" class=\"keyword\" /><text value=\" \" /><text value=\"EXISTS\" class=\"keyword\" /><text value=\" \" /><text value=\"Directory\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\" \" /><text value=\"floor\" class=\"keyword\" /><text value=\" \" /><text value=\"INTEGER\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" company \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"15\" /><option startIndex=\"16\" endIndex=\"19\" /><option startIndex=\"20\" endIndex=\"26\" /></options></interaction></interactions><output><table name=\"Result\"><row><data content=\"No result!\" /></row></table></output></code><p visible-if=\"wrong\">Make sure to pick <code>IF</code>, followed by <code>NOT</code>, and finally <code>EXISTS</code>.</p></body></html>"
          },
          {
            "title": "Question: Basic Syntax",
            "id": 118978,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which keywords does the syntax for creating a SQL table always start with?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>CREATE</code> followed by <code>TABLE</code> followed by the table name</item><item value=\"2\" correct=\"false\"><code>TABLE</code> followed by the table name followed by <code>CREATE</code></item></selection><p visible-if=\"wrong\"><code>CREATE</code> followed by <code>TABLE</code> followed by the table name.</p></body></html>"
          },
          {
            "title": "Question: Column Definition",
            "id": 118979,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What column characteristics must your table creation syntax include at a minimum?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Each column's name and its data type</item><item value=\"2\" correct=\"false\">Each column's name</item></selection><p visible-if=\"wrong\">Each column's name and its data type.</p></body></html>"
          },
          {
            "title": "Question: Column Data Types",
            "id": 118983,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What are some common column data types?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>INTEGER</code>, <code>REAL</code>, and <code>TEXT</code></item><item value=\"2\" correct=\"false\"><code>BOOLEAN</code>, <code>TRUE</code>, and <code>TEXT</code></item></selection><p visible-if=\"wrong\"><code>INTEGER</code>, <code>REAL</code>, and <code>TEXT</code>.</p></body></html>"
          },
          {
            "title": "Example: Basic Syntax",
            "id": 118985,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code the basic syntax for creating a table named <code>Birthdays</code>.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" Birthdays (\" /><text type=\"break\" /><text value=\" \" /><text value=\"name\" class=\"keyword\" /><text value=\" \" /><text value=\"TEXT\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" birthday \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"7\" endIndex=\"12\" /><option startIndex=\"13\" endIndex=\"22\" /></options></interaction></interactions><output><table name=\"Result\"><row><data content=\"No result!\" /></row></table></output></code><p visible-if=\"wrong\">Make sure to pick <code>CREATE</code>, followed by <code>TABLE</code>, and finally <code>Birthdays</code>.</p></body></html>"
          },
          {
            "title": "Example: Column Definition",
            "id": 118986,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the column definition for the <code>Birthdays</code> table creation syntax. The table should have two columns: <code>name</code> and <code>birthday</code>.</p><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" Birthdays (\" /><text type=\"break\" /><text value=\" \" /><text value=\"name\" class=\"keyword\" /><text value=\" \" /><text value=\"TEXT\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" birthday \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"38\" endIndex=\"46\" /></interactions><output><table name=\"Result\"><row><data content=\"No result!\" /></row></table></output></code><p visible-if=\"wrong\">Make sure to type <code>birthday</code>.</p></body></html>"
          },
          {
            "title": "Example: Column Types",
            "id": 120022,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the column definition for the <code>Tickets</code> table creation syntax with the appropriate column data types.</p><database visible-if=\"always\" bootstrapScript=\"CREATE TABLE Tickets (&#xA; qty INTEGER,&#xA; email TEXT&#xA;);&#xA;&#xA;INSERT INTO Tickets (qty, email) VALUES (2, &quot;rose.l@flora.com&quot;);\"><tables><table name=\"Tickets\"><row><header content=\"qty\" /><header content=\"email\" /></row><row><data content=\"2\" /><data content=\"rose.l@flora.com\" /></row></table></tables></database><code version=\"2\" codelang=\"sql\" name=\"script.sql\" visible-if=\"always\"><content><text value=\"CREATE\" class=\"keyword\" /><text value=\" \" /><text value=\"TABLE\" class=\"keyword\" /><text value=\" Tickets (\" /><text type=\"break\" /><text value=\" qty \" /><text value=\"INTEGER\" class=\"built_in\" /><text value=\",\" /><text type=\"break\" /><text value=\" email \" /><text value=\"TEXT\" class=\"built_in\" /><text type=\"break\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"28\" endIndex=\"35\" /><option startIndex=\"44\" endIndex=\"48\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>INTEGER</code>, followed by <code>TEXT</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132701,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How can we ensure that we run a table creation statement only if needed?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">By adding <code>IF NOT EXISTS</code> to the SQL query</item><item value=\"2\" correct=\"false\">We can't ensure that</item></selection><p visible-if=\"wrong\">By adding <code>IF NOT EXISTS</code> to the SQL query.</p></body></html>"
          }
        ]
      }
    ]
  }
}