{
  "tutorial": {
    "id": 2790,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Static Types",
    "descriptionContent": "Learn about Static Types in TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14778,
        "title": "Static Types",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 130482,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welcome to TypeScript, an extension of JavaScript that adds static types to JavaScript. These types help catch errors during development.</p><p>You can use TypeScript in any environment where you can use JavaScript.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130495,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A key feature of TypeScript is its use of static types, unlike JavaScript, which allows variables to change types dynamically.</p><p>We start by creating a variable in TypeScript. Like in JavaScript, we can declare a variable using <code>var</code>, <code>let</code>, and <code>const</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\"int\" /></content></option><option correct=\"false\"><content><text value=\"string\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>let</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130485,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>As TypeScript uses static types, we need to define them at creation. Let's add the type by writing a colon <code>:</code> followed by the keyword <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"13\" /><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"variable\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>:</code>, followed by <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130496,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Finally, we want to assign a value to our variable of type <code>string</code>. As it can only hold strings, we can only assign strings.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"38\" /><option correct=\"false\"><content><text value=\"42\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>=</code>, followed by <code>\"Hello, world!\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 131280,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>As TypeScript is an extension of JavaScript, you can use all functions from JavaScript. Let's log the variable to display its value.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(greeting);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"60\" /><option startIndex=\"60\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"Hello, world!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>console.log(</code>, followed by <code>greeting</code>, and finally <code>);</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Unlike JavaScript, TypeScript supports type annotations to specify types explicitly.</p><p>As you have seen, a <strong>type annotation</strong> defines the type of a variable. In this case, the variable is of type <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(greeting);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Hello, world!\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Once a variable is set to a certain type, attempting to change the type will result in an error.</p><p>For example, if we define a variable as a string, we can't assign a number later. Try to assign a <code>number</code> to a variable of type <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"greeting = \" /><text value=\"42\" class=\"number\" /><text value=\"; \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\"&quot;Hello, TypeScript!&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Error: Type &quot;number&quot; is not assignable to type &quot;string&quot;.\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>42</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130489,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Let's create a new string variable called <code>name</code> and assign it a value.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Ada&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"8\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option startIndex=\"17\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"24\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Ada\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>let</code> followed by <code>name</code> and then <code>:</code>, <code>string</code>, <code>=</code>, <code>\"Ada\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130490,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the output of this TypeScript code?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myVariable: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;TypeScript is cool&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"myVariable = \" /><text value=\"1000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(myVariable);\" /></content><output><content><text value=\"Error: Type &quot;number&quot; is not assignable to type &quot;string&quot;.\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Error: Type \"number\" is not assignable to type \"string\"</item><item value=\"2\" correct=\"false\">1000</item></selection><p visible-if=\"wrong\">Error: Type \"number\" is not assignable to type \"string\".</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130492,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Finish the TypeScript code to declare a variable of type <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" motto: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Learn TypeScript&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(motto);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"11\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Learn TypeScript\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130491,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens if we try to assign a number to a string variable in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">TypeScript will throw an error</item><item value=\"2\" correct=\"false\">No error will occur</item></selection><p visible-if=\"wrong\">TypeScript will throw an error.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 130493,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Explicitly add the type of the variable <code>name</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Maria&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"=\" /></content></option></options></interaction></interactions><output><content><text value=\"Maria\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>:</code>, followed by <code>string</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}