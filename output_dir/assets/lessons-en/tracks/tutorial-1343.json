{
  "tutorial": {
    "id": 1343,
    "version": 13,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Modules",
    "descriptionContent": "Modules",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9909,
        "title": "Modules",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 88348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Classes are a way to organize data and functionality together. Like this <code>Car</code> class that groups related car variables and methods.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  wheels = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  doors = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"start_engine\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Vroom!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"my_car = Car()\" /><text type=\"break\" /><text value=\"print(my_car.wheels)\" /><text type=\"break\" /><text value=\"my_car.start_engine()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"6\" endIndex=\"9\" /></interactions><output><content><text value=\"4\" /><text type=\"break\" /><text value=\"Vroom!\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>Car</code>.</p></body></html>"
          },
          {
            "title": "Module",
            "id": 88374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can add more organization to our code with something called a <strong>module</strong>, like with the <code>math</code> module here.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The value of pi is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.pi)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"7\" endIndex=\"11\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"while\" /></content></option></options></interaction></interactions><output><content><text value=\"The value of pi is\" /><text type=\"break\" /><text value=\"3.141592653589793\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>math</code>.</p></body></html>"
          },
          {
            "title": "Module",
            "id": 88375,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Modules group related classes and data and make them accessible from one place.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The value of pi is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.pi)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The square root of 16 is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.sqrt(\" /><text value=\"16\" class=\"number\" /><text value=\"))\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"50\" /><option startIndex=\"50\" endIndex=\"51\" /><option startIndex=\"58\" endIndex=\"59\" /></options></interaction></interactions><output><content><text value=\"The value of pi is\" /><text type=\"break\" /><text value=\"3.141592653589793\" /><text type=\"break\" /><text value=\"The square root of 16 is\" /><text type=\"break\" /><text value=\"4.0\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>print</code>, followed by <code>(</code>, and finally <code>)</code>.</p></body></html>"
          },
          {
            "title": "Module in action",
            "id": 88387,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Python has a lot of built-in modules. The <code>math</code> module provides data like the value of <code>pi</code> and methods for different math operations.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The value of pi is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.pi)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The square root of 16 is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.sqrt(\" /><text value=\"16\" class=\"number\" /><text value=\"))\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"58\" /></options></interaction></interactions><output><content><text value=\"The value of pi is\" /><text type=\"break\" /><text value=\"3.141592653589793\" /><text type=\"break\" /><text value=\"The square root of 16 is\" /><text type=\"break\" /><text value=\"4.0\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>.</code>, followed by <code>pi</code>.</p></body></html>"
          },
          {
            "title": "Using a module",
            "id": 88386,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To use a module, we import it with the keyword <code>import </code> followed by the module's name, like here with <code>import math</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"6\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>import</code>.</p></body></html>"
          },
          {
            "title": "Using a module",
            "id": 88388,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To use the module, we add its name, followed by the method or data we want. Here we'll add <code>math.sqrt(16)</code> to call the square root method.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math\" /><text type=\"break\" /><text type=\"break\" /><text value=\"square = math.sqrt(\" /><text value=\"16\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(square)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"27\" /><option startIndex=\"27\" endIndex=\"31\" /><option startIndex=\"31\" endIndex=\"32\" /><option startIndex=\"34\" endIndex=\"35\" /></options></interaction></interactions><output><content><text value=\"4.0\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>math</code> followed by <code>.</code> and then <code>sqrt</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Help",
            "id": 88389,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can find out the functionality a module has by using the <code>help()</code> instruction with the name of the module between the parentheses.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math\" /><text type=\"break\" /><text type=\"break\" /><text value=\"square = math.sqrt(\" /><text value=\"16\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"help(math)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"41\" /><option startIndex=\"41\" endIndex=\"42\" /><option startIndex=\"42\" endIndex=\"46\" /><option startIndex=\"46\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"Help on built-in module math:\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"NAME\" /><text type=\"break\" /><text value=\"    math\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"DESCRIPTION\" /><text type=\"break\" /><text value=\"    This module provides access to the mathematical functions\" /><text type=\"break\" /><text value=\"    defined by the C standard.\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"FUNCTIONS\" /><text type=\"break\" /><text value=\"    acos(x, /)\" /><text type=\"break\" /><text value=\"        Return the arc cosine (measured in radians) of x.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        The result is between 0 and pi.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    acosh(x, /)\" /><text type=\"break\" /><text value=\"        Return the inverse hyperbolic cosine of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    asin(x, /)\" /><text type=\"break\" /><text value=\"        Return the arc sine (measured in radians) of x.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        The result is between -pi/2 and pi/2.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    asinh(x, /)\" /><text type=\"break\" /><text value=\"        Return the inverse hyperbolic sine of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    atan(x, /)\" /><text type=\"break\" /><text value=\"        Return the arc tangent (measured in radians) of x.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        The result is between -pi/2 and pi/2.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    atan2(y, x, /)\" /><text type=\"break\" /><text value=\"        Return the arc tangent (measured in radians) of y/x.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Unlike atan(y/x), the signs of both x and y are considered.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    atanh(x, /)\" /><text type=\"break\" /><text value=\"        Return the inverse hyperbolic tangent of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    ceil(x, /)\" /><text type=\"break\" /><text value=\"        Return the ceiling of x as an Integral.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        This is the smallest integer &gt;= x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    comb(n, k, /)\" /><text type=\"break\" /><text value=\"        Number of ways to choose k items from n items without repetition and without order.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Evaluates to n! / (k! * (n - k)!) when k &lt;= n and evaluates\" /><text type=\"break\" /><text value=\"        to zero when k &gt; n.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Also called the binomial coefficient because it is equivalent\" /><text type=\"break\" /><text value=\"        to the coefficient of k-th term in polynomial expansion of the\" /><text type=\"break\" /><text value=\"        expression (1 + x)**n.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Raises TypeError if either of the arguments are not integers.\" /><text type=\"break\" /><text value=\"        Raises ValueError if either of the arguments are negative.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    copysign(x, y, /)\" /><text type=\"break\" /><text value=\"        Return a float with the magnitude (absolute value) of x but the sign of y.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        On platforms that support signed zeros, copysign(1.0, -0.0)\" /><text type=\"break\" /><text value=\"        returns -1.0.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    cos(x, /)\" /><text type=\"break\" /><text value=\"        Return the cosine of x (measured in radians).\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    cosh(x, /)\" /><text type=\"break\" /><text value=\"        Return the hyperbolic cosine of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    degrees(x, /)\" /><text type=\"break\" /><text value=\"        Convert angle x from radians to degrees.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    dist(p, q, /)\" /><text type=\"break\" /><text value=\"        Return the Euclidean distance between two points p and q.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        The points should be specified as sequences (or iterables) of\" /><text type=\"break\" /><text value=\"        coordinates.  Both inputs must have the same dimension.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Roughly equivalent to:\" /><text type=\"break\" /><text value=\"            sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    erf(x, /)\" /><text type=\"break\" /><text value=\"        Error function at x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    erfc(x, /)\" /><text type=\"break\" /><text value=\"        Complementary error function at x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    exp(x, /)\" /><text type=\"break\" /><text value=\"        Return e raised to the power of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    expm1(x, /)\" /><text type=\"break\" /><text value=\"        Return exp(x)-1.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    fabs(x, /)\" /><text type=\"break\" /><text value=\"        Return the absolute value of the float x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    factorial(x, /)\" /><text type=\"break\" /><text value=\"        Find x!.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Raise a ValueError if x is negative or non-integral.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    floor(x, /)\" /><text type=\"break\" /><text value=\"        Return the floor of x as an Integral.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        This is the largest integer &lt;= x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    fmod(x, y, /)\" /><text type=\"break\" /><text value=\"        Return fmod(x, y), according to platform C.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        x % y may differ.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    frexp(x, /)\" /><text type=\"break\" /><text value=\"        Return the mantissa and exponent of x, as pair (m, e).\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        m is a float and e is an int, such that x = m * 2.**e.\" /><text type=\"break\" /><text value=\"        If x is 0, m and e are both 0.  Else 0.5 &lt;= abs(m) &lt; 1.0.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    fsum(seq, /)\" /><text type=\"break\" /><text value=\"        Return an accurate floating point sum of values in the iterable seq.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Assumes IEEE-754 floating point arithmetic.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    gamma(x, /)\" /><text type=\"break\" /><text value=\"        Gamma function at x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    gcd(*integers)\" /><text type=\"break\" /><text value=\"        Greatest Common Divisor.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    hypot(...)\" /><text type=\"break\" /><text value=\"        hypot(*coordinates) -&gt; value\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Multidimensional Euclidean distance from the origin to a point.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Roughly equivalent to:\" /><text type=\"break\" /><text value=\"            sqrt(sum(x**2 for x in coordinates))\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        For a two dimensional point (x, y), gives the hypotenuse\" /><text type=\"break\" /><text value=\"        using the Pythagorean theorem:  sqrt(x*x + y*y).\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        For example, the hypotenuse of a 3/4/5 right triangle is:\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"            &gt;&gt;&gt; hypot(3.0, 4.0)\" /><text type=\"break\" /><text value=\"            5.0\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)\" /><text type=\"break\" /><text value=\"        Determine whether two floating point numbers are close in value.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"          rel_tol\" /><text type=\"break\" /><text value=\"            maximum difference for being considered &quot;close&quot;, relative to the\" /><text type=\"break\" /><text value=\"            magnitude of the input values\" /><text type=\"break\" /><text value=\"          abs_tol\" /><text type=\"break\" /><text value=\"            maximum difference for being considered &quot;close&quot;, regardless of the\" /><text type=\"break\" /><text value=\"            magnitude of the input values\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Return True if a is close in value to b, and False otherwise.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        For the values to be considered close, the difference between them\" /><text type=\"break\" /><text value=\"        must be smaller than at least one of the tolerances.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        -inf, inf and NaN behave similarly to the IEEE 754 Standard.  That\" /><text type=\"break\" /><text value=\"        is, NaN is not close to anything, even itself.  inf and -inf are\" /><text type=\"break\" /><text value=\"        only close to themselves.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    isfinite(x, /)\" /><text type=\"break\" /><text value=\"        Return True if x is neither an infinity nor a NaN, and False otherwise.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    isinf(x, /)\" /><text type=\"break\" /><text value=\"        Return True if x is a positive or negative infinity, and False otherwise.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    isnan(x, /)\" /><text type=\"break\" /><text value=\"        Return True if x is a NaN (not a number), and False otherwise.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    isqrt(n, /)\" /><text type=\"break\" /><text value=\"        Return the integer part of the square root of the input.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    lcm(*integers)\" /><text type=\"break\" /><text value=\"        Least Common Multiple.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    ldexp(x, i, /)\" /><text type=\"break\" /><text value=\"        Return x * (2**i).\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        This is essentially the inverse of frexp().\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    lgamma(x, /)\" /><text type=\"break\" /><text value=\"        Natural logarithm of absolute value of Gamma function at x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    log(...)\" /><text type=\"break\" /><text value=\"        log(x, [base=math.e])\" /><text type=\"break\" /><text value=\"        Return the logarithm of x to the given base.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        If the base not specified, returns the natural logarithm (base e) of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    log10(x, /)\" /><text type=\"break\" /><text value=\"        Return the base 10 logarithm of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    log1p(x, /)\" /><text type=\"break\" /><text value=\"        Return the natural logarithm of 1+x (base e).\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        The result is computed in a way which is accurate for x near zero.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    log2(x, /)\" /><text type=\"break\" /><text value=\"        Return the base 2 logarithm of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    modf(x, /)\" /><text type=\"break\" /><text value=\"        Return the fractional and integer parts of x.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Both results carry the sign of x and are floats.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    nextafter(x, y, /)\" /><text type=\"break\" /><text value=\"        Return the next floating-point value after x towards y.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    perm(n, k=None, /)\" /><text type=\"break\" /><text value=\"        Number of ways to choose k items from n items without repetition and with order.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Evaluates to n! / (n - k)! when k &lt;= n and evaluates\" /><text type=\"break\" /><text value=\"        to zero when k &gt; n.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        If k is not specified or is None, then k defaults to n\" /><text type=\"break\" /><text value=\"        and the function returns n!.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Raises TypeError if either of the arguments are not integers.\" /><text type=\"break\" /><text value=\"        Raises ValueError if either of the arguments are negative.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    pow(x, y, /)\" /><text type=\"break\" /><text value=\"        Return x**y (x to the power of y).\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    prod(iterable, /, *, start=1)\" /><text type=\"break\" /><text value=\"        Calculate the product of all the elements in the input iterable.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        The default start value for the product is 1.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        When the iterable is empty, return the start value.  This function is\" /><text type=\"break\" /><text value=\"        intended specifically for use with numeric values and may reject\" /><text type=\"break\" /><text value=\"        non-numeric types.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    radians(x, /)\" /><text type=\"break\" /><text value=\"        Convert angle x from degrees to radians.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    remainder(x, y, /)\" /><text type=\"break\" /><text value=\"        Difference between x and the closest integer multiple of y.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Return x - n*y where n*y is the closest integer multiple of y.\" /><text type=\"break\" /><text value=\"        In the case where x is exactly halfway between two multiples of\" /><text type=\"break\" /><text value=\"        y, the nearest even value of n is used. The result is always exact.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    sin(x, /)\" /><text type=\"break\" /><text value=\"        Return the sine of x (measured in radians).\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    sinh(x, /)\" /><text type=\"break\" /><text value=\"        Return the hyperbolic sine of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    sqrt(x, /)\" /><text type=\"break\" /><text value=\"        Return the square root of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    tan(x, /)\" /><text type=\"break\" /><text value=\"        Return the tangent of x (measured in radians).\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    tanh(x, /)\" /><text type=\"break\" /><text value=\"        Return the hyperbolic tangent of x.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    trunc(x, /)\" /><text type=\"break\" /><text value=\"        Truncates the Real x to the nearest Integral toward 0.\" /><text type=\"break\" /><text value=\"        \" /><text type=\"break\" /><text value=\"        Uses the __trunc__ magic method.\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"    ulp(x, /)\" /><text type=\"break\" /><text value=\"        Return the value of the least significant bit of the float x.\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"DATA\" /><text type=\"break\" /><text value=\"    e = 2.718281828459045\" /><text type=\"break\" /><text value=\"    inf = inf\" /><text type=\"break\" /><text value=\"    nan = nan\" /><text type=\"break\" /><text value=\"    pi = 3.141592653589793\" /><text type=\"break\" /><text value=\"    tau = 6.283185307179586\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"FILE\" /><text type=\"break\" /><text value=\"    (built-in)\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>help</code> followed by <code>(</code> and then <code>math</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Question: Module",
            "id": 88589,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How can we add organization to our code?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">By organizing code inside a module</item><item value=\"2\" correct=\"false\">By using lots of <code>print()</code> statements</item></selection><p visible-if=\"wrong\">By organizing code inside a module.</p></body></html>"
          },
          {
            "title": "Question: Module",
            "id": 88590,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the difference between a module and a class?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Modules usually contain lots of classes, while a class is singular</item><item value=\"2\" correct=\"false\">Modules have special variable names</item></selection><p visible-if=\"wrong\">Modules usually contain lots of classes, while a class is singular.</p></body></html>"
          },
          {
            "title": "Question: Module",
            "id": 88604,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which module is used in this code?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"equation = \" /><text value=\"&quot;user defined&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The root of 100 is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.sqrt(\" /><text value=\"100\" class=\"number\" /><text value=\"))\" /><text type=\"break\" /></content><output><content><text value=\"The root of 100 is\" /><text type=\"break\" /><text value=\"10.0\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>math</code> module</item><item value=\"2\" correct=\"false\">The <code>equation</code> module</item></selection><p visible-if=\"wrong\">The <code>math</code> module.</p></body></html>"
          },
          {
            "title": "Question: Module",
            "id": 88591,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Can we use modules to reuse other people's code?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Yes, modules are a way developers make their code available online for people to use</item><item value=\"2\" correct=\"false\">No, we can only use modules that we create ourselves</item></selection><p visible-if=\"wrong\">Yes, modules are a way developers make their code available online for people to use.</p></body></html>"
          },
          {
            "title": "Question: Module in action",
            "id": 88592,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the <code>math</code> module for?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It's a built-in module used for mathematical tasks</item><item value=\"2\" correct=\"false\">The math module allows us to display large numbers in the console</item></selection><p visible-if=\"wrong\">It's a built-in module used for mathematical tasks.</p></body></html>"
          },
          {
            "title": "Question: Using a module",
            "id": 88593,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How do we add a module to our code?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">By adding <code>import</code> followed by the module name</item><item value=\"2\" correct=\"false\">By adding just the module name to the top of the file</item></selection><p visible-if=\"wrong\">By adding <code>import</code> followed by the module name.</p></body></html>"
          },
          {
            "title": "Question: Using a module",
            "id": 88594,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's wrong with this code?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"square = math.sqrt(\" /><text value=\"16\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(square)\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>math</code> module is not imported</item><item value=\"2\" correct=\"false\">There's nothing wrong with this code</item></selection><p visible-if=\"wrong\">The <code>math</code> module is not imported.</p></body></html>"
          },
          {
            "title": "Question: Help",
            "id": 88595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How can we find out what functionality a module has?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">With the <code>help()</code> instruction</item><item value=\"2\" correct=\"false\">With the <code>print()</code> instruction</item></selection><p visible-if=\"wrong\">With the <code>help()</code> instruction.</p></body></html>"
          },
          {
            "title": "Example: Module",
            "id": 88597,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Import the <code>math</code> module in this code.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"7\" endIndex=\"11\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>import</code>, followed by <code>math</code>.</p></body></html>"
          },
          {
            "title": "Example: Module",
            "id": 88598,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use the <code>math.ceil()</code> method to round up to the nearest whole number.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Rounded up to the nearest number&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"rounded = math.ceil(\" /><text value=\"22.7324\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rounded)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"69\" endIndex=\"73\" /><option startIndex=\"73\" endIndex=\"74\" /><option startIndex=\"74\" endIndex=\"78\" /></options></interaction></interactions><output><content><text value=\"Rounded up to the nearest number\" /><text type=\"break\" /><text value=\"23\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>math</code>, followed by <code>.</code>, and finally <code>ceil</code>.</p></body></html>"
          },
          {
            "title": "Example: Module in action",
            "id": 88600,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Display the value of pi in the console by using the <code>math</code> module.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The value of pi is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.pi)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"50\" /><option startIndex=\"51\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"58\" /></options></interaction></interactions><output><content><text value=\"The value of pi is\" /><text type=\"break\" /><text value=\"3.141592653589793\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>print</code> followed by <code>math</code> and then <code>.</code>, <code>pi</code>.</p></body></html>"
          },
          {
            "title": "Example: Using a module",
            "id": 88602,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Find the square root of 900 by coding <code>math.sqrt(900)</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;The square root of 900 is&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.sqrt(\" /><text value=\"900\" class=\"number\" /><text value=\"))\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"54\" endIndex=\"68\" /></interactions><output><content><text value=\"The square root of 900 is\" /><text type=\"break\" /><text value=\"30.0\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>math.sqrt(900)</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 9915,
        "title": "From",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Other modules",
            "id": 88390,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>statistics</code> is another built-in module. It helps out with statistic functions like the mean of a list, like with <code>mean(scores)</code>, here.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"scores = [\" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"6\" class=\"number\" /><text value=\", \" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"8\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"mean = statistics.mean(scores)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Mean score is \" /><text value=\"{mean}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"75\" endIndex=\"79\" /><option startIndex=\"79\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"86\" /><option startIndex=\"86\" endIndex=\"87\" /></options></interaction></interactions><output><content><text value=\"Mean score is 4\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>mean</code> followed by <code>(</code> and then <code>scores</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Mean",
            "id": 88391,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We're able to use multiple different modules in the same file by adding a comma between the modules we're importing.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics, math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"diameters = [\" /><text value=\"9\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"6\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"result = statistics.mean(diameters)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Mean diameter is \" /><text value=\"{result}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Value of pi is:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.pi)\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"import\" /></content></option><option correct=\"false\"><content><text value=\"pi\" /></content></option><option correct=\"false\"><content><text value=\"result\" /></content></option></options></interaction></interactions><output><content><text value=\"Mean diameter is 6.5\" /><text type=\"break\" /><text value=\"Value of pi is:\" /><text type=\"break\" /><text value=\"3.141592653589793\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>,</code>.</p></body></html>"
          },
          {
            "title": "From",
            "id": 88439,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sometimes we want to use just parts of a module, and not the whole functionality, like here where we only need the value for <code>pi</code> from <code>math</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Value of pi is:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math.pi)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"53\" endIndex=\"55\" /></interactions><output><content><text value=\"Value of pi is:\" /><text type=\"break\" /><text value=\"3.141592653589793\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>pi</code>.</p></body></html>"
          },
          {
            "title": "From",
            "id": 88454,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In that case, we can use the keyword <code>from</code> to extract only the functionality we care about, like here with <code>from math import pi</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"from\" class=\"keyword\" /><text value=\" math \" /><text value=\"import\" class=\"keyword\" /><text value=\" pi    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Value of pi is:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(pi)\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"print\" /></content></option></options></interaction></interactions><output><content><text value=\"Value of pi is:\" /><text type=\"break\" /><text value=\"3.141592653589793\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>from</code>, followed by <code>math</code>, and finally <code>import</code>.</p></body></html>"
          },
          {
            "title": "From",
            "id": 88455,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When we use <code>from</code>, we don't need to add the name of the module anymore. Like here we use <code>mean</code> instead of <code>statistics.mean</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"from\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"import\" class=\"keyword\" /><text value=\" mean\" /><text type=\"break\" /><text type=\"break\" /><text value=\"test_scores = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"6\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"result = mean(test_scores)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Mean result is \" /><text value=\"{result}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"66\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /></options></interaction></interactions><output><content><text value=\"Mean result is 12.5\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>mean</code> followed by <code>(</code> and then <code>test_scores</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Question: Other modules",
            "id": 88605,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What's the <code>statistics</code> module for?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It provides methods to help with common statistical calculations</item><item value=\"2\" correct=\"false\">It provides dummy data for use in lists</item></selection><p visible-if=\"wrong\">It provides methods to help with common statistical calculations.</p></body></html>"
          },
          {
            "title": "Question: Mean",
            "id": 88606,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How do we import multiple modules?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">By placing a comma between the modules we're importing</item><item value=\"2\" correct=\"false\">By placing the modules inside parentheses </item></selection><p visible-if=\"wrong\">By placing a comma between the modules we're importing.</p></body></html>"
          },
          {
            "title": "Question: From",
            "id": 88607,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the <code>from</code> keyword do when importing modules?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">It allows us to import parts of a module's functionality</item><item value=\"2\" correct=\"false\">It allows us to import multiple modules at once</item></selection><p visible-if=\"wrong\">It allows us to import parts of a module's functionality.</p></body></html>"
          },
          {
            "title": "Question: From",
            "id": 88609,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What happens when we use the <code>from</code> keyword to import certain functionality?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">We no longer need to use the module's name in our code when using functionality </item><item value=\"2\" correct=\"false\">We can rename the module freely inside our code</item></selection><p visible-if=\"wrong\">We no longer need to use the module's name in our code when using functionality .</p></body></html>"
          },
          {
            "title": "Example: Mean",
            "id": 88611,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the code by importing two modules.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics, math    \" /><text type=\"break\" /><text type=\"break\" /><text value=\"active_time = [\" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"result = statistics.mean(active_time)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Mean is \" /><text value=\"{result}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"23\" /><option correct=\"false\"><content><text value=\"from\" /></content></option></options></interaction></interactions><output><content><text value=\"Mean is 3.25\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>,</code>, followed by <code>math</code>.</p></body></html>"
          },
          {
            "title": "Example: From",
            "id": 88612,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Import the <code>pi</code> functionality from the <code>math</code> module.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"from\" class=\"keyword\" /><text value=\" math \" /><text value=\"import\" class=\"keyword\" /><text value=\" pi \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(pi)\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"9\" /><option startIndex=\"17\" endIndex=\"19\" /></options></interaction></interactions><output><content><text value=\"3.141592653589793\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>from</code>, followed by <code>math</code>, and finally <code>pi</code>.</p></body></html>"
          },
          {
            "title": "Example: From",
            "id": 88614,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use the <code>mean</code> functionality from the imported <code>statistics</code> module.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"from\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"import\" class=\"keyword\" /><text value=\" mean\" /><text type=\"break\" /><text type=\"break\" /><text value=\"ages = [\" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"26\" class=\"number\" /><text value=\", \" /><text value=\"18\" class=\"number\" /><text value=\", \" /><text value=\"35\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"result = mean(ages)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Mean age is \" /><text value=\"{result}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"62\" endIndex=\"66\" /></interactions><output><content><text value=\"Mean age is 25.25\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>mean</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 9921,
        "title": "Alias",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "As",
            "id": 88459,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We can modify the name of the module we're importing. Like here, where <code>statistics</code> is renamed to <code>stats</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"as\" class=\"keyword\" /><text value=\" stats\" /><text type=\"break\" /><text type=\"break\" /><text value=\"sales = [\" /><text value=\"23\" class=\"number\" /><text value=\", \" /><text value=\"43\" class=\"number\" /><text value=\", \" /><text value=\"26\" class=\"number\" /><text value=\", \" /><text value=\"26\" class=\"number\" /><text value=\", \" /><text value=\"29\" class=\"number\" /><text value=\", \" /><text value=\"18\" class=\"number\" /><text value=\", \" /><text value=\"24\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"median = stats.median(sales)\" /><text type=\"break\" /><text value=\"print(median)\" /></content><output><content><text value=\"26\" /></content></output></code></body></html>"
          },
          {
            "title": "As",
            "id": 88463,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>For that, we first code the <code>import</code> keyword and module name as normal. Then, we use the <code>as</code> keyword to set the new name for the module.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"as\" class=\"keyword\" /><text value=\" stats\" /><text type=\"break\" /><text type=\"break\" /><text value=\"sales = [\" /><text value=\"23\" class=\"number\" /><text value=\", \" /><text value=\"43\" class=\"number\" /><text value=\", \" /><text value=\"26\" class=\"number\" /><text value=\", \" /><text value=\"26\" class=\"number\" /><text value=\", \" /><text value=\"29\" class=\"number\" /><text value=\", \" /><text value=\"18\" class=\"number\" /><text value=\", \" /><text value=\"24\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"median = stats.median(sales)\" /><text type=\"break\" /><text value=\"print(median)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"18\" endIndex=\"20\" /></interactions><output><content><text value=\"26\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>as</code>.</p></body></html>"
          },
          {
            "title": "Shorter",
            "id": 88464,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Giving a new name to a module we're importing is known as <strong>aliasing</strong>. It's often used to make longer module names shorter.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"as\" class=\"keyword\" /><text value=\" stats\" /><text type=\"break\" /><text type=\"break\" /><text value=\"ids = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"123\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"798\" class=\"number\" /><text value=\", \" /><text value=\"23\" class=\"number\" /><text value=\", \" /><text value=\"33\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mode = stats.mode(ids)\" /><text type=\"break\" /><text value=\"print(mode)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"7\" endIndex=\"17\" /><option startIndex=\"18\" endIndex=\"20\" /></options></interaction></interactions><output><content><text value=\"33\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>statistics</code>, followed by <code>as</code>.</p></body></html>"
          },
          {
            "title": "Alias",
            "id": 88465,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We also rename modules so that they don't interfere with variables in our code. Here, <code>math</code>  already exists and would cause an error.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math \" /><text value=\"as\" class=\"keyword\" /><text value=\" math_constants\" /><text type=\"break\" /><text type=\"break\" /><text value=\"math = \" /><text value=\"&quot;Grade 12 constants&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(math)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;pi:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math_constants.pi)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Euler's number:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(math_constants.e)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"7\" endIndex=\"11\" /></interactions><output><content><text value=\"Grade 12 constants\" /><text type=\"break\" /><text value=\"pi:\" /><text type=\"break\" /><text value=\"3.141592653589793\" /><text type=\"break\" /><text value=\"Euler's number:\" /><text type=\"break\" /><text value=\"2.718281828459045\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>math</code>.</p></body></html>"
          },
          {
            "title": "As",
            "id": 88616,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the <code>as</code> keyword do regarding modules?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The <code>as</code> keyword allows us to rename a module</item><item value=\"2\" correct=\"false\">The <code>as</code> keyword makes importing multiple modules possible</item></selection><p visible-if=\"wrong\">The <code>as</code> keyword allows us to rename a module.</p></body></html>"
          },
          {
            "title": "Shorter",
            "id": 88617,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What is using the <code>as</code> keyword with a module known as?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Aliasing</item><item value=\"2\" correct=\"false\">Importing</item></selection><p visible-if=\"wrong\">Make sure to pick Aliasing.</p></body></html>"
          },
          {
            "title": "Alias",
            "id": 88618,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Why do we rename some modules?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">To make them shorter to use in code</item><item value=\"2\" correct=\"false\">So we can use them in display statements</item></selection><p visible-if=\"wrong\">To make them shorter to use in code.</p></body></html>"
          },
          {
            "title": "As",
            "id": 88620,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Alias this module to <code>sts</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"as\" class=\"keyword\" /><text value=\" sts\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"21\" endIndex=\"24\" /></interactions></code><p visible-if=\"wrong\">Make sure to type <code>sts</code>.</p></body></html>"
          },
          {
            "title": "Shorter",
            "id": 88621,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the aliasing of this module.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" statistics \" /><text value=\"as\" class=\"keyword\" /><text value=\" stats\" /><text type=\"break\" /><text type=\"break\" /><text value=\"ids = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"123\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"798\" class=\"number\" /><text value=\", \" /><text value=\"23\" class=\"number\" /><text value=\", \" /><text value=\"33\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mode = stats.mode(ids)\" /><text type=\"break\" /><text value=\"print(mode)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"7\" endIndex=\"17\" /><option startIndex=\"18\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"26\" /><option startIndex=\"0\" endIndex=\"6\" /></options></interaction></interactions><output><content><text value=\"33\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>import</code> followed by <code>statistics</code> and then <code>as</code>, <code>stats</code>.</p></body></html>"
          },
          {
            "title": "Alias",
            "id": 88622,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>On the aliased <code>math</code> module, call <code>m.floor()</code> to round the number down to the nearest whole number.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" math \" /><text value=\"as\" class=\"keyword\" /><text value=\" m\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(m.floor(\" /><text value=\"44.32\" class=\"number\" /><text value=\"))\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"24\" endIndex=\"31\" /></interactions><output><content><text value=\"44\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>m.floor</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}