{
  "tutorial": {
    "id": 2593,
    "version": 15,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Guessing Game - Part 1",
    "descriptionContent": "Build your very own game! In this first part, we'll set the stage by crafting the basic game logic. It's all about setting the rules and letting players take their best shot.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2593-icon-banner.svg",
    "chapters": [
      {
        "id": 14367,
        "title": "Learn",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro",
            "id": 127993,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Welcome to **Guessing Game**, where you'll build your very own game. The *Guessing game*, you guessed it, is all about guessing the correct number.\n\n1. Start by creating the basic structure of an HTML document. Include `<!doctype HTML>`, `html`, `head`, and `body` tags.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title",
            "id": 127994,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Add a title for your webpage. What about *Guessing Game*? Or pick something you like better!\n\n1. Add `title` tags in the `head` section.\n2. Add a title between the newly added `title` tags.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Container",
            "id": 127995,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's add a container that we'll use to display the game's content.\n\n\n1. Add a container `<div>` for the game inside the `<body>` section.\n2. For the `div`, set the `class` to `\"container\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title and description",
            "id": 127996,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, let's add a header and a paragraph to the container.\n\n1. Add an `h1` element to display the name of the game.\n2. Add a paragraph to explain the rules of the game. (F.e., `Guess a number between 1 and 100`.)",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Input and button",
            "id": 127997,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "To allow your players to interact with the game, we'll need interactive elements.\n\n1. Add an `<input>` field where players will type their guesses. Set its type to `\"number\"` and give it the id `\"guess\"`.\n2. Add a button for players to submit their guesses.\n3. Last but not least, add an empty paragraph with the id `\"feedback\"` that we'll use for feedback.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Testing JavaScript",
            "id": 128876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We have all the HTML we need. Before we jump to write our logic, we should try and see if we've linked the JavaScript element correctly.\n\n1. Add a `console.log` statement to print something to the console.\n2. In the HTML file, link the JS file to the HTML file by adding `<script src=\"script.js\"></script>` right before the closing `</body>` tag.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "console.log(\"Hello!\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Interaction",
            "id": 127998,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's start adding the logic to the game.\n\n1. Add an empty `checkGuess` function to the JS file.\n2. Back in our HTML file, call the function with a click of the added button.\n3. Ensure the `console.log` statement to print something to the console is now executed on the button click.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "console.log(\"Hello!\");",
                  "solvedContent": "function checkGuess() {\n  console.log(\"Hello!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "References",
            "id": 128000,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In our `checkGuess` function, we need to grab references to the input and feedback elements.\n\n1. Create two variables called `inputElement` and `feedbackElement`.\n2. Use `document.getElementById()` with the correct ids to grab references to the two elements.\n3. If you want, get rid of the print statement from before.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  console.log(\"Hello!\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById('guess');\n  const feedbackElement =  document.getElementById(\"feedback\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Guessing",
            "id": 128001,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, extract the input field's value, which represents the guess.\n\n1. Use `.value` to access the value of the `inputElement`.\n2. Save the value in a newly created variable called `guess`.\n\nThe added code should look like this: `let guess = inputElement.value;`",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Random number",
            "id": 128002,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We've got the guess from the player, but what's still missing is the random number we want the player to guess. JS allows us to do this with a line that might be a bit complicated at first, but bear with us.\n\n1. At the top of the file, outside of the function, add the following code:\n   ```JavaScript\n   let randomNumber = Math.floor(Math.random() * 100) + 1;\n   ```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": [
                {
                  "title": "What does this code do?",
                  "content": "Math.random() generates a decimal between 0 (inclusive) and 1 (exclusive). Multiplying by 100 gives a range from 0 to just under 100. Math.floor() rounds this down to a whole number between 0 and 99, and adding 1 shifts this range to between 1 and 100."
                }
              ]
            }
          },
          {
            "title": "Comparing",
            "id": 128003,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "We have a random number, and we have a guess. We can now compare the guess with the random number. Let's start with the *if else* block.\n\n1. Inside the function, below the `guess` variable, add an `if` block to compare if `guess` is equal to `randomNumber`.\n2. Add an `else if` block to check if `guess` is lower than `randomNumber`.\n3. Finally, add an `else` block to catch the last remaining case (`guess` being higher than `randomNumber`.)",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (randomNumber == guess){\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #1",
            "id": 128004,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "To give our player the correct feedback, inside the code blocks of the conditional statement, we want to change the `feedbackElement` accordingly.\n\n1. Inside the `if` block, set the `innerHTML` of the `feedbackElement` to a success message to indicate the player guessed the number correctly!\n2. Use `feedbackElement.style.color` and assign it the color `\"green\"` to further indicate success.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #2",
            "id": 128005,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "You'll probably also want to inform the player whether the guess was too low or too high. Let's do this by giving the feedback in the `else if` and `else` blocks.\n \n1. Set `feedbackElement.innerHTML` to either `\"Too low! Try again.\"` or `\"Too high! Try again.\"`.\n2.  Change the color of the `feedbackElement` to red in those cases.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Stylesheet",
            "id": 128006,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "As a final step, let's add a style sheet.\n\n1. Link the `style.css` stylesheet inside the `head` tag.\n2. Add styling to the game as you wish.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: gold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n\n.container {\n    background-color: white;\n    padding: 40px;\n    border-radius: 8px;\n    box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.1);\n    text-align: center;\n    width: 320px;\n    max-width: 90%;\n}\n\ninput {\n    width: 80%;\n    padding: 12px;\n    font-size: 24px;\n    margin-bottom: 12px;\n}\n\nbutton {\n    width: 100%;\n    padding: 12px;\n    font-weight: bold;\n    background-color: blue;\n    border: 2px solid blue;\n    color: white;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: white;\n    color: blue;\n}\n"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}