{
  "tutorial": {
    "id": 2575,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "swift",
    "title": "Constructors",
    "descriptionContent": "Constructors",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14333,
        "title": "Constructors",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Constructor",
            "id": 127508,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>There's a method we can use that is more flexible when creating different instances from a class. It's called the <strong>initializer</strong> method.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" rocky = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;brown&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" benny = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;black&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(rocky.color)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(benny.color)\" /></content><output><content><text value=\"brown\" /><text type=\"break\" /><text value=\"black\" /></content></output></code></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127509,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The initializer method looks like <code>init()</code> and allows us to set unique values for the instance variables when we create an instance.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" rocky = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"48\" /><option startIndex=\"48\" endIndex=\"49\" /><option startIndex=\"62\" endIndex=\"63\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>init</code>, followed by <code>(</code>, and finally <code>)</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127510,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Instead of a class that will always have the same color, an initializer method allows us to specify what we want when creating it.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" rocky = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127511,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When we create an instance from the class definition, we're able to pass unique values inside the parentheses, like with <code>yellow</code> here.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" rocky = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;yellow&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"124\" endIndex=\"125\" /><option startIndex=\"125\" endIndex=\"131\" /><option startIndex=\"131\" endIndex=\"132\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>\"</code>, followed by <code>yellow</code>, and finally <code>\"</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127512,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To add this flexibility to our classes, we start by adding the special initialization function, which looks like <code>init()</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text value=\"init\" class=\"keyword\" /><text value=\"() { }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"41\" endIndex=\"45\" /><option startIndex=\"45\" endIndex=\"46\" /><option startIndex=\"46\" endIndex=\"47\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>init</code>, followed by <code>(</code>, and finally <code>)</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127514,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Next, we add the parameters for the custom values we want to set when we create the instance, like with <code>color</code> and it's type <code>String</code> here.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") { }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"58\" /><option correct=\"false\"><content><text value=\"self\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>color: String</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127515,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Then we set the value by coding <code>self</code>, a <code>.</code>, the parameter name, and then equating it to the parameter name again. This sets the value.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color \" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"66\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>self</code>, followed by <code>.</code>, and finally <code>color</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127516,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>When we create an instance from the class definition, we add the values we want to set inside parentheses, like here with <code>\"red\"</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" rocky = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(rocky.color)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"126\" endIndex=\"131\" /></interactions><output><content><text value=\"red\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>\"red\"</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 127517,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>The initializer method helps us initialize the instances of our class the way we want. We're able to add as many parameters as we want.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" legs: \" /><text value=\"Int\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\", legs: \" /><text value=\"Int\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".legs = legs \" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" rocky = \" /><text value=\"VirtualPet\" class=\"type\" /><text value=\"(color: \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\", legs: \" /><text value=\"4\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(rocky.color)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(rocky.legs)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"79\" /><option startIndex=\"80\" endIndex=\"89\" /></options></interaction></interactions><output><content><text value=\"red\" /><text type=\"break\" /><text value=\"4\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>color: String,</code>, followed by <code>legs: Int</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 127519,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What is the purpose of an initializer?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">To initialize an instance of a class object with unique class variables</item><item value=\"2\" correct=\"false\">To create a method for a class object</item></selection><p visible-if=\"wrong\">To initialize an instance of a class object with unique class variables.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 127520,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>How do we define the constructor method?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>init()</code></item><item value=\"4\" correct=\"false\"><code>function init()</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>init()</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 127522,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Can we use parameters when defining the initializer method?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Yes, we set values for the parameters when creating an instance</item><item value=\"2\" correct=\"false\">We cannot use parameters in the init function</item></selection><p visible-if=\"wrong\">Yes, we set values for the parameters when creating an instance.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 127523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add the initializer method to the following class definition.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"() {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"22\" /><option startIndex=\"22\" endIndex=\"23\" /><option startIndex=\"23\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>init</code>, followed by <code>(</code>, and finally <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 127524,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add two parameters to the initializer method, <code>color</code> and <code>name</code>.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\", name: \" /><text value=\"String\" class=\"type\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"50\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>color: String,</code>, followed by <code>name: String</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 127525,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Set the class variables to be the parameters of the initializer method using the keyword <code>self</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\", name: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".name = name\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"98\" endIndex=\"102\" /><option startIndex=\"102\" endIndex=\"103\" /><option startIndex=\"111\" endIndex=\"116\" /><option startIndex=\"131\" endIndex=\"132\" /><option startIndex=\"133\" endIndex=\"137\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>self</code> followed by <code>.</code> and then <code>color</code>, <code>=</code>, <code>name</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 127526,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Using the initializer, create a Pokemon instance that has the color <code>\"orange\"</code> and the name <code>\"charizard\"</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" color: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"String\" class=\"type\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"init\" class=\"keyword\" /><text value=\"(color: \" /><text value=\"String\" class=\"type\" /><text value=\", name: \" /><text value=\"String\" class=\"type\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".color = color\" /><text type=\"break\" /><text value=\"    \" /><text value=\"self\" class=\"keyword\" /><text value=\".name = name\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" charizard = \" /><text value=\"Pokemon\" class=\"type\" /><text value=\"(color:\" /><text value=\"&quot;orange&quot;\" class=\"string\" /><text value=\", name: \" /><text value=\"&quot;charizard&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(charizard.color)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(charizard.name)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"163\" endIndex=\"170\" /><option startIndex=\"170\" endIndex=\"177\" /><option startIndex=\"177\" endIndex=\"185\" /><option startIndex=\"185\" endIndex=\"186\" /><option startIndex=\"193\" endIndex=\"204\" /><option startIndex=\"204\" endIndex=\"205\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions><output><content><text value=\"orange\" /><text type=\"break\" /><text value=\"charizard\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>Pokemon</code> followed by <code>(color:</code> and then <code>\"orange\"</code>, <code>,</code>, <code>\"charizard\"</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}