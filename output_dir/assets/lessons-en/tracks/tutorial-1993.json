{
  "tutorial": {
    "id": 1993,
    "version": 4,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Array.reduce()",
    "descriptionContent": "Learn how to reduce array values into one value",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12711,
        "title": "Reduce",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 115251,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sometimes, we need to convert a series of array values to a single value. For example, when we want to calculate a sum.</p><p>A classic way of doing this is through a loop.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" miles = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"95\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" total = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" element \" /><text value=\"of\" class=\"keyword\" /><text value=\" miles) {\" /><text type=\"break\" /><text value=\" total += element;\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(total);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"75\" endIndex=\"80\" /></options></interaction></interactions><output><content><text value=\"207\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>total</code>.</p></body></html>"
          },
          {
            "title": "Calling .reduce on an Array",
            "id": 115252,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>However, JavaScript offers a simpler, already existing method. <code>.reduce()</code> can combine Array values into a value using an inline function.</p><p><code>.reduce()</code> uses the syntax: <code>ArrayName.reduce()</code>. Let's see how we could call it on the <code>miles</code> array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" miles = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"95\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = miles.reduce();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"42\" endIndex=\"47\" /><option startIndex=\"47\" endIndex=\"48\" /><option startIndex=\"48\" endIndex=\"54\" /><option startIndex=\"54\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /><option correct=\"false\"><content><text value=\"list\" /></content></option></options></interaction></interactions><output><content><text value=\"        \" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>miles</code> followed by <code>.</code> and then <code>reduce</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Passing Functions",
            "id": 115253,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To tell the <code>.reduce()</code> function how to combine values, we first need to pass a function as a parameter.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" miles = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"95\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = miles.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"63\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"67\" /><option startIndex=\"67\" endIndex=\"68\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>function</code> followed by <code>(</code> and then <code>)</code>, <code>{</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Parameters",
            "id": 115255,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Our function needs two parameters: the first to access the result of the previous <strong>reduction</strong>, and the second to access the current value.</p><p>Add two parameters: <code>prev</code> and <code>curr</code>, in that order.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" miles = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"95\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = miles.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"prev, curr\" class=\"params\" /><text value=\") \" /><text value=\"{});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"64\" endIndex=\"69\" /><option startIndex=\"70\" endIndex=\"74\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>prev,</code>, followed by <code>curr</code>.</p></body></html>"
          },
          {
            "title": "Return",
            "id": 115254,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>reduce()</code> iterates through an array and, at each value, performs an operation with the two parameters until it arrives at a single value.</p><p>For example, to sum the values, the inline function returns the sum of the <code>prev</code> reduction and <code>curr</code> value.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" miles = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"95\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = miles.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"prev, curr\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" prev + curr;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(total);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"79\" endIndex=\"85\" /><option startIndex=\"86\" endIndex=\"97\" /></options></interaction></interactions><output><content><text value=\"207\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>return</code>, followed by <code>prev + curr</code>.</p></body></html>"
          },
          {
            "title": "Arrow functions",
            "id": 115258,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>To simplify our syntax, we can incorporate a JavaScript arrow function in place of the inline function.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" miles = [\" /><text value=\"33\" class=\"number\" /><text value=\", \" /><text value=\"95\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = miles.reduce(\" /><text value=\"(\" /><text value=\"prevVal, currVal\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevVal + currVal);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(total);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"73\" /><option startIndex=\"74\" endIndex=\"76\" /><option startIndex=\"77\" endIndex=\"94\" /><option correct=\"false\"><content><text value=\"&lt;=\" /></content></option><option correct=\"false\"><content><text value=\"-\" /></content></option></options></interaction></interactions><output><content><text value=\"207\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>(prevVal, currVal)</code>, followed by <code>=&gt;</code>, and finally <code>prevVal + currVal</code>.</p></body></html>"
          },
          {
            "title": "Parameters II",
            "id": 115256,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>If we include a third parameter in the function, we can also access each iteration's index.</p><p>In this example, we use <code>.reduce()</code> to sum up the <code>prices</code>, but we also incorporate <code>index</code> to apply a discount factor from a second array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" prices = [\" /><text value=\"17.50\" class=\"number\" /><text value=\", \" /><text value=\"20.25\" class=\"number\" /><text value=\", \" /><text value=\"24.75\" class=\"number\" /><text value=\", \" /><text value=\"13.50\" class=\"number\" /><text value=\", \" /><text value=\"8.50\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" discountFactor = [\" /><text value=\"0.9\" class=\"number\" /><text value=\", \" /><text value=\"0.9\" class=\"number\" /><text value=\", \" /><text value=\"1.0\" class=\"number\" /><text value=\", \" /><text value=\"1.0\" class=\"number\" /><text value=\", \" /><text value=\"0.9\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = prices.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"prevVal, currVal, index\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" prevVal + (currVal * discountFactor[index]);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(total);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"156\" endIndex=\"161\" /><option startIndex=\"209\" endIndex=\"214\" /></options></interaction></interactions><output><content><text value=\"81.625\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>index</code>, followed by <code>index</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 115259,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Which JavaScript function can we use to convert a series of array values to a single value?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>.reduce()</code></item><item value=\"2\" correct=\"false\"><code>.filter()</code></item></selection><p visible-if=\"wrong\">Make sure to pick <code>.reduce()</code>.</p></body></html>"
          },
          {
            "title": "Question: Passing Functions",
            "id": 115261,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What must we pass as a parameter to tell the <code>.reduce()</code> function how to combine values?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A function</item><item value=\"2\" correct=\"false\">A variable</item></selection><p visible-if=\"wrong\">A function.</p></body></html>"
          },
          {
            "title": "Question: Parameters",
            "id": 115262,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the inline function's first parameter give <code>reduce()</code> access to?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The result of the previous reduction</item><item value=\"2\" correct=\"false\">The current iteration's array value</item></selection><p visible-if=\"wrong\">The result of the previous reduction.</p></body></html>"
          },
          {
            "title": "Question: Parameters",
            "id": 115275,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What does the inline function's second parameter give <code>reduce()</code> access to?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The current iteration's array value</item><item value=\"2\" correct=\"false\">The result of the previous reduction</item></selection><p visible-if=\"wrong\">The current iteration's array value.</p></body></html>"
          },
          {
            "title": "Question: Parameters II",
            "id": 115263,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>What can we access by adding a third, optional parameter to the function?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">The index</item><item value=\"2\" correct=\"false\">The calling array</item></selection><p visible-if=\"wrong\">The index.</p></body></html>"
          },
          {
            "title": "Example: Calling .reduce on an Array",
            "id": 115268,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Call the <code>.reduce()</code> function on the <code>prices</code> array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" prices = [\" /><text value=\"17.50\" class=\"number\" /><text value=\", \" /><text value=\"20.25\" class=\"number\" /><text value=\", \" /><text value=\"24.75\" class=\"number\" /><text value=\", \" /><text value=\"13.50\" class=\"number\" /><text value=\", \" /><text value=\"8.50\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = prices.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"prevVal, currVal\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" prevVal + currVal;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(total);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"78\" /></options></interaction></interactions><output><content><text value=\"84.5\" /></content></output></code><p visible-if=\"wrong\">Make sure to pick <code>prices</code>, followed by <code>.</code>, and finally <code>reduce</code>.</p></body></html>"
          },
          {
            "title": "Example: Passing Functions",
            "id": 115269,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add an inline function within the <code>.reduce()</code> function.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" values = [\" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"1\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" factorial = values.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"61\" endIndex=\"69\" /><option startIndex=\"69\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"72\" endIndex=\"73\" /><option startIndex=\"73\" endIndex=\"74\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Make sure to pick <code>function</code> followed by <code>(</code> and then <code>)</code>, <code>{</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Example: Parameters",
            "id": 115270,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Add the appropriate parameters to give the inline function access to the previous reduction value and the current array value.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" values = [\" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"1\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" factorial = values.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"prev, curr\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" prev * curr;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(factorial);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"70\" endIndex=\"74\" /></interactions><output><content><text value=\"24\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>prev</code>.</p></body></html>"
          },
          {
            "title": "Example: Return",
            "id": 115272,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>We want the <code>.reduce()</code> function to concatenate all of the <code>words</code> into a sentence.</p><p>Code the correct keyword in the inline function so that it returns the previous reduction value concatenated with the current word.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" words = [\" /><text value=\"&quot;The&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;house&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;is&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" sentence = words.reduce(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"prev, curr\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" prev + \" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\" + curr;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(sentence);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"99\" endIndex=\"105\" /></interactions><output><content><text value=\"The house is red\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>return</code>.</p></body></html>"
          },
          {
            "title": "Example: Arrow functions",
            "id": 115273,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete the arrow function such that <code>total</code> stores the sum of the <code>prices</code> array values.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" prices = [\" /><text value=\"17.50\" class=\"number\" /><text value=\", \" /><text value=\"20.25\" class=\"number\" /><text value=\", \" /><text value=\"24.75\" class=\"number\" /><text value=\", \" /><text value=\"13.50\" class=\"number\" /><text value=\", \" /><text value=\"8.50\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" total = prices.reduce(\" /><text value=\"(\" /><text value=\"prevVal, currVal\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevVal + currVal);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(total);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"109\" endIndex=\"118\" /></interactions><output><content><text value=\"84.5\" /></content></output></code><p visible-if=\"wrong\">Make sure to type <code>+ currVal</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}