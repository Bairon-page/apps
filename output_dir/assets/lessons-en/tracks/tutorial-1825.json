{
  "tutorial": {
    "id": 1825,
    "version": 14,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Animal of the Month: Voting",
    "descriptionContent": "Use JavaScript to create upvote and downvote buttons",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1825-icon-banner.svg",
    "chapters": [
      {
        "id": 12108,
        "title": "Animal of the Month: Voting",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 110536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The Zoo has contracted you to build a page for users to upvote or downvote on the \"Animal of the Month\".\n\nFirst, let's get familiar with the provided files: `index.html`, `style.css`, and `script.js` .\n\nThe `index.html` file currently contains a photo of a Panda Bear and a corresponding caption. The `style.css` file contains some basic styling for our page. The `script.js` file is blank for now, we'll work on writing the JavaScript logic in later steps.\n\nAs mentioned, we'll need to expand upon this page to allow users to either \"upvote\" or \"downvote\" the \"Animal of the Month\". We'll begin by first adding an on-screen text element to display the current count.\n\n1. Add a paragraph element with an `id` of `\"votes\"` just after the caption ( `\"nom nom nom\"` ). For demonstration purposes, set the text of this paragraph element to \"3 Votes\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 110542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Let's now create the buttons that users will use to either `Upvote` or `Downvote` on the `Animal of the Month`. First, let's focus on adding the `Upvote` button on-screen, which eventually will increment the vote count by 1 on each click. \n\n1. Create a `button` element with an `id` of `\"upvote\"` immediately after the newly created \"votes\" `<p>` element. \n2. Next, set the `button` element's text content to `Upvote`. \n3. Finally, inside `style.css`, target the upvote button using its `id` in a ruleset for the appropriate property to change its background color to `green`. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an element in CSS by its `id` using `#id`. For example, to access a button element with the `id` of `example`, use `#example`."
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 110543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we have an upvote button, let's tackle the downvote button. When clicked, this button will decrease the vote count by 1, but we'll implement this functionality later on. For now, focus on adding the element to the page and correctly setting the provided properties. \n\n1. Create a button element with an `id` of `\"downvote\"` immediately after the newly created upvote button. \n2. Next, set the button element's text content to `Downvote`. \n3. Inside `style.css`, target the downvote button using its `id` and set the appropriate property to change its background color to `red`. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}",
                  "solvedContent": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}\n\n#downvote {\n background-color: red;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `Upvote` button."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 110544,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we have all of our on-screen elements created, let's start adding the voting functionality in JavaScript. To do so, we'll first import the `script.js` file at the bottom of the `index.html` file. We'll create a variable to store the vote count (for demonstration purposes, we'll start at 3) and log it to the console to check that our file is properly linked. \n\n1. Import the `script.js` file in the `body` element of the `index.html` file using a `<script>` tag. \n2. In `script.js`, initialize a variable `counter` to a value of `3`. \n3. Finally, log the `counter` variable in the console and run your code to check that the `script.js` file is properly linked. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "let counter = 3;\nconsole.log(counter);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change its value whenever `Upvote` or `Downvote` button is clicked."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 110547,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next, let's implement the `upvote()` and `downvote()` functions, which will increase and decrease the vote count by 1, respectively. Let's first tackle the `upvote()` function: declare the function and implement the function body such that the `counter` variable is incremented by 1 when called. \n\n1. First, remove the `console.log` statement written in the previous step.\n2. Next, declare a function named `upvote()`, which should not take any parameters. \n3. Finally, implement the function body such that calling the function increases the `counter` variable by `1`. ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\nconsole.log(counter);",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax of a function without parameters looks like this:\n```javascript\nfunction functionName(){\n    //statements\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 110550,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "The `upvote` function increments the `counter` variable by 1, but we also need to implement the functionality to update the page content. We'll target the `votes` `<p>` element that we created earlier and set its text to reflect the updated `counter` variable. a\n\n1. First, target the `votes` `p` element by its ID and choose the correct content property to update. We want to update the element's text. \n2. Next, set the content property to the concatenation of the `counter` variable and the string `\" Votes\"`. Don't forget the space and correct capitalization!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to update an `html` element's text content, you can use either the `innerHTML`, `innerText`, or `textContent` content properties. "
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 110551,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, let's first tackle the `downvote()` function. Declare a new function named `downvote()` and implement its function body such that calling it decreases the `counter` variable by `1`. \n\n1. First, declare a function named `downvote()`, which should not take any parameters. \n2. Then, implement the function body such that calling the function decreases the `counter` variable by `1`. ",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To decrease a variable by 1, you can use `-` or `--` or `-=`. For example, `a--` or `a-=1` or `a=a-1`."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 110552,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now, in a similar fashion to the `upvote()` function, we need to implement the `downvote()` functionality to update the page content. Like before, we'll target the `votes` `<p>` element and set its text to reflect the updated `counter` variable. \n\n1. Within the `downvote()` function, target the `votes` `<p>` element by its ID and choose the correct content property to update.\n2. Next, set the element text to the concatenation of the `counter` variable and the string `\" Votes\"`. Don't forget the space!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `upvote()` function."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 110553,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Now that we have our JavaScript functionality complete, let's add the appropriate button function calls to complete the project. Attach `onclick` event listeners to each button to appropriately call the `upvote()` and `downvote()` functions. Make sure to test the buttons to check your work. \n\n1. Add an `onclick` event listener to the upvote button that calls the `upvote()` function. \n2. Add an `onclick` event listener to the downvote button that calls the `downvote()` function. \n3. Try clicking the upvote and downvote buttons to confirm that you've properly implemented the voting functionality. ",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\" onclick=\"upvote()\">Upvote</button>\n    <button id=\"downvote\" onclick=\"downvote()\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can add an onclick listener to any element using the `onclick` attribute. For example, `<button onclick=\"func()\"></button>`"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}