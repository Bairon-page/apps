{
  "tutorial": {
    "id": 2598,
    "version": 16,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Galeria - Parte 1",
    "descriptionContent": "Pronto para criar uma galeria online? Neste segmento, vamos lançar as bases, configurando uma tela para exibir imagens cativantes em um layout harmonioso.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2598-icon-banner.svg",
    "chapters": [
      {
        "id": 14385,
        "title": "Galeria",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Start",
            "id": 128015,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bem-vindo ao projeto **Galeria**. Você vai construir uma galeria de imagens visualmente atraente.\n\nMas isso não é tudo! Clicar na imagem de cada gato abrirá uma versão maior da imagem em um modal (uma janela pop-up). \nEste é um recurso comum em muitos sites, especialmente em plataformas de e-commerce, sites de notícias e portfólios.\n\n1. Comece com a estrutura básica do HTML, incluindo `<!doctype html>`, `html`, `head` e `body` tag.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Linking",
            "id": 128016,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos adicionar um título. Também precisaremos vincular nossos arquivos JS e CSS.\n\n1. Adicione um título à página da web dentro da tag `head`.\n2. Inclua uma tag `title` com algum texto.\n3. Adicione um link para o arquivo CSS adicionando `<link rel=\"stylesheet\" href=\"style.css\">`.\n4. Adicione um link para o arquivo JS adicionando `<script src=\"script.js\"></script>`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Header and container",
            "id": 128017,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Cada página da web se beneficia de um cabeçalho claro que informa aos usuários o tema da página. Também precisamos criar um contêiner para nossas imagens.\n\n1. Dentro das tags `<body>`, adicione uma tag `<h1>` com um texto de sua escolha.\n2. Após o `<h1>`, crie um `div` com uma classe `\"gallery\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding an item",
            "id": 128018,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dentro da nossa galeria, teremos entradas para cada elemento. Usaremos gatos como exemplo, mas sinta-se à vontade para usar o que preferir. Vamos começar adicionando um título e uma imagem para o primeiro gato.\n\n1. Dentro do nosso container (o `div` com a classe `\"gallery\"`), crie um `div` com a classe `\"item\"`.\n2. Dentro do item, adicione uma imagem de sua preferência. (Ou use `https://mimo.app/i/whispurr.png`.)\n3. Abaixo da imagem, adicione um elemento `<h2>` e dê a ele um título. (Ou use `Whispurr` se quiser seguir com o exemplo do gato.)\n4. Se desejar, você também pode adicionar um parágrafo para uma descrição da imagem.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n       <img src=\"https://mimo.app/i/whispurr.png\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Image attributes",
            "id": 128019,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos adicionar mais informações ao elemento de imagem.\n\n1. Adicione a classe `\"thumbnail\"` à imagem para referenciá-la em nosso código CSS.\n3. Adicione um atributo `alt` à imagem que descreva a imagem.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n       <img src=\"https://mimo.app/i/whispurr.png\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": [
                {
                  "title": "Why use alt?",
                  "content": "Using the alt attribute for images in HTML is best practice because it:\n1. Improves accessibility by providing a textual description for visually impaired users using screen readers.\n2. Enhances SEO by helping search engines understand the image content.\n3. Ensures usability by displaying the alt text in case the image fails to load.\n\nIn essence, the alt attribute makes web content more inclusive, searchable, and user-friendly."
                }
              ]
            }
          },
          {
            "title": "More items",
            "id": 128020,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos adicionar mais itens à galeria.\n\nSe você quiser continuar com o exemplo do gato, sinta-se à vontade para usar as seguintes entradas:\n- Babaganoosh: `https://mimo.app/i/babaganoosh.png`\n- Nacho: `https://mimo.app/i/nacho.png`\n\n1. Adicione quantos itens você quiser.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Styling the body",
            "id": 128021,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Hora de adicionar um pouco de CSS.\n\n1. Vamos definir a `font-family` do `body` e todos os seus filhos para `Arial, sans-serif`.\n2. Defina o `padding` e `margin` para o `body` como `0`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0px;\n    padding: 0;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Styling the header",
            "id": 128022,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Headers são essenciais para chamar a atenção. Vamos estilizar os nossos.\n\n1. Adicione estilo para centralizar o elemento `h1` usando `text-align: center`.\n2. Forneça algum espaço abaixo dele. `40px` parece bom, mas você decide.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Flexbox",
            "id": 128023,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Flexbox é um modelo de layout moderno que permite que os itens dentro de um container sejam organizados dinamicamente. Vamos usá-lo para nossa galeria.\n\n1. Estilize a classe `.gallery` para exibir seus filhos em um layout flex usando `display: flex;`.\n2. Centralize os itens horizontalmente usando `justify-content`.\n3. Permita que os itens quebrem para a próxima linha se não houver espaço suficiente, definindo `flex-wrap` como `wrap`.\n4. Finalmente, defina um `gap` de `20px`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}\n\n.gallery {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Animation",
            "id": 128024,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Imagens chamam a atenção! Vamos dar um pouco de estilo a elas e fazer com que nossas miniaturas cresçam levemente ao passar o mouse.\n\n1. Crie uma regra `.thumbnail` e defina `transition: transform 0.3s;` para informar ao CSS que deve animar as mudanças.\n2. Crie uma regra `.thumbnail:hover` e adicione uma propriedade de transformação codificando `transform: scale(1.1);`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}\n\n.gallery {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}\n\n.gallery {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.thumbnail {\n    transition: transform 0.3s;\n}\n\n.thumbnail:hover {\n    transform: scale(1.1);\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": [
                {
                  "title": "What am I supposed to do?",
                  "content": "You want to add two rules that both target the `.thumbnail` class. The first one sets the `transition` and the second the `transform` attribute for the `hover` state.\n\nThis is how your code should look like:\n\n```CSS\n.thumbnail {\n    transition: transform 0.3s;\n}\n.thumbnail:hover {\n    transform: scale(1.1);\n}\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}