{
  "tutorial": {
    "id": 1948,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Itens da Lista de Desejos",
    "descriptionContent": "Use Loops para adicionar os itens da sua lista de desejos ao seu carrinho de compras e somar o preço total",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1948-icon-banner.svg",
    "chapters": [
      {
        "id": 12568,
        "title": "Programa de Lista de Desejos",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Create Total Variable",
            "id": 113705,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos usar nosso conhecimento de loops `for` para adicionar os itens da nossa lista de desejos ao nosso carrinho de compras e somar o preço total.\n\nJá adicionamos um array `wishlist` que armazena a lista de desejos de um usuário, um array `prices` que armazena os preços desses itens, um array `quantity` que armazena a quantidade de cada item da lista de desejos, e um array `availableStock` que armazena o estoque disponível para esses itens.\n\nOs índices de cada array correspondem a um produto.\n\nAgora, vamos adicionar uma forma de acompanhar o preço total dos nossos itens.\n\n1. Crie uma variável chamada `total` e atribua a ela `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "First for Loop",
            "id": 113706,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos começar criando nosso primeiro for loop para percorrer nosso array `wishlist`.\n\n1. Codifique um for loop com uma variável contadora `i` definida como `0`.\n2. Monte a condição para que ela execute seu bloco de código enquanto `i` for menor que o comprimento de `wishlist`.\n3. Dentro dos parênteses, incremente a variável contadora em `1`.\n4. Dentro do corpo do for loop, exiba a variável contadora para testar se o loop está funcionando.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < wishlist.length`, hence we loop through each item of our wishlist no matter the size.\n2. It is important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Adding to Shopping Cart",
            "id": 113707,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, vamos exibir a adição dos itens da nossa lista de desejos ao carrinho de compras. Queremos que exiba algo como \n```\n1 Red T-shirt added to your shopping cart.\n```\n\n1. Dentro do loop `for`, substitua o conteúdo do `console.log` construindo uma string para exibir algo como `<quantity> <wishlist item> added to your shopping cart.` Veja a dica se quiser ver como isso é feito.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `wishlist` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(quantity[i] + \" \" + wishlist[i] + \" added to your shopping cart.\"\n```"
                }
              ]
            }
          },
          {
            "title": "Calculate the Total",
            "id": 113708,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos calcular o total dos nossos itens usando nosso loop for. Vamos usar a atribuição de adição para que não precisemos criar uma nova variável `total` a cada vez.\n\n1. Dentro do corpo do loop for e abaixo do `console.log()`, multiplique o elemento atual do array `prices` com o elemento atual do array `quantity`. Use a atribuição de adição para adicionar isso à variável `total`. Veja a dica se precisar de ajuda com isso.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The addition assignment operator is `+=`"
                }
              ]
            }
          },
          {
            "title": "Display Total Price",
            "id": 113719,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos exibir o preço total após somar todos os preços.\n\n1. Após o loop for, `display` nosso total. Deve exibir como `Total Price: $<total>`. Veja a dica se quiser ver como isso é feito.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "```JS\nconsole.log(\"Total Price: $\" + total);\n```"
                }
              ]
            }
          },
          {
            "title": "Second for Loop",
            "id": 113720,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos começar a escrever nosso segundo for loop para subtrair a quantidade dos itens da nossa lista de desejos do estoque disponível.\n\n1. Codifique um for loop com uma variável contadora `i` definida como `0`.\n2. Monte a condição para que ela execute seu bloco de código enquanto `i` for menor que o comprimento do array `availableStock`.\n3. Dentro dos parênteses, incremente a variável contadora em `1`.\n4. Dentro do corpo do for loop, exiba a variável contadora para testar se o loop está funcionando corretamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < availableStock.length`, hence we loop through each item of our `availableStock` array no matter the size.\n2. It's important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Update Available Stock",
            "id": 113721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos subtrair a quantidade dos itens da nossa lista de desejos do array `availableStock`.\n\n1. Dentro do corpo do segundo loop for e acima do `console.log`, use autoatribuição para subtrair o item atual no array `quantity` do item atual do array `availableStock`. Veja a dica se quiser ver como isso é feito.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\navailableStock[i] -= quantity[i];\n```"
                }
              ]
            }
          },
          {
            "title": "Display Available Stock",
            "id": 113722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, vamos exibir nosso estoque disponível atualizado de cada item no nosso loop.\n\n1. Dentro do segundo loop `for`, substitua o conteúdo do `console.log` construindo uma string para exibir algo como `There are <number> <item> left.` Veja a dica se quiser ver como isso é feito.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `wishlist` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}