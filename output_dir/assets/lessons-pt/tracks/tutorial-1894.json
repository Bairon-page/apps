{
  "tutorial": {
    "id": 1894,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Banco de Dados Simulado",
    "descriptionContent": "Use programas reutilizáveis para criar um Mock Database",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1894-icon-banner.svg",
    "chapters": [
      {
        "id": 12373,
        "title": "Banco de Dados Simulado",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "getAll()",
            "id": 112139,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para este projeto, vamos simular consultas de banco de dados para entender quando certos blocos de código são executados dentro de uma função com a ajuda de condicionais.\n\nPara começar, vamos iniciar com uma função para obter todos os usuários dentro de um banco de dados. Para esta função, a palavra-chave `return` retornará todos os usuários assim que o loop for concluído.\n\n1. Dentro de `getAll()`, inicialize uma variável `allUsers` como um array vazio.\n2. Crie um loop `for` que itere pelo comprimento de `userArr`.\n3. Adicione usuários a `allUsers` em cada iteração.\n4. Fora e abaixo do loop for, retorne `allUsers`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n}\n\nfunction checkExistingUser(e) {}\n\nfunction checkLastLogin() {}\n\nfunction checkLocation(e) {}\n\nfunction checkContributions(e) {}\n\nfunction deleteUser() {}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {}\n\nfunction checkLastLogin() {}\n\nfunction checkLocation(e) {}\n\nfunction checkContributions(e) {}\n\nfunction deleteUser() {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "checkExistingUser(e) 1/2",
            "id": 112140,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Outra consulta útil a um banco de dados é verificar se existe um usuário. Nesta função, uma condicional nos ajudará a executar instruções desejadas para verificar se um usuário existe.\n\n1. Dentro de `checkExistingUser(e)`, crie um loop `for` que itere através do comprimento de `userArr`.\n2. Crie uma declaração `if` que verifique se o nome da iteração atual é estritamente igual ao valor de entrada do formulário.\n3. Registre o objeto do usuário da iteração atual se a condicional for satisfeita.\n4. Retorne `true`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `e.currentTarget.name.value` to check if the current iteration's name is strictly equal to the form's input value. This syntax gets the value entered into the `input` element (in index.html) when its button is clicked and the event triggers this function."
                }
              ]
            }
          },
          {
            "title": "checkExistingUser(e) 2/2",
            "id": 112141,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Continuando com a função `checkExistingUser`, vamos completar a lógica incluindo instruções para quando a declaração `if` não for satisfeita. `checkExistingUser(e)` ainda fornecerá dados significativos retornando `false`.\n\n1. Registre `\"User does not exist\"` fora e abaixo do loop `for`.\n2. Retorne `false`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `return` to return values. For example, `return val;`."
                }
              ]
            }
          },
          {
            "title": "checkLastLogin()",
            "id": 112174,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A próxima consulta simulada em que vamos nos concentrar é verificar a última vez que um usuário fez login. Uma condicional verificará se um usuário não fez login por uma certa quantidade de dias, e a palavra-chave `return` retornará quaisquer resultados.\n\n1. Dentro de `checkLastLogin()`, inicialize uma variável `results` como um array vazio.\n2. Crie um loop `for` que itere o comprimento de `userArr`.\n3. Use uma declaração `if` para verificar se o último login do objeto do usuário atual é `maior que` 10.\n4. Adicione o objeto do usuário atual ao array `results` se a condição for satisfeita.\n5. Fora e abaixo do loop for, retorne `results`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `return` to return values. Example, `return val;`.\n2. To push an element into an array, use `push()`. Example, `array.push(element)`."
                }
              ]
            }
          },
          {
            "title": "checkLocation(e) 1/2",
            "id": 112175,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos criar uma função que consulta o banco de dados simulado e retorna todos os usuários de uma localização específica. Nesta primeira parte, retornaremos os resultados de nossas condicionais se elas forem satisfeitas.\n\n1. Dentro de `checkLocation()`, inicialize uma variável `results` como um array vazio.\n2. Use um loop `for` para iterar através do comprimento de `userArr`.\n3. Crie uma declaração `if` que verifica se a localização do objeto do usuário atual é estritamente igual ao valor de entrada do formulário.\n4. Adicione o objeto do usuário atual ao array `results` quando a condicional for satisfeita.\n5. Fora e abaixo do loop for, verifique se o comprimento de `results` é `maior que` 0.\n6. Se a condição acima for satisfeita, então registre e retorne `results`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `e.currentTarget.location.value` to check if the current iteration's name is strictly equal to the form's input value."
                }
              ]
            }
          },
          {
            "title": "checkLocation(e) 2/2",
            "id": 112176,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para completar a lógica desta função, precisaremos de uma declaração `else`. Quando o comprimento de `results` não for maior que 0 e a condição não for satisfeita, nossa declaração else exibirá `\"No results found\"` e retornará `false`.\n\n1. Crie o bloco de código da declaração `else`.\n2. Registre `\"No results found\"`.\n3. Retorne `false`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  } else {\n   console.log(\"No results found\");\n   return false;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The structure of `if..else` statement is:\n```javascript\nif(condition) {\n\n} else {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "checkContributions(e) 1/2",
            "id": 112177,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos escrever uma função que verifica se um usuário fez uma certa quantidade de contribuições. Nesta primeira parte, vamos retornar todos os objetos de usuário que satisfazem a condição. Usaremos outra condição para verificar o comprimento do array de resultados.\n\n1. Dentro de `checkContributions()`, inicialize uma variável `validContributions` como um array vazio.\n2. Crie um loop `for` que itera através do comprimento de `userArr`.\n3. Crie uma declaração `if` que verifica se as contribuições do objeto do usuário atual são `maiores que` o valor de entrada do formulário.\n4. Adicione o objeto do usuário atual a `validContributions` quando a condição for satisfeita.\n5. Fora e abaixo do loop for, verifique se o comprimento de `validContributions` é `maior que` 0.\n6. Se a condição acima for satisfeita, registre e retorne `validContributions`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  } else {\n   console.log(\"No results found\");\n   return false;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  } else {\n   console.log(\"No results found\");\n   return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n   console.log(validContributions);\n   return validContributions;\n  }\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `e.currentTarget.contributions.value` to check if the current user object's contributions are `greater than` the form's input value."
                }
              ]
            }
          },
          {
            "title": "checkContributions(e) 2/2",
            "id": 112178,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para completar esta função, precisaremos de uma declaração `else` para quando o comprimento de `validContributions` não satisfizer a condicional.\n\n1. Crie o bloco de código da declaração `else`.\n2. Registre `\"No results found\"`.\n3. Retorne `false`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  }\n}\n\nfunction deleteUser() {}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction deleteUser() {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The structure of `if..else` statement is:\n```javascript\nif(condition) {\n\n} else {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "deleteUser()",
            "id": 112179,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Por último, vamos dar uma olhada em uma função que deleta um usuário do banco de dados. Usaremos a palavra-chave `return` para retornar `true` se um usuário for removido com sucesso.\n\n1. Crie um loop `for` que itere através do comprimento de `userArr`.\n2. Verifique se o nome do objeto do usuário atual é estritamente igual a `\"Selene\"`.\n3. Use `splice` com o índice do objeto do usuário atual e remova o objeto quando a condição for satisfeita.\n4. Registre `\"User deleted successfully\", userArr`.\n5. Retorne `true`.\n6. Registre `\"User not found\"` fora e abaixo do loop for.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction deleteUser() {\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction deleteUser() {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === \"Selene\") {\n      userArr.splice(i, 1);\n      console.log(\"User deleted successfully\", userArr);\n      return true;\n    }\n  }\n  console.log(\"User not found\");\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "`.splice()` expects two arguments - a starting index and the number of items to remove. In this lesson, remove only one.\n"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}