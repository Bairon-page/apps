{
  "tutorial": {
    "id": 2366,
    "version": 4,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Tuplas, Dicionários e Conjuntos",
    "descriptionContent": "Leve-se ao próximo nível resolvendo esses desafios sobre estruturas de dados em Python!",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13825,
        "title": "Materiais de Arte",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Art Supplies",
            "id": 123272,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Precisamos criar uma lista de materiais de arte para que os artistas tenham tudo o que precisam para pintar!\n\n1. Use a sintaxe correta para definir uma tupla composta por `\"paint brush\"`, `\"paint\"` e `\"canvas\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "art_supplies = ",
                  "solvedContent": "art_supplies = (\"paint brush\", \"paint\", \"canvas\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13826,
        "title": "Atividades no Parque",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Park Activities",
            "id": 123273,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Precisamos completar o dicionário do parque estadual para informar aos usuários quais atividades estão disponíveis no parque.\n\n1. Para `activities`, adicione uma lista **imutável** que inclua `\"hiking\"` e `\"fishing\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "state_park_dict = {\r\n \"name\": \"Starved Rock\",\r\n \"location\": \"Illinois\",\r\n \"canyons\": True,\r\n \"activities\":\r\n}",
                  "solvedContent": "state_park_dict = {\r\n \"name\": \"Starved Rock\",\r\n \"location\": \"Illinois\",\r\n \"canyons\": True,\r\n \"activities\": (\"hiking\", \"fishing\")\r\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13827,
        "title": "Conselhos sobre Equipamento de Camping",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Camping Gear Advice",
            "id": 123274,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Os campistas precisam saber quais equipamentos de acampamento são recomendados para uma viagem!\n\n1. Verifique se há uma **chave** dentro do dicionário para equipamentos de cozinha de acampamento.\n2. Salve o valor em uma variável `kitchen_items`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "recommended_camp_gear = {\r\n \"clothes\": (\"Rain jacket\", \"Hiking boots\"),\r\n \"camp_kitchen\": (\"Portable stove\", \"Frying pan\") \r\n}\r\n\r\nprint(kitchen_items)",
                  "solvedContent": "recommended_camp_gear = {\r\n \"clothes\": (\"Rain jacket\", \"Hiking boots\"),\r\n \"camp_kitchen\": (\"Portable stove\", \"Frying pan\") \r\n}\r\n\r\nkitchen_items = \"camp_kitchen\" in recommended_camp_gear\r\nprint(kitchen_items)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13828,
        "title": "Tuplas, Dicionários, Conjuntos: issubset",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Tuples, Dicts, Sets",
            "id": 123275,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Os profissionais de saúde confiam em nossos dados para verificar se os pacientes estão com gripe!\n\n1. Usando uma variável `patient_has_flu`, verifique se os sintomas do paciente são um subconjunto dos sintomas da gripe.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "patient_symptoms = {\"runny nose\", \"sore throat\", \"fatigue\"}\nflu_symptoms = {\"runny nose\", \"sore throat\", \"fatigue\", \"fever\"}\n\nprint(patient_has_flu)",
                  "solvedContent": "patient_symptoms = {\"runny nose\", \"sore throat\", \"fatigue\"}\r\nflu_symptoms = {\"runny nose\", \"sore throat\", \"fatigue\", \"fever\"}\r\n\r\npatient_has_flu = patient_symptoms.issubset(flu_symptoms)\r\nprint(patient_has_flu)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13829,
        "title": "Tuplas, Dicionários, Conjuntos: Lista",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Tuples, Dicts, Sets: List",
            "id": 123276,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Aqui temos dados para um único caminhante. Vamos garantir que incluímos todos os itens deles no dicionário!\n\n1. Inicialize uma união entre `camp_gear` e `camp_kitchen` em uma variável `combined_items`.\n2. Converta o conjunto `combined_items` recém-criado para uma lista e armazene-o em uma variável `items_as_list`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "camp_gear = {\"tent\", \"trekking poles\"}\ncamp_kitchen = {\"frying pan\", \"fork\"}\n\n\nhiker = {\n \"name\": \"Avery\",\n \"trips\": (\"Colorado\", \"Austria\", \"Sweden\"),\n \"current_trip\": {\n  \"location\": \"Alaska\",\n  \"visited_before\": True,\n  \"gear\": items_as_list\n }\n}\nprint(hiker[\"current_trip\"][\"gear\"])",
                  "solvedContent": "camp_gear = {\"tent\", \"trekking poles\"}\r\ncamp_kitchen = {\"frying pan\", \"fork\"}\r\ncombined_items = camp_gear.union(camp_kitchen)\r\nitems_as_list = list(combined_items)\r\nhiker = {\r\n \"name\": \"Avery\",\r\n \"trips\": (\"Colorado\", \"Austria\", \"Sweden\"),\r\n \"current_trip\": {\r\n  \"location\": \"Alaska\",\r\n  \"visited_before\": True,\r\n  \"gear\": items_as_list\r\n }\r\n}\r\nprint(hiker[\"current_trip\"][\"gear\"])"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}