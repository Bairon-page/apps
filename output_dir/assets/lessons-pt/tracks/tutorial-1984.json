{
  "tutorial": {
    "id": 1984,
    "version": 11,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Operadores Lógicos",
    "descriptionContent": "Aprenda sobre operadores lógicos e como podemos usá-los para conectar mais de uma condição.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12686,
        "title": "O Operador AND",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 115005,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Com operadores lógicos, podemos conectar duas ou mais condições para decidir um resultado.</p><p>Ligue a lâmpada conectando tanto o interruptor quanto a bateria.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt; &#xA;&lt;html lang=&quot;en&quot;&gt; &#xA;  &lt;head&gt; &#xA;    &lt;meta charset=&quot;UTF-8&quot; /&gt; &#xA;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &#xA;    &lt;title&gt;Logical AND Operator&lt;/title&gt; &#xA;    &lt;link &#xA;      rel=&quot;stylesheet&quot; &#xA;      href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css&quot; &#xA;    /&gt; &#xA;    &lt;style&gt; &#xA;      body { &#xA;        font-family: &quot;Poppins&quot;, sans-serif; &#xA;        margin: 20px auto; &#xA;        background-color: #121212; &#xA;        color: #ffffff; &#xA;        max-width: 600px; &#xA;      } &#xA;      .container { &#xA;        text-align: center; &#xA;        background-color: #1e1e1e; &#xA;        color: #ffffff; &#xA;        border-radius: 15px; &#xA;        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5); &#xA;        padding-bottom: 20px; &#xA;        margin: 20px; &#xA;      } &#xA;      #bulb { &#xA;        font-size: 80px; &#xA;        margin: 20px 0; &#xA;      } &#xA;      .controls { &#xA;        display: flex; &#xA;        justify-content: space-around; &#xA;        margin: 20px 0; &#xA;        flex-wrap: wrap; &#xA;        gap: 20px; &#xA;        padding: 0 20px; &#xA;      } &#xA;      .control { &#xA;        display: flex; &#xA;        flex-direction: column; &#xA;        align-items: center; &#xA;      } &#xA;      .control i { &#xA;        font-size: 50px; &#xA;        margin-bottom: 10px; &#xA;        transition: color 0.3s; &#xA;      } &#xA;      .control button { &#xA;        padding: 12px 25px; &#xA;        border: 1px solid #ff9800; &#xA;        border-radius: 5px; &#xA;        cursor: pointer; &#xA;        background-color: #ff9800; &#xA;        color: white; &#xA;        font-size: 16px; &#xA;        transition: &#xA;          background-color 0.3s, &#xA;          color 0.3s; &#xA;      } &#xA;      .control button:hover { &#xA;        background-color: white; &#xA;        color: #ff9800; &#xA;      } &#xA;      .status { &#xA;        margin-top: 20px; &#xA;        font-size: 20px; &#xA;      } &#xA;      .status span { &#xA;        display: block; &#xA;      } &#xA;      .status .yes { &#xA;        color: green; &#xA;      } &#xA;      .status .no { &#xA;        color: red; &#xA;      } &#xA;    &lt;/style&gt; &#xA;  &lt;/head&gt; &#xA;  &lt;body&gt; &#xA;    &lt;div class=&quot;container&quot;&gt; &#xA;      &lt;i id=&quot;bulb&quot; class=&quot;far fa-lightbulb&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;      &lt;div class=&quot;status&quot; id=&quot;bulb-status&quot;&gt;Bulb is off&lt;/div&gt; &#xA;      &lt;div class=&quot;controls&quot;&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;battery&quot; class=&quot;fas fa-battery-half&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;toggleBattery()&quot;&gt;Connect&lt;/button&gt; &#xA;          &lt;div id=&quot;battery-status&quot;&gt; &#xA;            Is battery connected? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;switch&quot; class=&quot;fas fa-power-off&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;toggleSwitch()&quot;&gt;On&lt;/button&gt; &#xA;          &lt;div id=&quot;switch-status&quot;&gt; &#xA;            Is switch on? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA; &#xA;    &lt;script&gt; &#xA;      let batteryConnected = false; &#xA;      let switchOn = false; &#xA; &#xA;      function toggleBattery() { &#xA;        batteryConnected = !batteryConnected; &#xA;        document.getElementById(&quot;battery&quot;).style.color = batteryConnected &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;battery-status&quot;).innerHTML = &#xA;          `Is battery connected? &lt;span class=&quot;${batteryConnected ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${batteryConnected ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;toggleBattery()&quot;]', &#xA;        ).innerText = batteryConnected ? &quot;Disconnect&quot; : &quot;Connect&quot;; &#xA;        updateBulbStatus(); &#xA;      } &#xA; &#xA;      function toggleSwitch() { &#xA;        switchOn = !switchOn; &#xA;        document.getElementById(&quot;switch&quot;).style.color = switchOn &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;switch-status&quot;).innerHTML = &#xA;          `Is switch on? &lt;span class=&quot;${switchOn ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${switchOn ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;toggleSwitch()&quot;]', &#xA;        ).innerText = switchOn ? &quot;Off&quot; : &quot;On&quot;; &#xA;        updateBulbStatus(); &#xA;      } &#xA; &#xA;      function updateBulbStatus() { &#xA;        const bulb = document.getElementById(&quot;bulb&quot;); &#xA;        const bulbStatus = document.getElementById(&quot;bulb-status&quot;); &#xA;        if (batteryConnected &amp;&amp; switchOn) { &#xA;          bulb.classList.replace(&quot;far&quot;, &quot;fas&quot;); &#xA;          bulb.style.color = &quot;#ff9800&quot;; &#xA;          bulbStatus.innerHTML = &quot;Bulb is on&quot;; &#xA;        } else { &#xA;          bulb.classList.replace(&quot;fas&quot;, &quot;far&quot;); &#xA;          bulb.style.color = &quot;gray&quot;; &#xA;          bulbStatus.innerHTML = &quot;Bulb is off&quot;; &#xA;        } &#xA;      } &#xA;    &lt;/script&gt; &#xA;  &lt;/body&gt; &#xA;&lt;/html&gt;\" /></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 115056,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um operador lógico conecta as duas condições para a bateria e o interruptor para decidir se a lâmpada deve ser ligada ou desligada.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt; &#xA;&lt;html lang=&quot;en&quot;&gt; &#xA;  &lt;head&gt; &#xA;    &lt;meta charset=&quot;UTF-8&quot; /&gt; &#xA;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &#xA;    &lt;title&gt;Logical AND Operator&lt;/title&gt; &#xA;    &lt;link &#xA;      rel=&quot;stylesheet&quot; &#xA;      href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css&quot; &#xA;    /&gt; &#xA;    &lt;style&gt; &#xA;      body { &#xA;        font-family: &quot;Poppins&quot;, sans-serif; &#xA;        margin: 20px auto; &#xA;        background-color: #121212; &#xA;        color: #ffffff; &#xA;        max-width: 600px; &#xA;      } &#xA;      .container { &#xA;        text-align: center; &#xA;        background-color: #1e1e1e; &#xA;        color: #ffffff; &#xA;        border-radius: 15px; &#xA;        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5); &#xA;        padding-bottom: 20px; &#xA;        margin: 20px; &#xA;      } &#xA;      #bulb { &#xA;        font-size: 80px; &#xA;        margin: 20px 0; &#xA;      } &#xA;      .controls { &#xA;        display: flex; &#xA;        justify-content: space-around; &#xA;        margin: 20px 0; &#xA;        flex-wrap: wrap; &#xA;        gap: 20px; &#xA;        padding: 0 20px; &#xA;      } &#xA;      .control { &#xA;        display: flex; &#xA;        flex-direction: column; &#xA;        align-items: center; &#xA;      } &#xA;      .control i { &#xA;        font-size: 50px; &#xA;        margin-bottom: 10px; &#xA;        transition: color 0.3s; &#xA;      } &#xA;      .control button { &#xA;        padding: 12px 25px; &#xA;        border: 1px solid #ff9800; &#xA;        border-radius: 5px; &#xA;        cursor: pointer; &#xA;        background-color: #ff9800; &#xA;        color: white; &#xA;        font-size: 16px; &#xA;        transition: &#xA;          background-color 0.3s, &#xA;          color 0.3s; &#xA;      } &#xA;      .control button:hover { &#xA;        background-color: white; &#xA;        color: #ff9800; &#xA;      } &#xA;      .status { &#xA;        margin-top: 20px; &#xA;        font-size: 20px; &#xA;      } &#xA;      .status span { &#xA;        display: block; &#xA;      } &#xA;      .status .yes { &#xA;        color: green; &#xA;      } &#xA;      .status .no { &#xA;        color: red; &#xA;      } &#xA;    &lt;/style&gt; &#xA;  &lt;/head&gt; &#xA;  &lt;body&gt; &#xA;    &lt;div class=&quot;container&quot;&gt; &#xA;      &lt;i id=&quot;bulb&quot; class=&quot;far fa-lightbulb&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;      &lt;div class=&quot;status&quot; id=&quot;bulb-status&quot;&gt;Bulb is off&lt;/div&gt; &#xA;      &lt;div class=&quot;controls&quot;&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;battery&quot; class=&quot;fas fa-battery-half&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;toggleBattery()&quot;&gt;Connect&lt;/button&gt; &#xA;          &lt;div id=&quot;battery-status&quot;&gt; &#xA;            Is battery connected? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;switch&quot; class=&quot;fas fa-power-off&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;toggleSwitch()&quot;&gt;On&lt;/button&gt; &#xA;          &lt;div id=&quot;switch-status&quot;&gt; &#xA;            Is switch on? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA; &#xA;    &lt;script&gt; &#xA;      let batteryConnected = false; &#xA;      let switchOn = false; &#xA; &#xA;      function toggleBattery() { &#xA;        batteryConnected = !batteryConnected; &#xA;        document.getElementById(&quot;battery&quot;).style.color = batteryConnected &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;battery-status&quot;).innerHTML = &#xA;          `Is battery connected? &lt;span class=&quot;${batteryConnected ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${batteryConnected ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;toggleBattery()&quot;]', &#xA;        ).innerText = batteryConnected ? &quot;Disconnect&quot; : &quot;Connect&quot;; &#xA;        updateBulbStatus(); &#xA;      } &#xA; &#xA;      function toggleSwitch() { &#xA;        switchOn = !switchOn; &#xA;        document.getElementById(&quot;switch&quot;).style.color = switchOn &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;switch-status&quot;).innerHTML = &#xA;          `Is switch on? &lt;span class=&quot;${switchOn ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${switchOn ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;toggleSwitch()&quot;]', &#xA;        ).innerText = switchOn ? &quot;Off&quot; : &quot;On&quot;; &#xA;        updateBulbStatus(); &#xA;      } &#xA; &#xA;      function updateBulbStatus() { &#xA;        const bulb = document.getElementById(&quot;bulb&quot;); &#xA;        const bulbStatus = document.getElementById(&quot;bulb-status&quot;); &#xA;        if (batteryConnected &amp;&amp; switchOn) { &#xA;          bulb.classList.replace(&quot;far&quot;, &quot;fas&quot;); &#xA;          bulb.style.color = &quot;#ff9800&quot;; &#xA;          bulbStatus.innerHTML = &quot;Bulb is on&quot;; &#xA;        } else { &#xA;          bulb.classList.replace(&quot;fas&quot;, &quot;far&quot;); &#xA;          bulb.style.color = &quot;gray&quot;; &#xA;          bulbStatus.innerHTML = &quot;Bulb is off&quot;; &#xA;        } &#xA;      } &#xA;    &lt;/script&gt; &#xA;  &lt;/body&gt; &#xA;&lt;/html&gt;\" /></body></html>"
          },
          {
            "title": "AND operator",
            "id": 115013,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O operador <strong>AND</strong><code>&amp;&amp;</code> retorna <code>true</code> somente se todas as condições forem <code>true</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isSwitchOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isBatteryOn &amp;&amp; isSwitchOn);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"73\" endIndex=\"75\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>&amp;&amp;</code>.</p></body></html>"
          },
          {
            "title": "AND operator 2",
            "id": 115057,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O operador <code>&amp;&amp;</code> retornará <code>false</code> se uma ou mais condições forem <code>false</code>. No código, atribua <code>false</code> à variável <code>isSwitchOn</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isSwitchOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isBatteryOn &amp;&amp; isSwitchOn);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"42\" endIndex=\"47\" /></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>false</code>.</p></body></html>"
          },
          {
            "title": "Logical expression",
            "id": 115063,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando operandos e operadores computam juntos um valor booleano, isso forma uma expressão lógica, como <code>isBatteryOn &amp;&amp; isSwitchOn</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isSwitchOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isBatteryOn &amp;&amp; isSwitchOn);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"63\" endIndex=\"74\" /><option startIndex=\"75\" endIndex=\"77\" /><option startIndex=\"78\" endIndex=\"88\" /><option correct=\"false\"><content><text value=\"isWorking\" /></content></option></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>isBatteryOn</code> seguido de <code>&amp;&amp;</code> e finalmente <code>isSwitchOn</code>.</p></body></html>"
          },
          {
            "title": "Logical expression 2",
            "id": 115091,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Você também pode armazenar o resultado de uma expressão lógica em uma variável.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isSwitchOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" result = isBatteryOn &amp;&amp; isSwitchOn; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(result);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"63\" /><option correct=\"false\"><content><text value=\"===\" /></content></option></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>let</code> seguido de <code>result</code> e finalmente <code>=</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 115017,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual operador lógico nos dá <code>true</code> se todas as condições forem <code>true</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>&amp;&amp;</code></item><item value=\"3\" correct=\"false\"><code>!</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>&amp;&amp;</code>.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 115112,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que este código imprime no console?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" condition1 = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" condition2 = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" result = condition1 &amp;&amp; condition2; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(result);\" /></content><output><content><text value=\"false\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>true</code></item><item value=\"3\" correct=\"true\"><code>false</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>false</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 115113,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual das seguintes é uma expressão lógica?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>condition1 &amp;&amp; condition2</code></item><item value=\"3\" correct=\"false\"><code>a + b</code></item></selection><p visible-if=\"wrong\"><code>condition1 &amp;&amp; condition2</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 115114,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que este código exibe no console para a variável <code>result</code>? <code>true</code> ou <code>false</code>? Analise o código passo a passo para descobrir.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" cost = \" /><text value=\"50\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sellPrice = \" /><text value=\"60\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" profit = sellPrice - cost; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(profit); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" result = cost &lt; sellPrice &amp;&amp; profit &gt; \" /><text value=\"0\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;result: &quot;\" class=\"string\" /><text value=\" + result); \" /><text type=\"break\" /></content><output><content><text value=\"10\" /><text type=\"break\" /><text value=\"result: true\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>true</code></item><item value=\"3\" correct=\"false\"><code>false</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>true</code>.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 115044,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verifique se uma carteira de motorista pode ser emitida para uma pessoa. A idade dela deve ser 18 anos ou mais e ela deve passar no teste de direção.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" age = \" /><text value=\"18\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isPass = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" isEligible = age &gt;= \" /><text value=\"18\" class=\"number\" /><text value=\" &amp;&amp; isPass; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isEligible);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"64\" endIndex=\"66\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>&amp;&amp;</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 115115,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verifique se o usuário pode enviar um e-mail. Para isso, o destinatário deve ser válido e o assunto deve estar preenchido.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isRecipientValid = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isSubjectFilled = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" isMailSent = isRecipientValid &amp;&amp; isSubjectFilled; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Mail Sending Successful?: &quot;\" class=\"string\" /><text value=\" + isMailSent);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"96\" endIndex=\"98\" /><option startIndex=\"99\" endIndex=\"114\" /><option correct=\"false\"><content><text value=\"!\" /></content></option></options></interaction></interactions><output><content><text value=\"Mail Sending Successful?: false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>&amp;&amp;</code> seguido de <code>isSubjectFilled</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 115116,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Armazene a expressão lógica em uma variável <code>const</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isRecipientValid = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isSubjectFilled = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" result = isRecipientValid &amp;&amp; isSubjectFilled; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(result);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"60\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"72\" /><option startIndex=\"73\" endIndex=\"74\" /><option correct=\"false\"><content><text value=\"&gt;\" /></content></option></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>const</code> seguido de <code>result</code> e finalmente <code>=</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 115117,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Armazene uma expressão lógica na variável <code>willSiteLoad</code> que verifica se o WiFi está conectado e se a URL é válida para carregar um site.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isWifiConnected = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isURLValid = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" willSiteLoad = isWifiConnected &amp;&amp; isURLValid; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(willSiteLoad);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"90\" endIndex=\"92\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>&amp;&amp;</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 12694,
        "title": "Operadores OR e NOT",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro - OR",
            "id": 115059,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vimos que o operador AND requer que todas as condições sejam verdadeiras. Mas e se for suficiente que apenas uma condição seja verdadeira?</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt; &#xA;&lt;html lang=&quot;en&quot;&gt; &#xA;  &lt;head&gt; &#xA;    &lt;meta charset=&quot;UTF-8&quot; /&gt; &#xA;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &#xA;    &lt;title&gt;Control Fan&lt;/title&gt; &#xA;    &lt;link &#xA;      rel=&quot;stylesheet&quot; &#xA;      href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css&quot; &#xA;    /&gt; &#xA;    &lt;style&gt; &#xA;      body { &#xA;        font-family: &quot;Poppins&quot;, sans-serif; &#xA;        margin: 20px auto; &#xA;        background-color: #121212; &#xA;        color: #ffffff; &#xA;        max-width: 600px; &#xA;      } &#xA;      .container { &#xA;        text-align: center; &#xA;        background-color: #1e1e1e; &#xA;        color: #ffffff; &#xA;        border-radius: 15px; &#xA;        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5); &#xA;        padding-bottom: 20px; &#xA;        margin: 20px; &#xA;      } &#xA;      #fan { &#xA;        font-size: 80px; &#xA;        margin: 20px 0; &#xA;      } &#xA;      .controls { &#xA;        display: flex; &#xA;        justify-content: space-around; &#xA;        margin: 20px 0; &#xA;        flex-wrap: wrap; &#xA;        gap: 20px; &#xA;        padding: 0 20px; &#xA;      } &#xA;      .control { &#xA;        display: flex; &#xA;        flex-direction: column; &#xA;        align-items: center; &#xA;      } &#xA;      #battery, #power { &#xA;        font-size: 40px; &#xA;        margin-bottom: 10px; &#xA;        transition: color 0.3s; &#xA;      } &#xA;      .control button { &#xA;        padding: 12px 25px; &#xA;        border: 1px solid #ff9800; &#xA;        border-radius: 5px; &#xA;        cursor: pointer; &#xA;        background-color: #ff9800; &#xA;        color: white; &#xA;        font-size: 16px; &#xA;        transition: &#xA;          background-color 0.3s, &#xA;          color 0.3s; &#xA;      } &#xA;      .control button:hover { &#xA;        background-color: white; &#xA;        color: #ff9800; &#xA;      } &#xA;      .status { &#xA;        margin-top: 20px; &#xA;        font-size: 20px; &#xA;      } &#xA;      .status span { &#xA;        display: block; &#xA;      } &#xA;      .status .yes { &#xA;        color: green; &#xA;      } &#xA;      .status .no { &#xA;        color: red; &#xA;      } &#xA;    &lt;/style&gt; &#xA;  &lt;/head&gt; &#xA;  &lt;body&gt; &#xA;    &lt;div class=&quot;container&quot;&gt; &#xA;      &lt;i id=&quot;fan&quot; class=&quot;fas fa-fan&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;      &lt;div class=&quot;status&quot; id=&quot;fan-status&quot;&gt;Fan is off&lt;/div&gt; &#xA;      &lt;div class=&quot;controls&quot;&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;battery&quot; class=&quot;fas fa-battery-half&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;toggleBattery()&quot;&gt;Connect Battery&lt;/button&gt; &#xA;          &lt;div id=&quot;battery-status&quot;&gt; &#xA;            Is battery connected? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;power&quot; class=&quot;fas fa-plug&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;togglePower()&quot;&gt;Connect Power&lt;/button&gt; &#xA;          &lt;div id=&quot;power-status&quot;&gt; &#xA;            Is power connected? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA; &#xA;    &lt;script&gt; &#xA;      let batteryConnected = false; &#xA;      let powerConnected = false; &#xA; &#xA;      function toggleBattery() { &#xA;        batteryConnected = !batteryConnected; &#xA;        document.getElementById(&quot;battery&quot;).style.color = batteryConnected &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;battery-status&quot;).innerHTML = &#xA;          `Is battery connected? &lt;span class=&quot;${batteryConnected ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${batteryConnected ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;toggleBattery()&quot;]', &#xA;        ).innerText = batteryConnected ? &quot;Disconnect Battery&quot; : &quot;Connect Battery&quot;; &#xA;        updateFanStatus(); &#xA;      } &#xA; &#xA;      function togglePower() { &#xA;        powerConnected = !powerConnected; &#xA;        document.getElementById(&quot;power&quot;).style.color = powerConnected &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;power-status&quot;).innerHTML = &#xA;          `Is power connected? &lt;span class=&quot;${powerConnected ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${powerConnected ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;togglePower()&quot;]', &#xA;        ).innerText = powerConnected ? &quot;Disconnect Power&quot; : &quot;Connect Power&quot;; &#xA;        updateFanStatus(); &#xA;      } &#xA; &#xA;      function updateFanStatus() { &#xA;        const fan = document.getElementById(&quot;fan&quot;); &#xA;        const fanStatus = document.getElementById(&quot;fan-status&quot;); &#xA; &#xA;        if (batteryConnected || powerConnected) { &#xA;          fan.style.color = &quot;#ff9800&quot;; &#xA;          fanStatus.innerHTML = &quot;Fan is on&quot;; &#xA;        } else { &#xA;          fan.style.color = &quot;gray&quot;; &#xA;          fanStatus.innerHTML = &quot;Fan is off&quot;; &#xA;        } &#xA;      } &#xA;    &lt;/script&gt; &#xA;  &lt;/body&gt; &#xA;&lt;/html&gt;\" /></body></html>"
          },
          {
            "title": "Intro - OR 2",
            "id": 115060,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Por exemplo, o ventilador aqui liga se a bateria estiver conectada <em>ou</em> a energia estiver conectada.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt; &#xA;&lt;html lang=&quot;en&quot;&gt; &#xA;  &lt;head&gt; &#xA;    &lt;meta charset=&quot;UTF-8&quot; /&gt; &#xA;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &#xA;    &lt;title&gt;Control Fan&lt;/title&gt; &#xA;    &lt;link &#xA;      rel=&quot;stylesheet&quot; &#xA;      href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css&quot; &#xA;    /&gt; &#xA;    &lt;style&gt; &#xA;      body { &#xA;        font-family: &quot;Poppins&quot;, sans-serif; &#xA;        margin: 20px auto; &#xA;        background-color: #121212; &#xA;        color: #ffffff; &#xA;        max-width: 600px; &#xA;      } &#xA;      .container { &#xA;        text-align: center; &#xA;        background-color: #1e1e1e; &#xA;        color: #ffffff; &#xA;        border-radius: 15px; &#xA;        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5); &#xA;        padding-bottom: 20px; &#xA;        margin: 20px; &#xA;      } &#xA;      #fan { &#xA;        font-size: 80px; &#xA;        margin: 20px 0; &#xA;      } &#xA;      .controls { &#xA;        display: flex; &#xA;        justify-content: space-around; &#xA;        margin: 20px 0; &#xA;        flex-wrap: wrap; &#xA;        gap: 20px; &#xA;        padding: 0 20px; &#xA;      } &#xA;      .control { &#xA;        display: flex; &#xA;        flex-direction: column; &#xA;        align-items: center; &#xA;      } &#xA;      #battery, #power { &#xA;        font-size: 40px; &#xA;        margin-bottom: 10px; &#xA;        transition: color 0.3s; &#xA;      } &#xA;      .control button { &#xA;        padding: 12px 25px; &#xA;        border: 1px solid #ff9800; &#xA;        border-radius: 5px; &#xA;        cursor: pointer; &#xA;        background-color: #ff9800; &#xA;        color: white; &#xA;        font-size: 16px; &#xA;        transition: &#xA;          background-color 0.3s, &#xA;          color 0.3s; &#xA;      } &#xA;      .control button:hover { &#xA;        background-color: white; &#xA;        color: #ff9800; &#xA;      } &#xA;      .status { &#xA;        margin-top: 20px; &#xA;        font-size: 20px; &#xA;      } &#xA;      .status span { &#xA;        display: block; &#xA;      } &#xA;      .status .yes { &#xA;        color: green; &#xA;      } &#xA;      .status .no { &#xA;        color: red; &#xA;      } &#xA;    &lt;/style&gt; &#xA;  &lt;/head&gt; &#xA;  &lt;body&gt; &#xA;    &lt;div class=&quot;container&quot;&gt; &#xA;      &lt;i id=&quot;fan&quot; class=&quot;fas fa-fan&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;      &lt;div class=&quot;status&quot; id=&quot;fan-status&quot;&gt;Fan is off&lt;/div&gt; &#xA;      &lt;div class=&quot;controls&quot;&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;battery&quot; class=&quot;fas fa-battery-half&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;toggleBattery()&quot;&gt;Connect Battery&lt;/button&gt; &#xA;          &lt;div id=&quot;battery-status&quot;&gt; &#xA;            Is battery connected? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;        &lt;div class=&quot;control&quot;&gt; &#xA;          &lt;i id=&quot;power&quot; class=&quot;fas fa-plug&quot; style=&quot;color: gray&quot;&gt;&lt;/i&gt; &#xA;          &lt;button onclick=&quot;togglePower()&quot;&gt;Connect Power&lt;/button&gt; &#xA;          &lt;div id=&quot;power-status&quot;&gt; &#xA;            Is power connected? &lt;span class=&quot;no&quot;&gt;No.&lt;/span&gt; &#xA;          &lt;/div&gt; &#xA;        &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA; &#xA;    &lt;script&gt; &#xA;      let batteryConnected = false; &#xA;      let powerConnected = false; &#xA; &#xA;      function toggleBattery() { &#xA;        batteryConnected = !batteryConnected; &#xA;        document.getElementById(&quot;battery&quot;).style.color = batteryConnected &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;battery-status&quot;).innerHTML = &#xA;          `Is battery connected? &lt;span class=&quot;${batteryConnected ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${batteryConnected ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;toggleBattery()&quot;]', &#xA;        ).innerText = batteryConnected ? &quot;Disconnect Battery&quot; : &quot;Connect Battery&quot;; &#xA;        updateFanStatus(); &#xA;      } &#xA; &#xA;      function togglePower() { &#xA;        powerConnected = !powerConnected; &#xA;        document.getElementById(&quot;power&quot;).style.color = powerConnected &#xA;          ? &quot;#66bb6a&quot; &#xA;          : &quot;gray&quot;; &#xA;        document.getElementById(&quot;power-status&quot;).innerHTML = &#xA;          `Is power connected? &lt;span class=&quot;${powerConnected ? &quot;yes&quot; : &quot;no&quot;}&quot;&gt;${powerConnected ? &quot;Yes.&quot; : &quot;No.&quot;}&lt;/span&gt;`; &#xA;        document.querySelector( &#xA;          '.control button[onclick=&quot;togglePower()&quot;]', &#xA;        ).innerText = powerConnected ? &quot;Disconnect Power&quot; : &quot;Connect Power&quot;; &#xA;        updateFanStatus(); &#xA;      } &#xA; &#xA;      function updateFanStatus() { &#xA;        const fan = document.getElementById(&quot;fan&quot;); &#xA;        const fanStatus = document.getElementById(&quot;fan-status&quot;); &#xA; &#xA;        if (batteryConnected || powerConnected) { &#xA;          fan.style.color = &quot;#ff9800&quot;; &#xA;          fanStatus.innerHTML = &quot;Fan is on&quot;; &#xA;        } else { &#xA;          fan.style.color = &quot;gray&quot;; &#xA;          fanStatus.innerHTML = &quot;Fan is off&quot;; &#xA;        } &#xA;      } &#xA;    &lt;/script&gt; &#xA;  &lt;/body&gt; &#xA;&lt;/html&gt;\" /></body></html>"
          },
          {
            "title": "OR operator",
            "id": 115014,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para tais condições, usamos o operador <strong>OR</strong><code>||</code>, que retorna <code>true</code> desde que pelo menos uma das condições seja <code>true</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isPowerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isBatteryOn || isPowerOn);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"73\" endIndex=\"75\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>||</code>.</p></body></html>"
          },
          {
            "title": "OR operator 2",
            "id": 115061,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Se todas as condições forem <code>false</code>, então o operador <code>||</code> retorna <code>false</code>. Defina a variável <code>isPowerOn</code> como <code>false</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isPowerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isBatteryOn || isPowerOn);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"42\" endIndex=\"47\" /></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>false</code>.</p></body></html>"
          },
          {
            "title": "NOT operator",
            "id": 115015,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sabemos que o operador <strong>NOT</strong><code>!</code> nega um valor booleano. Isso significa que ele retorna <code>true</code> se uma condição for <code>false</code> e vice-versa.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBulbOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(!isBulbOn);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"34\" endIndex=\"35\" /></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>!</code>.</p></body></html>"
          },
          {
            "title": "NOT operator 2",
            "id": 115062,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos usar <code>!</code> para negar expressões lógicas também. Para fazer isso, colocamos a expressão lógica entre parênteses.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isPowerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(!(isBatteryOn &amp;&amp; isPowerOn));\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"89\" endIndex=\"90\" /><option correct=\"false\"><content><text value=\"|\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>!</code> seguido de <code>(</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "NOT operator 3",
            "id": 115064,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A expressão lógica retorna <code>false</code>, mas ao negá-la, obtemos <code>true</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isBatteryOn = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isPowerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isBatteryOn &amp;&amp; isPowerOn); \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(!(isBatteryOn &amp;&amp; isPowerOn));\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"101\" endIndex=\"102\" /></interactions><output><content><text value=\"false\" /><text type=\"break\" /><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>!</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 115118,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual operador lógico retorna <code>true</code> se pelo menos uma das condições for <code>true</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>&amp;&amp;</code></item><item value=\"2\" correct=\"true\"><code>||</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>||</code>.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 115018,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que este código exibe no console?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" condition1 = \" /><text value=\"5\" class=\"number\" /><text value=\" &gt;= \" /><text value=\"6\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" condition2 = \" /><text value=\"9\" class=\"number\" /><text value=\" === \" /><text value=\"10\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(condition1 || condition2);\" /></content><output><content><text value=\"false\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">true</item><item value=\"2\" correct=\"true\">false</item></selection><p visible-if=\"wrong\">Certifique-se de escolher false.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 115019,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual operador usamos para reverter o resultado de uma expressão lógica?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\"><code>&amp;&amp;</code></item><item value=\"2\" correct=\"true\"><code>!</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>!</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 115119,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual dos seguintes trechos de código nega a expressão lógica?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>!(condition1 &amp;&amp; condition2)</code></item><item value=\"2\" correct=\"false\"><code>!condition1 &amp;&amp; condition2</code></item></selection><p visible-if=\"wrong\"><code>!(condition1 &amp;&amp; condition2)</code>.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 115020,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que este código exibe no console?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" condition1 = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" condition2 = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logicalExpression = condition1 || condition2; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(!logicalExpression || logicalExpression);\" /></content><output><content><text value=\"true\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>true</code></item><item value=\"2\" correct=\"false\"><code>false</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>true</code>.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 115120,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verifique se uma pessoa pode comprar um carro dependendo de se o empréstimo dela é aprovado <em>ou</em> se a quantidade de dinheiro que ela tem é maior que o custo do carro.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isLoanApproved = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" cash = \" /><text value=\"30000\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" cost = \" /><text value=\"40000\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" isCarBought = isLoanApproved || (cash &gt; cost); \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isCarBought);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"103\" /><option startIndex=\"110\" endIndex=\"111\" /><option correct=\"false\"><content><text value=\"&amp;&amp;\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>||</code> seguido de <code>&gt;</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 115045,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Salve o oposto de <code>isLoanRejected</code> na variável.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isLoanRejected = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" isLoanGranted = !isLoanRejected; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isLoanGranted);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"51\" endIndex=\"52\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>!</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 115046,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verifique se uma pessoa pode comprar um carro ou não.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" loanRejected = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" cash = \" /><text value=\"30000\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" cost = \" /><text value=\"40000\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insufficientFunds = cash &lt; cost; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" canBuyCar = !(loanRejected &amp;&amp; insufficientFunds); \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(canBuyCar);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"121\" endIndex=\"122\" /></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>=</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 115047,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use os operadores <code>||</code> e <code>!</code> para determinar se um usuário pode postar, verificando se algum anexo foi adicionado <em>ou</em> se o campo de texto <em>não</em> está vazio.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isTextEmpty = \" /><text value=\"true\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isAttachment = \" /><text value=\"false\" class=\"literal\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" isPosted = isAttachment || !isTextEmpty; \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isPosted);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"84\" /><option startIndex=\"85\" endIndex=\"86\" /><option correct=\"false\"><content><text value=\"&amp;&amp;\" /></content></option></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>||</code> seguido de <code>!</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 115121,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Salve um arquivo se o armazenamento em nuvem for maior que o tamanho do arquivo <em>ou</em> o armazenamento do sistema for maior que o tamanho do arquivo.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" cloudStorage = \" /><text value=\"4\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" systemStorage = \" /><text value=\"8\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fileSize = \" /><text value=\"5\" class=\"number\" /><text value=\"; \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" result = (cloudStorage &gt; fileSize) || (systemStorage &gt; \" /><text type=\"break\" /><text value=\"fileSize); \" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Saved? : &quot;\" class=\"string\" /><text value=\" + result);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"96\" /><option startIndex=\"107\" endIndex=\"109\" /><option correct=\"false\"><content><text value=\"&amp;&amp;\" /></content></option></options></interaction></interactions><output><content><text value=\"Saved? : true\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>&gt;</code> seguido de <code>||</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}