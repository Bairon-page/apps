{
  "tutorial": {
    "id": 2659,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Pedra, Papel, Tesoura - Parte 1",
    "descriptionContent": "Construa seu próprio jogo! Vamos preparar o cenário nesta primeira parte criando a lógica básica do jogo. Vamos deixar o jogador e o computador escolherem uma opção e determinar o vencedor.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2659-icon-banner.svg",
    "chapters": [
      {
        "id": 14633,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129425,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bem-vindo ao projeto **Pedra, Papel, Tesoura**, onde vamos construir um jogo de pedra, papel, tesoura.\n\n1. Comece usando a função `print` para exibir uma mensagem. Dentro dos parênteses da função `print`, insira uma string como `\"Vamos jogar pedra, papel ou tesoura\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129426,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Peça ao jogador para fazer sua escolha. Para capturar a entrada do usuário, use a função `input` e armazene a entrada do usuário em uma variável.\n\n1. Declare uma variável `player_choice` para capturar a entrada do jogador e salvá-la na variável. Dentro dos parênteses da função `input`, inclua um prompt apropriado sobre escolher pedra, papel ou tesoura.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 129432,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para verificar o que o usuário escolheu, queremos transformar a escolha em uma string minúscula. Assim, não importa se o usuário digita `Rock` ou `rock`, ou até mesmo `ROCK`, podemos reconhecê-la corretamente.\n\n1. Adicione `.lower()` no final da função `input` para converter a string de entrada para minúsculas. Deve ficar como o seguinte trecho de código:\n   ```Python\n   player_choice = input(\"Choose rock, paper, or scissors: \").lower()\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129427,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos configurar a escolha do computador.\n\n1. No topo do arquivo, adicione `import random` para nos permitir usar uma função especial do Python.\n2. Declare uma variável `choices` e atribua a ela uma lista contendo `[\"rock\", \"paper\", \"scissors\"]`. Em breve aprenderemos mais sobre listas. Por enquanto, saiba apenas que é uma coleção de valores.\n3. Declare uma variável `computer_choice`. Atribua à nova variável o resultado de `random.choice(choices)`, que escolhe uma opção aleatória da lista:\n   ```Python\n   computer_choice = random.choice(choices)\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129428,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "O jogador escolheu, o computador escolheu, e agora vamos revelar a escolha do computador.\n\n1. Use a função `print` para exibir uma f-string para imprimir `\"Computer chose: \"` e, em seguida, o valor de `computer_choice`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129429,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, vamos determinar quem é o vencedor. Precisamos de uma combinação de declarações `if`, `elif` e `else` para comparar o `player_choice` e o `computer_choice`.\n\n1. Escreva uma declaração `if` que verifica se a escolha do jogador vence a escolha do computador:\n   ```\n   if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n   ```\n2. Use `elif` para verificar o caso de empate quando a escolha do jogador é igual à escolha do computador.\n3. Finalmente, adicione uma declaração `else`.\n4. Em cada caso, defina uma variável `winner` para a string \"Player\", \"Tie\" ou \"Computer\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, imprima uma mensagem com base em quem vence.\n\n1. Escreva uma declaração `if` que verifica se `winner` é igual a `\"Player\"`.\n2. Se for verdadeiro, imprima `\"You won\"`.\n3. Escreva uma declaração `elif` que verifica se `winner` é igual a `\"Computer\"`.\n4. Se for verdadeiro, imprima `\"Computer won\"`.\n5. Escreva uma cláusula `else` que imprime `\"It's a tie\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}