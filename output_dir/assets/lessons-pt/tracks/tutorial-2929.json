{
  "tutorial": {
    "id": 2929,
    "version": 2,
    "type": "practiceRequired",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Estruturando Endpoints",
    "descriptionContent": "Estruturando Endpoints",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13777,
        "title": "Estruturando Endpoints",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Question #1",
            "id": 120354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando uma solicitação HTTP falha, qual é uma coisa que sempre queremos fazer?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Enviar uma mensagem de erro para o usuário</item><item value=\"2\" correct=\"false\">Defina o código de status para <code>200</code></item><item value=\"3\" correct=\"false\">Envie a solicitação para outro servidor</item></selection><p visible-if=\"wrong\">Enviar uma mensagem de erro para o usuário.</p></body></html>"
          },
          {
            "title": "Example #2",
            "id": 120359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete a solicitação <code>GET</code> para salvar as informações enviadas pelo cliente.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/books/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { title } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM books WHERE title = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedBook = db.prepare(sql).get(title);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedBook) {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested book&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"book\" class=\"attr\" /><text value=\": requestedBook\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"61\" endIndex=\"71\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>req.params</code>.</p></body></html>"
          },
          {
            "title": "Question #4",
            "id": 120357,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que código usamos nesta solicitação <code>GET</code> para definir o código de status HTTP?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/books/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { title } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM books WHERE title = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedBook = db.prepare(sql).get(title);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedBook) {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested book&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"book\" class=\"attr\" /><text value=\": requestedBook\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.status</code></item><item value=\"2\" correct=\"false\"><code>.json</code></item><item value=\"3\" correct=\"false\"><code>req.params</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>res.status</code>.</p></body></html>"
          },
          {
            "title": "Example #4",
            "id": 120361,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete o código para definir um código de erro <code>404</code> no objeto de resposta.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/books/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { title } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM books WHERE title = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedBook = db.prepare(sql).get(title);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedBook) {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested book&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"      \" /><text value=\"book\" class=\"attr\" /><text value=\": requestedBook\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"210\" endIndex=\"222\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>.status(404)</code>.</p></body></html>"
          },
          {
            "title": "Question: SQL Database Connection",
            "id": 120848,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como preparamos uma instrução SQL que está salva na variável <code>sql</code>, dado que nossa conexão com o banco de dados está armazenada na variável <code>db</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>db.prepare(sql)</code></item><item value=\"2\" correct=\"false\"><code>db.execute(sql)</code></item><item value=\"3\" correct=\"false\"><code>db.query(sql)</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>db.prepare(sql)</code>.</p></body></html>"
          },
          {
            "title": "Question: Response",
            "id": 120935,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que informações um endpoint <code>POST</code> deve incluir em sua resposta?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um código de status e uma confirmação de que os dados foram adicionados</item><item value=\"2\" correct=\"false\">Um código de status e apenas a nova entrada de dados</item><item value=\"3\" correct=\"false\">Apenas um código de status</item></selection><p visible-if=\"wrong\">Um código de status e uma confirmação de que os dados foram adicionados.</p></body></html>"
          },
          {
            "title": "Example: Endpoint Path",
            "id": 120849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Escolha o endpoint correto.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/flights&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM flights&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" flights = db.prepare(sql).all();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"flights\" class=\"attr\" /><text value=\": flights\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"&quot;/flights/:number&quot;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"/flights\"</code>.</p></body></html>"
          },
          {
            "title": "Question #2",
            "id": 120355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que o código Express faz quando um usuário solicita um membro que não existe?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/members/:name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" { name } = req.params;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;SELECT * FROM members WHERE name = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestedMember = db.prepare(sql).get(name);\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!requestedMember) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"   \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Can't find requested member&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"   \" /><text value=\"member\" class=\"attr\" /><text value=\": requestedMember\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Envia ao cliente uma mensagem de erro</item><item value=\"2\" correct=\"false\">Ocorre um erro e o cliente não recebe nenhuma informação</item><item value=\"3\" correct=\"false\">O servidor solicita informações adicionais</item></selection><p visible-if=\"wrong\">Envia ao cliente uma mensagem de erro.</p></body></html>"
          },
          {
            "title": "Question: SQL & PUT & DELETE",
            "id": 120994,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual tipo de declaração SQL está associada a um endpoint PUT?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">ATUALIZAÇÃO</item><item value=\"2\" correct=\"false\">DELETE</item><item value=\"3\" correct=\"false\">DROP</item></selection><p visible-if=\"wrong\">Certifique-se de escolher ATUALIZAÇÃO.</p></body></html>"
          },
          {
            "title": "Example: DELETE II",
            "id": 120998,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete a sintaxe do <code>response</code> para o endpoint <code>DELETE</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.delete(\" /><text value=\"&quot;/flights/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { id } = req.params;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" sql = \" /><text value=\"&quot;DELETE FROM flights WHERE id = ?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" result = db.prepare(sql).run(id);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (result.changes &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"     \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Flight deleted successfully&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"     \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Flight not found&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"    });\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"197\" endIndex=\"200\" /><option startIndex=\"200\" endIndex=\"201\" /><option startIndex=\"201\" endIndex=\"207\" /><option startIndex=\"207\" endIndex=\"208\" /><option startIndex=\"208\" endIndex=\"211\" /><option startIndex=\"211\" endIndex=\"212\" /><option correct=\"false\"><content><text value=\"201\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>res</code> seguido de <code>.</code> e depois <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}