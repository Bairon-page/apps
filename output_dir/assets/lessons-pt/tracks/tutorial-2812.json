{
  "tutorial": {
    "id": 2812,
    "version": 3,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Funções, Classes e Enums",
    "descriptionContent": "Pratique o que você aprendeu até agora",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14850,
        "title": "Funções, Classes e Enums",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 131122,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete a função TypeScript.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"addNumbers\" class=\"title\" /><text value=\"(\" /><text value=\"num1: \" /><text value=\"number\" class=\"built_in\" /><text value=\", num2: \" /><text value=\"number\" class=\"built_in\" /><text value=\"): \" /><text value=\"number\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" num1 + num2;\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(addNumbers(\" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"10\" class=\"number\" /><text value=\"));\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"33\" /><option startIndex=\"34\" endIndex=\"46\" /><option startIndex=\"49\" endIndex=\"55\" /><option correct=\"false\"><content><text value=\"string\" /></content></option><option correct=\"false\"><content><text value=\"boolean\" /></content></option></options></interaction></interactions><output><content><text value=\"15\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>num1: number,</code> seguido de <code>num2: number</code> e finalmente <code>number</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 131141,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como você declara um tipo de função que recebe um número e retorna uma string?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>(input: number) =&gt; string</code></item><item value=\"2\" correct=\"false\"><code>(input: string) =&gt; number</code></item><item value=\"3\" correct=\"false\"><code>(input: number[]) =&gt; string</code></item><item value=\"4\" correct=\"false\"><code>(input: number) =&gt; string[]</code></item></selection><p visible-if=\"wrong\"><code>(input: number) =&gt; string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 131123,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Preencha as lacunas para fazer o código funcionar como esperado.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"private\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\", \" /><text value=\"private\" class=\"keyword\" /><text value=\" age: \" /><text value=\"number\" class=\"built_in\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"12\" /><option startIndex=\"42\" endIndex=\"48\" /><option startIndex=\"58\" endIndex=\"61\" /><option correct=\"false\"><content><text value=\"number\" /></content></option><option correct=\"false\"><content><text value=\"boolean\" /></content></option><option correct=\"false\"><content><text value=\"name\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Person</code> seguido de <code>string</code> e finalmente <code>age</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131142,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que é uma assinatura de função?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Os parâmetros e o tipo de retorno de uma função<br /></item><item value=\"2\" correct=\"false\">O nome de uma função<br /></item><item value=\"3\" correct=\"false\">O código dentro de uma função<br /></item><item value=\"4\" correct=\"false\">As variáveis usadas em uma função</item></selection><p visible-if=\"wrong\">Os parâmetros e o tipo de retorno de uma função<br />.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 131124,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Defina o enum para que o primeiro valor seja <code>1</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"enum\" class=\"keyword\" /><text value=\" Color {\" /><text type=\"break\" /><text value=\" Red = \" /><text value=\"1\" class=\"number\" /><text value=\",\" /><text type=\"break\" /><text value=\" Green,\" /><text type=\"break\" /><text value=\" Blue\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(Color.Red);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"17\" /><option startIndex=\"18\" endIndex=\"19\" /><option startIndex=\"20\" endIndex=\"21\" /><option correct=\"false\"><content><text value=\"0\" /></content></option><option correct=\"false\"><content><text value=\"2\" /></content></option><option correct=\"false\"><content><text value=\"3\" /></content></option></options></interaction></interactions><output><content><text value=\"1\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Red</code> seguido de <code>=</code> e finalmente <code>1</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 131143,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como você acessa o valor de <code>Green</code> no seguinte enum?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"enum\" class=\"keyword\" /><text value=\" Colors {\" /><text type=\"break\" /><text value=\"  Red = \" /><text value=\"1\" class=\"number\" /><text value=\",\" /><text type=\"break\" /><text value=\"  Green,\" /><text type=\"break\" /><text value=\"  Blue\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Colors.Green</code></item><item value=\"2\" correct=\"false\"><code>Colors[1]</code></item><item value=\"3\" correct=\"false\"><code>Colors[\"Green\"]</code></item><item value=\"4\" correct=\"false\"><code>Green.Colors</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>Colors.Green</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131130,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use valores booleanos para o enum <code>Status</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"enum\" class=\"keyword\" /><text value=\" Status {\" /><text type=\"break\" /><text value=\" Available = \" /><text value=\"true\" class=\"literal\" /><text value=\",\" /><text type=\"break\" /><text value=\" OutOfStocks = \" /><text value=\"false\" class=\"literal\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"31\" /><option startIndex=\"48\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\"1\" /></content></option><option correct=\"false\"><content><text value=\"0\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>true</code> seguido de <code>false</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 131132,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique da maneira correta para usar a classe <code>Car</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Car {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"private\" class=\"keyword\" /><text value=\" brand: \" /><text value=\"string\" class=\"built_in\" /><text value=\", \" /><text value=\"private\" class=\"keyword\" /><text value=\" year: \" /><text value=\"number\" class=\"built_in\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myCar = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Car(\" /><text value=\"&quot;Toyota&quot;\" class=\"string\" /><text value=\", \" /><text value=\"2024\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"98\" endIndex=\"106\" /><option startIndex=\"108\" endIndex=\"112\" /><option correct=\"false\"><content><text value=\"true\" /></content></option><option correct=\"false\"><content><text value=\"false\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"Toyota\"</code> seguido de <code>2024</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 131145,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Você pode instanciar uma classe abstrata diretamente em TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Não, você não pode instanciar uma classe abstrata diretamente em TypeScript</item><item value=\"2\" correct=\"false\">Sim, você pode instanciar uma classe abstrata diretamente em TypeScript</item><item value=\"3\" correct=\"false\">Somente se a classe abstrata não tiver métodos abstratos</item><item value=\"4\" correct=\"false\">Sim, mas apenas dentro do mesmo módulo</item></selection><p visible-if=\"wrong\">Não, você não pode instanciar uma classe abstrata diretamente em TypeScript.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 131133,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos usar o enum <code>Days</code> e nos referir à segunda-feira.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"enum\" class=\"keyword\" /><text value=\" Days {\" /><text type=\"break\" /><text value=\" Monday,\" /><text type=\"break\" /><text value=\" Tuesday,\" /><text type=\"break\" /><text value=\" Wednesday,\" /><text type=\"break\" /><text value=\" Thursday,\" /><text type=\"break\" /><text value=\" Friday,\" /><text type=\"break\" /><text value=\" Saturday,\" /><text type=\"break\" /><text value=\" Sunday\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(Days.Monday);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"102\" endIndex=\"108\" /><option correct=\"false\"><content><text value=\"1\" /></content></option><option correct=\"false\"><content><text value=\"0\" /></content></option></options></interaction></interactions><output><content><text value=\"0\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Monday</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 131147,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual modificador de acesso deve ser usado para tornar uma propriedade imutável após ser inicializada?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">readonly</item><item value=\"2\" correct=\"false\">protegido</item><item value=\"3\" correct=\"false\">privado</item><item value=\"4\" correct=\"false\">público</item></selection><p visible-if=\"wrong\">Certifique-se de escolher readonly.</p></body></html>"
          }
        ]
      }
    ]
  }
}