{
  "tutorial": {
    "id": 1431,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Encapsulando Objetos",
    "descriptionContent": "Aprenda a identificar código OOP e a pensar como um desenvolvedor criando objetos encapsulados",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10318,
        "title": "Introdução à OOP",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 92845,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos aprender sobre diferentes estilos de codificação usados por desenvolvedores. Vamos explorar <strong>programação funcional</strong> e <strong>programação orientada a objetos</strong>.</p></body></html>"
          },
          {
            "title": "FP vs OOP",
            "id": 92841,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Diferentes estilos de codificação também são conhecidos como <strong>paradigmas</strong>. Um estilo comum é chamado de <strong>programação funcional</strong>, ou FP para abreviar.</p><p>Na programação funcional, usamos muitas funções e variáveis.</p><code version=\"2\" codelang=\"python\" name=\"fp.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getTotal\" class=\"title\" /><text value=\"(a, b)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + b\" /><text type=\"break\" /><text type=\"break\" /><text value=\"num1 = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"num2 = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"total = getTotal(num1, num2)\" /><text type=\"break\" /><text value=\"print(total)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"12\" /></options></interaction></interactions><output><content><text value=\"5\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>def</code> seguido de <code>getTotal</code>.</p></body></html>"
          },
          {
            "title": "FP 1",
            "id": 92840,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>No estilo FP, mantemos dados e funcionalidades separados. Passamos dados para funções sempre que queremos algo.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"distance = getDistance(mph, h)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"85\" /><option startIndex=\"88\" endIndex=\"89\" /><option startIndex=\"81\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>(</code> seguido de <code>mph</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "FP 2",
            "id": 92839,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Na programação funcional, as funções <strong>retornam</strong> novos valores e depois usam esses valores em outro lugar no código.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"distance = getDistance(mph, h)\" /><text type=\"break\" /><text value=\"print(distance)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"33\" /><option startIndex=\"96\" endIndex=\"104\" /></options></interaction></interactions><output><content><text value=\"120\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>return</code> seguido de <code>distance</code>.</p></body></html>"
          },
          {
            "title": "OOP 1",
            "id": 92838,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>No <strong>programação orientada a objetos (OOP)</strong>, agrupamos dados e funcionalidades como propriedades e métodos dentro de objetos, como <code>Virtual_Pet</code> aqui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;brown&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;rocky&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(rocky.name)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"144\" endIndex=\"149\" /><option startIndex=\"169\" endIndex=\"173\" /></options></interaction></interactions><output><content><text value=\"brown\" /><text type=\"break\" /><text value=\"rocky\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>rocky</code> seguido de <code>name</code>.</p></body></html>"
          },
          {
            "title": "OOP 2",
            "id": 92833,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>OOP é útil para modelar objetos, sejam eles da vida real ou não. Objetos têm propriedades e métodos que tratamos como uma coisa só, como o <code>car</code> aqui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  mileage = \" /><text value=\"12000\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self, miles)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.mileage += miles\" /><text type=\"break\" /><text type=\"break\" /><text value=\"tesla = Car()\" /><text type=\"break\" /><text value=\"tesla.drive(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(tesla.mileage)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"9\" /></options></interaction></interactions><output><content><text value=\"12100\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>class</code> seguido de <code>Car</code>.</p></body></html>"
          },
          {
            "title": "OOP 3",
            "id": 92836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em POO, usamos métodos para <strong>atualizar</strong> valores existentes de um objeto, como aqui onde usamos <code>eat()</code> para atualizar o valor de <code>hungry</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"62\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"65\" endIndex=\"70\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self</code> seguido de <code>.</code> e depois <code>hungry</code>, <code>=</code>, <code>False</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 92832,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que é programação orientada a objetos?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um estilo de programação onde agrupamos dados e funcionalidades relacionadas</item><item value=\"2\" correct=\"false\">Um estilo de programação onde mantemos dados e funcionalidades separados</item></selection><p visible-if=\"wrong\">Um estilo de programação onde agrupamos dados e funcionalidades relacionadas.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 92831,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando usamos OOP?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ao agrupar dados e funcionalidades dentro de um objeto</item><item value=\"2\" correct=\"false\">Quando queremos que as funções retornem novos valores em vez de atualizar propriedades</item></selection><p visible-if=\"wrong\">Ao agrupar dados e funcionalidades dentro de um objeto.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 92863,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual será o valor da propriedade <code>hungry</code> depois de chamarmos o método <code>eat()</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"dog = Dog()\" /><text type=\"break\" /><text value=\"dog.eat()\" /><text type=\"break\" /><text value=\"print(dog.hungry);\" /></content><output><content><text value=\"False\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Verdadeiro</item><item value=\"2\" correct=\"true\">False</item></selection><p visible-if=\"wrong\">Certifique-se de escolher False.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 92829,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos criar um cofrinho virtual com POO. Primeiro, criamos uma nova classe chamada <code>Piggy</code> com uma propriedade <code>value</code> definida como 0.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>value</code> seguido de <code>=</code> e finalmente <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 92828,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em seguida, adicione um método chamado <code>addMoney()</code> que aceita um parâmetro chamado <code>amount</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"30\" /><option startIndex=\"31\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"45\" /><option startIndex=\"46\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"53\" /><option startIndex=\"53\" endIndex=\"54\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>def</code> seguido de <code>addMoney</code> e depois <code>(</code>, <code>self,</code>, <code>amount</code>, <code>)</code>, <code>:</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 92834,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agora, vamos fazer com que <code>addMoney()</code> atualize o valor com a soma do valor atual de <code>Piggy</code> e <code>amount</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"85\" endIndex=\"91\" /><option startIndex=\"59\" endIndex=\"63\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"69\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self</code> seguido de <code>.</code> e depois <code>value</code>, <code>amount</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 92844,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos colocar $100 no nosso cofrinho chamando o método <code>addMoney()</code> do <code>Piggy</code> com <code>100</code> como argumento.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"myPiggy = Piggy()\" /><text type=\"break\" /><text value=\"myPiggy.addMoney(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"115\" endIndex=\"136\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>myPiggy.addMoney(100)</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 92852,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Finalmente, vamos exibir a propriedade <code>value</code> de <code>myPiggy</code> para ver se ela realmente foi atualizada.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"myPiggy = Piggy()\" /><text type=\"break\" /><text value=\"myPiggy.addMoney(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(myPiggy.value)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"144\" endIndex=\"157\" /></interactions><output><content><text value=\"100\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>myPiggy.value</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 10320,
        "title": "Encapsulamento",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Encapsulation",
            "id": 92859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em OOP, agrupamos dados e funções relacionados no mesmo objeto. Chamamos isso de <strong>encapsulamento</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Fido'\" class=\"string\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"True\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"9\" /><option startIndex=\"9\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>class</code> seguido de <code>Dog</code> e finalmente <code>:</code>.</p></body></html>"
          },
          {
            "title": "Non-encapsulated example 1",
            "id": 92856,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em FP, o código não é encapsulado. Você pode explicar por que este código não mostra encapsulamento?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Os dados e a função não estão agrupados juntos em um objeto</item><item value=\"2\" correct=\"false\">Os dados e a função não estão relacionados</item></selection><p visible-if=\"wrong\">Os dados e a função não estão agrupados juntos em um objeto.</p></body></html>"
          },
          {
            "title": "Non-encapsulated example 2",
            "id": 92857,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos identificar código que não está bem encapsulado se métodos e propriedades relacionados estiverem em objetos diferentes. Como podemos encapsular esse código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"False\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Mova <code>eat()</code> para dentro da classe <code>Dog</code></item><item value=\"2\" correct=\"false\">Faça de <code>Dog</code> e <code>eat</code> ambas funções</item></selection><p visible-if=\"wrong\">Mova <code>eat()</code> para dentro da classe <code>Dog</code>.</p></body></html>"
          },
          {
            "title": "Encapsulated example 1",
            "id": 92860,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em OOP, identificamos quais métodos e propriedades pertencem juntos e devem ser adicionados aos nossos objetos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"'orange'\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"meow\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"'Meow'\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"&quot;gray&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;accelerating...&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Encapsulated example 2",
            "id": 92858,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Com encapsulamento, também temos métodos que utilizam outras propriedades que pertencem ao objeto, como neste exemplo <code>eat</code> acessa <code>hungry</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Fido'\" class=\"string\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"   \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"68\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"73\" /><option startIndex=\"73\" endIndex=\"79\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self</code> seguido de <code>.</code> e finalmente <code>hungry</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 92855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que é encapsulamento?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Agrupando dados e funções relacionadas no mesmo objeto</item><item value=\"2\" correct=\"false\">Agrupando dados relacionados em um objeto e suas funções em outro</item></selection><p visible-if=\"wrong\">Agrupando dados e funções relacionadas no mesmo objeto.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 92854,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Este código está encapsulado?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"'red'\" class=\"string\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   self.on = \" /><text value=\"True\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sim</item><item value=\"2\" correct=\"false\">Não, porque contém uma função</item></selection><p visible-if=\"wrong\">Certifique-se de escolher Sim.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 92853,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Este código está encapsulado?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Mike'\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"'Hi there!'\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sim</item><item value=\"2\" correct=\"false\">Não</item></selection><p visible-if=\"wrong\">Certifique-se de escolher Sim.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 92851,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Por que este código não está encapsulado dentro da classe <code>Laptop</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Laptop\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"turnOn\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"True\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>turnOn()</code> não está na classe <code>Laptop</code>, então a função não faz parte do objeto <code>Laptop</code></item><item value=\"2\" correct=\"false\"><code>turnOn</code> é uma função e não uma propriedade</item></selection><p visible-if=\"wrong\"><code>turnOn()</code> não está na classe <code>Laptop</code>, então a função não faz parte do objeto <code>Laptop</code>.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 92850,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como podemos encapsular este código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Coloque <code>base</code>, <code>height</code> e <code>getArea()</code> na mesma classe</item><item value=\"2\" correct=\"false\">Coloque apenas <code>base</code> e <code>height</code> na mesma classe</item></selection><p visible-if=\"wrong\">Coloque <code>base</code>, <code>height</code> e <code>getArea()</code> na mesma classe.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 92849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Converta este código não encapsulado em código POO. Primeiro, crie uma classe chamada <code>Rectangle</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>class</code> seguido de <code>Rectangle:</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 92848,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nós encapsulamos os dados e a função dando ao <code>Rectangle</code> as propriedades <code>base</code> e <code>height</code> e um método <code>getArea()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"99\" endIndex=\"102\" /><option startIndex=\"103\" endIndex=\"110\" /><option startIndex=\"110\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option startIndex=\"86\" endIndex=\"92\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>height</code> seguido de <code>def</code> e depois <code>getArea</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 92847,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em seguida, vamos finalizar o método <code>getArea()</code>. Adicione <code>self.base</code>, <code>*</code> e depois <code>self.height</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"151\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self.base * self.height</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 92846,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Neste ponto, podemos remover o antigo código FP. Vamos chamar o método <code>getArea()</code> do retângulo para que possamos armazenar o resultado em uma variável.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rect = Rectangle()\" /><text type=\"break\" /><text value=\"area = rect.getArea()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"126\" endIndex=\"130\" /><option startIndex=\"130\" endIndex=\"131\" /><option startIndex=\"131\" endIndex=\"138\" /><option startIndex=\"138\" endIndex=\"139\" /><option startIndex=\"139\" endIndex=\"140\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>rect</code> seguido de <code>.</code> e depois <code>getArea</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 92826,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos exibir o resultado no console para ver se é o que esperamos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rect = Rectangle()\" /><text type=\"break\" /><text value=\"area = rect.getArea()\" /><text type=\"break\" /><text value=\"print(area)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"141\" endIndex=\"146\" /><option startIndex=\"146\" endIndex=\"147\" /><option startIndex=\"147\" endIndex=\"151\" /><option startIndex=\"151\" endIndex=\"152\" /></options></interaction></interactions><output><content><text value=\"12\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>print</code> seguido de <code>(</code> e depois <code>area</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}