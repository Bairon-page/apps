{
  "tutorial": {
    "id": 2797,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Aliases de Tipo",
    "descriptionContent": "Aprenda sobre aliases de tipos em TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14792,
        "title": "Aliases de Tipo",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #9 - Copy",
            "id": 130770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usamos <strong>type aliases</strong> para dar um nome aos tipos, tornando o código mais claro e seguro. Definimos <strong>type aliases</strong> usando a palavra-chave <code>type</code>.</p><p>Por exemplo, podemos dar um nome a um tipo de objeto complexo.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy",
            "id": 130772,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Após a palavra-chave <code>type</code>, definimos o nome do nosso tipo.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code> seguido de <code>Human</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy",
            "id": 130771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos então definir o tipo. Vamos definir um tipo de objeto com um atributo chamado <code>name</code> do tipo <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"14\" /><option startIndex=\"17\" endIndex=\"30\" /><option startIndex=\"31\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>{</code> seguido de <code>name: string;</code> e finalmente <code>};</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy - Copy - Copy",
            "id": 130804,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos adicionar outro atributo do tipo <code>number</code> ao nosso tipo personalizado <code>Human</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"33\" endIndex=\"36\" /><option startIndex=\"36\" endIndex=\"37\" /><option correct=\"false\"><content><text value=\"string\" /></content></option><option correct=\"false\"><content><text value=\",\" /></content></option><option startIndex=\"38\" endIndex=\"45\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>age</code> seguido de <code>:</code> e finalmente <code>number;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy - Copy",
            "id": 130773,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agora, podemos usar o tipo personalizado como usaríamos qualquer outro tipo.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" jacky: Human = {name: \" /><text value=\"&quot;Jacky&quot;\" class=\"string\" /><text value=\", age: \" /><text value=\"63\" class=\"number\" /><text value=\"};\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(jacky);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"60\" /><option startIndex=\"61\" endIndex=\"66\" /><option correct=\"false\"><content><text value=\"=\" /></content></option></options></interaction></interactions><output><content><text value=\"{name: &quot;Jacky&quot;, age: 63}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>:</code> seguido de <code>Human</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 130595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Também podemos usar aliases de tipo para dar a um tipo existente um novo nome. Vamos criar um alias de tipo para um array de números.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" PriceSeries = \" /><text value=\"number\" class=\"built_in\" /><text value=\"[];\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"17\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"custom\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code> seguido de <code>=</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 130596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agora que temos nosso alias de tipo, podemos usá-lo para anotar variáveis. Experimente.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" PriceSeries = \" /><text value=\"number\" class=\"built_in\" /><text value=\"[];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" stockPrices: PriceSeries = [\" /><text value=\"108\" class=\"number\" /><text value=\", \" /><text value=\"103\" class=\"number\" /><text value=\", \" /><text value=\"110\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(stockPrices);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"16\" /><option startIndex=\"48\" endIndex=\"59\" /><option correct=\"false\"><content><text value=\"number[]\" /></content></option></options></interaction></interactions><output><content><text value=\"[108, 103, 110]\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>PriceSeries</code> seguido de <code>PriceSeries</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy - Copy - Copy",
            "id": 131285,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usar aliases de tipo também pode ser útil para tornar nossos tipos de união mais legíveis.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" UserID = \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" id: UserID = \" /><text value=\"&quot;#25120&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(id);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"11\" /><option startIndex=\"14\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"22\" /></options></interaction></interactions><output><content><text value=\"#25120\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code> seguido de <code>UserID</code> e depois <code>number</code>, <code>|</code>.</p></body></html>"
          },
          {
            "title": "Lesson #18",
            "id": 130777,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual palavra-chave você precisa para criar um tipo personalizado?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>type</code></item><item value=\"2\" correct=\"false\"><code>custom</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130600,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Aliases de tipo criam um <em>novo nome</em> para um tipo. Eles não criam um novo tipo. O que isso significa?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Aliases de tipo são apenas outra maneira de se referir ao tipo que eles representam</item><item value=\"2\" correct=\"false\">Aliases de tipo mudam fundamentalmente a estrutura do tipo que representam</item></selection><p visible-if=\"wrong\">Aliases de tipo são apenas outra maneira de se referir ao tipo que eles representam.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy",
            "id": 130775,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crie um tipo personalizado para os nossos estudantes.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Student = {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" school: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130601,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual das seguintes opções você pode atribuir à variável <code>myArray</code>?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Numbers = \" /><text value=\"number\" class=\"built_in\" /><text value=\"[];\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" myArray: Numbers = [\" /><text value=\"7\" class=\"number\" /><text value=\", \" /><text value=\"358\" class=\"number\" /><text value=\", \" /><text value=\"913\" class=\"number\" /><text value=\"];\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Uma string</item><item value=\"2\" correct=\"true\">Um array de números</item><item value=\"3\" correct=\"false\">Um objeto</item></selection><p visible-if=\"wrong\">Um array de números.</p></body></html>"
          },
          {
            "title": "Lesson #19",
            "id": 130778,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quais tipos de atributos podemos adicionar aos nossos tipos de objeto?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Tipos primitivos, arrays de diferentes tipos e mais</item><item value=\"2\" correct=\"false\">Apenas números, strings e booleans</item></selection><p visible-if=\"wrong\">Tipos primitivos, arrays de diferentes tipos e mais.</p></body></html>"
          }
        ]
      }
    ]
  }
}