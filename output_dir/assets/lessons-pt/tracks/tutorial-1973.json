{
  "tutorial": {
    "id": 1973,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "App de Tarefas",
    "descriptionContent": "Use seus conhecimentos até agora para construir um app de Todo",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1973-icon-banner.svg",
    "chapters": [
      {
        "id": 12643,
        "title": "App de Tarefas",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 114691,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos usar nosso conhecimento de Páginas Web Dinâmicas para criar um aplicativo de Lista de Tarefas.\n\nComeçamos nos familiarizando com o código inicial.\n\nJá adicionamos o código HTML e CSS para o site.\n\nSeu trabalho é usar seu conhecimento de Javascript para fazer as funções `createTodo`, `deleteTodos` e `todoCheck` funcionarem.\n\nTire um momento para olhar o código inicial e depois passe para o início do exercício.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "CreateTodo - Step 1",
            "id": 114693,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos começar criando a função `createTodo`.\n\nEsta função cria um elemento `li`, adiciona o elemento dentro do elemento `ul` e captura a entrada do usuário para adicionar ao `li`.\n\nPrimeiro, vamos criar o elemento `li`.\n\nTambém vamos anexar o elemento `li` ao contêiner `ul` de todos para que ele possa ser usado posteriormente para exibir a entrada do usuário.\n\n1. Crie uma constante `listItem` dentro da função `createTodo`.\n2. Gere um elemento `li` e salve-o na constante `listItem`.\n3. Crie uma constante `todosContainerElement` dentro da função `createTodo`.\n4. Acesse o elemento `ul` usando seu id e salve-o na constante `todosContainerElement`.\n5. Na linha seguinte, anexe `listItem` a `todosContainerElement`.\n6. (Opcional) Substitua o valor de `background-color` do elemento `li` (por exemplo: use `\"red\"`) para que você possa testar e ver o Todo aparecer na página. Reverta para o que era antes de passar para o próximo exercício.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n text-align: center;\n}\n\nli {\n list-style: none;\n border-bottom: 1px dotted #CCC;\n height: auto;\n background-color: #F0F0F0;\n}\n\nli:hover {\n background-color: #FFFFFF;\n -webkit-transition: all 0.2s;\n -moz-transition: all 0.2s;\n -ms-transition: all 0.2s;\n -o-transition: all 0.2s;\n}\n\n.notes {\n display: flex;\n justify-content: center;\n flex-direction: column;\n background-color: #F5F5F5;\n}\n\n.lines {\n line-height: 20px;\n margin: 0 auto;\n width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}",
                  "solvedContent": "function createTodo() {\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  todosContainerElement.appendChild(listItem);\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To create elements, use `document.createElement()`.\n\nTo access elements by id, use `document.getElementById()`.\n\nTo append an element, use `appendChild()`."
                }
              ]
            }
          },
          {
            "title": "CreateTodo - Step 2",
            "id": 114695,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora vamos capturar o que o usuário digita no input dentro de uma variável para que possamos adicioná-lo dinamicamente à página.\n\nEm seguida, vamos atribuir o valor do nosso input a `listItem` para que ele contenha o valor do nosso Todo.\n\n1. Crie uma constante `userInput` dentro da função `createTodo`.\n2. Encontre o elemento input usando seu id e salve-o na constante `userInput`.\n3. Adicione `.value` na mesma linha para acessar e armazenar o conteúdo do elemento `input`.\n4. Na linha seguinte, adicione algum código para acessar o conteúdo HTML de `listItem`.\n5. Atribua o conteúdo HTML `userInput` como seu valor.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  todosContainerElement.appendChild(listItem);\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}",
                  "solvedContent": "function createTodo() {\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  todosContainerElement.appendChild(listItem);\n  const userInput = document.getElementById('note').value;\n  listItem.innerHTML = userInput;\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access the content of an element by using `.innerHTML`.\n\nYou can add `console.log(userInput)` temporarily in order to check that the input value gets captured. Make sure to remove it before moving to the next step.\n"
                }
              ]
            }
          },
          {
            "title": "CreateTodo - Step 3",
            "id": 114694,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, precisamos adicionar algum código para que nossos Todos executem a função `todoCheck` quando forem clicados. Esta função deve riscar o item da lista.\n\nUsaremos a função `setAttribute()` para adicionar um atributo `onclick` aos nossos Todos e definir a função `todoCheck` como seu valor.\n\nAlém disso, vamos melhorar a experiência do usuário removendo o que foi digitado no elemento `input` após nosso Todo ser criado.\n\n1. Use `setAttribute()` para definir o atributo `onclick` de `listItem` para a função `todoCheck(e, todo)`. Dessa forma, a função será executada quando os usuários clicarem no Todo. Confira as dicas se você não estiver familiarizado com isso.\n2. Esvazie o valor do `input` acessando o elemento com o id `note`. Em seguida, defina seu `.value` como uma string vazia.\n3. Confirme que seu input fica vazio após inserir um Todo.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  todosContainerElement.appendChild(listItem);\n  const userInput = document.getElementById('note').value;\n  listItem.innerHTML = userInput;\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}",
                  "solvedContent": "function createTodo() {\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  todosContainerElement.appendChild(listItem);\n  const userInput = document.getElementById('note').value;\n  listItem.innerHTML = userInput;\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Set the `onclick` attribute on the list item like this: `.setAttribute(\"onclick\", \"todoCheck(event, this)\")`.\n\nEmpty the input with `document.getElementById('note').value = ''`."
                }
              ]
            }
          },
          {
            "title": "TodoCheck - Step 1",
            "id": 114698,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos agora definir `todoCheck`, que será responsável por marcar e desmarcar os Todos na página.\n\nFaremos isso usando a propriedade CSS `text-decoration`, que atualizaremos dinamicamente através da propriedade `style` do elemento Todo.\n\nConfiguramos a função de forma que seu segundo argumento `todo` vai conter o Todo clicado.\n\nUsaremos esse argumento e a propriedade `style` para mudar a aparência do nosso Todo após ele ser clicado.\n\n1. Adicione `todo.style.textDecoration` em `todoCheck()` que passa uma linha através de um todo quando você clica nele.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {}",
                  "solvedContent": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {\n  todo.style.textDecoration = 'line-through';\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You should have something like this\n```JS\ntodo.style.textDecoration = <assignedValue>\n```"
                }
              ]
            }
          },
          {
            "title": "TodoCheck - Step 2",
            "id": 114699,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, queremos ser capazes de alternar o riscado de um item Todo. Vamos refinar `todoCheck` para que ele possa marcar e desmarcar nossos Todos de acordo com seu estado.\n\nUsaremos uma condicional `if` para fazer isso.\n\n1. Adicione uma declaração condicional para verificar se a propriedade `textDecoration` do nosso Todo está vazia (você pode dizer que uma propriedade está vazia verificando se ela é igual a uma string vazia).\n2. Se a condição for verdadeira, atribua `line-through` como o valor de `textDecoration` do nosso Todo.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {\n  todo.style.textDecoration = 'line-through';\n}",
                  "solvedContent": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {\n  if (todo.style.textDecoration === '') {\n    todo.style.textDecoration = 'line-through';\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You should have something like this:\n\n```JS\nfunction todoCheck(e, todo) {\n  if (property === ' ') {\n    // code to assign 'line-through' to `textDecoration`\n  }\n}\n```"
                }
              ]
            }
          },
          {
            "title": "TodosCheck - Step 3",
            "id": 114700,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Por último, precisamos adicionar algum código para desmarcar nosso Todo.\n\nVamos usar uma declaração `else` para esta parte.\n\n1. Adicione uma declaração `else` após o condicional `if`.\n2. Atribua o valor de `textDecoration` para se tornar uma string vazia dentro da declaração.\n3. Crie um Todo para testar se a funcionalidade de desmarcar funciona.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {\n  if (todo.style.textDecoration === '') {\n    todo.style.textDecoration = 'line-through';\n  }\n}",
                  "solvedContent": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {\n  if (todo.style.textDecoration === '') {\n    todo.style.textDecoration = 'line-through';\n  } else {\n    todo.style.textDecoration = '';\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You should have something like this:\n\n```JS\nfunction todoCheck(e, todo) {\n  if (condition) {\n    // code to assign 'line-through' to `textDecoration`\n  }\n else{\n// code to assign empty string '' to `textDecoration`\n  }\n}\n```"
                }
              ]
            }
          },
          {
            "title": "DeleteTodos",
            "id": 114697,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos agora definir `deleteTodos`, que irá remover todos os Todos existentes da página.\n\nO container dos nossos Todos é um elemento `ul`. Para remover todos os seus filhos Todo, vamos limpar sua propriedade `innerHTML`.\n\n1. Acesse o elemento `ul` usando seu id. Dê uma olhada no arquivo `index.html` para encontrar o id.\n2. Acesse seu conteúdo e atribua uma string vazia para que todos os elementos sejam removidos.\n3. Crie um Todo e teste se a funcionalidade funciona após clicar no botão `Delete all`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>To do list application</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <h1> Todo List</h1>\n    <div class=\"lines\">\n      <ul id=\"todos-container\">\n      </ul>\n    </div>\n    <p>Add items on the list, you can click on an item to check it off</p>\n    <div id=\"container\">\n      <input id=\"note\" type=\"text\" placeholder=\"Add something\" />\n      <button type=\"button\" onclick=\"createTodo()\">Add</button>\n      <button type=\"button\" onclick=\"deleteTodos()\">Delete all</button>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "h1,\np,\n#container {\n  text-align: center;\n}\n\nli {\n  list-style: none;\n  border-bottom: 1px dotted #CCC;\n  height: auto;\n  background-color: #F0F0F0;\n}\n\nli:hover {\n  background-color: #FFFFFF;\n  -webkit-transition: all 0.2s;\n  -moz-transition: all 0.2s;\n  -ms-transition: all 0.2s;\n  -o-transition: all 0.2s;\n}\n\n.notes {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #F5F5F5;\n}\n\n.lines {\n  line-height: 20px;\n  margin: 0 auto;\n  width: auto;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {}\n\nfunction todoCheck(e, todo) {\n  if (todo.style.textDecoration === '') {\n    todo.style.textDecoration = 'line-through';\n  } else {\n    todo.style.textDecoration = '';\n  }\n}",
                  "solvedContent": "function createTodo() {\n  const userInput = document.getElementById('note').value;\n  const listItem = document.createElement(\"li\");\n  const todosContainerElement = document.getElementById('todos-container');\n  listItem.innerHTML = userInput;\n  todosContainerElement.appendChild(listItem);\n  listItem.setAttribute(\"onclick\", \"todoCheck(event, this)\");\n  document.getElementById('note').value = '';\n}\n\nfunction deleteTodos() {\n  document.getElementById('todos-container').innerHTML = '';\n}\n\nfunction todoCheck(e, todo) {\n  if (todo.style.textDecoration === '') {\n    todo.style.textDecoration = 'line-through';\n  } else {\n    todo.style.textDecoration = '';\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To track elements, use `document.getElementById()`.\n\nYou can access the content of an element by using `.innerHTML`.\n\nAn empty string syntax is `\"\"`."
                }
              ]
            }
          }
        ]
      }
    ]
  }
}