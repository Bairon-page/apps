{
  "tutorial": {
    "id": 1825,
    "version": 14,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Animal do Mês: Votação",
    "descriptionContent": "Use JavaScript para criar botões de upvote e downvote",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1825-icon-banner.svg",
    "chapters": [
      {
        "id": 12108,
        "title": "Animal do Mês: Votação",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 110536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "O Zoológico contratou você para criar uma página para os usuários votarem positivamente ou negativamente no \"Animal do Mês\".\n\nPrimeiro, vamos nos familiarizar com os arquivos fornecidos: `index.html`, `style.css` e `script.js`.\n\nO arquivo `index.html` atualmente contém uma foto de um Urso Panda e uma legenda correspondente. O arquivo `style.css` contém alguns estilos básicos para nossa página. O arquivo `script.js` está vazio por enquanto, vamos trabalhar na lógica JavaScript em etapas posteriores.\n\nComo mencionado, precisaremos expandir esta página para permitir que os usuários \"votem positivamente\" ou \"votem negativamente\" no \"Animal do Mês\". Vamos começar adicionando um elemento de texto na tela para exibir a contagem atual.\n\n1. Adicione um elemento de parágrafo com um `id` de `\"votes\"` logo após a legenda ( `\"nom nom nom\"` ). Para fins de demonstração, defina o texto deste elemento de parágrafo como \"3 Votos\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 110542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos agora criar os botões que os usuários usarão para `Upvote` ou `Downvote` no `Animal do Mês`. Primeiro, vamos nos concentrar em adicionar o botão `Upvote` na tela, que eventualmente incrementará a contagem de votos em 1 a cada clique.\n\n1. Crie um elemento `button` com um `id` de `\"upvote\"` imediatamente após o novo elemento `<p>` de \"votos\".\n2. Em seguida, defina o conteúdo de texto do elemento `button` para `Upvote`.\n3. Finalmente, dentro do `style.css`, selecione o botão upvote usando seu `id` em um conjunto de regras para a propriedade apropriada para mudar sua cor de fundo para `green`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an element in CSS by its `id` using `#id`. For example, to access a button element with the `id` of `example`, use `#example`."
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 110543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que temos um botão de upvote, vamos lidar com o botão de downvote. Quando clicado, este botão diminuirá a contagem de votos em 1, mas implementaremos essa funcionalidade mais tarde. Por enquanto, foque em adicionar o elemento à página e configurar corretamente as propriedades fornecidas.\n\n1. Crie um elemento de botão com um `id` de `\"downvote\"` imediatamente após o botão de upvote recém-criado.\n2. Em seguida, defina o conteúdo de texto do elemento do botão para `Downvote`.\n3. Dentro do `style.css`, selecione o botão de downvote usando seu `id` e defina a propriedade apropriada para mudar sua cor de fundo para `red`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}",
                  "solvedContent": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}\n\n#downvote {\n background-color: red;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `Upvote` button."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 110544,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que temos todos os nossos elementos na tela criados, vamos começar a adicionar a funcionalidade de votação em JavaScript. Para isso, primeiro vamos importar o arquivo `script.js` no final do arquivo `index.html`. Vamos criar uma variável para armazenar a contagem de votos (para fins de demonstração, começaremos em 3) e registrá-la no console para verificar se nosso arquivo está devidamente vinculado.\n\n1. Importe o arquivo `script.js` no elemento `body` do arquivo `index.html` usando uma tag `<script>`.\n2. No `script.js`, inicialize uma variável `counter` com o valor `3`.\n3. Por fim, registre a variável `counter` no console e execute seu código para verificar se o arquivo `script.js` está devidamente vinculado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "let counter = 3;\nconsole.log(counter);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change its value whenever `Upvote` or `Downvote` button is clicked."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 110547,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos implementar as funções `upvote()` e `downvote()`, que irão aumentar e diminuir a contagem de votos em 1, respectivamente. Vamos primeiro abordar a função `upvote()`: declare a função e implemente o corpo da função de forma que a variável `counter` seja incrementada em 1 quando chamada.\n\n1. Primeiro, remova a instrução `console.log` escrita na etapa anterior.\n2. Em seguida, declare uma função chamada `upvote()`, que não deve receber nenhum parâmetro.\n3. Finalmente, implemente o corpo da função de forma que chamar a função aumente a variável `counter` em `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\nconsole.log(counter);",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax of a function without parameters looks like this:\n```javascript\nfunction functionName(){\n    //statements\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 110550,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A função `upvote` incrementa a variável `counter` em 1, mas também precisamos implementar a funcionalidade para atualizar o conteúdo da página. Vamos direcionar o elemento `<p>` `votes` que criamos anteriormente e definir seu texto para refletir a variável `counter` atualizada.\n\n1. Primeiro, direcione o elemento `p` `votes` pelo seu ID e escolha a propriedade de conteúdo correta para atualizar. Queremos atualizar o texto do elemento.\n2. Em seguida, defina a propriedade de conteúdo para a concatenação da variável `counter` e a string `\" Votes\"`. Não se esqueça do espaço e da capitalização correta!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to update an `html` element's text content, you can use either the `innerHTML`, `innerText`, or `textContent` content properties. "
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 110551,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, vamos primeiro lidar com a função `downvote()`. Declare uma nova função chamada `downvote()` e implemente seu corpo de função de forma que chamá-la diminua a variável `counter` em `1`.\n\n1. Primeiro, declare uma função chamada `downvote()`, que não deve receber nenhum parâmetro.\n2. Em seguida, implemente o corpo da função de forma que chamá-la diminua a variável `counter` em `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To decrease a variable by 1, you can use `-` or `--` or `-=`. For example, `a--` or `a-=1` or `a=a-1`."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 110552,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, de forma semelhante à função `upvote()`, precisamos implementar a funcionalidade `downvote()` para atualizar o conteúdo da página. Como antes, vamos direcionar o elemento `<p>` `votes` e definir seu texto para refletir a variável `counter` atualizada.\n\n1. Dentro da função `downvote()`, direcione o elemento `<p>` `votes` pelo seu ID e escolha a propriedade de conteúdo correta para atualizar.\n2. Em seguida, defina o texto do elemento para a concatenação da variável `counter` e a string `\" Votes\"`. Não esqueça do espaço!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `upvote()` function."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 110553,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que temos nossa funcionalidade JavaScript completa, vamos adicionar as chamadas de função apropriadas aos botões para completar o projeto. Anexe ouvintes de evento `onclick` a cada botão para chamar adequadamente as funções `upvote()` e `downvote()`. Certifique-se de testar os botões para verificar seu trabalho.\n\n1. Adicione um ouvinte de evento `onclick` ao botão de upvote que chama a função `upvote()`.\n2. Adicione um ouvinte de evento `onclick` ao botão de downvote que chama a função `downvote()`.\n3. Tente clicar nos botões de upvote e downvote para confirmar que você implementou corretamente a funcionalidade de votação.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\" onclick=\"upvote()\">Upvote</button>\n    <button id=\"downvote\" onclick=\"downvote()\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can add an onclick listener to any element using the `onclick` attribute. For example, `<button onclick=\"func()\"></button>`"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}