{
  "tutorial": {
    "id": 2635,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "DOM & Eventos",
    "descriptionContent": "Desafios são exercícios mais difíceis que testarão suas habilidades.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14546,
        "title": "HTML a partir de Imagem de Árvore",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 129206,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar um aplicativo de chat. \n![html tree](https://mimo.app/i/dom_tree_1.png)\n\n1. Crie a árvore HTML mostrada nesta imagem adicionando os elementos apropriados.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <textarea></textarea>\n    <br />\n    <input>\n    <button>Send</button>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14547,
        "title": "HTML a partir da Descrição",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Date Range",
            "id": 129207,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crie um site que permita ao usuário escolher um intervalo de datas. Codifique o seguinte no arquivo `.html`.\n\n1. Adicione um input do tipo `date` como um filho do `body`.\n2. Adicione um input do tipo `date` como um irmão do outro input.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <input name=\"checkin\" type=\"date\">\n    <input name=\"checkout\" type=\"date\">\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14548,
        "title": "DOM firstElementChild",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 129208,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar uma página de perfil de funcionário. Codifique o seguinte na tag script.\n\n1. Use o DOM para definir o texto do primeiro elemento filho do elemento `body` como `\"Employee Profile\"`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1></h1>\n    <script src=\"index.js\">\n    </script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "document.body.firstElementChild.textContent = \"Employee Profile\";\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14549,
        "title": "Página de Detalhes do Produto",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Product Detail Page",
            "id": 129209,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar uma página de pedidos de produtos. Temos uma função `qtyChanged`, que calcula o custo total com base no preço e quantidade e, em seguida, define o texto do elemento `p`.\n\n1. Complete o código que atualiza o total sempre que a entrada for alterada. Use o manipulador de eventos `.onchange`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Breakfast Sandwich</h1>\n    <img src=\"https://mimo.app/i/croissant.png\" id=\"shape\"\n      style=\"width:100px;height:100px;border: 1px solid black\">\n    <br> Price: $1.99 <br> Qty<input type=\"number\">\n    <p> Total Price: $0 </p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\n",
                  "solvedContent": "const input = document.querySelector(\"input\");\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\ninput.onchange = qtyChanged;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14550,
        "title": "Termos de Serviço",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Terms of Service",
            "id": 129210,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar uma caixa de \"termos de serviço\" que verifica se você realmente leu. Temos a função `checkReading` que determina se o usuário rolou até o final.\n\n1. Complete o código que chama a função `checkReading` toda vez que o usuário rolar o `textarea`. Você precisará criar uma variável com o nome de sua escolha para realizar isso.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <textarea style=\"height: 200px; width: 100%;\">\n   Please read these terms of service (\"terms\", \"terms of service\") carefully before using [website] website (the \"service\") operated by [name] (\"us\", 'we\", \"our\").\n\n   Conditions of Use\n\n   We will provide their services to you, which are subject to the conditions stated below in this document. Every time you visit this website, use its services or make a purchase, you accept the following conditions. This is why we urge you to read them carefully.\n\n   Privacy Policy\n\n   Before you continue using our website we advise you to read our privacy policy [link to privacy policy] regarding our user data collection. It will help you better understand our practices.\n  </textarea>\n  <p></p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\n",
                  "solvedContent": "const terms = document.getElementsByTagName(\"textarea\")[0];\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\nterms.onscroll =  checkReading;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14551,
        "title": "Botão Curtir",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Like Button",
            "id": 129211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar um botão de \"curtir\" que requer um duplo clique.\n\n1. Adicione o código necessário para chamar a função `like` quando o botão de coração for duplo clicado.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>My Vacation</h1>\n    <img id=\"like\" src=\"https://mimo.app/i/beach.png\"\n      style=\"width:100px;height:100px;border:1px solid black\">\n    <p></p>\n    <button class=\"heart\">huh</button>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\n",
                  "solvedContent": "const img = document.querySelector(\"button\");\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\nimg.ondblclick = like;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": ".heart {\n  width: 36px;\n  height: 36px;\n  position: relative;\n  margin: 1em auto;\n  transform-origin: 50% 50%;\n  transform: rotate(45deg) scale(1);\n  cursor: pointer;\n  background: transparent;\n  border: none !important;\n  font-size: 0;\n}\n\n.heart:before {\n  content: \"\";\n  position: absolute;\n  display: block;\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  background-color: tomato;\n  width: inherit;\n  height: 24px;\n  top: 12px;\n  left: 0;\n}\n\n.heart:after {\n  content: \"\";\n  position: absolute;\n  display: block;\n  background-color: tomato;\n  width: 24px;\n  top: 0;\n  left: 12px;\n  height: inherit;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12312,
        "title": "Filhos do DOM",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Job Listing",
            "id": 111612,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar uma página de anúncio de emprego. Codifique o seguinte na tag script.\n\n1. Use o DOM para acessar o `ul` como o segundo filho do body e salve em uma variável chamada `jobs`.\n2. Use o DOM para acessar os dois filhos do elemento `ul` e definir seu texto para algum título de emprego.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n    </script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n      let jobs = document.body.children[1];\n      jobs.children[0].innerHTML = \"Software QA\";\n      jobs.children[1].innerHTML = \"Project Manager\";\n    </script>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12277,
        "title": "Remover Elemento",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Remove Element",
            "id": 111486,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Neste arquivo HTML, a tarefa é remover um elemento `p` existente usando JavaScript.\n\n1. No arquivo `script.js`, crie uma nova variável const e nomeie-a como `paraEl`.\n2. Use o método `getElementById()` no objeto `document` para obter o parágrafo com o `id` de `para`. Atribua este valor a `paraEl`.\n3. Obtenha o elemento `body` usando o método `querySelector()`. Atribua este valor a uma variável const chamada `bodyEl`.\n4. No objeto `bodyEl`, execute o método `removeChild()`, passando a variável `paraEl` como seu parâmetro. Isso deve resultar na remoção do elemento `p` do documento.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <h1 id=\"the-heading\">Removing elements here!</h1>\n  <p id=\"para\">I'm about to be removed from the document!</p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nbodyEl.removeChild();",
                  "solvedContent": "const paraEl = document.getElementById('para');\nconst bodyEl = document.querySelector('body');\nbodyEl.removeChild(paraEl);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12223,
        "title": "Filtro",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filter",
            "id": 111061,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos dar aos nossos usuários a capacidade de buscar por um produto. A função `searchProducts` que fará a busca já foi criada para você.\n\n1. O primeiro campo de entrada na página deve buscar os produtos quando o usuário digitar algo nele.\n2. O campo de entrada do tipo checkbox na página deve buscar os produtos quando o usuário clicar nele.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Shopper</h1> Search <input><br> Free Shipping <input type=\"checkbox\">\n    <ul>\n    </ul>\n    <br>\n    <br>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();",
                  "solvedContent": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\nconst input = document.querySelector(\"input\");\ninput.oninput = searchProducts;\nconst checkbox = document.querySelectorAll(\"input\")[1];\ncheckbox.onchange = searchProducts;\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12217,
        "title": "Perfil do Funcionário",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 111055,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos adicionar a capacidade de visualizar diferentes seções do nosso perfil de funcionário. No arquivo `script.js` temos a função `showInfo()` para exibir informações do funcionário, a `showPayHistory()` para mostrar os comprovantes de pagamento, e a `showTimeOff()` para mostrar as folgas.\n\n1. Faça com que o primeiro `button` exiba as informações do funcionário quando for clicado.\n2. Faça com que o segundo `button` mostre o histórico de pagamentos quando for clicado.\n3. Faça com que o terceiro `button` mostre as folgas quando for clicado.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>Employee Profile</h1>\n    <button>Info</button> | <button>Pay History</button> | <button>Time\n      off</button>\n    <br>\n    <br>\n    <div> Janie Culliver, Sales Rep </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\n\n\n",
                  "solvedContent": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\ndocument.querySelectorAll(\"button\")[0].onclick = showInfo;\ndocument.querySelectorAll(\"button\")[1].onclick = showPayHistory;\ndocument.querySelectorAll(\"button\")[2].onclick = showTimeOff;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": "button {\n  background: none;\n  border: none;\n  padding: 0;\n  /*optional*/\n  font-family: arial, sans-serif;\n  /*input has OS specific font-family*/\n  color: #069;\n  text-decoration: underline;\n  cursor: pointer;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12219,
        "title": "Planejador de Viagens",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Trip Planner",
            "id": 111057,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nosso aplicativo de reservas precisa informar o usuário se ele escolher datas inválidas. Já temos a função `valid()`, que valida garantindo que as datas estejam em ordem. Também temos a função `book()`, que completa a reserva.\n\n1. Faça o campo de entrada `Check In` executar o comando de validação quando for alterado.\n2. Faça o campo de entrada `Check Out` executar o comando de validação quando for alterado.\n3. Faça o botão completar a reserva quando for clicado.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Book Your Room</h1> Check In <input name=\"checkin\" type=\"date\">\n    <br> Check Out <input name=\"checkout\" type=\"date\">\n    <p></p>\n    <button disabled onclick=\"book()\">Book</button>\n    <br>\n    <div></div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\n\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\n\n\n",
                  "solvedContent": "const checkin = document.querySelectorAll(\"input\")[0];\nconst checkout = document.querySelectorAll(\"input\")[1];\nconst button = document.querySelector(\"button\");\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\ncheckin.onchange = valid;\ncheckout.onchange = valid;\nbutton.onclick = bookTrip;"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".done {\n  text-decoration: line-through;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12220,
        "title": "App de Chat",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 111058,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar um aplicativo de chat. Recebemos a função `typing`, que mostra uma mensagem indicando que o usuário está digitando. Também há a função `send`, que coloca o texto na janela de chat.\n\n1. Adicione código para que a mensagem `Digitando...` apareça quando o usuário digitar no campo de texto.\n2. Adicione código para que a mensagem seja enviada quando o botão for clicado.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <textarea style=\"height: 200px; width: 100%;\">\n  </textarea>\n    <p></p>\n    <br>\n    <input><button>Send</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}\ninput.oninput = typing;\nbutton.onclick = send;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12218,
        "title": "Jogo",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Game",
            "id": 111056,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar um jogo de pato. Existe uma função `move` que atualiza a localização do pato quando o controle deslizante é movido. Existe a função `win` que testa se o pato chegou em casa. Codifique o seguinte no arquivo `script.js`.\n\n1. A função `move` deve ser chamada sempre que o valor de entrada do intervalo for inserido movendo o controle deslizante.\n2. A função `win` deve ser chamada sempre que a entrada do intervalo for alterada. A função então verificará se o usuário realmente ganhou o jogo.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Make the duck go home</h1>\n    <img src=\"https://mimo.app/i/batduck.png\" width=\"50px\"\n      style=\"position:absolute; border-radius: 50%;\">\n    <img src=\"https://mimo.app/i/house-2.png\" width=\"70px\"\n      style=\"left:100px;position:absolute\">\n    <br>\n    <br>\n    <br>\n    <input type=\"range\" value=\"0\">\n    <p></p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}\ninput.oninput = move;\ninput.onchange = win;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12216,
        "title": "Trocador de Canal",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Channel Changer",
            "id": 111054,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos criar o controle remoto para a TV de Gatos. No arquivo `script.js` já temos duas funções:\n- `up` muda o canal para cima\n- `down` muda o canal para baixo\n\n1. Adicione código para que o canal suba sempre que o primeiro botão for clicado.\n2. Adicione código para que o canal desça sempre que o segundo botão for clicado.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Cat TV</h1>\n   \n    <img src=\"https://mimo.app/i/shushi.png\" width=\"100px\" height=\"100px\">\n    <br>\n    <button>Up</button>\n    <button>Down</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}",
                  "solvedContent": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}\ndocument.getElementsByTagName(\"button\")[0].onclick = up;\ndocument.getElementsByTagName(\"button\")[1].onclick = down;"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}