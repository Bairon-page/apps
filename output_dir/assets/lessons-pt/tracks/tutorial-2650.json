{
  "tutorial": {
    "id": 2650,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Introdução ao Python",
    "descriptionContent": "Exercícios de Desafio\nbaseados em Introdução ao Python",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14658,
        "title": "Olá - Python",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "How Challenges Work",
            "id": 129686,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Cada desafio exigirá que você escreva o código de acordo com as instruções.\n\nSeu código será testado automaticamente quando você pressionar o botão de enviar. Você verá algum feedback para saber se está correto. Você também pode executar seu código antes de enviar pressionando o botão Executar Código. Vamos tentar!\n\n1. Complete a instrução de impressão codificando `print`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "(\"Hello!\")",
                  "solvedContent": "print(\"Hello!\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14659,
        "title": "Declarando Strings",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Declaring Variables with String Values",
            "id": 129687,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Seu amigo pediu para você descobrir como está o desempenho do canal dele no YouTube. Vamos encontrar os melhores e piores vídeos!\n\n1. Crie uma variável `most_viewed` e atribua o valor `\"7 Amazing Mugs I CANNOT live without\"` a ela.\n2. Crie uma variável `least_viewed` e atribua o valor `\"The Best Mug to Take Scuba Diving\"` a ela.\n3. Use a função `print` para exibir as variáveis no console, cada uma em uma linha diferente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "most_viewed = \"7 Amazing Mugs I CANNOT live without\"\nleast_viewed = \"The Best Mug to Take Scuba Diving\"\n\nprint(most_viewed)\nprint(least_viewed)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14660,
        "title": "Declarando Números",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Declaring Variables with Number Values",
            "id": 129688,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sua banda favorita carregou um novo vídeo! Vamos ver quantas pessoas assistiram e comentaram.\n\n1. Crie uma variável `views` e atribua o valor `1145` a ela.\n2. Crie uma variável `comments` e atribua o valor `200` a ela.\n3. Use uma declaração `print` para exibir a variável `views` no console.\n4. Use uma declaração `print` para exibir a variável `comments` no console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "views = 1145\ncomments = 200\n\nprint(views)\nprint(comments)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14661,
        "title": "Idade Legal para Dirigir",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Legal Driving Age",
            "id": 129689,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sam tem 16 anos e quer saber se ela é velha o suficiente para dirigir um carro. Complete os operadores ausentes para mostrar que qualquer pessoa com menos de 17 anos não tem permissão para dirigir.\n\n1. Complete a comparação `too_young` para responder à pergunta no console com um `Boolean` que diz que Sam é muito jovem para dirigir.\n2. Complete a comparação `car_driver` para mostrar que ela não pode dirigir um carro.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "sams_age = 16\r\ntoo_young = sams_age  17\r\ncar_driver = sams_age  17\r\n\r\nprint(f\"Is Sam too young to drive? {too_young}\")\r\nprint(f\"Can Sam drive a car? {car_driver}\")",
                  "solvedContent": "sams_age = 16\r\ntoo_young = sams_age < 17\r\ncar_driver = sams_age > 17\r\n\r\nprint(f\"Is Sam too young to drive? {too_young}\")\r\nprint(f\"Can Sam drive a car? {car_driver}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14662,
        "title": "Verificação de Senha Antiga",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Old Password Check",
            "id": 129690,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lorde esqueceu sua senha e está usando um programa para restaurá-la. O programa verifica se a nova senha dela é diferente da antiga. Ele também faz com que Lorde digite a nova senha duas vezes para garantir que está escrita corretamente. Vamos terminar esse programa!\n\n1. Use o operador de desigualdade em `compare_old_new` para mostrar que as senhas **não** são iguais.\n2. Certifique-se de que `new_password` corresponde a `repeat_new_password`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "old_password = \"hello123\"\r\nnew_password = \"goodbye321\"\r\ncompare_old_new = old_password new_password\r\nrepeat_new_password = \"goodbye321\"\r\ncompare_new = new_password repeat_new_password\r\n\r\nprint(f\"Is new password different from old password? {compare_old_new}\")\r\nprint(f\"Has new password been introduced correctly? {compare_new}\")",
                  "solvedContent": "old_password = \"hello123\"\r\nnew_password = \"goodbye321\"\r\ncompare_old_new = old_password != new_password\r\nrepeat_new_password = \"goodbye321\"\r\ncompare_new = new_password == repeat_new_password\r\n\r\nprint(f\"Is new password different from old password? {compare_old_new}\")\r\nprint(f\"Has new password been introduced correctly? {compare_new}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14663,
        "title": "Preço do Ingresso de Cinema",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Movie Ticket Price",
            "id": 129691,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jonas vai ao cinema. Ele verificou os preços e precisará de um ingresso para um adulto.\n\n1. Complete a f-string para mostrar que ele comprará um ingresso para um adulto usando a variável correta.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "age = 15\r\nadult_ticket = age >= 12\r\n\r\nprint( \"Buy one adult ticket: {}\")",
                  "solvedContent": "age = 15\r\nadult_ticket= age >= 12\r\n\r\nprint(f\"Buy one adult ticket: {adult_ticket}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13124,
        "title": "Operador de Desigualdade",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Inequality Operator with Variables",
            "id": 118105,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos ajudar nosso amigo YouTuber a descobrir quando ele deve pedir para o público se inscrever!\n\n1. Use `views` e `subscribers` para criar uma nova variável chamada `askToSubscribe` que contém o resultado de uma comparação de desigualdade entre os dois.\n2. Exiba o resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "views = 1533\nsubscribers = 123\n",
                  "solvedContent": "views = 1533\nsubscribers = 123\n\naskToSubscribe = views != subscribers\n\nprint(askToSubscribe)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13119,
        "title": "Usando Variáveis: Números",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Using variables that have numbers",
            "id": 118100,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você é o baterista de uma nova banda incrível. Vamos calcular o tempo total que as pessoas passaram ouvindo sua música mais popular!\n\n1. Crie uma variável `totalListenTime`. Multiplique `bestSongLength` por `bestSongListens` e armazene o resultado na variável.\n2. Use uma declaração `print` para exibir a nova variável.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "bestSongLength = 3.5\nbestSongListens = 456",
                  "solvedContent": "bestSongLength = 3.5\nbestSongListens = 456\n\ntotalListenTime = bestSongLength * bestSongListens\nprint(totalListenTime)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13121,
        "title": "Operador de Igualdade com números",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Checking for equality with numbers",
            "id": 118102,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você decidiu compartilhar suas piadas incríveis com o mundo e criou uma conta no Twitter! Vamos usar o operador de igualdade para ver se você já alcançou 1000 seguidores.\n\n1. Crie uma variável chamada `celebrationTime` e atribua a ela o resultado da comparação entre `followers` e `1000`.\n2. Use uma declaração `print` para exibir o resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "followers = 900",
                  "solvedContent": "followers = 900\ncelebrationTime = followers == 1000\n\nprint(celebrationTime)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13122,
        "title": "Operador de Igualdade com strings",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Checking for equality with strings",
            "id": 118103,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você acabou de descobrir o vídeo de animal mais fofo! Mas ele parece um pouco familiar. Vamos descobrir se foi feito pelo seu criador de conteúdo favorito.\n\n1. Crie uma variável `madeByFavorite` e atribua a ela o resultado de uma comparação entre `newCreator` e `favoriteCreator`. Certifique-se de usar o operador de igualdade.\n2. Exiba a nova variável.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "newCreator = \"Bunnies4Ever\"\nfavoriteCreator = \"BestBunnies\"",
                  "solvedContent": "newCreator = \"Bunnies4Ever\"\nfavoriteCreator = \"BestBunnies\"\n\nmadeByFavorite = newCreator == favoriteCreator\n\nprint(madeByFavorite)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13118,
        "title": "Atualizando Variáveis",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Updating variables with new values",
            "id": 118099,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você decidiu começar uma carreira no YouTube e postou seu primeiro vídeo. Vamos verificar quantos likes ele está recebendo.\n\n1. Aumente a variável `likes` em 1.\n2. Use a declaração `print` para exibir o valor da variável `likes`.\n3. Aumente a variável `likes` em 1 novamente.\n4. Use a declaração `print` para exibir o valor da variável `likes` novamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "likes = 1145\nlikes = 1146",
                  "solvedContent": "likes = 1145\nlikes = 1146\nlikes = 1147\nprint (likes)\nlikes = 1148\nprint (likes)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13123,
        "title": "Operador de Igualdade com variáveis",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equality with numbers in variables",
            "id": 118104,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Seu primo pequeno criou sua própria plataforma de mídia social! Eles te convenceram a participar. Vamos verificar se sua primeira postagem recebeu o mesmo número de visualizações e comentários.\n\n1. Crie uma variável `everyoneComments` e atribua a ela o resultado de uma comparação entre `views` e `comments`.\n2. Exiba o resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "views = 1511\ncomments = 1511",
                  "solvedContent": "views = 1511\ncomments = 1511\n\neveryoneComments = views == comments\n\nprint(everyoneComments)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13113,
        "title": "Operador maior que",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Greater than operator",
            "id": 118090,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Duas pessoas estão jogando boliche. Jogador1 faz 5 strikes e 5 spares. Jogador2 faz 4 strikes e seis spares. Não há empates!\n\n1. Após `\"bowler1 wins:\"`, crie uma instrução print para verificar se a pontuação do jogador1 é maior que a do jogador2.\n2. Após `\"bowler2 wins:\"`, imprima a comparação para verificar se a pontuação do jogador2 é maior que a do jogador1.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "sam_strikes = 5\r\nsam_spares = 5\r\nleo_strikes = 4\r\nleo_spares = 6\r\nsam_score = sam_strikes * 30 + sam_spares * 20\r\nleo_score = leo_strikes * 30 + leo_spares * 20\r\n\r\n#Decide winner\r\nprint(\"Sam wins:\")\r\n\r\nprint(\"Leo wins:\")",
                  "solvedContent": "sam_strikes = 5\r\nsam_spares = 5\r\nleo_strikes = 4\r\nleo_spares = 6\r\nsam_score = sam_strikes * 30 + sam_spares * 20\r\nleo_score = leo_strikes * 30 + leo_spares * 20\r\n\r\n#Decide winner\r\nprint(\"Sam wins:\")\r\nprint(sam_score > leo_score)\r\n\r\nprint(\"Leo wins:\")\r\nprint(leo_score > sam_score)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13111,
        "title": "Operadores",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Operators",
            "id": 118088,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Anne está usando um caixa eletrônico para adicionar um `deposit` de $200 à sua conta. Ela quer fazer um `withdrawal` de $100.\n\n1. Complete o código para mostrar que o `withdrawal` de Anne é `approved` se ela tiver dinheiro suficiente em seu `account_balance`, ou `denied` caso contrário.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "deposit  200\r\nwithdrawal  100\r\naccount_balance = deposit - withdrawal\r\nprint(\"Account balance is:\")\r\nprint(account_balance)\r\nprint(\"Withdrawal is:\")\r\nprint(withdrawal)\r\n\r\napproved  withdrawal  account_balance\r\ndenied  withdrawal  account_balance\r\n\r\nprint(\"Withdrawal approved. \") \r\nprint(approved)\r\n\r\nprint(\"Withdrawal denied. \")\r\nprint(denied)",
                  "solvedContent": "deposit = 200\r\nwithdrawal = 100\r\naccount_balance = deposit - withdrawal\r\nprint(\"Account balance is:\")\r\nprint(account_balance)\r\nprint(\"Withdrawal is:\")\r\nprint(withdrawal)\r\n\r\napproved = withdrawal <= account_balance\r\ndenied = withdrawal > account_balance\r\n\r\nprint(\"Withdrawal approved. \") \r\nprint(approved)\r\n\r\nprint(\"Withdrawal denied. \")\r\nprint(denied)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13112,
        "title": "Operadores de igualdade e desigualdade",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equality and inequality operators",
            "id": 118089,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um ID de eleitor é comparado com o registro de eleitores antes que uma cédula seja dada a alguém.\n\n1. Crie uma variável `valid_voter` que armazene a comparação do `ID_name` do eleitor e o `voter_register_name`.\n2. Imprima a comparação de `valid_voter` com `True` para ver se o eleitor recebe uma cédula ou precisa se registrar.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "#voter_id_match_registry\r\nID_name = \"Kristen Stewart\"\r\nvoter_register_name = \"Kristen Jaymes Stewart\"\r\n\r\n\r\nprint(\"Here's your ballot.\")\r\nprint(valid_voter  True)\r\n\r\nprint(\"You must register to vote first.\")\r\nprint(valid_voter  True)",
                  "solvedContent": "#voter_id_match_registry\r\nID_name = \"Kristen Stewart\"\r\nvoter_register_name = \"Kristen Jaymes Stewart\"\r\nvalid_voter = ID_name == voter_register_name\r\n\r\nprint(\"Here's your ballot.\")\r\nprint(valid_voter == True)\r\n\r\nprint(\"You must register to vote first.\")\r\nprint(valid_voter != True)"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}