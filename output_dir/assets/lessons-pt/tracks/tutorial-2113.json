{
  "tutorial": {
    "id": 2113,
    "version": 15,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Comunicando com uma API",
    "descriptionContent": "Aprenda sobre APIs. O que são, como funcionam e por que as usamos.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13266,
        "title": "Seu Primeiro Endpoint",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 119226,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><em>Interfaces de programação de aplicativos</em>, também conhecidas como <code>API</code>, permitem a comunicação entre dois programas.</p><p>Elas permitem que um programa envie solicitações e receba respostas de outro, permitindo que os sistemas interajam e compartilhem dados de forma eficiente.</p></body></html>"
          },
          {
            "title": "Intro: Similar real life example I",
            "id": 119237,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Muitos sistemas do mundo real funcionam como uma <strong>API</strong>. Uma API é como um garçom que leva seu pedido (<em>request</em>) para a cozinha.</p><p>A cozinha (servidor) processa e envia a refeição (<em>resposta</em>) de volta através do garçom.</p></body></html>"
          },
          {
            "title": "GET",
            "id": 132243,
            "contentType": "interactive",
            "images": [
              {
                "id": "906453c7-49b9-498a-a1e9-217d327dccf9"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Uma solicitação comum de API é uma solicitação <code>GET</code>, como pedir ao garçom um cardápio.</p><p>Uma solicitação <code>GET</code> pede informações ao servidor. O servidor então responde com os dados necessários.</p><img src=\"906453c7-49b9-498a-a1e9-217d327dccf9\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Express - Copy",
            "id": 132289,
            "contentType": "interactive",
            "images": [
              {
                "id": "696c8f33-dd3d-4182-b8ae-71f0a5e912e1"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usamos o <strong>Node</strong> para executar JavaScript no servidor e o framework <strong>Express</strong> para construir funcionalidades do servidor, como requisições e respostas.</p><p>Express é um framework web popular para Node que simplifica a criação de servidores.</p><img src=\"696c8f33-dd3d-4182-b8ae-71f0a5e912e1\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "GET requests",
            "id": 119239,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Aqui está o primeiro endpoint em Express. Muita coisa está acontecendo aqui, mas você já entende que esta é uma requisição <code>GET</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"7\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>get</code>.</p></body></html>"
          },
          {
            "title": "GET requests - Copy",
            "id": 132301,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como você sabe, uma API deve retornar algo. Vamos fazer isso aqui também e enviar de volta <code>\"Here is your menu!\"</code>.</p><p>O servidor envia de volta uma resposta via <code>res</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"63\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"Here is your menu!\"</code>.</p></body></html>"
          },
          {
            "title": "GET requests - Copy",
            "id": 132287,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O <code>GET</code> em uma solicitação <code>GET</code> refere-se ao método HTTP que está sendo usado. É um dos vários métodos usados para recuperar dados do servidor.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"7\" /><option correct=\"false\"><content><text value=\"retrieve\" /></content></option></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>get</code>.</p></body></html>"
          },
          {
            "title": "GET requests 2",
            "id": 132246,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Uma <em>rota</em> é um caminho no servidor que envia uma resposta específica quando solicitado, como <code>/menu</code> retornando um menu.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"15\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"/menu\"</code>.</p></body></html>"
          },
          {
            "title": "GET requests 3",
            "id": 132247,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Cada endpoint define uma rota, como <code>/menu</code>, e tem uma função que recebe <code>req</code> (requisição) e <code>res</code> (resposta) para lidar com a requisição e responder.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"26\" /><option startIndex=\"34\" endIndex=\"37\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>req,</code> seguido de <code>res</code> e finalmente <code>res</code>.</p></body></html>"
          },
          {
            "title": "GET requests 4",
            "id": 132248,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Neste exemplo, não precisamos usar o parâmetro <code>req</code>, mas usamos <code>res</code> para enviar uma resposta de volta ao cliente, como entregar o menu.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"26\" /><option startIndex=\"34\" endIndex=\"37\" /><option startIndex=\"37\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>res</code> seguido de <code>res</code> e finalmente <code>.send</code>.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 119248,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Escreva uma requisição <code>GET</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"7\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>app</code> seguido de <code>get</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 119227,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que significa <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Interface de Programação de Aplicações</item><item value=\"2\" correct=\"false\">Interface de Assistência à Programação</item></selection><p visible-if=\"wrong\">Interface de Programação de Aplicações.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 119249,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Certifique-se de que o endpoint <code>/menu</code> envie uma resposta.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; { \" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"38\" /><option startIndex=\"38\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"43\" /></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>res</code> seguido de <code>.</code> e finalmente <code>send</code>.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 119243,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Aqui está outro exemplo da vida real. Você preenche um formulário de inscrição online para um empréstimo bancário, qual é o papel correto para cada parte envolvida?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Você é o remetente, o formulário de inscrição online é a <code>API</code>, o banco é o receptor</item><item value=\"2\" correct=\"false\">Você é a <code>API</code>, o formulário de inscrição online é o remetente, o banco é o destinatário</item><item value=\"3\" correct=\"false\">Você é o remetente, o formulário de inscrição online é o receptor, o banco é a <code>API</code></item></selection><p visible-if=\"wrong\">Você é o remetente, o formulário de inscrição online é a <code>API</code>, o banco é o receptor.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 132249,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Defina a rota <code>/menu</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; { \" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"15\" /><option correct=\"false\"><content><text value=\"&quot;/&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"/menu\"</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 119244,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como funciona uma <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ele envia a solicitação do remetente para o receptor e a resposta do receptor para o remetente</item><item value=\"2\" correct=\"false\">Ele apenas conecta o remetente e o receptor e deixa que eles façam o que precisam</item><item value=\"3\" correct=\"false\">Ele apenas monitora para garantir que o remetente e o destinatário estão enviando mensagens um ao outro</item></selection><p visible-if=\"wrong\">Ele envia a solicitação do remetente para o receptor e a resposta do receptor para o remetente.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 132250,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Garanta que a rota <code>/menu</code> possa lidar com uma requisição <code>GET</code> e enviar uma resposta para o cliente.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; { \" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Here is your menu!&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"4\" endIndex=\"7\" /></interactions><output><content><text value=\"Here is your menu!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>get</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13269,
        "title": "Iniciando um servidor",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "APIs",
            "id": 119251,
            "contentType": "interactive",
            "images": [
              {
                "id": "9e38976a-0aca-4e11-8369-1243822de4d5"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agora que você sabe o que é uma <code>API</code>, vamos falar sobre como iniciar seu próprio servidor.</p><img src=\"9e38976a-0aca-4e11-8369-1243822de4d5\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "npm init",
            "id": 132302,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Execute <code>node app.js</code> no terminal para iniciar um servidor local, onde app.js é o arquivo que contém o código do seu servidor.</p><p>No Mimo, nós cuidamos disso para você. Se você for para a seção de projetos, pode criar um novo servidor com um clique de botão.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"node app.js\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"11\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>node</code> seguido de <code>app.js</code>.</p></body></html>"
          },
          {
            "title": "Localhost",
            "id": 132258,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>http://localhost:3000</code> refere-se à máquina local (seu computador) executando o servidor na porta 3000, permitindo que você acesse a aplicação.</p><p>No Mimo, nós cuidamos disso para você. Nós executamos o servidor e o tornamos facilmente acessível para você.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"http://localhost:3000\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"21\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>http://localhost:3000</code>.</p></body></html>"
          },
          {
            "title": "Lesson #18 - Copy - Copy",
            "id": 132253,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Uma vez que o seu servidor esteja iniciado, você pode usar um navegador para chamar um endpoint. Para obter uma resposta, digite <code>http://localhost:3000/menu</code> no navegador.</p><p>No nosso caso, o servidor responde com <code>\"Here is your menu!\"</code>.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;html&gt;&lt;body&gt;&lt;p&gt;Here is your menu!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\" /></body></html>"
          },
          {
            "title": "API Tools - Copy",
            "id": 132276,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Os navegadores podem chamar um endpoint de API. No entanto, às vezes, é mais eficiente usar um testador de API.</p><p>Usando um testador de API, você define o tipo de solicitação (como <code>GET</code>), a URL do endpoint e mais. No Mimo, fornecemos um fácil de usar.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt;&#xA;&lt;html lang=&quot;en&quot;&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=&quot;UTF-8&quot;&gt;&#xA;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#xA;  &lt;title&gt;Simple API Tester&lt;/title&gt;&#xA;  &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#xA;  &lt;style&gt;&#xA;    body {&#xA;      padding: 20px;&#xA;    }&#xA;    .response-box {&#xA;      margin-top: 20px;&#xA;      padding: 15px;&#xA;      background-color: #f8f9fa;&#xA;      border-radius: 5px;&#xA;    }&#xA;  &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;&#xA;  &lt;div class=&quot;container&quot;&gt;&#xA;    &lt;h1&gt;API Request Tester&lt;/h1&gt;&#xA;&#xA;    &lt;form id=&quot;apiForm&quot;&gt;&#xA;      &lt;div class=&quot;input-group mb-4&quot;&gt;&#xA;        &lt;select class=&quot;form-select flex-grow-0 w-auto&quot; id=&quot;methodSelect&quot;&gt;&#xA;          &lt;option value=&quot;GET&quot; selected&gt;GET&lt;/option&gt;&#xA;          &lt;option value=&quot;POST&quot; disabled&gt;POST&lt;/option&gt;&#xA;          &lt;option value=&quot;PUT&quot; disabled&gt;PUT&lt;/option&gt;&#xA;          &lt;option value=&quot;DELETE&quot; disabled&gt;DELETE&lt;/option&gt;&#xA;        &lt;/select&gt;&#xA;        &lt;input id=&quot;urlInput&quot; required class=&quot;form-control&quot; type=&quot;url&quot; value=&quot;http://localhost:3000/menu&quot; /&gt;&#xA;        &lt;button id=&quot;sendRequest&quot; type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Send&lt;/button&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/form&gt;&#xA;&#xA;    &lt;div id=&quot;response&quot; class=&quot;response-box d-none&quot;&gt;&#xA;      &lt;h3&gt;Response&lt;/h3&gt;&#xA;      &lt;br&gt;&#xA;      &lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; &lt;span id=&quot;status&quot;&gt;200 OK&lt;/span&gt;&lt;/p&gt;&#xA;      &lt;p&gt;&lt;strong&gt;Response:&lt;/strong&gt; &lt;span id=&quot;responseBody&quot;&gt;200 OK&lt;/span&gt;&lt;/p&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;script&gt;&#xA;    document.getElementById('apiForm').addEventListener('submit', function(e) {&#xA;      e.preventDefault();&#xA;&#xA;      // Get the selected method and URL&#xA;      const method = document.getElementById('methodSelect').value;&#xA;      const url = document.getElementById('urlInput').value;&#xA;&#xA;      if (method === 'GET') {&#xA;        // Simulate a GET request and a simple string response&#xA;        const responseBody = &quot;Here is your menu!&quot;;&#xA;&#xA;        // Display the simulated response&#xA;        document.getElementById('responseBody').innerText = responseBody;&#xA;        document.getElementById('status').innerText = '200 OK';&#xA;        document.getElementById('response').classList.remove('d-none');&#xA;      } else {&#xA;        alert('Only GET requests are supported in this example.');&#xA;      }&#xA;    });&#xA;  &lt;/script&gt;&#xA;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;\" /></body></html>"
          },
          {
            "title": "API Tools",
            "id": 119260,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Se você analisar a resposta que o testador de API nos devolve, verá um <em>status</em> que está definido como <code>200 OK</code>.</p><p>APIs enviam de volta um código de status para identificar rapidamente se tudo ocorreu conforme o planejado. <code>200 OK</code> é a resposta padrão para requisições <code>GET</code>.</p><webview version=\"2\" visible-if=\"always\" content=\"&lt;!doctype html&gt;&#xA;&lt;html lang=&quot;en&quot;&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=&quot;UTF-8&quot;&gt;&#xA;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#xA;  &lt;title&gt;Simple API Tester&lt;/title&gt;&#xA;  &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#xA;  &lt;style&gt;&#xA;    body {&#xA;      padding: 20px;&#xA;    }&#xA;    .response-box {&#xA;      margin-top: 20px;&#xA;      padding: 15px;&#xA;      background-color: #f8f9fa;&#xA;      border-radius: 5px;&#xA;    }&#xA;  &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;&#xA;  &lt;div class=&quot;container&quot;&gt;&#xA;    &lt;h1&gt;API Request Tester&lt;/h1&gt;&#xA;&#xA;    &lt;form id=&quot;apiForm&quot;&gt;&#xA;      &lt;div class=&quot;input-group mb-4&quot;&gt;&#xA;        &lt;select class=&quot;form-select flex-grow-0 w-auto&quot; id=&quot;methodSelect&quot;&gt;&#xA;          &lt;option value=&quot;GET&quot; selected&gt;GET&lt;/option&gt;&#xA;          &lt;option value=&quot;POST&quot; disabled&gt;POST&lt;/option&gt;&#xA;          &lt;option value=&quot;PUT&quot; disabled&gt;PUT&lt;/option&gt;&#xA;          &lt;option value=&quot;DELETE&quot; disabled&gt;DELETE&lt;/option&gt;&#xA;        &lt;/select&gt;&#xA;        &lt;input id=&quot;urlInput&quot; required class=&quot;form-control&quot; type=&quot;url&quot; value=&quot;http://localhost:3000/menu&quot; /&gt;&#xA;        &lt;button id=&quot;sendRequest&quot; type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Send&lt;/button&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/form&gt;&#xA;&#xA;    &lt;div id=&quot;response&quot; class=&quot;response-box d-none&quot;&gt;&#xA;      &lt;h3&gt;Response&lt;/h3&gt;&#xA;      &lt;br&gt;&#xA;      &lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; &lt;span id=&quot;status&quot;&gt;200 OK&lt;/span&gt;&lt;/p&gt;&#xA;      &lt;p&gt;&lt;strong&gt;Response:&lt;/strong&gt; &lt;span id=&quot;responseBody&quot;&gt;200 OK&lt;/span&gt;&lt;/p&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;script&gt;&#xA;    document.getElementById('apiForm').addEventListener('submit', function(e) {&#xA;      e.preventDefault();&#xA;&#xA;      // Get the selected method and URL&#xA;      const method = document.getElementById('methodSelect').value;&#xA;      const url = document.getElementById('urlInput').value;&#xA;&#xA;      if (method === 'GET') {&#xA;        // Simulate a GET request and a simple string response&#xA;        const responseBody = &quot;Here is your menu!&quot;;&#xA;&#xA;        // Display the simulated response&#xA;        document.getElementById('responseBody').innerText = responseBody;&#xA;        document.getElementById('status').innerText = '200 OK';&#xA;        document.getElementById('response').classList.remove('d-none');&#xA;      } else {&#xA;        alert('Only GET requests are supported in this example.');&#xA;      }&#xA;    });&#xA;  &lt;/script&gt;&#xA;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;\" /></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 132274,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual é o papel do chamador da API?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">O programa ou usuário que faz a solicitação para a API</item><item value=\"2\" correct=\"false\">O servidor recebendo a solicitação</item><item value=\"3\" correct=\"false\">A função que lida com erros de API</item></selection><p visible-if=\"wrong\">O programa ou usuário que faz a solicitação para a API.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 132275,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como você inicia um servidor Express a partir do terminal?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>node app.js</code></item><item value=\"2\" correct=\"false\"><code>npm install</code></item><item value=\"3\" correct=\"false\"><code>express start</code></item></selection><p visible-if=\"wrong\"><code>node app.js</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 132277,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que significa um código de status <code>200 OK</code> em uma resposta de API?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A solicitação foi bem-sucedida, e o servidor enviou os dados solicitados</item><item value=\"2\" correct=\"false\">A solicitação foi inválida</item><item value=\"3\" correct=\"false\">O servidor não consegue encontrar o recurso solicitado</item></selection><p visible-if=\"wrong\">A solicitação foi bem-sucedida, e o servidor enviou os dados solicitados.</p></body></html>"
          }
        ]
      },
      {
        "id": 13270,
        "title": "Chamando uma API com fetch",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 119529,
            "contentType": "interactive",
            "images": [
              {
                "id": "51cdb5e9-febe-4d11-a6a4-2f8761c9b60e"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agora que você sabe como uma API funciona, é hora de aprender como enviar uma solicitação para ela.</p><img src=\"51cdb5e9-febe-4d11-a6a4-2f8761c9b60e\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "fetch()",
            "id": 119262,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Node tem um método embutido para enviar requisições a APIs: <code>fetch</code>. Tente completar a requisição <code>GET</code> usando <code>fetch</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>fetch</code>.</p></body></html>"
          },
          {
            "title": "fetch() 2",
            "id": 119343,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>fetch</code> usa <code>GET</code> como padrão, mas podemos mudar o <code>method</code> ou definir explicitamente <code>GET</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\", { \" /><text type=\"break\" /><text value=\" \" /><text value=\"method\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;GET&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"49\" endIndex=\"52\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>fetch</code> seguido de <code>GET</code>.</p></body></html>"
          },
          {
            "title": "fetch() 2 - Copy",
            "id": 132278,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ao usar <code>fetch</code>, primeiro definimos o endpoint que queremos chamar.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"34\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>fetch</code> seguido de <code>\"http://localhost:3000/menu\"</code>.</p></body></html>"
          },
          {
            "title": "fetch() 2 - Copy - Copy",
            "id": 132279,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em seguida, usamos <code>.then</code> para lidar com a resposta do servidor. Assim que a solicitação for bem-sucedida, o método de callback é chamado.</p><p>Um método de callback é uma função que você fornece a outra função para ser chamada posteriormente.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" .then(\" /><text value=\"(\" /><text value=\"response\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { });\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"38\" endIndex=\"43\" /><option startIndex=\"44\" endIndex=\"61\" /></options></interaction></interactions><output><content><text value=\"API Request successfully sent!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>.then</code> seguido de <code>(response) =&gt; { }</code>.</p></body></html>"
          },
          {
            "title": "fetch() 2 - Copy - Copy - Copy",
            "id": 132303,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Uma vez que a solicitação é bem-sucedida, registramos que a solicitação da API foi enviada com sucesso usando o método de callback.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" .then(\" /><text value=\"(\" /><text value=\"response\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;API Request successfully sent!&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"62\" endIndex=\"108\" /><option startIndex=\"44\" endIndex=\"59\" /><option startIndex=\"110\" endIndex=\"111\" /></options></interaction></interactions><output><content><text value=\"API Request successfully sent!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>(response) =&gt; {</code> seguido de <code>console.log(\"API Request successfully sent!\");</code> e finalmente <code>}</code>.</p></body></html>"
          },
          {
            "title": "fetch() 2 - Copy - Copy - Copy",
            "id": 132280,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Recebemos um objeto <code>response</code> de volta. Ele contém informações sobre a solicitação, como seu status e quaisquer dados que o servidor retornou.</p><p>Registre o objeto de resposta para ver o que ele contém.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" .then(\" /><text value=\"(\" /><text value=\"response\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(response); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"62\" endIndex=\"74\" /><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"84\" /></options></interaction></interactions><output><content><text value=\"{type: &quot;cors&quot;, url: &quot;http://localhost:3000/menu&quot;, status: 200, statusText: &quot;OK&quot;, ...}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>console.log(</code> seguido de <code>response</code> e finalmente <code>);</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 119346,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para que podemos usar <code>fetch</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Fazer chamadas de API para servidores externos</item><item value=\"2\" correct=\"false\">Acessando dados do sistema de arquivos local<br /></item><item value=\"3\" correct=\"false\">Executando consultas de banco de dados</item><item value=\"4\" correct=\"false\">Manipulando elementos DOM</item></selection><p visible-if=\"wrong\">Fazer chamadas de API para servidores externos.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 119347,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Escreva o código para enviar uma requisição <code>GET</code> para o endpoint <code>/menu</code> no localhost usando <code>fetch</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\" .then(\" /><text value=\"(\" /><text value=\"response\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;API Request successfully sent!&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"7\" endIndex=\"28\" /><option startIndex=\"28\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"/users\" /></content></option></options></interaction></interactions><output><content><text value=\"API Request successfully sent!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>fetch</code> seguido de <code>http://localhost:3000</code> e finalmente <code>/menu</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 132281,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>No contexto de <code>fetch</code>, qual é o propósito do método <code>.then</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para processar a resposta do servidor quando ela for recebida</item><item value=\"2\" correct=\"false\">Para enviar a solicitação ao servidor</item><item value=\"3\" correct=\"false\">Para verificar se o servidor está fora do ar</item></selection><p visible-if=\"wrong\">Para processar a resposta do servidor quando ela for recebida.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 119348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Escreva o código para enviar uma requisição <code>GET</code> para <code>http://localhost:3000/menu</code> usando <code>fetch</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"fetch(\" /><text value=\"&quot;http://localhost:3000/menu&quot;\" class=\"string\" /><text value=\", { \" /><text type=\"break\" /><text value=\" \" /><text value=\"method\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;GET&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}).then(\" /><text value=\"(\" /><text value=\"response\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;API Request successfully sent!&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"46\" /><option startIndex=\"48\" endIndex=\"49\" /><option startIndex=\"49\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\"endpoint\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>method</code> seguido de <code>\"</code> e depois <code>GET</code>, <code>\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 132282,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual das seguintes opções pode ser acessada a partir do objeto <code>response</code> em uma requisição <code>fetch</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">O código de status do servidor (por exemplo, <code>200</code>)</item><item value=\"2\" correct=\"false\">O método de requisição (por exemplo, <code>GET</code>)</item></selection><p visible-if=\"wrong\">O código de status do servidor (por exemplo, <code>200</code>).</p></body></html>"
          }
        ]
      }
    ]
  }
}