{
  "tutorial": {
    "id": 2150,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Timeout e Intervals em JS",
    "descriptionContent": "Aprenda sobre os métodos assíncronos em JavaScript: setTimeout, setInterval e clearInterval.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13418,
        "title": "setTimeout",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>JavaScript possui alguns métodos nativos que executam código de forma assíncrona, como <code>setTimeout()</code> e <code>setInterval()</code>.</p><p>Neste capítulo, vamos dar uma olhada no método <code>setTimeout()</code>.</p></body></html>"
          },
          {
            "title": "setTimeout()",
            "id": 120594,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O método <code>setTimeout()</code> define um temporizador, em milissegundos, que executa uma função ou bloco de código quando o temporizador expira.</p><p>Codifique seu primeiro método <code>setTimeout</code> no código de exemplo.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "setTimeout() 2",
            "id": 120595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O código aqui é assíncrono. Isso significa que, enquanto esperamos o <em>callback</em> ser executado, o código após o método <code>setTimeout</code> é executado.</p><p>A saída do console do método <code>setTimeout</code> será exibida por último devido ao atraso no método <code>setTimeout</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Delay Parameter",
            "id": 120596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O parâmetro <code>delay</code> é o tempo, em milissegundos, que passa antes da execução da função ou bloco de código.</p><p>No código a seguir, defina um atraso de <code>2000</code> milissegundos para que o bloco de código seja executado.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed after 2 seconds'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"99\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed after 2 seconds\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>2000</code>.</p></body></html>"
          },
          {
            "title": "Delay of 0",
            "id": 120598,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> é sempre assíncrono, mesmo se o parâmetro <code>delay</code> for omitido ou se o definirmos como <code>0</code>.</p><p>Com um <code>delay</code> de <code>0</code>, o código após o método <code>setTimeout()</code> é executado imediatamente, mas a função de callback é executada <em>assim que possível</em>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last, even if we set 0 seconds '\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"112\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last, even if we set 0 seconds \" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>0</code>.</p></body></html>"
          },
          {
            "title": "Callback Function",
            "id": 120597,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> executa o <code>callback</code> após o <code>delay</code> especificado.</p><p>O código <em>após</em> o <code>setTimeout</code> continua a ser executado independentemente de um callback ou bloco de código ser usado.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Executed Last because of setTimeout&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(callback, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"119\" endIndex=\"127\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>callback</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120760,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual afirmação é verdadeira em relação aos métodos JavaScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JavaScript tem alguns métodos que executam código de forma assíncrona</item><item value=\"2\" correct=\"false\">JavaScript só tem métodos que executam código de forma síncrona</item></selection><p visible-if=\"wrong\">JavaScript tem alguns métodos que executam código de forma assíncrona.</p></body></html>"
          },
          {
            "title": "Question: setTimeout()",
            "id": 120761,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que o método <code>setTimeout()</code> faz?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Executa uma função de callback quando um temporizador expira</item><item value=\"2\" correct=\"false\">Ele apenas define um timer</item></selection><p visible-if=\"wrong\">Executa uma função de callback quando um temporizador expira.</p></body></html>"
          },
          {
            "title": "Question: setTimeout() 2",
            "id": 120762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual afirmação é verdadeira em relação ao método <code>setTimeout()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">É um método JavaScript assíncrono</item><item value=\"2\" correct=\"false\">É um método JavaScript síncrono</item></selection><p visible-if=\"wrong\">É um método JavaScript assíncrono.</p></body></html>"
          },
          {
            "title": "Question: Delay Parameter",
            "id": 120763,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que o parâmetro <code>delay</code> de <code>setTimeout()</code> faz?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Especifica quantos milissegundos passam antes que o callback seja executado</item><item value=\"2\" correct=\"false\">Isso faz com que todo o código pare de executar</item></selection><p visible-if=\"wrong\">Especifica quantos milissegundos passam antes que o callback seja executado.</p></body></html>"
          },
          {
            "title": "Question: Delay of 0",
            "id": 120764,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual é o valor padrão do parâmetro <code>delay</code> quando não passamos um valor para ele?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">0 milissegundos</item><item value=\"2\" correct=\"false\">1000 milissegundos</item></selection><p visible-if=\"wrong\">0 milissegundos.</p></body></html>"
          },
          {
            "title": "Question: Callback Function",
            "id": 120765,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando a função de callback do <code>setTimeout()</code> é executada?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Após o temporizador definido pelo parâmetro <code>delay</code> expirar</item><item value=\"2\" correct=\"false\">Antes que o temporizador definido pelo parâmetro <code>delay</code> expire</item></selection><p visible-if=\"wrong\">Após o temporizador definido pelo parâmetro <code>delay</code> expirar.</p></body></html>"
          },
          {
            "title": "Example: setTimeout()",
            "id": 120767,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique o método <code>setTimeout()</code> para completar o código.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"9000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"194\" endIndex=\"204\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 1000 solutions\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay Parameter",
            "id": 120769,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique um atraso de <code>8000</code> milissegundos no método <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"8000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"238\" endIndex=\"242\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 875 solutions\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>8000</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay of 0",
            "id": 120770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete o código para que a função de callback seja executada o mais rápido possível.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last because of setTimeout(), even with no delay'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"129\" /></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout(), even with no delay\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example: Callback Function",
            "id": 120771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique a função de callback que imprime o resultado de <code>calculate()</code>, para o primeiro parâmetro de <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"printAnswer\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"setTimeout(printAnswer, \" /><text value=\"5000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"256\" endIndex=\"267\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 450 solutions\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>printAnswer</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13419,
        "title": "setInterval e clearInterval",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> é outro método nativo do JavaScript que executa código de forma assíncrona.</p><p>Com <code>setInterval</code> podemos executar algum código a cada período de tempo definido. Vamos aprender mais sobre este método.</p></body></html>"
          },
          {
            "title": "setInterval()",
            "id": 120836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> recebe uma função de callback e um intervalo como parâmetros. Aqui, o <code>toggleBlinker</code> liga e desliga os piscas.</p><p>Passe a função de callback e o intervalo para a chamada <code>setInterval</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"187\" endIndex=\"198\" /><option startIndex=\"199\" endIndex=\"212\" /><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>setInterval</code> seguido de <code>toggleBlinker</code> e finalmente <code>500</code>.</p></body></html>"
          },
          {
            "title": "Interval",
            "id": 120608,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval</code> executa a função de callback para sempre, com um atraso do número especificado de milissegundos que passamos como o segundo parâmetro.</p><p>A primeira execução do callback ocorre após o tempo especificado. Ele não é executado imediatamente.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>500</code>.</p></body></html>"
          },
          {
            "title": "setInterval() Callback",
            "id": 120607,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Se executarmos o código, podemos obter um erro de timeout porque não há uma parada para o <code>setInterval</code>.</p><p>Adicione <code>500</code> milissegundos aqui para ver o código ligar e desligar para sempre a cada <code>500</code> milissegundos!</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"177\" endIndex=\"180\" /></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text value=\"Timeout\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>500</code>.</p></body></html>"
          },
          {
            "title": "Stopping the Interval",
            "id": 120609,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para parar o <code>setInterval()</code> de rodar indefinidamente, podemos usar o método <code>clearInterval</code>.<br /></p><p>Podemos salvar o <code>setInterval</code> em uma variável <code>blinkerInterval</code>. Em seguida, usar <code>clearInterval(blinkerInterval)</code> dentro de um <code>setTimeout</code> para ser executado após <code>2500</code> milissegundos.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"26\" /><option startIndex=\"27\" endIndex=\"42\" /><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /><option startIndex=\"283\" endIndex=\"287\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>let</code> seguido de <code>blinkerInterval</code> e depois <code>clearInterval</code>, <code>blinkerInterval</code>, <code>2500</code>.</p></body></html>"
          },
          {
            "title": "intervalID/clearInterval()",
            "id": 120611,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O método <code>clearInterval()</code> recebe o <code>blinkerInterval</code> como seu único parâmetro.</p><p>Na execução, ele interrompe a ação repetitiva do método <code>setInterval()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>clearInterval</code> seguido de <code>blinkerInterval</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual é um método JavaScript que executa código de forma assíncrona?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>setInterval()</code></item><item value=\"2\" correct=\"false\"><code>.filter()</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>setInterval()</code>.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Delay",
            "id": 120784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que o parâmetro <code>delay</code> especifica para o método <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">O número de milissegundos que passarão entre as execuções do callback</item><item value=\"2\" correct=\"false\">O número de minutos que passarão entre as execuções do callback</item></selection><p visible-if=\"wrong\">O número de milissegundos que passarão entre as execuções do callback.</p></body></html>"
          },
          {
            "title": "Question: Stopping the Interval",
            "id": 120785,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual afirmação é verdadeira em relação ao método <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ele executa indefinidamente, a menos que adicionemos código adicional para pará-lo</item><item value=\"2\" correct=\"false\">Permite que o callback seja executado apenas 10 vezes</item></selection><p visible-if=\"wrong\">Ele executa indefinidamente, a menos que adicionemos código adicional para pará-lo.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Callback",
            "id": 120783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quais são dois parâmetros comuns que <code>setInterval()</code> possui?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Uma função de callback e um atraso</item><item value=\"2\" correct=\"false\"><code>setInterval()</code> aceita apenas uma função de callback como parâmetro</item></selection><p visible-if=\"wrong\">Uma função de callback e um atraso.</p></body></html>"
          },
          {
            "title": "Question: intervalID/clearInterval()",
            "id": 120787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que método podemos usar para parar a execução de <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>clearInterval()</code></item><item value=\"2\" correct=\"false\"><code>setTimeout</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>clearInterval()</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Callback",
            "id": 120790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique a função de callback para a contagem regressiva começar com um <code>setInterval</code> e também parar se <code>countdown &lt; 0</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" countdown = \" /><text value=\"3\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" countdownInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(countdown);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" countdown--;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &lt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  clearInterval(countdownInterval);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;GO&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"1000\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"56\" /><option startIndex=\"154\" endIndex=\"167\" /><option startIndex=\"168\" endIndex=\"185\" /><option startIndex=\"25\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"3\" /><text type=\"break\" /><text value=\"2\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"GO\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>countdownInterval</code> seguido de <code>setInterval</code> e depois <code>clearInterval</code>, <code>countdownInterval</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Delay",
            "id": 120791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete o código definindo o atraso entre as execuções da função de callback para <code>600</code> milissegundos.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" count = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" intervalID;\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (count &lt; \" /><text value=\"3\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  count += \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Callback executed&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  clearInterval(intervalID);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;The interval was cleared after 3 executions&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" intervalID = setInterval(callback, \" /><text value=\"600\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"start();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"284\" endIndex=\"287\" /></interactions><output><content><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"The interval was cleared after 3 executions\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>600</code>.</p></body></html>"
          },
          {
            "title": "Example: intervalID/clearInterval()",
            "id": 120794,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique o método <code>clearInterval()</code> para parar a execução da função de callback após <code>2</code> segundos.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" intervalId;\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"startInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  intervalId = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"if\" class=\"keyword\" /><text value=\" (direction === \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;right&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    }\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(direction);\" /><text type=\"break\" /><text value=\"  }, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"stopInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  clearInterval(intervalId);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Interval stopped&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"startInterval();\" /><text type=\"break\" /><text value=\"setTimeout(stopInterval, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"277\" endIndex=\"290\" /><option startIndex=\"370\" endIndex=\"382\" /><option startIndex=\"384\" endIndex=\"388\" /></options></interaction></interactions><output><content><text value=\"right\" /><text type=\"break\" /><text value=\"left\" /><text type=\"break\" /><text value=\"right\" /><text type=\"break\" /><text value=\"Interval stopped\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>clearInterval</code> seguido de <code>stopInterval</code> e finalmente <code>2000</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}