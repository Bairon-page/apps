{
  "tutorial": {
    "id": 2671,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Biblioteca - Parte 1",
    "descriptionContent": "Mergulhe na POO criando objetos de livro. Esta primeira parte do projeto te introduz à criação e gestão da sua própria estante digital.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2671-icon-banner.svg",
    "chapters": [
      {
        "id": 14646,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 129536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bem-vindo ao projeto **Biblioteca**, onde usaremos programação orientada a objetos para criar um sistema de biblioteca para acompanhar os livros. Vamos começar com a classe `Book`.\n\n1. Crie uma nova classe chamada `Book`.\n2. No método `__init__`, adicione `self`, `title` e `author` como parâmetros.\n3. Armazene `title` em `self.title`.\n4. Armazene `author` em `self.author`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Adicione uma propriedade `available` à classe `Book`. Esta propriedade indica se o livro está disponível para empréstimo ou não.\n\n1. No método `__init__`, defina `self.available` como `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crie um método `checkout` para a classe `Book`. Este método irá mudar a propriedade `available` para `False` se o livro estiver disponível e retornar `True`. Se o livro não estiver disponível, ele deve retornar `False`.\n\n1. Adicione um método `checkout`.\n   - Use uma declaração if/else para verificar se o livro está disponível.\n   - Altere o status `available` para `False` se o livro estiver disponível e retorne `True`.\n   - Se o livro não estiver disponível, retorne `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, adicione um método `return_book` à classe `Book`. Este método irá alterar a propriedade available para `True`.\n\n1. Adicione um método `return_book`. Neste método, defina `self.available` como `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos exibir as informações sobre um determinado livro.\n\n1. Adicione um método `display_info`. Use uma f-string e a função `print` para imprimir as informações do livro.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 129541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "É hora de colocar a classe `Book` para funcionar.\n\n1. Crie três variáveis: `book1`, `book2`, `book3`. Atribua a elas três livros diferentes e dê a cada um títulos e valores de autor diferentes.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 129542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, crie uma lista chamada `books` e coloque todos os livros na lista.\n\n1. Crie uma lista chamada `books` e adicione `book1`, `book2` e `book3` a ela.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 129543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, use um loop for para exibir as informações de cada livro na lista `books`.\n\n1. Use um loop for para iterar pela lista `books`. Chame o método `display_info` para cada livro.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]\nfor book in books:\n  book.display_info()"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}