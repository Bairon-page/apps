{
  "tutorial": {
    "id": 2803,
    "version": 3,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "TypeScript Intermediário",
    "descriptionContent": "Pratique o que você aprendeu até agora",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14802,
        "title": "TypeScript Intermediário",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 130682,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Faça uso do alias de tipo definido.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Name = \" /><text value=\"string\" class=\"built_in\" /><text value=\"; \" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" studentName: Name;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"string\" /></content></option><option correct=\"false\"><content><text value=\"Name\" /></content></option><option startIndex=\"38\" endIndex=\"42\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Name</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 131194,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual é o principal objetivo de uma interface em TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para definir a estrutura de um objeto</item><item value=\"2\" correct=\"false\">Para realizar operações matemáticas</item><item value=\"3\" correct=\"false\">Para manipular diretamente o DOM</item><item value=\"4\" correct=\"false\">Para executar código assíncrono</item></selection><p visible-if=\"wrong\">Para definir a estrutura de um objeto.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 131197,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Certifique-se de que <code>age</code> seja uma propriedade opcional.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age?: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"41\" /><option correct=\"false\"><content><text value=\"!\" /></content></option><option correct=\"false\"><content><text value=\"|\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>?</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130691,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual das seguintes é uma definição de interface válida?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>interface Student { name: string }</code></item><item value=\"2\" correct=\"false\"><code>interface { name: string }</code></item><item value=\"3\" correct=\"false\"><code>type Student { name: string }</code></item><item value=\"4\" correct=\"false\"><code>interface Student = { name: string }</code></item></selection><p visible-if=\"wrong\"><code>interface Student { name: string }</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 131199,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Preencha as lacunas para completar a interface <code>User</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" User {\" /><text type=\"break\" /><text value=\" username: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" password: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"45\" /><option startIndex=\"28\" endIndex=\"34\" /><option correct=\"false\"><content><text value=\"=\" /></content></option><option correct=\"false\"><content><text value=\"&amp;&amp;\" /></content></option></options></interaction></interactions><output><content><text value=\"/home/default/code/file.js:1\" /><text type=\"break\" /><text value=\"interface User {\" /><text type=\"break\" /><text value=\"          ^^^^\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"SyntaxError: Unexpected identifier\" /><text type=\"break\" /><text value=\"    at wrapSafe (internal/modules/cjs/loader.js:915:16)\" /><text type=\"break\" /><text value=\"    at Module._compile (internal/modules/cjs/loader.js:963:27)\" /><text type=\"break\" /><text value=\"    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\" /><text type=\"break\" /><text value=\"    at Module.load (internal/modules/cjs/loader.js:863:32)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\" /><text type=\"break\" /><text value=\"    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:60:12)\" /><text type=\"break\" /><text value=\"    at internal/main/run_main_module.js:17:47\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>string</code> seguido de <code>password</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 131195,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual modificador você usaria para garantir que uma propriedade não possa ser alterada após a inicialização?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">readonly</item><item value=\"2\" correct=\"false\">opcional</item><item value=\"3\" correct=\"false\">público</item><item value=\"4\" correct=\"false\">privado</item></selection><p visible-if=\"wrong\">Certifique-se de escolher readonly.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 131198,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete o código e certifique-se de que <code>make</code> não possa ser alterado após ter sido definido inicialmente.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"interface\" class=\"keyword\" /><text value=\" Car {\" /><text type=\"break\" /><text value=\" readonly make: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" model: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"25\" /><option correct=\"false\"><content><text value=\"optional\" /></content></option><option correct=\"false\"><content><text value=\"constant\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>readonly</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130689,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual palavra-chave é usada para definir aliases de tipo?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>type</code></item><item value=\"2\" correct=\"false\"><code>implement</code></item><item value=\"3\" correct=\"false\"><code>interface</code></item><item value=\"4\" correct=\"false\"><code>readonly</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>type</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130687,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use a sintaxe correta de aliases de tipo para o tipo <code>Weapon</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Weapon = \" /><text value=\"&quot;sword&quot;\" class=\"string\" /><text value=\" | \" /><text value=\"&quot;bow&quot;\" class=\"string\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"23\" /><option correct=\"false\"><content><text value=\"&amp;\" /></content></option><option correct=\"false\"><content><text value=\"?\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>|</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130690,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual das seguintes afirmações sobre aliases de tipo é verdadeira?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um alias de tipo é uma maneira de fornecer um novo nome para um tipo</item><item value=\"2\" correct=\"false\">Um alias de tipo é usado para compilar código TypeScript em JavaScript</item><item value=\"3\" correct=\"false\">Um alias de tipo permite a manipulação direta do DOM</item><item value=\"4\" correct=\"false\">Um alias de tipo é usado para lidar com requisições HTTP em TypeScript</item></selection><p visible-if=\"wrong\">Um alias de tipo é uma maneira de fornecer um novo nome para um tipo.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131196,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Interfaces em TypeScript podem incluir métodos?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sim, interfaces em TypeScript podem incluir métodos</item><item value=\"2\" correct=\"false\">Não, interfaces em TypeScript são apenas para propriedades</item><item value=\"3\" correct=\"false\">Não, interfaces podem incluir apenas constantes</item><item value=\"4\" correct=\"false\">Não, interfaces são usadas apenas para definir tipos para funções</item></selection><p visible-if=\"wrong\">Sim, interfaces em TypeScript podem incluir métodos.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 131200,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Atribua um valor à variável <code>userId</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" ID = \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userId: ID = \" /><text value=\"123\" class=\"number\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"47\" endIndex=\"50\" /><option correct=\"false\"><content><text value=\"true\" /></content></option><option correct=\"false\"><content><text value=\"{ number: 123 }\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>123</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 131284,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que são aliases de tipo em TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Uma maneira de criar um novo nome para um tipo existente</item><item value=\"2\" correct=\"false\">Uma maneira de renomear variáveis</item><item value=\"3\" correct=\"false\">Uma maneira de definir classes</item><item value=\"4\" correct=\"false\">Uma maneira de criar funções</item></selection><p visible-if=\"wrong\">Uma maneira de criar um novo nome para um tipo existente.</p></body></html>"
          }
        ]
      }
    ]
  }
}