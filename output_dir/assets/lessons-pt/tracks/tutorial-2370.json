{
  "tutorial": {
    "id": 2370,
    "version": 3,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Funções",
    "descriptionContent": "Desafie-se com alguns exercícios sobre funções",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13841,
        "title": "Calcular Preço com Imposto",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Price with Tax",
            "id": 123347,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você está construindo uma aplicação web para um restaurante que calcula o preço total de um item após o imposto.\n\n1. Complete a função `calculate_tax` que recebe um preço específico e o atualiza com um imposto adicionado de 10%.\n2. Certifique-se de retornar o `price` atualizado após o cálculo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_tax(price):\n    ",
                  "solvedContent": "def calculate_tax(price):\n    price += price * 0.1\n    return price"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13846,
        "title": "Pode Nadar",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Can Swim",
            "id": 123359,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você vai dar um mergulho rápido na piscina, mas não suporta água fria. Vamos garantir que a temperatura da água esteja adequada para nadar!\n\n1. Dentro da função, escreva uma declaração `if else` para verificar a temperatura da água. Se a temperatura estiver acima de 30, retorne `True`. Caso contrário, retorne `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def can_swim(temperature):",
                  "solvedContent": "def can_swim(temperature):\n if temperature > 30:\n  return True\n else:\n  return False"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13848,
        "title": "Quantidade Total",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Total",
            "id": 123348,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "É seu aniversário e seus amigos decidiram te dar um pouco de dinheiro. Eles colocaram o dinheiro em um pote e te deram.\n\n1. Atualize a função `calculate_total` para **percorrer** todos os valores de dinheiro no pote, somá-los e retornar o `sum` total.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_total(jar):\n sum = 0\n \n\n",
                  "solvedContent": "def calculate_total(jar):\n sum = 0\n for money in jar:\n  sum += money\n return sum"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13847,
        "title": "O Jogo do Mago",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "The Wizard Spells",
            "id": 123360,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você trabalha no desenvolvimento de um jogo de magos. Sua tarefa é construir um modificador de dano para feitiços que os personagens podem lançar. Cada feitiço pode causar uma quantidade diferente de dano à `enemy_health`. Atualize a função `cast_spell`.\n\n1. Se o nome do feitiço for `\"Incendio\"`, defina `damage` como `30`\n2. Se o nome do feitiço for `\"Avda Kedavra\"`, defina `damage` como `100`\n3. Atualize a `enemy_health` subtraindo o `damage` de `enemy_health`.\n4. Retorne `enemy_health` da função.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n\n elif spell_name == 'Avada Kedavra':",
                  "solvedContent": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n  damage = 30\n elif spell_name == 'Avada Kedavra':\n  damage = 100\n enemy_health = enemy_health - damage\n return enemy_health"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13849,
        "title": "Verificar Disponibilidade em Estoque",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Check In Stock Availability",
            "id": 123374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você trabalha em uma loja de ótica. Sua tarefa é programar um código que verifica se há óculos suficientes no estoque. A função `check_stock` recebe uma lista `eyeglasses` como parâmetro e tem uma variável `in_stock` que é inicialmente definida como `False`.\n\n1. Se o número de óculos for maior ou igual a `5`, defina `in_stock` como `True` e imprima a mensagem `\"Eyeglasses in stock\"`.\n2. Caso contrário, imprima a mensagem `\"Out of stock\"`.\n3. Retorne a variável `in_stock` da função.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def check_stock(eyeglasses):\n in_stock = False\n",
                  "solvedContent": "def check_stock(eyeglasses):\n in_stock = False\n if (len(eyeglasses) >= 5):\n  in_stock = True\n  print(\"Eyeglasses in stock\")\n else:\n  print(\"Out of stock\")\n return in_stock\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}