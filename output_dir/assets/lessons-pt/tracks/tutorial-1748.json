{
  "tutorial": {
    "id": 1748,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Modo Escuro",
    "descriptionContent": "Construa um alternador de tema para ativar o modo escuro em uma página da web",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1748-icon-banner.svg",
    "chapters": [
      {
        "id": 11626,
        "title": "Modo Escuro",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro 2",
            "id": 106921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos usar nosso conhecimento de condicionais para construir uma página web com botões que alternam entre os modos claro, escuro e ninja.\n\nNeste projeto, vamos adicionar o código JavaScript que altera as variáveis `label`, `color` e `image` dependendo do modo selecionado.\n\nJá inicializamos as variáveis com alguns valores padrão. O que falta é você atualizá-las condicionalmente. Dê uma olhada no código antes de continuar.\n\n1. `mode` nos permitirá alternar entre os modos `dark`, `light` e `ninja` que definem a aparência da UI.\n2. `color` armazena a cor de fundo para o modo selecionado.\n3. `image` armazena o caminho para a imagem que será exibida para o modo selecionado.\n4. `label` informa ao usuário qual modo está sendo usado atualmente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\r\nlet color = \"ghostWhite\";\r\nlet image = \"/img/light-icon.png\";\r\nlet label = \"Light Mode\";",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "If statement",
            "id": 106888,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Como existem três modos, precisamos verificar o valor do modo.\n\nVamos começar criando uma declaração `if` que verifica se o `mode` é `\"dark\"`.\n\n1. Monte uma declaração `if` que verifica se a variável `mode` está definida como `\"dark\"`. Deixe seu bloco de código vazio por enquanto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `if` statement is :\n```javascript\nif (condition) {<code block>}\n```"
                }
              ]
            }
          },
          {
            "title": "Else If",
            "id": 106892,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sua próxima tarefa é verificar se o `mode` é `\"light\"`.\n\n1. Adicione uma declaração `else if` que execute quando `mode` for igual a `\"light\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\nelse if (mode === \"light\") {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `else if` is similar to that of an `if` statement.\n\nThe only difference is, you have to write `else if` instead of `if`."
                }
              ]
            }
          },
          {
            "title": "Else",
            "id": 106908,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mas e se o `mode` não for `\"light\"` ou `\"dark\"`? Para essa situação, vamos codificar uma declaração `else`.\n\n1. Adicione uma declaração `else` vazia que é executada quando `mode` não é `\"light\"` ou `\"dark\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\nelse if (mode === \"light\") {}\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {}\nelse if (mode === \"light\") {}\nelse {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An `else` statement has no condition."
                }
              ]
            }
          },
          {
            "title": "Dark Mode",
            "id": 106899,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "As variáveis devem ser atualizadas de forma diferente em cada modo.\n\n1. Quando `mode` é `\"dark\"`, `color` deve ser atualizado para `\"darkSlateBlue\"` no bloco de código.\n2. Em seguida, atualize `image` para `\"/img/dark-icon.png\"`.\n3. Finalmente, atualize `label` para `\"Dark Mode\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n   \n\n\n} else if (mode === \"light\") {\n} else {}",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n} else {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can change a variable's value simply by assigning a new value to it again.\nMake sure to omit the `let` when you reassign a variable."
                }
              ]
            }
          },
          {
            "title": "Light Mode",
            "id": 106917,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos também atualizar as variáveis quando o `mode` for `\"light\"`.\n\n1. Quando `mode` for `\"light\"`, `color` deve ser atualizado para `\"ghostWhite\"`.\n2. Em seguida, atualize `image` para `\"/img/light-icon.png\"`.\n3. Finalmente, atualize `label` para `\"Light Mode\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  \n\n\n} else {}",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Ninja Mode",
            "id": 106916,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, é hora de atualizar as variáveis no bloco de código da declaração `else`.\n\n1. No bloco de código da declaração `else`, atualize `color` para `\"dimGray\"`.\n2. Em seguida, atualize `image` para `\"/img/ninja-icon.png\"`.\n3. Finalmente, atualize `label` para `\"Ninja Mode\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n   \n\n\n}",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Display current mode",
            "id": 106898,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora veremos sua condicional em ação.\n\n1. Imprima a variável `label` no console, ao final do seu código.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\n",
                  "solvedContent": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\nconsole.log(label);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Switch theme",
            "id": 106914,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, quando `mode` tem valores diferentes, os valores de `image`, `color` e `label` para o nosso programa mudam.\n\n1. Altere o valor da variável `mode` para `\"ninja\"` atualizando-o antes da declaração condicional ou substituindo o valor na inicialização da variável.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let mode = \"light\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\nconsole.log(label);",
                  "solvedContent": "let mode = \"ninja\";\nlet color = \"ghostWhite\";\nlet image = \"/img/light-icon.png\";\nlet label = \"Light Mode\";\nif (mode === \"dark\") {\n  color = \"darkSlateBlue\";\n  image = \"/img/dark-icon.png\";\n  label = \"Dark Mode\";\n} else if (mode === \"light\") {\n  color = \"ghostWhite\";\n  image = \"/img/light-icon.png\";\n  label = \"Light Mode\";\n} else {\n  color = \"dimGray\";\n  image = \"/img/ninja-icon.png\";\n  label = \"Ninja Mode\";\n}\nconsole.log(label);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}