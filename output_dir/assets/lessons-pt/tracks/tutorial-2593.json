{
  "tutorial": {
    "id": 2593,
    "version": 15,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Jogo de Adivinhação - Parte 1",
    "descriptionContent": "Construa seu próprio jogo! Nesta primeira parte, vamos preparar o cenário criando a lógica básica do jogo. É tudo sobre definir as regras e deixar os jogadores darem o seu melhor.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2593-icon-banner.svg",
    "chapters": [
      {
        "id": 14367,
        "title": "Aprender",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro",
            "id": 127993,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bem-vindo ao **Jogo de Adivinhação**, onde você vai construir seu próprio jogo. O *Jogo de Adivinhação*, como você deve ter adivinhado, é sobre adivinhar o número correto.\n\n1. Comece criando a estrutura básica de um documento HTML. Inclua as tags `<!doctype HTML>`, `html`, `head` e `body`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title",
            "id": 127994,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Adicione um título para sua página web. Que tal *Jogo de Adivinhação*? Ou escolha algo que você goste mais!\n\n1. Adicione tags `title` na seção `head`.\n2. Adicione um título entre as tags `title` recém-adicionadas.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Container",
            "id": 127995,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos adicionar um container que usaremos para exibir o conteúdo do jogo.\n\n1. Adicione um container `<div>` para o jogo dentro da seção `<body>`.\n2. Para o `div`, defina a `class` como `\"container\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title and description",
            "id": 127996,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos adicionar um cabeçalho e um parágrafo ao container.\n\n1. Adicione um elemento `h1` para exibir o nome do jogo.\n2. Adicione um parágrafo para explicar as regras do jogo. (Por exemplo, `Adivinhe um número entre 1 e 100`.)",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Input and button",
            "id": 127997,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para permitir que seus jogadores interajam com o jogo, precisaremos de elementos interativos.\n\n1. Adicione um campo `<input>` onde os jogadores digitarão seus palpites. Defina seu tipo como `\"number\"` e dê a ele o id `\"guess\"`.\n2. Adicione um botão para os jogadores enviarem seus palpites.\n3. Por último, mas não menos importante, adicione um parágrafo vazio com o id `\"feedback\"` que usaremos para feedback.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Testing JavaScript",
            "id": 128876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Temos todo o HTML de que precisamos. Antes de começarmos a escrever nossa lógica, devemos tentar ver se vinculamos o elemento JavaScript corretamente.\n\n1. Adicione uma instrução `console.log` para imprimir algo no console.\n2. No arquivo HTML, vincule o arquivo JS ao arquivo HTML adicionando `<script src=\"script.js\"></script>` logo antes da tag de fechamento `</body>`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "console.log(\"Hello!\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Interaction",
            "id": 127998,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, vamos começar a adicionar a lógica ao jogo.\n\n1. Adicione uma função vazia `checkGuess` ao arquivo JS.\n2. De volta ao nosso arquivo HTML, chame a função com um clique no botão adicionado.\n3. Certifique-se de que a instrução `console.log` para imprimir algo no console agora seja executada ao clicar no botão.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "console.log(\"Hello!\");",
                  "solvedContent": "function checkGuess() {\n  console.log(\"Hello!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "References",
            "id": 128000,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Na nossa função `checkGuess`, precisamos obter referências para os elementos de input e feedback.\n\n1. Crie duas variáveis chamadas `inputElement` e `feedbackElement`.\n2. Use `document.getElementById()` com os ids corretos para obter referências aos dois elementos.\n3. Se quiser, remova a instrução de impressão de antes.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  console.log(\"Hello!\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById('guess');\n  const feedbackElement =  document.getElementById(\"feedback\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Guessing",
            "id": 128001,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, extraia o valor do campo de entrada, que representa o palpite.\n\n1. Use `.value` para acessar o valor do `inputElement`.\n2. Salve o valor em uma nova variável criada chamada `guess`.\n\nO código adicionado deve se parecer com isto: `let guess = inputElement.value;`",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Random number",
            "id": 128002,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Temos o palpite do jogador, mas o que ainda falta é o número aleatório que queremos que o jogador adivinhe. JS nos permite fazer isso com uma linha que pode parecer um pouco complicada no início, mas tenha paciência.\n\n1. No topo do arquivo, fora da função, adicione o seguinte código:\n   ```JavaScript\n   let randomNumber = Math.floor(Math.random() * 100) + 1;\n   ```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": [
                {
                  "title": "What does this code do?",
                  "content": "Math.random() generates a decimal between 0 (inclusive) and 1 (exclusive). Multiplying by 100 gives a range from 0 to just under 100. Math.floor() rounds this down to a whole number between 0 and 99, and adding 1 shifts this range to between 1 and 100."
                }
              ]
            }
          },
          {
            "title": "Comparing",
            "id": 128003,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Temos um número aleatório e temos um palpite. Agora podemos comparar o palpite com o número aleatório. Vamos começar com o bloco *if else*.\n\n1. Dentro da função, abaixo da variável `guess`, adicione um bloco `if` para comparar se `guess` é igual a `randomNumber`.\n2. Adicione um bloco `else if` para verificar se `guess` é menor que `randomNumber`.\n3. Finalmente, adicione um bloco `else` para capturar o último caso restante (`guess` sendo maior que `randomNumber`).",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (randomNumber == guess){\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #1",
            "id": 128004,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para dar ao nosso jogador o feedback correto, dentro dos blocos de código da declaração condicional, queremos alterar o `feedbackElement` de acordo.\n\n1. Dentro do bloco `if`, defina o `innerHTML` do `feedbackElement` para uma mensagem de sucesso para indicar que o jogador adivinhou o número corretamente!\n2. Use `feedbackElement.style.color` e atribua a cor `\"green\"` para indicar ainda mais o sucesso.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #2",
            "id": 128005,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Provavelmente você também vai querer informar ao jogador se o palpite foi muito baixo ou muito alto. Vamos fazer isso dando o feedback nos blocos `else if` e `else`.\n\n1. Defina `feedbackElement.innerHTML` como `\"Too low! Try again.\"` ou `\"Too high! Try again.\"`.\n2. Altere a cor do `feedbackElement` para vermelho nesses casos.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Stylesheet",
            "id": 128006,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Como etapa final, vamos adicionar uma folha de estilo.\n\n1. Linke a folha de estilo `style.css` dentro da tag `head`.\n2. Adicione estilos ao jogo como desejar.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: gold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n\n.container {\n    background-color: white;\n    padding: 40px;\n    border-radius: 8px;\n    box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.1);\n    text-align: center;\n    width: 320px;\n    max-width: 90%;\n}\n\ninput {\n    width: 80%;\n    padding: 12px;\n    font-size: 24px;\n    margin-bottom: 12px;\n}\n\nbutton {\n    width: 100%;\n    padding: 12px;\n    font-weight: bold;\n    background-color: blue;\n    border: 2px solid blue;\n    color: white;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: white;\n    color: blue;\n}\n"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}