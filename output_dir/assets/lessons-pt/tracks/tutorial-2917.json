{
  "tutorial": {
    "id": 2917,
    "version": 4,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Construindo um App Express 2",
    "descriptionContent": "Construindo um App Express 2",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13379,
        "title": "Construindo um App Express 2",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Question: req.params",
            "id": 120474,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual é a sintaxe correta para acessar um parâmetro chamado <code>comment</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>req.params.comment</code></item><item value=\"2\" correct=\"false\"><code>req.params = comment</code></item><item value=\"3\" correct=\"false\"><code>req.params.get(comment)</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>req.params.comment</code>.</p></body></html>"
          },
          {
            "title": "Example: req.params.name",
            "id": 121775,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete o código para exibir o nome do animal usando o parâmetro do caminho da solicitação GET.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/animal/:name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Name: \" /><text value=\"${req.params.name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"195\" endIndex=\"206\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name: Tabby\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>params.name</code>.</p></body></html>"
          },
          {
            "title": "Question: Route Parameters",
            "id": 120507,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como informamos ao Express que estamos adicionando parâmetros dinâmicos a uma rota específica?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Adicionando um <code>:</code> seguido pelo nome do parâmetro</item><item value=\"2\" correct=\"false\">Adicionando um <code>_</code> seguido pelo nome do parâmetro</item><item value=\"3\" correct=\"false\">Adicionando um <code>$</code> seguido pelo nome do parâmetro</item></selection><p visible-if=\"wrong\">Adicionando um <code>:</code> seguido pelo nome do parâmetro.</p></body></html>"
          },
          {
            "title": "Question: Multiple Params",
            "id": 120192,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quantos atributos são acessados a partir do objeto <code>req.params</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/profiles/:id/profile/:user_name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`Hello from the user with the id \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\" and the name of \" /><text value=\"${req.params.user_name}\" class=\"subst\" /><text value=\"`\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">2</item><item value=\"2\" correct=\"false\">3</item><item value=\"3\" correct=\"false\">4</item><item value=\"4\" correct=\"false\">1</item></selection><p visible-if=\"wrong\">Certifique-se de escolher 2.</p></body></html>"
          },
          {
            "title": "Example: Static Routing Limitations",
            "id": 120189,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que o diretório <code>computers</code> representa?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"'Hello from the root directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/products'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"'Hello from the products directory!'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"'/products/computers'\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"'Now accessing the computers directory'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'The server is up on port 3000'\" class=\"string\" /><text value=\"));\" /><text type=\"break\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um subdiretório do diretório de produtos</item><item value=\"2\" correct=\"false\">Um filtro adicionado ao diretório de produtos</item><item value=\"3\" correct=\"false\">Uma consulta para buscar computadores específicos no diretório de produtos</item><item value=\"4\" correct=\"false\">Uma maneira de atualizar os pacotes nos computadores usados</item></selection><p visible-if=\"wrong\">Um subdiretório do diretório de produtos.</p></body></html>"
          },
          {
            "title": "Example: Route Parameters",
            "id": 120190,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique um parâmetro <code>item_id</code> na rota <code>store</code>. Lembre-se de colocar dois pontos na frente do nome do parâmetro.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/store/:item_id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Accessing an item with a dynamic id&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port 3000`\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"76\" endIndex=\"84\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Accessing an item with a dynamic id\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>:item_id</code>.</p></body></html>"
          },
          {
            "title": "Question: Destructuring Multiple Params",
            "id": 120509,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que é uma rota no Express?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um caminho que atua como um endpoint para lidar com solicitações</item><item value=\"2\" correct=\"false\">Uma rota que salva dados do usuário</item><item value=\"3\" correct=\"false\">Um caminho lida com respostas</item></selection><p visible-if=\"wrong\">Um caminho que atua como um endpoint para lidar com solicitações.</p></body></html>"
          },
          {
            "title": "Question: Route Paths",
            "id": 120188,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual das seguintes opções <strong>não</strong> é um tipo de dado válido para um caminho de rota?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um número</item><item value=\"2\" correct=\"false\">Uma string</item><item value=\"3\" correct=\"false\">Um padrão de string</item><item value=\"4\" correct=\"false\">Uma expressão regular</item></selection><p visible-if=\"wrong\">Um número.</p></body></html>"
          },
          {
            "title": "Example: req.params",
            "id": 120193,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Acesse o parâmetro <code>title</code> do objeto de solicitação para imprimi-lo na mensagem.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/products/:id/product/:title&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`You are now accessing the product with the title: \" /><text value=\"${req.params.title}\" class=\"subst\" /><text value=\"`\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port 3000`\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"182\" endIndex=\"198\" /></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>req.params.title</code>.</p></body></html>"
          },
          {
            "title": "Question: Accessing Specific Endpoints",
            "id": 120508,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como obtemos informações do diretório raiz em um aplicativo Express?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Chamando o método get na rota <code>/</code></item><item value=\"2\" correct=\"false\">Chamando o método get na rota <code>/root</code></item><item value=\"3\" correct=\"false\">Chamando o método get na rota <code>root/</code></item></selection><p visible-if=\"wrong\">Chamando o método get na rota <code>/</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}