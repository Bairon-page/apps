{
  "tutorial": {
    "id": 1740,
    "version": 17,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Programa de Recibo",
    "descriptionContent": "Aprenda a usar Loops para criar um programa de recibo de cliente",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1740-icon-banner.svg",
    "chapters": [
      {
        "id": 11608,
        "title": "Programa de Recibo",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Setup Element Identifiers",
            "id": 106886,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos usar nosso conhecimento de loops, arrays e funções para processar dados complexos e criar um resumo de recibos de clientes.\n\nPara preencher a tabela de resumo com dados, adicionamos IDs de elementos ao longo do HTML.\n- A linha de cabeçalho da tabela conterá os nomes dos clientes e deve ter `id` s de `customer0`, `customer1`, `customer2`.\n- A primeira linha de dados da tabela conterá a lista de itens do recibo e deve ter `id` s de `receipt0`, `receipt1`, `receipt2`.\n- A segunda linha de dados da tabela conterá o total do recibo e deve ter `id` s de `total0`, `total1`, `total2`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  // Your code starts here\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Loop through Customers",
            "id": 106876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, vamos trabalhar na análise dos dados. Dentro da função `populateTable()`, começaremos escrevendo um loop for para iterar pelo array `customers`. Nomeie a variável iteradora como `i`.\n\n1. Escreva um loop for para iterar de 0 até o último índice do array `customers`.\n2. Dentro do corpo do loop for, use `console.log()` na variável iteradora `i` para verificar se o seu loop está funcionando.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Customer & Receipt Data",
            "id": 106877,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A cada iteração, faça com que seu código salve os dados correspondentes de `customers` e `receipts` em variáveis.\n\n1. Primeiro, dentro do novo loop, remova a instrução `console.log()` que você adicionou na etapa anterior.\n2. Dentro do loop, crie uma variável `customer` e defina-a com o valor do elemento atual de `customers` usando a notação de colchetes.\n3. Crie uma variável `receipt` e defina-a com o valor do elemento atual de `receipts` usando a notação de colchetes.\n4. Por fim, `console.log()` a variável `customer`, e na linha seguinte `console.log()` a variável `receipt`, para verificar se você iterou corretamente por cada array.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an array's elements using bracket syntax: `array[index]`. Remember that arrays are indexed starting at 0."
                }
              ]
            }
          },
          {
            "title": "Setup Receipt Processing",
            "id": 106878,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nosso programa precisará processar os dados do recibo e dos preços. Dentro do loop `for`, abaixo das variáveis `customer` e `receipt`, configure mais duas variáveis: uma para armazenar uma string dos itens do recibo e outra para armazenar o total do recibo.\n\n1. Primeiro, remova as declarações `console.log()` que você adicionou na última etapa.\n2. Crie uma variável `receipt_list` e atribua a ela uma string vazia. Certifique-se de usar `let` e não `const`, pois o valor será reassignado mais tarde.\n3. Crie uma variável `sum` e atribua a ela um valor de 0. Certifique-se de que esta variável também seja uma variável `let`.\n4. Por fim, registre a variável `receipt_list` seguida pela variável `sum` no console para garantir que seu loop esteja funcionando corretamente.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An empty string is `\"\"`."
                }
              ]
            }
          },
          {
            "title": "Loop through Receipt Data",
            "id": 106879,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos agora processar os dados do recibo. Escreva um loop `for` para iterar através da variável `receipt` que você salvou anteriormente. Nomeie a variável iteradora como `j`.\n\n1. Primeiro, remova as declarações `console.log()` que você adicionou na última etapa.\n2. Após inicializar a variável `sum`, escreva um loop `for` para iterar de 0 até o índice final da variável `receipt`. Lembre-se de usar `j` como a variável iteradora.\n3. Dentro do corpo do loop `for`, use `console.log` na variável iteradora para verificar se o seu loop está funcionando.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Receipt Data",
            "id": 106880,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dentro do loop `for` que você escreveu para iterar através do conteúdo de `receipt`, salve o nome do item e seu preço em variáveis a cada iteração.\n\n1. Primeiro, remova a declaração `console.log()` que você adicionou na última etapa.\n2. Crie uma variável `item` e salve os dados correspondentes de `receipt` (usando a variável iteradora do loop for).\n3. Crie uma variável `price` e salve os dados correspondentes de `prices` (usando `item` como índice).\n4. Finalmente, `console.log()` ambas as variáveis (`item` e `price`) para verificar se você está iterando corretamente por cada array. Faça o console log de cada uma em uma declaração separada.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Build the Receipt List",
            "id": 106881,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que os dados estão divididos, construa a lista de itens do recibo. Em cada iteração do segundo loop `for`, concatene o `item` com a variável `receipt_list` e um caractere de nova linha ( `\"\\n\"` ).\n\n1. Primeiro, remova as declarações `console.log()` que você adicionou na última etapa.\n2. Defina `receipt_list` igual a `receipt_list` concatenado com o `item` e um caractere de nova linha ( `\"\\n\"` ).\n3. Finalmente, registre a variável `receipt_list` no console para garantir que seu loop está funcionando adequadamente.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To concatenate item and add a new line character, write \n```javascript\n  receipt_list += item + \"\\n\";\n```"
                }
              ]
            }
          },
          {
            "title": "Sum the Prices",
            "id": 106882,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, adicione o `price` do item à variável `sum`. Depois, fora do segundo loop for, use `console.log()` para exibir as variáveis `receipt_list` e `sum`.\n\n1. Primeiro, remova a instrução `console.log()` que você adicionou na última etapa.\n2. Defina `sum` igual a `sum` mais o `price`.\n3. Fora do segundo loop for, use `console.log()` para exibir a variável `receipt_list` seguida pela variável `sum`. Use duas instruções `console.log` para isso.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Plan out Table Population",
            "id": 106884,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Podemos agora preencher a tabela. Faremos isso com uma função chamada `setElementText` que recebe dois parâmetros: `id` e `text`.\n\nVamos primeiro planejar o direcionamento dos elementos e os valores a serem preenchidos.\n\n1. Primeiro, remova as instruções `console.log()` que você adicionou na última etapa.\n2. Escreva instruções `console.log` (após o segundo loop for, mas ainda dentro do primeiro loop for) para registrar o `id` do elemento alvo junto com os dados que queremos preencher. Veja abaixo o código necessário para fazer isso.\n3. Complete isso para as variáveis `customer`, `receipt_list` e `sum`. No total, você deve ter 9 mensagens `console.log` quando o loop for concluído.\n\n```javascript\nconsole.log(\"customer\" + i.toString(), customer);\nconsole.log(\"receipt\" + ...\nconsole.log(\"total\" + ...\n```\nCertifique-se de usar as strings \"customer\", \"receipt\" e \"total\" para seus respectivos logs de console, conforme mostrado acima.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can consult index.html if you have trouble remembering the identifier naming conventions.\nTo convert an integer to a string, you can use the built-in JavaScript function `toString()`."
                }
              ]
            }
          },
          {
            "title": "Populate Receipt List & Sum",
            "id": 106885,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, use a função `setElementText` para preencher o nome do cliente (da variável `customer`), os itens (da variável `receipt_list`) e o total (da variável `sum`).\n\n1. Primeiro, remova as instruções `console.log()` que você adicionou na última etapa.\n2. Preencha a linha `Customer` da tabela usando a função `setElementText()`.\n3. Preencha a linha `Items` da tabela usando a função `setElementText()`.\n4. Preencha a linha `total` da tabela usando a função `setElementText()`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    setElementText(\"customer\" + i.toString(), customer);\n    setElementText(\"receipt\" + i.toString(), receipt_list);\n    setElementText(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To populate the `Customer` row, code the following\n```javascript\nsetElementText(\"customer\" + i.toString(), customer);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}