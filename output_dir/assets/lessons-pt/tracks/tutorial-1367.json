{
  "tutorial": {
    "id": 1367,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Operações com Conjuntos",
    "descriptionContent": "operações de conjuntos",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9978,
        "title": "Subconjunto",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Length",
            "id": 89324,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assim como com listas, podemos obter o tamanho de um conjunto como <code>friends</code> com a instrução <code>len()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rob&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"print(len(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"48\" /><option startIndex=\"48\" endIndex=\"49\" /><option startIndex=\"49\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"57\" /></options></interaction></interactions><output><content><text value=\"4\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>len</code> seguido de <code>(</code> e depois <code>friends</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Subset",
            "id": 89325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando <em>todos</em> os elementos de um conjunto como <code>chat</code> estão presentes em outro conjunto como <code>friends</code>, dizemos que <code>chat</code> é um <strong>subconjunto</strong> de <code>friends</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rob&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"chat = {\" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"39\" endIndex=\"43\" /><option startIndex=\"44\" endIndex=\"45\" /><option startIndex=\"46\" endIndex=\"59\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>chat</code> seguido de <code>=</code> e finalmente <code>{\"Jen\", \"Ed\"}</code>.</p></body></html>"
          },
          {
            "title": "Is subset",
            "id": 89326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para verificar se um conjunto como <code>chat</code> é um subconjunto de outro, como <code>friends</code>, nós codificamos <code>chat</code>, depois <code>.issubset()</code>, com <code>friends</code> entre parênteses.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rob&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"chat = {\" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(chat.issubset(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"89\" /></options></interaction></interactions><output><content><text value=\"True\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>chat</code> seguido de <code>.issubset</code> e finalmente <code>(friends)</code>.</p></body></html>"
          },
          {
            "title": "True or False",
            "id": 89327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>issubset()</code> retorna <code>True</code> se o conjunto à esquerda for um subconjunto do da direita, e <code>False</code> caso contrário, como aqui com <code>study_group</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rob&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"study_group = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Lisa&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(study_group.issubset(friends))\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"77\" endIndex=\"88\" /></interactions><output><content><text value=\"False\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>study_group</code>.</p></body></html>"
          },
          {
            "title": "Save in variable",
            "id": 89339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos salvar o booleano fornecido por <code>issubset()</code> em uma variável, como <code>are_friends</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rob&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"study_group = {\" /><text value=\"&quot;Emma&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Lisa&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"are_friends = study_group.issubset(friends)\" /><text type=\"break\" /><text value=\"print(are_friends)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"82\" /><option startIndex=\"83\" endIndex=\"84\" /></options></interaction></interactions><output><content><text value=\"False\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>are_friends</code> seguido de <code>=</code>.</p></body></html>"
          },
          {
            "title": "Question: Length",
            "id": 89423,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como podemos descobrir quantos elementos um conjunto contém?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Com a instrução <code>len()</code> para encontrar o comprimento do conjunto</item><item value=\"2\" correct=\"false\">Não podemos saber quantos elementos um conjunto contém</item></selection><p visible-if=\"wrong\">Com a instrução <code>len()</code> para encontrar o comprimento do conjunto.</p></body></html>"
          },
          {
            "title": "Question: Subset",
            "id": 89424,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando dizemos que um conjunto é um subconjunto de outro?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Quando todos os elementos do conjunto estão presentes no outro</item><item value=\"2\" correct=\"false\">Quando alguns dos elementos do conjunto estão presentes no outro</item></selection><p visible-if=\"wrong\">Quando todos os elementos do conjunto estão presentes no outro.</p></body></html>"
          },
          {
            "title": "Question: Is subset",
            "id": 89425,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como podemos verificar se um conjunto é um subconjunto de outro?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Com a instrução <code>issubset()</code></item><item value=\"2\" correct=\"false\">Comparando os comprimentos de ambos os conjuntos</item></selection><p visible-if=\"wrong\">Com a instrução <code>issubset()</code>.</p></body></html>"
          },
          {
            "title": "Question: True or False",
            "id": 89426,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que <code>issubset()</code> nos dá quando o conjunto é um subconjunto de outro?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">O valor booleano <code>True</code></item><item value=\"2\" correct=\"false\">Os elementos do subconjunto</item></selection><p visible-if=\"wrong\">O valor booleano <code>True</code>.</p></body></html>"
          },
          {
            "title": "Question: Save in variable",
            "id": 89427,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como podemos reutilizar o valor que obtemos ao usar <code>issubset()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nós armazenamos isso em uma variável</item><item value=\"2\" correct=\"false\">Não podemos reutilizá-lo, só podemos exibi-lo</item></selection><p visible-if=\"wrong\">Nós armazenamos isso em uma variável.</p></body></html>"
          },
          {
            "title": "Example: Length",
            "id": 89428,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use <code>len()</code> para obter o comprimento do conjunto <code>invitations</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"invitations = {\" /><text value=\"&quot;Meg&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Alex&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Lee&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;\" /><text value=\"{len(invitations)}\" class=\"subst\" /><text value=\" invitations sent&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"47\" endIndex=\"63\" /></interactions><output><content><text value=\"3 invitations sent\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>len(invitations)</code>.</p></body></html>"
          },
          {
            "title": "Example: Subset",
            "id": 89429,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Salve um conjunto em <code>pets</code>, de modo que <code>pets</code> seja um subconjunto de <code>animals</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"animals = {\" /><text value=\"&quot;whale&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;giraffe&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"pets = {\" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"{&quot;dog&quot;, &quot;turtle&quot;}\" /></content></option><option correct=\"false\"><content><text value=\"{&quot;dog&quot;, &quot;cat&quot;, &quot;bird&quot;}\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>{\"dog\", \"cat\"}</code>.</p></body></html>"
          },
          {
            "title": "Example: Is subset",
            "id": 89430,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use <code>issubset()</code> para verificar se <code>pets</code> é um subconjunto de <code>animals</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"animals = {\" /><text value=\"&quot;whale&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;giraffe&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"pets = {\" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"print(pets.issubset(animals))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"79\" /><option startIndex=\"79\" endIndex=\"87\" /><option startIndex=\"87\" endIndex=\"88\" /><option startIndex=\"88\" endIndex=\"95\" /><option startIndex=\"95\" endIndex=\"96\" /></options></interaction></interactions><output><content><text value=\"True\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>pets</code> seguido de <code>.</code> e depois <code>issubset</code>, <code>(</code>, <code>animals</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: True or False",
            "id": 89431,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Salve um conjunto em <code>capitals</code>, de modo que o <code>False</code> seja exibido no console.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"cities = {\" /><text value=\"&quot;Kyoto&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Nice&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Madrid&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Oslo&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"capitals = {\" /><text value=\"&quot;Madrid&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paris&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(capitals.issubset(cities))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"75\" /><option correct=\"false\"><content><text value=\"{&quot;Madrid&quot;, &quot;Oslo&quot;, &quot;Nice&quot;}\" /></content></option></options></interaction></interactions><output><content><text value=\"False\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>{\"Madrid\", \"Paris\"}</code>.</p></body></html>"
          },
          {
            "title": "Example: Save in variable",
            "id": 89432,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Salve o booleano retornado usando <code>issubset()</code> na variável <code>is_subset</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"cities = {\" /><text value=\"&quot;Kyoto&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Nice&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Madrid&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Oslo&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"capitals = {\" /><text value=\"&quot;Madrid&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paris&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"is_subset = capitals.issubset(cities)\" /><text type=\"break\" /><text value=\"print(is_subset)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"77\" endIndex=\"88\" /></interactions><output><content><text value=\"False\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>is_subset =</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 9979,
        "title": "União e Interseção",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Union",
            "id": 89329,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos unir dois conjuntos como <code>classmates</code> e <code>friends</code> usando <code>.union()</code>, como aqui com <code>classmates.union(friends)</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classmates.union(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"61\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"86\" /></options></interaction></interactions><output><content><text value=\"{'Don', 'Paul', 'Sue'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>classmates</code> seguido de <code>.union</code> e finalmente <code>(friends)</code>.</p></body></html>"
          },
          {
            "title": "No duplicates",
            "id": 89330,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>union()</code> nos dá um novo conjunto sem duplicatas, mesmo que alguns elementos estejam presentes em ambos os conjuntos originais, como <code>\"Sue\"</code> aqui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classmates.union(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"47\" endIndex=\"52\" /><option startIndex=\"14\" endIndex=\"19\" /></options></interaction></interactions><output><content><text value=\"{'Paul', 'Sue', 'Don'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"Sue\"</code> seguido de <code>\"Sue\"</code>.</p></body></html>"
          },
          {
            "title": "Intersection",
            "id": 89331,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Da mesma forma, podemos usar <code>intersection()</code> para criar um conjunto de elementos que estão presentes em <em>ambos</em> os conjuntos, como <code>\"Sue\"</code> e <code>\"Luke\"</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Luke&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Luke&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classmates.intersection(friends))\" /></content><output><content><text value=\"{'Sue', 'Luke'}\" /></content></output></code></body></html>"
          },
          {
            "title": "Union vs Intersection",
            "id": 89332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Enquanto <code>union()</code> nos dá todos os elementos dos dois conjuntos, <code>intersection()</code> nos dá apenas os comuns.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Luke&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Luke&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Union:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(classmates.union(friends))\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Intersection:&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(classmates.intersection(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"109\" /><option startIndex=\"161\" endIndex=\"173\" /></options></interaction></interactions><output><content><text value=\"Union:\" /><text type=\"break\" /><text value=\"{'Paul', 'Sue', 'Luke', 'Don'}\" /><text type=\"break\" /><text value=\"Intersection\" /><text type=\"break\" /><text value=\"{'Sue', 'Luke'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>union</code> seguido de <code>intersection</code>.</p></body></html>"
          },
          {
            "title": "Save in variable",
            "id": 89338,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos salvar os conjuntos dados por <code>union()</code> e <code>intersection()</code> em variáveis como <code>everybody</code> para <code>union()</code> e <code>common</code> para <code>intersection()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Luke&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Luke&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"everybody = classmates.union(friends)\" /><text type=\"break\" /><text value=\"print(everybody)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"common = classmates.intersection(friends)\" /><text type=\"break\" /><text value=\"print(common)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"72\" endIndex=\"81\" /><option startIndex=\"128\" endIndex=\"134\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>everybody</code> seguido de <code>common</code>.</p></body></html>"
          },
          {
            "title": "Question: Union",
            "id": 89441,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual instrução usamos para unir os elementos de dois conjuntos em um novo conjunto?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>union()</code></item><item value=\"2\" correct=\"false\"><code>issubset()</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>union()</code>.</p></body></html>"
          },
          {
            "title": "Question: No duplicates",
            "id": 89442,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quantos elementos <code>all_flights</code> tem?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"arrivals = {\" /><text value=\"&quot;JL5273&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;NH5753&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"departures = {\" /><text value=\"&quot;AA5827&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;BA4616&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"all_flights = arrivals.union(departures)\" /><text type=\"break\" /><text value=\"print(all_flights)\" /></content><output><content><text value=\"{'JL5273', 'BA4616', 'NH5753', 'AA5827'}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Quatro</item><item value=\"2\" correct=\"false\">Dois</item></selection><p visible-if=\"wrong\">Certifique-se de escolher Quatro.</p></body></html>"
          },
          {
            "title": "Question: Intersection",
            "id": 89443,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que instrução usamos para criar um conjunto dos elementos comuns entre dois conjuntos?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>intersection()</code></item><item value=\"2\" correct=\"false\"><code>union()</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>intersection()</code>.</p></body></html>"
          },
          {
            "title": "Question: Union vs Intersection",
            "id": 89444,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como o conjunto <code>destinations</code> poderia ter sido criado?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"visited = {\" /><text value=\"&quot;Paris&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;New York&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tokyo&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"holiday_plans = {\" /><text value=\"&quot;Rome&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paris&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"destinations = {\" /><text value=\"&quot;Paris&quot;\" class=\"string\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Usando <code>intersection()</code> com <code>visited</code> e <code>holiday_plans</code></item><item value=\"2\" correct=\"false\">Usando <code>union()</code> com <code>visited</code> e <code>holiday_plans</code></item></selection><p visible-if=\"wrong\">Usando <code>intersection()</code> com <code>visited</code> e <code>holiday_plans</code>.</p></body></html>"
          },
          {
            "title": "Question: Save in variable",
            "id": 89445,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como podemos reutilizar o conjunto retornado por <code>union()</code> ou <code>intersection()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ao atribuir a instrução a uma variável, que na verdade salva o resultado</item><item value=\"2\" correct=\"false\">Exibindo e depois codificando nós mesmos</item></selection><p visible-if=\"wrong\">Ao atribuir a instrução a uma variável, que na verdade salva o resultado.</p></body></html>"
          },
          {
            "title": "Example: Union",
            "id": 89446,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use <code>union()</code> para unir o conjunto <code>volunteers</code> com o <code>coordinators</code> para obter um conjunto de todas as pessoas organizando um evento.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"volunteers = {\" /><text value=\"&quot;Jess&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ty&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Kevin&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"coordinators = {\" /><text value=\"&quot;Mae&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(volunteers.union(coordinators))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"84\" endIndex=\"85\" /><option startIndex=\"85\" endIndex=\"90\" /><option startIndex=\"90\" endIndex=\"91\" /><option startIndex=\"91\" endIndex=\"103\" /><option startIndex=\"103\" endIndex=\"104\" /></options></interaction></interactions><output><content><text value=\"{'Mae', 'Kevin', 'Jess', 'Sue', 'Ty'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>.</code> seguido de <code>union</code> e depois <code>(</code>, <code>coordinators</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: Intersection",
            "id": 89448,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Encontre as aulas comuns de Andy e May usando a instrução <code>.intersection()</code> com <code>may_classes</code> entre parênteses.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"andy_classes = {\" /><text value=\"&quot;french&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;ballet&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"may_classes = {\" /><text value=\"&quot;french&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;drums&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;pottery&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(andy_classes.intersection(may_classes))\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"100\" endIndex=\"126\" /></interactions><output><content><text value=\"{'french'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>.intersection(may_classes)</code>.</p></body></html>"
          },
          {
            "title": "Example: Union vs Intersection",
            "id": 89449,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use uma instrução para criar um conjunto contendo todos os elementos dos conjuntos <code>even</code> e <code>odd</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"even = {\" /><text value=\"0\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"6\" class=\"number\" /><text value=\"}\" /><text type=\"break\" /><text value=\"odd = {\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(even.union(odd))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"50\" endIndex=\"51\" /><option startIndex=\"51\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"60\" /><option startIndex=\"60\" endIndex=\"61\" /><option correct=\"false\"><content><text value=\"intersection\" /></content></option></options></interaction></interactions><output><content><text value=\"{0, 1, 2, 3, 4, 5, 6, 7}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>.</code> seguido de <code>union</code> e depois <code>(</code>, <code>odd</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: Save in variable",
            "id": 89450,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique a variável <code>common_div</code> para salvar os divisores comuns de quinze e seis resultantes da interseção dos dois conjuntos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"div_15 = {\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"15\" class=\"number\" /><text value=\"}\" /><text type=\"break\" /><text value=\"div_6 = {\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"6\" class=\"number\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"common_div = div_15.intersection(div_6)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(common_div)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"45\" endIndex=\"57\" /></interactions><output><content><text value=\"{1, 3}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>common_div =</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 9980,
        "title": "Diferença",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Difference",
            "id": 89334,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para obter um conjunto de elementos que estão presentes em <code>classmates</code>, mas não em <code>friends</code>, usamos a instrução <code>difference()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classmates.difference(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"72\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"90\" endIndex=\"91\" /></options></interaction></interactions><output><content><text value=\"{'Paul'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>difference</code> seguido de <code>(</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "Left minus right",
            "id": 89335,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usar <code>difference()</code> nos dá os elementos que o conjunto à esquerda, aqui <code>classmates</code>, possui, mas o conjunto à direita, aqui <code>friends</code>, não possui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classmates.difference(friends))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"61\" endIndex=\"71\" /><option startIndex=\"83\" endIndex=\"90\" /></options></interaction></interactions><output><content><text value=\"{'Paul'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>classmates</code> seguido de <code>friends</code>.</p></body></html>"
          },
          {
            "title": "The other way around",
            "id": 89336,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para os elementos que estão em <code>friends</code>, mas não em <code>classmates</code>, precisamos codificar <code>friends</code> à esquerda e <code>classmates</code> à direita.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(friends.difference(classmates))\" /></content><output><content><text value=\"{'Don'}\" /></content></output></code></body></html>"
          },
          {
            "title": "Save in variable",
            "id": 89337,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como antes, podemos salvar o conjunto obtido com <code>difference()</code> em uma variável como <code>friends_not_classmates</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classmates = {\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Paul&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"friends = {\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"friends_not_classmates = friends.difference(classmates)\" /><text type=\"break\" /><text value=\"print(friends_not_classmates)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"77\" /><option startIndex=\"78\" endIndex=\"79\" /></options></interaction></interactions><output><content><text value=\"{'Don'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>friends_not_classmates</code> seguido de <code>=</code>.</p></body></html>"
          },
          {
            "title": "Question: Difference",
            "id": 89433,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que a instrução <code>difference()</code> faz quando usada com dois conjuntos?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ele nos dá um conjunto de elementos presentes no conjunto da esquerda, mas ausentes no da direita</item><item value=\"2\" correct=\"false\">Isso nos dá um conjunto de elementos comuns dos dois conjuntos</item></selection><p visible-if=\"wrong\">Ele nos dá um conjunto de elementos presentes no conjunto da esquerda, mas ausentes no da direita.</p></body></html>"
          },
          {
            "title": "Question: Left minus right",
            "id": 89434,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que o conjunto <code>difference</code> contém?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"animals = {\" /><text value=\"&quot;whale&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;giraffe&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"pets = {\" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"difference = animals.difference(pets)\" /><text type=\"break\" /><text value=\"print(difference)\" /></content><output><content><text value=\"{'giraffe', 'whale'}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>{'giraffe', 'whale'}</code></item><item value=\"2\" correct=\"false\">Um conjunto vazio </item></selection><p visible-if=\"wrong\"><code>{'giraffe', 'whale'}</code>.</p></body></html>"
          },
          {
            "title": "Question: The other way around",
            "id": 89435,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que isso exibe no console?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"andy_classes = {\" /><text value=\"&quot;french&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;ballet&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"may_classes = {\" /><text value=\"&quot;drums&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;pottery&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(andy_classes.difference(may_classes))\" /><text type=\"break\" /><text value=\"print(may_classes.difference(andy_classes))\" /></content><output><content><text value=\"{'french', 'ballet'}\" /><text type=\"break\" /><text value=\"{'pottery', 'drums'}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Primeiro <code>{'french', 'ballet'}</code>, e depois <code>{'pottery', 'drums'}</code></item><item value=\"2\" correct=\"false\">Nada</item></selection><p visible-if=\"wrong\">Primeiro <code>{'french', 'ballet'}</code>, e depois <code>{'pottery', 'drums'}</code>.</p></body></html>"
          },
          {
            "title": "Question: Save in variable",
            "id": 89436,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como podemos reutilizar o conjunto que obtemos usando <code>difference()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Podemos atribuir a instrução a uma variável, assim salvando o conjunto que ela nos fornece</item><item value=\"2\" correct=\"false\">Não podemos reutilizar o set porque não podemos salvá-lo em uma variável</item></selection><p visible-if=\"wrong\">Podemos atribuir a instrução a uma variável, assim salvando o conjunto que ela nos fornece.</p></body></html>"
          },
          {
            "title": "Example: Difference",
            "id": 89437,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Obtenha um conjunto de <code>networks</code> que não estão em <code>public</code> codificando <code>networks.difference(public)</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"networks = {\" /><text value=\"&quot;May's&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;PizzaParty5&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Wi-Free&quot;\" class=\"string\" /><text value=\"} \" /><text type=\"break\" /><text value=\"public = {\" /><text value=\"&quot;Wi-Free&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(networks.difference(public))\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"76\" endIndex=\"103\" /></interactions><output><content><text value=\"{&quot;May's&quot;, 'PizzaParty5'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>networks.difference(public)</code>.</p></body></html>"
          },
          {
            "title": "Example: Left minus right",
            "id": 89438,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use <code>difference()</code> com <code>wishlist</code> à esquerda, para obter os itens que estão na <code>wishlist</code> mas não estão no <code>cart</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"wishlist = {\" /><text value=\"&quot;earpods&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;notebook&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;handgloves&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"cart = {\" /><text value=\"&quot;cat food&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;book&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;earpods&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(wishlist.difference(cart))\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"103\" /><option startIndex=\"103\" endIndex=\"104\" /><option startIndex=\"104\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"119\" /><option startIndex=\"119\" endIndex=\"120\" /></options></interaction></interactions><output><content><text value=\"{'notebook', 'handgloves'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>wishlist</code> seguido de <code>.</code> e depois <code>difference</code>, <code>(</code>, <code>cart</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: The other way around",
            "id": 89439,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Use <code>difference()</code> com <code>cart</code> à esquerda, para obter os itens que estão no <code>cart</code> sem estar na <code>wishlist</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"wishlist = {\" /><text value=\"&quot;earpods&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;notebook&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;handgloves&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"cart = {\" /><text value=\"&quot;cat food&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;book&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;earpods&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(cart.difference(wishlist))\" /><text type=\"break\" /></content><output><content><text value=\"{'cat food', 'book'}\" /></content></output></code></body></html>"
          },
          {
            "title": "Example: Save in variable",
            "id": 89440,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique a variável <code>not_pets</code> que salva os elementos que o conjunto <code>animals</code> tem, mas que <code>pets</code> não tem.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"animals = {\" /><text value=\"&quot;whale&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;giraffe&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"pets = {\" /><text value=\"&quot;dog&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;cat&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"not_pets = animals.difference(pets)\" /><text type=\"break\" /><text value=\"print(not_pets)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"69\" endIndex=\"77\" /><option startIndex=\"78\" endIndex=\"79\" /><option startIndex=\"80\" endIndex=\"87\" /><option startIndex=\"87\" endIndex=\"88\" /><option startIndex=\"88\" endIndex=\"98\" /><option startIndex=\"98\" endIndex=\"99\" /><option startIndex=\"99\" endIndex=\"103\" /><option startIndex=\"103\" endIndex=\"104\" /></options></interaction></interactions><output><content><text value=\"{'giraffe', 'whale'}\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>not_pets</code> seguido de <code>=</code> e depois <code>animals</code>, <code>.</code>, <code>difference</code>, <code>(</code>, <code>pets</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}