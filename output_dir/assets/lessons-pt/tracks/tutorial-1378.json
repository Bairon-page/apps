{
  "tutorial": {
    "id": 1378,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Construtores",
    "descriptionContent": "Construtores",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9985,
        "title": "Construtores",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Constructor",
            "id": 88767,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Há um método que podemos usar que é mais flexível ao criar diferentes instâncias de uma classe. É chamado de método <strong>constructor</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;brown&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"benny = Virtual_Pet(\" /><text value=\"&quot;black&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(benny.color)\" /></content><output><content><text value=\"brown\" /><text type=\"break\" /><text value=\"black\" /></content></output></code></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O método construtor se parece com <code>__init__()</code> e nos permite definir valores únicos para as variáveis da classe quando criamos uma instância.</p><p>Certifique-se de usar dois sublinhados em cada lado de <code>init</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>__init__</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em vez de uma definição de classe que sempre terá a mesma cor, um método construtor nos permite especificar o que queremos ao criá-la.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89360,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando criamos uma instância a partir da definição da classe, podemos passar valores únicos dentro dos parênteses, como com <code>yellow</code> aqui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;yellow&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"92\" endIndex=\"93\" /><option startIndex=\"93\" endIndex=\"99\" /><option startIndex=\"99\" endIndex=\"100\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"</code> seguido de <code>yellow</code> e finalmente <code>\"</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para adicionar essa flexibilidade às nossas classes, começamos adicionando a função de construção, que se parece com <code>__init__()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"34\" /><option startIndex=\"34\" endIndex=\"35\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>__init__</code> seguido de <code>(</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89357,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assim como com métodos de classe regulares, precisamos adicionar <code>self</code> como o primeiro parâmetro para o método construtor.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"34\" endIndex=\"38\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89362,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em seguida, adicionamos os parâmetros para os valores personalizados que queremos definir quando criamos a instância, como com <code>color</code> aqui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"45\" /><option correct=\"false\"><content><text value=\"self\" /></content></option><option startIndex=\"34\" endIndex=\"39\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self,</code> seguido de <code>color</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89363,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Então, definimos o valor codificando <code>self</code>, um <code>.</code>, o nome do parâmetro e, em seguida, igualando-o novamente ao nome do parâmetro. Isso define o valor.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"52\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"62\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self</code> seguido de <code>.</code> e finalmente <code>color</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89041,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando criamos uma instância a partir da definição da classe, adicionamos os valores que queremos definir dentro de parênteses, como aqui com <code>\"red\"</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"92\" endIndex=\"97\" /></interactions><output><content><text value=\"red\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>\"red\"</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89358,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O método construtor nos ajuda a construir as instâncias da nossa classe da maneira que queremos. Podemos adicionar quantos parâmetros quisermos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, legs)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.legs = legs\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(rocky.legs)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"46\" /><option startIndex=\"47\" endIndex=\"51\" /></options></interaction></interactions><output><content><text value=\"red\" /><text type=\"break\" /><text value=\"4\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>color,</code> seguido de <code>legs</code>.</p></body></html>"
          },
          {
            "title": "Outside of constructors",
            "id": 88770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos acessar os parâmetros de outros lugares na definição da classe usando <code>self</code>, como <code>self.color</code> aqui.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Flower\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, kind, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   self.kind = kind\" /><text type=\"break\" /><text value=\"   self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_color\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(self.color)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rose_flower = Flower(\" /><text value=\"&quot;rose&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rose_flower.kind)\" /><text type=\"break\" /><text value=\"rose_flower.display_color()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"129\" endIndex=\"139\" /></interactions><output><content><text value=\"rose\" /><text type=\"break\" /><text value=\"red\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self.color</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 88786,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual é o propósito de um construtor?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para construir uma instância de um objeto de classe com variáveis de classe únicas</item><item value=\"2\" correct=\"false\">Para criar um método para um objeto de classe</item></selection><p visible-if=\"wrong\">Para construir uma instância de um objeto de classe com variáveis de classe únicas.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 88789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como definimos o método construtor?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>def __init__(self):</code></item><item value=\"4\" correct=\"false\"><code>def init(self):</code></item></selection><p visible-if=\"wrong\"><code>def __init__(self):</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 88791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando usamos a palavra-chave <code>self</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Quando precisamos acessar variáveis ou métodos da classe dentro da definição da classe</item><item value=\"2\" correct=\"false\">Não usamos a palavra-chave <code>self</code></item></selection><p visible-if=\"wrong\">Quando precisamos acessar variáveis ou métodos da classe dentro da definição da classe.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 89483,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos usar parâmetros ao definir o método construtor?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sim, definimos valores para os parâmetros ao criar uma instância</item><item value=\"2\" correct=\"false\">Não podemos usar parâmetros na função init</item></selection><p visible-if=\"wrong\">Sim, definimos valores para os parâmetros ao criar uma instância.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 89484,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Adicione o método construtor à seguinte definição de classe.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"29\" /><option startIndex=\"29\" endIndex=\"30\" /><option startIndex=\"30\" endIndex=\"34\" /><option startIndex=\"34\" endIndex=\"35\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>def</code> seguido de <code>__init__</code> e depois <code>(</code>, <code>self</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 89485,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Adicione dois parâmetros ao método construtor, <code>color</code> e <code>name</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"47\" /><option startIndex=\"36\" endIndex=\"42\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>color,</code> seguido de <code>name</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 89486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Defina as variáveis de classe para serem os parâmetros do método construtor usando a palavra-chave <code>self</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"54\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"67\" endIndex=\"72\" /><option startIndex=\"87\" endIndex=\"88\" /><option startIndex=\"89\" endIndex=\"93\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>self</code> seguido de <code>.</code> e depois <code>color</code>, <code>=</code>, <code>name</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 89487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usando o construtor, crie uma instância de Pokemon que tenha a cor <code>\"orange\"</code> e o nome <code>\"charizard\"</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text type=\"break\" /><text value=\"charizard = Pokemon(\" /><text value=\"&quot;orange&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;charizard&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(charizard.color)\" /><text type=\"break\" /><text value=\"print(charizard.name)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"107\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"123\" /><option startIndex=\"123\" endIndex=\"124\" /><option startIndex=\"125\" endIndex=\"136\" /><option startIndex=\"136\" endIndex=\"137\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions><output><content><text value=\"orange\" /><text type=\"break\" /><text value=\"charizard\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Pokemon</code> seguido de <code>(</code> e depois <code>\"orange\"</code>, <code>,</code>, <code>\"charizard\"</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}