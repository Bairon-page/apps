{
  "tutorial": {
    "id": 1941,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Criador de Reuniões",
    "descriptionContent": "Use seu conhecimento de classes para instanciar e criar funcionalidades para reuniões e videochamadas",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1941-icon-banner.svg",
    "chapters": [
      {
        "id": 12547,
        "title": "Criador de Reuniões",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 113430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finley está criando um aplicativo com foco em reuniões e videochamadas. Este aplicativo pode ser útil para trabalho remoto e empresas que precisam se comunicar com os funcionários. Vamos aplicar nossas novas habilidades e ajudar Finley a criar a funcionalidade para reuniões e videochamadas!\n\nVamos começar criando nossa primeira classe `Meeting`.\n\n1. Crie uma classe `Meeting` e defina o bloco de código.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "class Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 113434,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que temos uma classe `Meeting`, vamos adicionar o construtor. Isso define quais propriedades um novo objeto `Meeting` deve ter.\n\n1. Adicione o construtor à classe e inclua `date`, `time` e `name` como propriedades.\n2. Defina os valores de `date`, `time` e `name` para seus respectivos parâmetros do construtor.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 113436,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para completar a classe `Meeting`, vamos incluir um método que envia uma notificação sobre uma reunião.\n\n1. Crie um método `sendNotification` que exibe esta mensagem no console:\n```\n \"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\"\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 113437,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A classe `Meeting` está completa, incrível! Finley também precisa de uma classe para chamadas de vídeo. Ela será muito semelhante à classe `Meeting`, com algumas adições.\n\n1. Crie uma classe `VideoCall` que estenda a classe `Meeting`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 113438,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos adicionar o construtor para `VideoCall`.\n\n1. Adicione o construtor e inclua as propriedades `date`, `time`, `name` e `link`.\n2. Inclua `super` para `date`, `time` e `name` para indicar que estamos herdando essas propriedades da classe `Meeting`.\n3. Dê a `link` o valor do parâmetro `link` do construtor.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you can use the reserved word `super` to access the superclass' properties like this \n```\nsuper(date,time,name)\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #7",
            "id": 113439,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que configuramos as propriedades para `VideoCall`, vamos codificar um método.\n\n1. Crie um método `sendNotificationLink`.\n2. Faça uma chamada para o método *herdado* `sendNotification`.\n3. Exiba no console esta mensagem:\n```\n\"Este é o link para sua reunião de vídeo: \" + this.link;\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `super` to call the `Meeting` class' method `sendNotification`."
                }
              ]
            }
          },
          {
            "title": "Lesson #8",
            "id": 113440,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos finalizar a classe `VideoCall` incluindo mais um método. Este método pertence apenas a `VideoCall`.\n\n1. Crie um método chamado `test`.\n2. Exiba no console esta mensagem: `\"Testing audio and video...success!\"` dentro do método test.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 113441,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A classe `Meeting` e a classe `VideoCall` estão completas, ótimo! Vamos criar uma instância da classe `Meeting` e chamar seu método.\n\n1. Crie uma instância de `Meeting` em uma variável `firstMeeting`.\n2. Forneça valores *string* para os argumentos de data da reunião, hora e nome da pessoa a ser encontrada.\n3. Faça uma chamada para `sendNotification` usando sua classe.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 113444,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Por último, vamos criar uma instância da classe `VideoCall`.\n\n1. Crie uma instância de `VideoCall` em uma variável `firstVideo`. Sinta-se à vontade para fornecer qualquer valor *string* para os argumentos.\n2. Execute o método `sendNotificationLink` de `firstVideo`.\n3. Execute o método `test` de `firstVideo`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();\n\nconst firstVideo = new VideoCall(\"04/01/2022\", \"3:30PM\", \"Mauricio\", \"https://vid.eo/meetinglink/12345aBcDef\");\nfirstVideo.sendNotificationLink();\nfirstVideo.test();"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}