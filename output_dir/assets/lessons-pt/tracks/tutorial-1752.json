{
  "tutorial": {
    "id": 1752,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Padrão de Ondas",
    "descriptionContent": "Use loops para exibir um padrão de onda no console.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1752-icon-banner.svg",
    "chapters": [
      {
        "id": 11632,
        "title": "Padrão de Ondas",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Creating the variable",
            "id": 106973,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um desenvolvedor tentou exibir um asterisco `*` e tildes `~` no console para simular uma praia. O `*` para o sol e o `~` para as ondas.\n\nInfelizmente, há alguns erros.\n\nAntes de começarmos, dê uma olhada na saída que o programador estava tentando alcançar:\n\n```JS\n*\n~\n~~\n~~~\n~~~~\n~~~~~\n```\n\nAgora vamos olhar o código que eles escreveram e começar a corrigir. O loop while está usando uma variável `counter`. Mas ela existe no código?\n\n1. Comece criando a variável counter usada no loop while e atribua a ela o valor `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nconsole.log(\"*\");\nwhile (counter > 5) {\n  line -= \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter > 5) {\n  line -= \"~\";\n  counter++;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Updating the condition",
            "id": 106972,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "O desenvolvedor queria parar o loop quando `counter` for maior que `5`.\n\n1. Vamos corrigir isso atualizando a condição para `counter <= 5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter > 5) {\n  line -= \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line -= \"~\";\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using comparison operators. Use `<=`."
                }
              ]
            }
          },
          {
            "title": "Adding the string",
            "id": 106971,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "O desenvolvedor precisa juntar as strings, mas ele está usando `-=`.\n\n1. Dentro do bloco de código do loop while, atualize o operador `-=` para que ele adicione a string a `line`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line -= \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `+=` to add the string to the line."
                }
              ]
            }
          },
          {
            "title": "Displaying the line",
            "id": 106970,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Antes de continuarmos, tente executar o código. Você vai notar que as ondas ainda não aparecem.\n\nCada vez que o loop é executado, precisamos exibir a linha para mostrar as ondas.\n\n1. Exiba a variável `line` cada vez que o loop while executar seu bloco de código.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log()` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Great work",
            "id": 106979,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ótimo trabalho ao corrigir o programa. Agora ele exibe um asterisco `*` e um monte de tildes `~` para simular uma praia.\n\nAntes de continuarmos para tornar a saída ainda mais legal, execute seu código para ver o status atual.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\r\nlet counter = 1;\r\nconsole.log(\"*\");\r\nwhile (counter <= 5) {\r\n  line += \"~\";\r\n  counter++;\r\n  console.log(line);\r\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Running the loop ten times",
            "id": 106968,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Com nosso programa em execução, vamos experimentar mais com o código.\n\n1. Altere o número na condição para executar o bloco de código 10 vezes.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 10) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Run the loop while the counter is less than or equal to 10."
                }
              ]
            }
          },
          {
            "title": "Personalizing the program",
            "id": 106965,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos personalizar o programa.\n\n1. Mostre algo diferente de `*` e `~` no console. Tente usar algo divertido, como emojis.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 10) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"Binary Pyramid\");\nwhile (counter <= 10) {\n  line += \"01\";\n  counter++;\n  console.log(line);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Change `\"~\"` to something else.  "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}