{
  "tutorial": {
    "id": 1444,
    "version": 9,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Aplicando Herança em OOP",
    "descriptionContent": "Herança",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10393,
        "title": "Introdução à Herança",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "OOP without inheritance",
            "id": 93638,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como aprendemos anteriormente, OOP significa que encapsulamos dados e funções relacionadas dentro de objetos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"p = Person()\" /><text type=\"break\" /><text value=\"p.greet()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"13\" /></options></interaction></interactions><output><content><text value=\"Hi!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>class</code> seguido de <code>Person:</code>.</p></body></html>"
          },
          {
            "title": "OOP without inheritance is inefficient",
            "id": 93639,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando criamos objetos um por um, enfrentamos o problema de ter código duplicado. Quantos métodos <code>greet()</code> existem?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person1\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person2\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"&quot;Mike&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person3\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"&quot;Jane&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">3</item><item value=\"2\" correct=\"false\">1</item></selection><p visible-if=\"wrong\">Certifique-se de escolher 3.</p></body></html>"
          },
          {
            "title": "The concept of inheritance",
            "id": 93642,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usamos <strong>herança</strong> para tornar nosso código eficiente. Através da herança, as classes recebem métodos de outras classes.</p></body></html>"
          },
          {
            "title": "The concept of inheritance 2",
            "id": 93863,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A herança nos permite criar classes que têm diferentes propriedades e comportamentos sem codificar cada uma do zero.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Parent\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.eyes = \" /><text value=\"&quot;green&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Child\" class=\"title\" /><text value=\"(Parent)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__()\" /><text type=\"break\" /><text value=\"    self.age = \" /><text value=\"7\" class=\"number\" /><text type=\"break\" /><text value=\"child = Child()\" /><text type=\"break\" /><text value=\"print(child.eyes)\" /><text type=\"break\" /><text value=\"print(child.age)\" /></content><output><content><text value=\"green\" /><text type=\"break\" /><text value=\"7\" /></content></output></code></body></html>"
          },
          {
            "title": "The concept of inheritance 3",
            "id": 93991,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Aqui vemos que a classe <code>Child</code> está herdando a classe <code>Parent</code> porque está dentro dos parênteses após o nome da classe.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Parent\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.eyes = \" /><text value=\"&quot;green&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Child\" class=\"title\" /><text value=\"(Parent)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__()\" /><text type=\"break\" /><text value=\"    self.age = \" /><text value=\"7\" class=\"number\" /><text type=\"break\" /><text value=\"child = Child()\" /><text type=\"break\" /><text value=\"print(child.eyes)\" /><text type=\"break\" /><text value=\"print(child.age)\" /></content><output><content><text value=\"green\" /><text type=\"break\" /><text value=\"7\" /></content></output></code></body></html>"
          },
          {
            "title": "Creating objects that inherit methods",
            "id": 93640,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos ver como uma classe pode herdar métodos de outra. Ao definir a classe, adicionamos parênteses com a classe da qual estamos herdando.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Greetings\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\"(Greetings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"&quot;George&quot;\" class=\"string\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"75\" /><option startIndex=\"75\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>(</code> seguido de <code>Greetings</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "Calling inherited methods",
            "id": 93645,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A classe <code>Person</code> agora pode usar os métodos de Greeting como se fossem seus. Tente chamar <code>greet()</code> como um método de <code>person</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Greetings\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\"(Greetings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"&quot;George&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"p = Person()\" /><text type=\"break\" /><text value=\"p.greet()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"110\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"117\" /><option startIndex=\"117\" endIndex=\"118\" /></options></interaction></interactions><output><content><text value=\"Hi!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>.</code> seguido de <code>greet</code> e depois <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Setting methods directly",
            "id": 93646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos atualizar como as classes funcionam definindo métodos diretamente na classe. Defina o método <code>charge</code> dentro da classe Hybrid.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"start_car\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Starting car&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Hybrid\" class=\"title\" /><text value=\"(Car)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"charge\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Using fuel to charge battery&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"prius = Hybrid()\" /><text type=\"break\" /><text value=\"prius.start_car()\" /><text type=\"break\" /><text value=\"prius.charge()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"84\" /><option startIndex=\"85\" endIndex=\"91\" /><option startIndex=\"91\" endIndex=\"92\" /><option startIndex=\"92\" endIndex=\"96\" /><option startIndex=\"96\" endIndex=\"97\" /><option startIndex=\"97\" endIndex=\"98\" /></options></interaction></interactions><output><content><text value=\"Starting car\" /><text type=\"break\" /><text value=\"Using fuel to charge battery\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>def</code> seguido de <code>charge</code> e depois <code>(</code>, <code>self</code>, <code>)</code>, <code>:</code>.</p></body></html>"
          },
          {
            "title": "Outro",
            "id": 93641,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Aprendemos como o Python pode ser flexível usando herança. Em seguida, vamos nos aprofundar em como as classes herdam coisas.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"start_car\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Starting car&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Hybrid\" class=\"title\" /><text value=\"(Car)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"charge\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Using fuel to charge battery&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Electric\" class=\"title\" /><text value=\"(Car)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"fuel\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text value=\" \" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;No fuel necessary&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"prius = Hybrid() \" /><text type=\"break\" /><text value=\"electric = Electric() \" /><text type=\"break\" /><text value=\"prius.start_car() \" /><text type=\"break\" /><text value=\"electric.start_car() \" /><text type=\"break\" /><text value=\"prius.charge() \" /><text type=\"break\" /><text value=\"electric.fuel()\" /></content><output><content><text value=\"Starting car\" /><text type=\"break\" /><text value=\"Starting car\" /><text type=\"break\" /><text value=\"Using fuel to charge battery\" /><text type=\"break\" /><text value=\"No fuel necessary\" /></content></output></code></body></html>"
          },
          {
            "title": "Question 1",
            "id": 93647,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual dessas descreve herança?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Classes que herdam a funcionalidade de outra classe</item><item value=\"2\" correct=\"false\">Classes que apenas herdam variáveis de outras classes</item></selection><p visible-if=\"wrong\">Classes que herdam a funcionalidade de outra classe.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 93649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como a herança torna nosso código de POO mais eficiente?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Funções precisam ser definidas apenas uma vez</item><item value=\"2\" correct=\"false\">As propriedades precisam ser definidas apenas uma vez</item></selection><p visible-if=\"wrong\">Funções precisam ser definidas apenas uma vez.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 93637,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual destes não precisa ser herdado?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Métodos usados por apenas um objeto</item><item value=\"2\" correct=\"false\">Métodos usados por mais de um objeto</item></selection><p visible-if=\"wrong\">Métodos usados por apenas um objeto.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 93650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como a herança pode melhorar o código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"RedCar\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Vroom!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"brake\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Braking...&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"BlueCar\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Vroom!&quot;\" class=\"string\" /><text value=\")  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"reverse\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Reversing..&quot;\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Podemos evitar a repetição desnecessária de código</item><item value=\"2\" correct=\"false\">Nada pode ser melhorado</item></selection><p visible-if=\"wrong\">Podemos evitar a repetição desnecessária de código.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 93632,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Chame <code>drive()</code> como um método de <code>my_car</code> para confirmar que um método herdado ainda pode ser chamado como se fosse próprio do objeto.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Vroom!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"my_car = Car()\" /><text type=\"break\" /><text value=\"my_car.drive()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"72\" endIndex=\"79\" /></interactions><output><content><text value=\"Vroom!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>drive()</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 93636,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complete o código para que <code>fido</code> possa usar o método <code>bark()</code> de <code>Dog</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"bark\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"fido = Dog()\" /><text type=\"break\" /><text value=\"fido.bark()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"55\" endIndex=\"60\" /></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Dog()</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 93631,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Passe os objetos corretos para que o código funcione corretamente.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"bark\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"meow\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Meow!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"pet1 = Cat()\" /><text type=\"break\" /><text value=\"pet2 = Dog()\" /><text type=\"break\" /><text value=\"pet1.meow()\" /><text type=\"break\" /><text value=\"pet2.bark()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"120\" /><option correct=\"false\"><content><text value=\"Class\" /></content></option><option correct=\"false\"><content><text value=\"()\" /></content></option></options></interaction></interactions><output><content><text value=\"Meow!\" /><text type=\"break\" /><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Dog</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 93634,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Se o mago é o único jogador que pode lançar feitiços, podemos definir diretamente um método <code>castSpell()</code> em <code>Wizard</code> em vez de colocá-lo em <code>Player</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Player\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"fight\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Take that!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\"(Player)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"castSpell\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Alohomora!&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"84\" /><option startIndex=\"85\" endIndex=\"94\" /><option startIndex=\"94\" endIndex=\"95\" /><option startIndex=\"95\" endIndex=\"99\" /><option startIndex=\"99\" endIndex=\"100\" /><option startIndex=\"100\" endIndex=\"101\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>def</code> seguido de <code>castSpell</code> e depois <code>(</code>, <code>self</code>, <code>)</code>, <code>:</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 10392,
        "title": "Herança com Classes",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Classes recap",
            "id": 93598,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Classes contêm um método chamado construtor que define as propriedades de novos objetos, conhecidos como instâncias.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"sam = Person(\" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\", \" /><text value=\"23\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(sam.name, sam.age)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"28\" /></options></interaction></interactions><output><content><text value=\"Sam 23\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>__init__</code>.</p></body></html>"
          },
          {
            "title": "Instances inherit methods",
            "id": 93594,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos usar o conceito de <strong>herança</strong> para reutilizar partes do código em nossas classes, tornando nosso código mais legível e eficiente.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"     print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Nurse\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(\" /><text value=\"&quot;Nurse &quot;\" class=\"string\" /><text value=\" + name, age)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"intro\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi, I'm&quot;\" class=\"string\" /><text value=\", self.name)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"person1 = Nurse(\" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\", \" /><text value=\"23\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"person2 = Person(\" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"person1.intro()\" /><text type=\"break\" /><text value=\"person2.greet()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"330\" endIndex=\"337\" /><option startIndex=\"337\" endIndex=\"338\" /><option startIndex=\"338\" endIndex=\"343\" /><option startIndex=\"343\" endIndex=\"344\" /><option startIndex=\"344\" endIndex=\"345\" /></options></interaction></interactions><output><content><text value=\"Hi, I'm Nurse Sam\" /><text type=\"break\" /><text value=\"Hi!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>person1</code> seguido de <code>.</code> e depois <code>intro</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Student class",
            "id": 93620,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quando trabalhamos com classes, precisamos pensar um pouco sobre como aplicar a herança. Suponha que quiséssemos modelar uma classe <code>student</code> em nosso código.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"125\" endIndex=\"130\" /><option startIndex=\"131\" endIndex=\"139\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>class</code> seguido de <code>Student:</code>.</p></body></html>"
          },
          {
            "title": "To create or not to create a new class",
            "id": 93597,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Queremos que <code>Student</code> funcione como <code>Person</code>, exceto que tenha um <code>major</code>. Se criarmos uma nova classe <code>Student</code>, acabamos repetindo o código de <code>Person</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, major)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text value=\"    self.major = major\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Creating subclasses",
            "id": 93596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Em vez disso, faz mais sentido neste caso criar uma subclasse que herda o método <code>greet()</code> de <code>Person</code> codificando <code>(Person)</code> após <code>Student</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"138\" endIndex=\"139\" /><option startIndex=\"139\" endIndex=\"145\" /><option startIndex=\"145\" endIndex=\"146\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>(</code> seguido de <code>Person</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "Setting parent properties with super",
            "id": 93593,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para garantir que <code>Student</code> tenha as mesmas propriedades que <code>Person</code>, precisamos codificar <code>super().__init__(name, age)</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, major)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name, age) \" /><text type=\"break\" /><text value=\"    self.major = major\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"192\" endIndex=\"197\" /><option startIndex=\"197\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"200\" /><option startIndex=\"200\" endIndex=\"208\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>super</code> seguido de <code>(</code> e depois <code>)</code>, <code>.</code>, <code>__init__</code>.</p></body></html>"
          },
          {
            "title": "Setting parent properties with super 2",
            "id": 93866,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos analisar <code>super().__init__(name, age)</code>. <code>super</code> refere-se à classe pai de <code>Student</code>, <code>Person</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, major)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name, age) \" /><text type=\"break\" /><text value=\"    self.major = major\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"192\" endIndex=\"197\" /><option startIndex=\"197\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>super</code> seguido de <code>(</code> e finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "Using super 3",
            "id": 93995,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Então, <code>__init__</code> refere-se ao construtor de <code>Person</code>. Isso nos permite usar o construtor existente para definir as propriedades <code>name</code> e <code>age</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, major)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name, age) \" /><text type=\"break\" /><text value=\"    self.major = major\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"200\" endIndex=\"208\" /><option startIndex=\"209\" endIndex=\"213\" /><option startIndex=\"215\" endIndex=\"218\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>__init__</code> seguido de <code>name</code> e finalmente <code>age</code>.</p></body></html>"
          },
          {
            "title": "What's in a subclass instance?",
            "id": 93595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agora podemos criar objetos que possuem propriedades e herdam métodos tanto de <code>Student</code> quanto de <code>Person</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, major)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name, age)\" /><text type=\"break\" /><text value=\"    self.major = major\" /><text type=\"break\" /><text type=\"break\" /><text value=\"student = Student(\" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\", \" /><text value=\"23\" class=\"number\" /><text value=\", \" /><text value=\"&quot;chemistry&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(student.major)\" /><text type=\"break\" /><text value=\"student.greet()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"292\" endIndex=\"305\" /><option startIndex=\"315\" endIndex=\"320\" /><option startIndex=\"320\" endIndex=\"321\" /><option startIndex=\"321\" endIndex=\"322\" /></options></interaction></interactions><output><content><text value=\"chemistry\" /><text type=\"break\" /><text value=\"Hi!\" /></content></output></code><p visible-if=\"wrong\">Certifique-se de escolher <code>student.major</code> seguido de <code>greet</code> e depois <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 93599,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qual método de classe define as propriedades das instâncias?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>__init__()</code></item><item value=\"2\" correct=\"false\"><code>init()</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>__init__()</code>.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 93592,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que está faltando neste código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Student\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, major, year)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.major = major\" /><text type=\"break\" /><text value=\"    self.year = year\" /><text type=\"break\" /><text type=\"break\" /><text value=\"student = Student(\" /><text value=\"&quot;biology&quot;\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">O parâmetro <code>year</code></item><item value=\"2\" correct=\"false\">O parâmetro <code>major</code></item></selection><p visible-if=\"wrong\">O parâmetro <code>year</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 93589,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>O que <code>phone.call('Mom')</code> exibe?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Phone\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"call\" class=\"title\" /><text value=\"(self, contact)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Calling &quot;\" class=\"string\" /><text value=\" + contact)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"phone = Phone()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"phone.call(\" /><text value=\"&quot;Mom&quot;\" class=\"string\" /><text value=\")\" /></content><output><content><text value=\"Calling Mom\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Calling Mom</code></item><item value=\"2\" correct=\"false\">Um erro; <code>phone.call</code> não está definido</item></selection><p visible-if=\"wrong\"><code>Calling Mom</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 93588,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um colega de trabalho precisa de objetos com as propriedades <code>company</code> e <code>language</code>, então ele cria uma classe <code>Developer</code> separada. O que ele deveria fazer em vez disso?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, company)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.company = company\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Developer\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, company, language)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.company = company\" /><text type=\"break\" /><text value=\"    self.language = language\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Faça de <code>Developer</code> uma subclasse de <code>Employee</code></item><item value=\"2\" correct=\"false\">Faça <code>Employee</code> definir a propriedade <code>language</code></item></selection><p visible-if=\"wrong\">Faça de <code>Developer</code> uma subclasse de <code>Employee</code>.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 93587,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A instância <code>dev</code> está faltando a propriedade <code>company</code>. Qual linha precisamos adicionar à subclasse <code>Developer</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, company)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.company = company\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Developer\" class=\"title\" /><text value=\"(Employee)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, company, language)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.language = language\" /><text type=\"break\" /><text type=\"break\" /><text value=\"dev = Developer(\" /><text value=\"&quot;Mimo&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;JS&quot;\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>super().__init__(company)</code></item><item value=\"2\" correct=\"false\"><code>self.company = company</code></item></selection><p visible-if=\"wrong\">Certifique-se de escolher <code>super().__init__(company)</code>.</p></body></html>"
          },
          {
            "title": "Question 6",
            "id": 93586,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quais métodos podemos chamar na instância <code>jet</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Plane\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"fly\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Whoosh&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Jet\" class=\"title\" /><text value=\"(Plane)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"invert\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Inverting!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"jet = Jet()\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ambos <code>fly()</code> e <code>invert()</code></item><item value=\"2\" correct=\"false\">Apenas <code>fly()</code></item></selection><p visible-if=\"wrong\">Ambos <code>fly()</code> e <code>invert()</code>.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 93669,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifique o nome do método que define a propriedade <code>memory</code> nas instâncias da classe <code>Computer</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Computer\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, gigabytes)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.memory = gigabytes\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"22\" endIndex=\"30\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>__init__</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 93585,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crie uma subclasse chamada <code>Laptop</code> que herda o método <code>turnOn()</code> de <code>Computer</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Computer\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"turnOn\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;On&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Laptop\" class=\"title\" /><text value=\"(Computer)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"61\" /><option startIndex=\"61\" endIndex=\"62\" /><option startIndex=\"62\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>class</code> seguido de <code>Laptop</code> e depois <code>(</code>, <code>Computer</code>, <code>)</code>, <code>:</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 93591,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Chame <code>super().__init__</code> com <code>name</code> e <code>age</code> para que as instâncias de <code>Parent</code> recebam essas propriedades.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Parent\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, kids)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name, age) \" /><text type=\"break\" /><text value=\"    self.kids = kids\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"153\" endIndex=\"158\" /><option startIndex=\"158\" endIndex=\"159\" /><option startIndex=\"159\" endIndex=\"160\" /><option startIndex=\"160\" endIndex=\"161\" /><option startIndex=\"161\" endIndex=\"169\" /><option startIndex=\"169\" endIndex=\"170\" /><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"180\" /><option startIndex=\"170\" endIndex=\"174\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>super</code> seguido de <code>(</code> e depois <code>)</code>, <code>.</code>, <code>__init__</code>, <code>(</code>, <code>name</code>, <code>age</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 93602,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sally é uma mãe de 40 anos com dois filhos. Crie uma nova instância que encapsule as informações dela.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text value=\"    self.age = age\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Parent\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age, kids)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name, age) \" /><text type=\"break\" /><text value=\"    self.kids = kids\" /><text type=\"break\" /><text type=\"break\" /><text value=\"parent = Parent(\" /><text value=\"&quot;Sally&quot;\" class=\"string\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"213\" endIndex=\"219\" /><option startIndex=\"229\" endIndex=\"231\" /><option startIndex=\"233\" endIndex=\"234\" /><option startIndex=\"220\" endIndex=\"227\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Parent</code> seguido de <code>\"Sally\"</code> e depois <code>40</code>, <code>2</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 93601,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Escolha a classe correta para que as instâncias de Professor possam receber as propriedades <code>name</code> e <code>subject</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Teacher\" class=\"title\" /><text value=\"(Person)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, name, subject)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    super().__init__(name) \" /><text type=\"break\" /><text value=\"    self.subject = subject\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Professor\" class=\"title\" /><text value=\"(Teacher)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"201\" endIndex=\"208\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Teacher</code>.</p></body></html>"
          },
          {
            "title": "Example 6",
            "id": 93689,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Telefones fixos podem fazer chamadas, mas não podem navegar na web. Escolha a classe correta para <code>Landline</code> herdar.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Phone\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"call\" class=\"title\" /><text value=\"(self, contact)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Calling &quot;\" class=\"string\" /><text value=\" + contact)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cell\" class=\"title\" /><text value=\"(Phone)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"surfWeb\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Opening homepage&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Landline\" class=\"title\" /><text value=\"(Phone)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"159\" endIndex=\"164\" /></interactions></code><p visible-if=\"wrong\">Certifique-se de escolher <code>Phone</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}