{
  "tutorial": {
    "id": 2250,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Funções 2",
    "descriptionContent": "Funções 2",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12801,
        "title": "Usando Múltiplos Parâmetros",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Parameters",
            "id": 116129,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Codifique o primeiro parâmetro para esta função.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function getBMI(, weight) {\n return weight / (height * height);\n}\nconst bmi = getBMI(1.7, 70);\nconsole.log(bmi);",
                  "solvedContent": "function getBMI(height, weight) {\n return weight / (height * height);\n}\nconst bmi = getBMI(1.7, 70);\nconsole.log(bmi);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Comma",
            "id": 116130,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Codifique o sinal correto para separar os dois parâmetros.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function greet(salutation lastName) {\n return \"Good day \" + salutation + \" \" + lastName + \"!\";\n}\nconst greetings = greet(\"Dr.\", \"Banner\");\nconsole.log(greetings);",
                  "solvedContent": "function greet(salutation, lastName) {\n return \"Good day \" + salutation + \" \" + lastName + \"!\";\n}\nconst greetings = greet(\"Dr.\", \"Banner\");\nconsole.log(greetings);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Order",
            "id": 116131,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Passe os dois últimos argumentos com os valores de `\"salt\"` e `\"pasta\"` para que `\"pasta\"` seja exibido por último.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addToPot(first, second, third) {\n console.log(\"Boil \" + first);\n console.log(\"Add \" + second);\n console.log(\"Cook \" + third);\n}\naddToPot(\"water\", );",
                  "solvedContent": "function addToPot(first, second, third) {\n console.log(\"Boil \" + first);\n console.log(\"Add \" + second);\n console.log(\"Cook \" + third);\n}\naddToPot(\"water\", \"salt\", \"pasta\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple parameters",
            "id": 116132,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Adicione os parâmetros para que o código exiba `Hello World !`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function printMsg(first, second, third) {\n console.log(first + \" \" + second + \" \" + third);\n}\nconst result = printMsg();",
                  "solvedContent": "function printMsg(first, second, third) {\n console.log(first + \" \" + second + \" \" + third);\n}\nconst result = printMsg(\"Hello\", \"World\", \"!\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple parameters 2",
            "id": 116273,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Invoque a função definida abaixo com os argumentos para retornar \"TheBigBadWolf\" e armazene este valor na variável `result` vazia.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function mashWords(first, second, third, fourth) {\n return first + second + third + fourth;\n}\nconst result = \nconsole.log(result);",
                  "solvedContent": "function mashWords(first, second, third, fourth) {\n return first + second + third + fourth;\n}\nconst result = mashWords(\"The\", \"Big\", \"Bad\", \"Wolf\");\nconsole.log(result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple parameters 3",
            "id": 116274,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Codifique os parâmetros `1` e `2` dentro dos parênteses da chamada da função.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function numSum(one, two) {\n let sum = one + two;\n console.log(one + \" + \" + two + \" = \" + sum);\n}\nnumSum();",
                  "solvedContent": "function numSum(one, two) {\n let sum = one + two;\n console.log(one + \" + \" + two + \" = \" + sum);\n}\nnumSum(1, 2);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12799,
        "title": "Entendendo Funções",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Get/Function Names",
            "id": 116479,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code o prefixo `get` no nome da função que é usado quando uma função apenas retorna um valor sem alterá-lo de nenhuma forma. Você precisará atualizar o nome tanto na linha 1 quanto na linha 4 do código.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function Age(info) {\n return info[1];\n}\nconsole.log(\"The person's age is: \" + Age([\"Jon Jones\", 37,\n \"Texas\"]) + \" years.\");",
                  "solvedContent": "function getAge(info) {\n return info[1];\n}\nconsole.log(\"The person's age is: \" + getAge([\"Jon Jones\", 37,\n \"Texas\"]) + \" years.\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Is/Function Names",
            "id": 116480,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Codifique o prefixo no nome da função que é preferencialmente usado quando uma função retorna um valor que é um booleano.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function Adult(info) {\n return info[1] >= 18;\n}\nconsole.log(Adult([\"Jon Jones\", 37, \"Texas\"]));",
                  "solvedContent": "function isAdult(info) {\n return info[1] >= 18;\n}\nconsole.log(isAdult([\"Jon Jones\", 37, \"Texas\"]));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Naming Consistency",
            "id": 116481,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Adicione o prefixo correto à segunda função para que o esquema de nomenclatura das funções permaneça consistente. Você precisará atualizar o nome tanto na linha 5 quanto na linha 8 do código.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function calculateDifference(a, b) {\n return a - b;\n}\n\nfunction Sum(a, b) {\n return a + b;\n}\nconsole.log(Sum(30, 11));",
                  "solvedContent": "function calculateDifference(a, b) {\n return a - b;\n}\n\nfunction calculateSum(a, b) {\n return a + b;\n}\nconsole.log(calculateSum(30, 11));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Numbers",
            "id": 116482,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Há um erro no código a seguir que está causando uma saída incorreta. Tente corrigir o erro.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addNumbers(a, b) {\n return (a + b);\n}\nconsole.log(addNumbers(10, \"20\"));",
                  "solvedContent": "function addNumbers(a, b) {\n return (a + b);\n}\nconsole.log(addNumbers(10, 20));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Comparing colors",
            "id": 116484,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "O seguinte código está com a sintaxe faltando. Adicione a sintaxe que falta antes do último `isTheSameColor` para retornar o valor da expressão.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function hasTheSameColor(colorsArray, color) {\n let isTheSameColor = false;\n for (let i = 0; i < colorsArray.length; i++) {\n  if (colorsArray[i] === color) {\n   isTheSameColor = true;\n  }\n }\n isTheSameColor;\n}\nconsole.log(hasTheSameColor(['green', 'red', 'black'], 'black'));",
                  "solvedContent": "function hasTheSameColor(colorsArray, color) {\n let isTheSameColor = false;\n for (let i = 0; i < colorsArray.length; i++) {\n  if (colorsArray[i] === color) {\n   isTheSameColor = true;\n  }\n }\n return isTheSameColor;\n}\nconsole.log(hasTheSameColor(['green', 'red', 'black'], 'black'));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "array.length",
            "id": 116485,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complete o código abaixo para que a função retorne o comprimento do array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function getArrayLength(inputArr) {\n return\n}\nconsole.log(\"Length of array: \" + getArrayLength([1, 25, 3,\n 5\n]));",
                  "solvedContent": "function getArrayLength(inputArr) {\n return inputArr.length;\n}\nconsole.log(\"Length of array: \" + getArrayLength([1, 25, 3,\n 5\n]));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Index 0",
            "id": 116496,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complete o código abaixo para que a função retorne o primeiro item do array de entrada.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function returnZeroIndex(arr) {\n return\n}\nconsole.log(returnZeroIndex([5, 6, 3, 8]));",
                  "solvedContent": "function returnZeroIndex(arr) {\n return arr[0];\n}\nconsole.log(returnZeroIndex([5, 6, 3, 8]));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Specific Index",
            "id": 116497,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complete o código abaixo para que a função retorne o último item do array de entrada.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function returnAnIndex(arr) {\n return\n}\nconsole.log(returnAnIndex([5, 6, 3, 8]));",
                  "solvedContent": "function returnAnIndex(arr) {\n return arr[3];\n}\nconsole.log(returnAnIndex([5, 6, 3, 8]));"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Processed Index",
            "id": 116498,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complete o código abaixo para retornar o último item do array multiplicado por um fator de 2.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function doubleLastItem(arr) {\n return\n}\nconsole.log(doubleLastItem([5, 6, 3, 8]));",
                  "solvedContent": "function doubleLastItem(arr) {\n return arr[3] * 2;\n}\nconsole.log(doubleLastItem([5, 6, 3, 8]));"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}