{
  "tutorial": {
    "id": 2654,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Operações com Strings e Listas",
    "descriptionContent": "Desafios baseados em Strings e Operações com Listas",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14682,
        "title": "Listas de Estudantes",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Students Lists",
            "id": 129710,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um professor quer criar uma lista com os nomes de todos os alunos da sua turma. Ele recebeu uma string longa contendo todos os nomes, cada nome separado por uma vírgula `,`.\n\nAjude-o a criar uma lista `names_list` que armazena os nomes individuais separados por uma vírgula. Em seguida, imprima a lista.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "student_names = \"Samantha,Mcgrath,Peyton,Kerim,Nadia,Sandra,Sarah,Alex\"",
                  "solvedContent": "student_names = \"Samantha,Mcgrath,Peyton,Kerim,Nadia,Sandra,Sarah,Alex\"\nnames_list = student_names.split(\",\");\nprint(names_list)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14683,
        "title": "Mudança de Tech Stack",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Tech Stack Change",
            "id": 129711,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Você trabalha como desenvolvedor de software e decidiu usar um conjunto específico de tecnologias de programação para sua próxima aplicação. Em um pedido de última hora do cliente, você concordou em usar React em vez de Angular.\n\n1. Reatribua `tech_stack` e use uma operação de string para substituir \"Angular\" por \"React\".\n2. Crie uma variável `tech_stack_list` que armazene os nomes de `tech_stack` como uma lista.\n3. Imprima `tech_stack_list`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "tech_stack = \"Angular Node Mongo Express\"",
                  "solvedContent": "tech_stack = \"Angular Node Mongo Express\"\ntech_stack = tech_stack.replace(\"Angular\", \"React\")\ntech_stack_list = tech_stack.split()\nprint(tech_stack_list)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14684,
        "title": "DVDs Mais Vendidos",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Top Selling DVDs",
            "id": 129712,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Uma locadora de DVDs quer atualizar seu site com um cabeçalho que lista seus filmes mais vendidos.\n\n1. Crie uma nova variável `new_top_movies` que substitua o valor `\"Trapped\"` de `old_top_movies` por `\"Moonfall\"`. Lembre-se de que esses títulos diferenciam maiúsculas de minúsculas.\n2. Imprima a nova lista.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "old_top_movies = \"The Power of the Dog - Trapped - Tenet\"\n",
                  "solvedContent": "old_top_movies = \"The Power of the Dog - Trapped - Tenet\"\nnew_top_movies = old_top_movies.replace(\"Trapped\", \"Moonfall\")\nprint(new_top_movies)\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14685,
        "title": "Lista recomendada de filmes",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Recommended List of Movies",
            "id": 129713,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sites de filmes recomendam filmes com base em classificações, popularidade, opções personalizadas, etc. Vamos usar compreensões de lista para recomendar filmes com uma classificação maior que 4.\n\n1. Codifique uma compreensão de lista e atribua-a à variável `recommended`.\n2. A compreensão de lista deve iterar por cada item na lista `ratings`.\n3. Codifique a expressão dentro da compreensão de lista para verificar se a classificação é maior que 4. O resultado deve ser uma lista de valores booleanos.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "ratings = [4.3, 3.1, 5, 1.1]\r\n\r\nrecommended =\r\n\r\nprint(recommended)",
                  "solvedContent": "ratings = [4.3, 3.1, 5, 1.1]\r\n\r\nrecommended = [rating > 4 for rating in ratings]\r\nprint(recommended)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14686,
        "title": "Adicionando Https:// antes de sites",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Adding https:// Before Sites",
            "id": 129714,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Já reparou como os navegadores adicionam automaticamente `\"https://\"` a uma URL de site? Vamos usar compreensão de lista para adicionar `\"https://\"` à lista de sites em `websites`.\n\n1. Crie uma função `add_https` que recebe `site` como parâmetro. A função deve retornar `\"https://\"` adicionado ao parâmetro `site`.\n2. Após a função, crie uma variável `auto_add` que armazenará uma compreensão de lista.\n3. A compreensão de lista deve iterar por cada item na lista `websites`.\n3. Codifique a expressão dentro da compreensão de lista que chama a função `add_https` nos itens da lista.\n4. Imprima `auto_add`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "websites = [\"mimo.com\", \"coding.com\", \"food.org\"]",
                  "solvedContent": "websites = [\"mimo.com\", \"coding.com\", \"food.org\"]\r\n\r\ndef add_https(site):\r\n    return \"https://\" + site\r\n\r\nauto_add = [add_https(site) for site in websites]\r\n    \r\nprint(auto_add)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14687,
        "title": "Excluindo informações desnecessárias",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Deleting Unnecessary Information",
            "id": 129715,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Às vezes, armazenamos informações em bancos de dados que não precisamos. Por exemplo, no dicionário `product` dado, não precisamos da chave e valor `color`.\n\n1. Delete a chave `color` com seu valor do dicionário `product` usando a palavra-chave correta.\n2. Imprima `product`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "product = {\r\n 'name': 'pencil',\r\n 'type': 'stationery',\r\n 'price': 1.99,\r\n 'color': 'blue',\r\n 'availability': False\r\n}",
                  "solvedContent": "product = {\r\n 'name': 'pencil',\r\n 'type': 'stationery',\r\n 'price': 1.99,\r\n 'color': 'blue',\r\n 'availability': False\r\n}\r\n\r\ndel product['color']\r\n\r\nprint(product)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13973,
        "title": "Loja de Flores da Juliette",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Juliette's Flower Shop",
            "id": 124075,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Juliette é dona de uma floricultura. A loja já oferece um desconto de 5% para todos os clientes para comemorar o 3º aniversário da loja.\n\nRecentemente, Juliette teve um novo bebê nascido no dia 15 de julho. Nessa ocasião, ela decidiu dar um desconto ainda maior de 10% para todos os clientes nascidos na mesma data. Ela tem uma string contendo esses aniversários no formato DD-MM que são separados por `|`.\n\n1. Crie uma variável `birthdays_list` e armazene nela as datas de nascimento como itens de uma lista a partir de `birthdays_string`.\n2. Percorra `birthdays_list` e verifique se a data é `\"15-07\"`. Se for, reatribua o `special_discount` para **substituir** `5%` por `10%`.\n3. Imprima `special_discount` fora do loop for no final.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "birthdays_string = \"23-09|25-04|05-09|15-07|01-06\"\nspecial_discount = \"You are eligible for a 5% discount\"\n",
                  "solvedContent": "birthdays_string = \"23-09|25-04|05-09|15-07|01-06\"\nspecial_discount = \"You are eligible for a 5% discount\"\nbirthdays_list = birthdays_string.split(\"|\")\n\nfor birthday in birthdays_list:\n if (birthday == \"15-07\"):\n  special_discount = special_discount.replace(\"5%\", \"10%\")\n\nprint(special_discount)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13976,
        "title": "Verificação de Nota",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Grade Check",
            "id": 124079,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um instrutor de curso recebeu as notas de um aluno em formato de string. As notas estão separadas por um `-`. Ela quer calcular a soma de todas essas notas e verificar se o aluno passou.\n\n1. Crie uma variável `grades_list` e armazene nela as notas que você extrai de `grades_string` como uma lista de itens.\n2. Percorra `grades_list`, converta cada item para um inteiro e, em seguida, adicione-o ao `total_grade`.\n\nCertifique-se de realizar essas operações **antes** da instrução de impressão.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "grades_string = \"88-77-59-63\"\ntotal_grade = 0\n\nprint(total_grade)",
                  "solvedContent": "grades_string = \"88-77-59-63\"\ntotal_grade = 0\ngrades_list = grades_string.split(\"-\")\n\nfor grade in grades_list:\n grade = int(grade)\n total_grade += grade\n\nprint(total_grade)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13837,
        "title": "Filtrando resultados de busca",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filtering search results",
            "id": 123319,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Os motores de busca, sites de streaming, etc. filtram os resultados de busca por palavras-chave. Vamos usar compreensão de lista para filtrar uma lista de forma que o resultado exiba apenas os itens da lista com a palavra-chave.\n\n1. Armazene uma compreensão de lista na variável `results`.\n2. Itere através de cada item da lista na compreensão de lista. A expressão não terá nenhuma operação.\n3. Adicione uma declaração `if` à compreensão de lista que verifica se um item da lista contém `\"cats\"`.\n4. Imprima `results`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "archive = [\"Amazing cats\", \"Top 10 Dances\", \"Breaking news\", \"How to: Tips\", \"cats dance\"]\r\n\r\nresults =",
                  "solvedContent": "archive = [\"Amazing cats\", \"Top 10 Dances\", \"Breaking news\", \"How to: Tips\", \"cats dance\"]\r\n\r\nresults = [result for result in archive if result.count(\"cats\") > 0]\r\n\r\nprint(results)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13839,
        "title": "Limpeza da lista de tarefas",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Clear a task list",
            "id": 123321,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos usar a notação de fatia para limpar uma lista de tarefas simples.\n\n1. Delete `grocery` e `laundry` da lista `daily_tasks` usando a palavra-chave `del` e a notação de fatia.\n2. Imprima `daily_tasks`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "daily_tasks = ['grocery', 'laundry', 'dusting']",
                  "solvedContent": "daily_tasks = ['grocery', 'laundry', 'dusting']\r\ndel daily_tasks[1::-1]\r\nprint(daily_tasks)"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}