{
  "tutorial": {
    "id": 2660,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Pedra, Papel, Tesoura - Parte 2",
    "descriptionContent": "Aqui, vamos estender o projeto para jogar uma melhor de três e, com isso, torná-lo um jogo de verdade",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2660-icon-banner.svg",
    "chapters": [
      {
        "id": 14634,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129433,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bem-vindo de volta ao projeto **Pedra, Papel, Tesoura**. Vamos jogar uma melhor de três para tornar o jogo mais interessante. Quem ganhar duas partidas primeiro é o vencedor.\n\n1. No início do programa, crie duas novas variáveis, `player_wins` e `computer_wins`, e defina os valores de ambas como `0`. Essas variáveis irão acompanhar o número de partidas que o jogador e o computador ganham, respectivamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129434,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Precisamos rodar vários jogos até que alguém vença duas partidas, então precisamos colocar nosso código atual dentro de um loop `while`.\n\nEm cada iteração do loop, continuaremos pedindo ao jogador sua escolha e gerando a escolha do computador.\n\n1. Mova todo o seu código existente, exceto a declaração de importação e as variáveis `player_wins` e `computer_wins`, para um novo loop `while`. A condição do loop deve ser se `player_wins` ainda é menor que dois e `computer_wins` também é menor que `2`.\n\nVamos criar um loop infinito porque as variáveis `player_wins` e `computer_wins` nunca são atualizadas. Vamos garantir que o programa funcione como esperado e pare novamente após duas vitórias em um segundo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    print(\"You won\")\n  elif winner == \"Computer\":\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129435,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Quando um jogo termina, a pontuação deve ser atualizada de acordo com quem vence.\n\n1. Adicione código para incrementar a variável `player_wins` nas instruções if `if winner == \"Player\"`.\n2. Atualize a variável `computer_wins` no bloco `elif winner == \"Computer\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    print(\"You won\")\n  elif winner == \"Computer\":\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129436,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Os resultados do jogo fazem mais sentido se a pontuação for exibida no final de cada rodada. Não é?\n\n1. Adicione uma declaração `print` no final, mas ainda dentro do loop `while`, para exibir a pontuação atual no console após cada rodada. A declaração deve imprimir: `Current Score - Player: {player_wins}, Computer: {computer_wins}`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")\n\n  print(f\"Current Score - Player: {player_wins}, Computer: {computer_wins}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129437,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Por último, vamos anunciar o vencedor geral assim que o loop terminar.\n\nAdicione uma instrução no final do seu programa para exibir uma mensagem dependendo de quem ganhou mais jogos.\n\n1. Se `player_wins > computer_wins`, imprima `Congratulations! You won.`.\n2. Caso contrário, imprima `Computer won!`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nplayer_wins = 0\ncomputer_wins = 0\n\nprint(\"Let's play rock, paper, or scissors\")\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")\n\n  print(f\"Current Score - Player: {player_wins}, Computer: {computer_wins}\")",
                  "solvedContent": "import random\n\nplayer_wins = 0\ncomputer_wins = 0\n\nprint(\"Let's play rock, paper, or scissors\")\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")\n\n  print(f\"Current Score - Player: {player_wins}, Computer: {computer_wins}\")\n\nif player_wins > computer_wins:\n  print(\"Congratulations! You won the best of three.\")\nelse:\n  print(\"Computer won the best of three. Better luck next time!\")"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}