{
  "tutorial": {
    "id": 2905,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Números Aleatórios - Parte 2",
    "descriptionContent": "Na segunda parte do projeto, usaremos parâmetros de consulta para adaptar os endpoints às nossas necessidades.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2905-icon-banner.svg",
    "chapters": [
      {
        "id": 14996,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132200,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Na segunda parte do projeto **Números Aleatórios**, usaremos parâmetros de consulta para personalizar as requisições.\n\nPrimeiro, vamos atualizar o endpoint `/randomNumber` para permitir que os usuários especifiquem tanto um número mínimo quanto um máximo.\n\n1. Crie duas novas variáveis dentro da função do endpoint `/randomNumber`: `min` e `max`.\n2. Extraia esses valores de `req.query.min` e `req.query.max` usando `parseInt`.\n3. Defina `min` como `1` e `max` como `100` se os respectivos parâmetros de consulta não forem fornecidos.\n4. Verifique se `min` é maior ou igual a `max`. Se for, retorne uma resposta de erro 400 com um objeto JSON que tenha uma propriedade `error` com uma mensagem.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({\n    result: result\n  });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min) || 1;\n  const max = parseInt(req.query.max) || 100;\n  if (min >= max) {\n    return res.status(400).json({\n      error: 'Min should be less than max.'\n    });\n  }\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({\n    result: result\n  });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/randomNumber?min=100&max=200",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 132204,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, queremos usar os parâmetros analisados para adaptar a função de geração de números aleatórios.\n\n1. No caso de não haver erro, ajuste a fórmula para gerar um número aleatório entre `min` e `max` inclusivamente.\n2. Certifique-se de continuar enviando um objeto JSON com a chave `result` que contém o número gerado aleatoriamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min) || 1;\n  const max = parseInt(req.query.max) || 100;\n  if (min >= max) {\n    return res.status(400).json({\n      error: 'Min should be less than max.'\n    });\n  }\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({\n    result: result\n  });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({\n    result: result === 0 ? 'Heads' : 'Tails'\n  });\n});\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({\n    result: result\n  });\n});\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min) || 1;\n  const max = parseInt(req.query.max) || 100;\n  if (min >= max) {\n    return res.status(400).json({\n      error: 'Min should be less than max.'\n    });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({\n    result: result\n  });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/randomNumber?min=100&max=200",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #2",
            "id": 132201,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos atualizar nosso endpoint `/diceRoll`. Atualmente, ele sempre rola um único dado, mas queremos permitir que os usuários especifiquem quantos dados rolar.\n\n1. Adicione uma nova variável chamada `times` e analise o valor de `req.query.times` usando `parseInt`. Este valor indicará quantas vezes os dados devem ser rolados.\n2. O número de vezes para rolar os dados deve ser `1` por padrão, se nenhum parâmetro de consulta for fornecido.\n3. Crie um array vazio chamado `results`.\n4. Execute um loop `for` pelo número de vezes que os dados devem ser rolados. Dentro do loop, execute o cálculo existente de rolagem de dados e adicione cada resultado ao array `results`.\n5. Retorne o array `results` na resposta JSON em vez de um único resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const times = parseInt(req.query.times) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.floor(Math.random() * 6) + 1;\n    results.push(result);\n  }\n  res.status(200).json({ result: results });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/diceRoll?times=3",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #3",
            "id": 132202,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, vamos melhorar o endpoint `/coinFlip`. Assim como fizemos com o `/diceRoll`, vamos permitir que o usuário especifique quantas vezes deseja lançar a moeda.\n\n1. Adicione uma nova variável `times` e atribua a ela o valor de `req.query.times` usando `parseInt`.\n2. Defina `times` como `1` por padrão, se o parâmetro de consulta não for fornecido.\n3. Crie um array vazio chamado results.\n4. Execute um loop `for` pelo número de vezes especificado e, em cada iteração, realize o cálculo do lançamento da moeda e adicione cada resultado ao array `results`.\n5. Retorne o array `results` na resposta JSON em vez de um único resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const times = parseInt(req.query.times, 10) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.floor(Math.random() * 6) + 1;\n    results.push(result);\n  }\n  res.status(200).json({ results });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const times = parseInt(req.query.times, 10) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.random() < 0.5 ? 'Heads' : 'Tails';\n    results.push(result);\n  }\n  res.status(200).json({ result: results });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const times = parseInt(req.query.times, 10) || 1;\n  let results = [];\n  for (let i = 0; i < times; i++) {\n    const result = Math.floor(Math.random() * 6) + 1;\n    results.push(result);\n  }\n  res.status(200).json({ results });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const min = parseInt(req.query.min, 10) || 1;\n  const max = parseInt(req.query.max, 10) || 100;\n  if (min >= max) {\n    return res.status(400).json({ error: 'Min should be less than max.' });\n  }\n  const result = Math.floor(Math.random() * (max - min + 1)) + min;\n  res.status(200).json({ result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/coinFlip?times=100",
                "body": null
              }
            }
          }
        ]
      }
    ]
  }
}