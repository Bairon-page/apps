{
  "tutorial": {
    "id": 2613,
    "version": 12,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Rick e Morty - Parte 1",
    "descriptionContent": "Pronto para embarcar em uma jornada interdimensional? Nesta fase, vamos mergulhar no multiverso do JSON. Vamos analisar e apresentar dados do mundo de Rick and Morty, estabelecendo a base para a nossa bússola de personagens.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2613-icon-banner.svg",
    "chapters": [
      {
        "id": 14464,
        "title": "Parte 1 - Configuração",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 128948,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bem-vindo ao projeto **Rick and Morty**. Vamos construir uma página web que exibe personagens do show Rick and Morty usando uma API.\n\n1. Configure o arquivo HTML básico.\n    - Tags `<!doctype html>`, `html`, `head`, `title`, `body` e `link`.\n    - Uma tag `title` com `\"Rick and Morty Character Compass\"` como seu conteúdo, ou escolha um texto que você goste mais.\n    - Uma tag `link` dentro da tag `head`, com referência a um arquivo de folha de estilo chamado `\"style.css\"`.\n    - Um cabeçalho `h1` com `\"Rick and Morty Character Compass\"` como seu conteúdo, ou escolha um texto que você goste mais.\n    - Uma tag `div` com um atributo id de `\"characters-container\"`.\n    - Adicione uma tag `script` abaixo da tag de fechamento `body` com um atributo `src` apontando para `\"script.js\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html lang=\"en\">\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 128949,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos começar criando um objeto de personagem para trabalhar.\n\n1. Crie uma variável chamada `data` e atribua a ela um objeto literal com uma propriedade `characters`. A propriedade `characters` será um array. Dentro do array, coloque um único objeto para representar um personagem.\n2. Adicione as propriedades `name`, `status`, `species` e `image` ao objeto. Preencha-as com dados sobre o Rick.\n\n```JSON\n{\n  \"name\": \"Rick Sanchez\",\n  \"status\": \"Alive\",\n  \"species\": \"Human\",\n  \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n}\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    }\n  ]\n}"
                }
              ],
              "hints": [
                {
                  "title": "How should my code look?",
                  "content": "This is the data structure to add.\n```JavaScript\nconst data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    }\n  ]\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #3",
            "id": 128950,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Em seguida, vamos adicionar mais alguns personagens ao nosso array de personagens.\n\n1. Adicione objetos para Morty e Summer Smith com as mesmas propriedades de Rick.\n   ```JSON\n   {\n     \"name\": \"Morty Smith\",\n     \"status\": \"Alive\",\n     \"species\": \"Human\",\n     \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n   },\n   {\n     \"name\": \"Summer Smith\",\n     \"status\": \"Alive\",\n     \"species\": \"Human\",\n     \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n   }\n   ```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    }\n  ]\n}",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 128951,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora, é hora de usar JavaScript para criar elementos HTML a partir dos nossos dados em JavaScript.\n\n1. Primeiro, obtenha uma referência para o elemento `characters-container` no HTML e armazene-a em uma variável chamada `charactersContainer`.\n2. Em seguida, use o método embutido `forEach()` do JavaScript em `data.characters`, passando uma função de callback que recebe um único parâmetro, que representará o item atual no array (`character`).\n3. Dentro da função de callback, crie novos elementos `div` com a classe `card` e os anexe ao `charactersContainer`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 128952,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "O passo final é preencher cada cartão com as informações do personagem.\n\n1. Dentro da função de callback para o método `forEach`, use um template literal para gerar o HTML de um cartão usando as propriedades do personagem: `image`, `name`, `status` e `species`. Atribua este HTML como o `innerHTML` do div `card`.\n\nUse o seguinte código ou algo similar, mas certifique-se de definir a classe `character-image` para a imagem, `character-detail` e `attribute` para as tags `p` e `span`, respectivamente.\n\n```JavaScript\ncard.innerHTML = `\n  <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n  <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n  <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n  <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n`;\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 128953,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agora que o HTML e o JavaScript estão concluídos, é hora de estilizar a página.\n\n1. Crie um novo arquivo CSS e estilize a tag `body`. Defina:\n    - `font-family` para `Arial, sans-serif`\n    - `background-color` para `#f4f4f4`\n    - `padding` para `20px`\n    - `text-align` para `center`",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 128954,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Como próximo passo, vamos estilizar o container que contém todas as cartas dos personagens.\n\n1. Selecione-o pelo seu id `characters-container`. Adicione o seguinte CSS:\n    - `display: flex`\n    - `justify-content: space-around`\n    - `flex-wrap: wrap`\n\nCom essas propriedades, as cartas serão exibidas em uma linha, distribuídas uniformemente, e irão se ajustar em novas linhas se não houver espaço suficiente.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 128956,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "As imagens precisam de um pouco de atenção.\n\n1. Selecione-as pelo nome da classe, `character-image`.\n    - Defina tanto a `width` quanto a `height` para `100px`.\n    - Torne as imagens redondas definindo um `border-radius` de `50%`.\n    - Adicione uma margem na parte inferior para espaçamento, usando `margin-bottom`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 128955,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "As cartas individuais poderiam receber um pouco de atenção.\n\n1. Selecione-as pelo nome da classe `.card`. Certifique-se de fazer o seguinte:\n    - Exiba os itens do cartão em uma coluna e centralize os itens. Faça isso criando uma regra para `.card` e usando `flexbox`, `flex-direction`, `align-items` e `justify-content`.\n    - Adicione algum `padding` e `margin` para espaçamento.\n    - Arredonde as bordas definindo um `border-radius`.\n    - Defina a cor de fundo como `white` e a `width` dos cartões para um valor que você goste.\n    - Adicione uma sombra para dar profundidade.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 128957,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mais estilo!\n\n1. Defina o `font-weight` de todos os elementos com a classe `attribute` para `bold` e adicione algum espaçamento à direita definindo um valor para `margin-right`.\n2. Por fim, adicione alguma `margin` a todos os elementos com a classe `character-detail` para um melhor espaçamento.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}