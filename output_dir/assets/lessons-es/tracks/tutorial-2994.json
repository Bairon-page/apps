{
  "tutorial": {
    "id": 2994,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Marcador - Parte 2",
    "descriptionContent": "En esta segunda parte, daremos vida a la aplicación Score Keeper con estilo.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2994-icon-banner.svg",
    "chapters": [
      {
        "id": 15167,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 133593,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido de nuevo al proyecto **Score Keeper**. En la segunda parte, vamos a darle estilo a la aplicación.\n\n1. Para que el empaquetador de React esté contento, debemos enlazar el archivo `index.css`.\n2. Ya que estamos aquí, cambia el título a *Score Keeper*.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>Score Keeper</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>"
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 134867,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a empezar a estilizar la aplicación. Usaremos múltiples archivos CSS para mantener nuestro estilo bien organizado.\n\n1. En el componente `App`, importa el archivo `App.css`.\n2. En el archivo `App.css`, crea una regla que apunte al elemento `body` con las siguientes propiedades para aplicar un estilo básico:\n   - Establece el `background-color` a `lightcyan`.\n   - Establece el `font-family` a `Arial, sans-serif`.\n   - Establece el `color` a `darkslategray`.\n   - Establece el `text-align` a `center`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>Score Keeper</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}"
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 133600,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para mejorar el estilo de nuestro componente `ScoreKeeper`, utilizamos el archivo `ScoreKeeper.css`. También haremos uso de clases CSS para mantener el CSS limpio.\n\n1. En el componente `ScoreKeeper`, importa el archivo `ScoreKeeper.css`.\n2. Agrega la clase `\"score-keeper-container\"` al elemento `div` que envuelve todo el JSX devuelto en el componente `ScoreKeeper`.\n3. En el archivo `ScoreKeeper.css`, crea una regla que apunte a la clase recién agregada con las siguientes propiedades para aplicar estilo:\n   - Establece el `background-color` a `white`.\n   - Establece el `text-align` a `center`.\n   - Establece el `margin` a `20px auto`.\n   - Establece el `width` a `80%`.\n   - Establece el `max-width` a `640px`.\n   - Establece el `padding` a `20px`.\n   - Establece el `border-radius` a `10px`.\n   - Establece el `box-shadow` a `0 4px 8px rgba(0, 0, 0, 0.1)`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy",
            "id": 135170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a estilizar el elemento `h1` para que el título de `ScoreKeeper` destaque.\n\n1. En el componente `ScoreKeeper`, añade la clase `\"score-keeper-heading\"` al elemento `h1`.\n2. En el mismo archivo `ScoreKeeper.css`, crea una regla para la clase que acabas de añadir con las siguientes propiedades para aplicar el estilo:\n   - Establece el `color` a `teal`.\n   - Establece el `font-size` a `2.5em`.\n   - Establece el `margin-bottom` a `20px`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy - Copy",
            "id": 135171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a estilizar los elementos `button` para que se ajusten a nuestro tema.\n\n1. En el componente `ScoreKeeper`, añade la clase `\"score-keeper-button\"` a todos los elementos `button`.\n2. En el mismo archivo `ScoreKeeper.css`, crea una regla para la clase que acabas de añadir con las siguientes propiedades para aplicar el estilo:\n   - Establece el `margin` a `10px`.\n   - Establece el `padding` a `10px 20px`.\n   - Establece el `font-size` a `1em`.\n   - Establece el `color` a `white`.\n   - Establece el `background-color` a `teal`.\n   - Establece el `border` a `none`.\n   - Establece el `border-radius` a `5px`.\n   - Establece el `cursor` a `pointer`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "s",
            "id": 135172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agrega un efecto hover a los elementos `button` para mejorar la experiencia del usuario y proporcionar retroalimentación.\n\n1. En el `ScoreKeeper.css`, añade un selector `.score-keeper-button:hover` y úsalo para cambiar el `background-color` a `darkslategray` cuando pases el cursor sobre el botón.",
              "preselectedFileIndex": 7,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.score-keeper-button:hover {\n  background-color: darkslategray;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "s - Copy - Copy",
            "id": 135175,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Por último, pero no menos importante, destaquemos al equipo líder. Siempre que un equipo esté a la cabeza, queremos mostrarlo claramente con un estilo único para ese equipo.\n\n1. En el componente `ScoreKeeper`, pasa a cada componente `ScoreView` una nueva propiedad llamada `leading`. El valor debe ser `true` si la puntuación de ese equipo es mayor que la del otro. De lo contrario, debe ser `false`.\n2. En el componente `ScoreView`, construye una clase a partir de la propiedad `leading` pasada que aplicas al elemento contenedor `div`.\n   - Si la propiedad `leading` pasada es `true`, aplica `score-view-wrapper-leading-true`.\n   - Si la propiedad `leading` pasada es `false`, aplica `score-view-wrapper-leading-false`.\n3. En el componente `ScoreView`, importa el archivo `ScoreView.css`.\n4. En el archivo `ScoreView.css`, crea una regla que apunte a la clase `.score-view-wrapper-leading-true` con las siguientes propiedades:\n   - Establece el `background-color` a `teal`.\n   - Establece el `color` a `white`.\n   - Establece el `border-radius` a `5px`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": "import React from \"react\";\nimport \"./ScoreView.css\";\n\nconst ScoreView = (props) => {\n  return (\n    <div className={`score-view-wrapper-leading-${props.leading}`}>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": ".score-view-wrapper-leading-true {\n  color: white;\n  background-color: teal;\n  border-radius: 5px;\n}"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} leading={teamOneScore > teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} leading={teamTwoScore > teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.score-keeper-button:hover {\n  background-color: darkslategray;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}