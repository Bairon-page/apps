{
  "tutorial": {
    "id": 2150,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Timeout y Intervalos en JS",
    "descriptionContent": "Aprende sobre los métodos asíncronos en JavaScript: setTimeout, setInterval y clearInterval.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13418,
        "title": "setTimeout",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>JavaScript tiene algunos métodos nativos que ejecutan código de manera asíncrona, como <code>setTimeout()</code> y <code>setInterval()</code>.</p><p>En este capítulo, vamos a echar un vistazo al método <code>setTimeout()</code>.</p></body></html>"
          },
          {
            "title": "setTimeout()",
            "id": 120594,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El método <code>setTimeout()</code> establece un temporizador, en milisegundos, que ejecuta una función o bloque de código cuando el temporizador expira.</p><p>Codifica tu primer método <code>setTimeout</code> en el código de ejemplo.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "setTimeout() 2",
            "id": 120595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El código aquí es asíncrono. Eso significa que mientras esperamos que se ejecute el <em>callback</em>, el código después del método <code>setTimeout</code> se ejecuta.</p><p>La salida de la consola del método <code>setTimeout</code> se mostrará al final debido al retraso en el método <code>setTimeout</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Delay Parameter",
            "id": 120596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El parámetro <code>delay</code> es el tiempo, en milisegundos, que pasa antes de que la función o el bloque de código se ejecute.</p><p>En el siguiente código, establece un retraso de <code>2000</code> milisegundos para que se ejecute el bloque de código.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed after 2 seconds'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"99\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed after 2 seconds\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>2000</code>.</p></body></html>"
          },
          {
            "title": "Delay of 0",
            "id": 120598,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> es siempre asíncrono, incluso si se omite el parámetro <code>delay</code> o lo establecemos como <code>0</code>.</p><p>Con un <code>delay</code> de <code>0</code>, el código después del método <code>setTimeout()</code> se ejecuta inmediatamente, pero la función de callback se ejecuta <em>tan pronto como sea posible</em>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last, even if we set 0 seconds '\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"112\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last, even if we set 0 seconds \" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>0</code>.</p></body></html>"
          },
          {
            "title": "Callback Function",
            "id": 120597,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> ejecuta el <code>callback</code> después del <code>delay</code> especificado.</p><p>El código <em>después</em> del <code>setTimeout</code> continúa ejecutándose independientemente de si se utiliza un callback o un bloque de código.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Executed Last because of setTimeout&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(callback, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"119\" endIndex=\"127\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>callback</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120760,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué afirmación es verdadera respecto a los métodos de JavaScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JavaScript tiene algunos métodos que ejecutan código de forma asíncrona</item><item value=\"2\" correct=\"false\">JavaScript solo tiene métodos que ejecutan código de manera sincrónica</item></selection><p visible-if=\"wrong\">JavaScript tiene algunos métodos que ejecutan código de forma asíncrona.</p></body></html>"
          },
          {
            "title": "Question: setTimeout()",
            "id": 120761,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué hace el método <code>setTimeout()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ejecuta una función de callback cuando un temporizador expira</item><item value=\"2\" correct=\"false\">Solo establece un temporizador</item></selection><p visible-if=\"wrong\">Ejecuta una función de callback cuando un temporizador expira.</p></body></html>"
          },
          {
            "title": "Question: setTimeout() 2",
            "id": 120762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué afirmación es verdadera respecto al método <code>setTimeout()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es un método asíncrono de JavaScript</item><item value=\"2\" correct=\"false\">Es un método síncrono de JavaScript</item></selection><p visible-if=\"wrong\">Es un método asíncrono de JavaScript.</p></body></html>"
          },
          {
            "title": "Question: Delay Parameter",
            "id": 120763,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué hace el parámetro <code>delay</code> de <code>setTimeout()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Especifica cuántos milisegundos pasan antes de que se ejecute el callback</item><item value=\"2\" correct=\"false\">Hace que todo el código deje de ejecutarse</item></selection><p visible-if=\"wrong\">Especifica cuántos milisegundos pasan antes de que se ejecute el callback.</p></body></html>"
          },
          {
            "title": "Question: Delay of 0",
            "id": 120764,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál es el valor predeterminado del parámetro <code>delay</code> cuando no le pasamos un valor?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">0 milisegundos</item><item value=\"2\" correct=\"false\">1000 milisegundos</item></selection><p visible-if=\"wrong\">0 milisegundos.</p></body></html>"
          },
          {
            "title": "Question: Callback Function",
            "id": 120765,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuándo se ejecuta la función de callback de <code>setTimeout()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Después de que expire el temporizador establecido por el parámetro <code>delay</code></item><item value=\"2\" correct=\"false\">Antes de que expire el temporizador establecido por el parámetro <code>delay</code></item></selection><p visible-if=\"wrong\">Después de que expire el temporizador establecido por el parámetro <code>delay</code>.</p></body></html>"
          },
          {
            "title": "Example: setTimeout()",
            "id": 120767,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifica el método <code>setTimeout()</code> para completar el código.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"9000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"194\" endIndex=\"204\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 1000 solutions\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay Parameter",
            "id": 120769,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifica un retraso de <code>8000</code> milisegundos en el método <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"8000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"238\" endIndex=\"242\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 875 solutions\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>8000</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay of 0",
            "id": 120770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Completa el código para que la función de callback se ejecute lo antes posible.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last because of setTimeout(), even with no delay'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"129\" /></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout(), even with no delay\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example: Callback Function",
            "id": 120771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifica la función callback que imprime el resultado de <code>calculate()</code>, para el primer parámetro de <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"printAnswer\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"setTimeout(printAnswer, \" /><text value=\"5000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"256\" endIndex=\"267\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 450 solutions\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>printAnswer</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13419,
        "title": "setInterval y clearInterval",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> es otro método nativo de JavaScript que ejecuta código de forma asíncrona.</p><p>Con <code>setInterval</code> podemos ejecutar algún código cada cierto período de tiempo. Aprendamos más sobre este método.</p></body></html>"
          },
          {
            "title": "setInterval()",
            "id": 120836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> toma una función de callback y un intervalo como parámetros. Aquí, el <code>toggleBlinker</code> enciende y apaga los intermitentes.</p><p>Pasa la función de callback y el intervalo a la llamada de <code>setInterval</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"187\" endIndex=\"198\" /><option startIndex=\"199\" endIndex=\"212\" /><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>setInterval</code> seguido de <code>toggleBlinker</code> y finalmente <code>500</code>.</p></body></html>"
          },
          {
            "title": "Interval",
            "id": 120608,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval</code> ejecuta la función de callback para siempre, con un retraso del número especificado de milisegundos que pasamos como segundo parámetro.</p><p>La primera ejecución del callback ocurre después del tiempo especificado. No se ejecuta inmediatamente.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>500</code>.</p></body></html>"
          },
          {
            "title": "setInterval() Callback",
            "id": 120607,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si ejecutamos el código, podríamos obtener un error de tiempo de espera porque no hay un alto para el <code>setInterval</code>.</p><p>¡Agrega <code>500</code> milisegundos aquí para ver el código encenderse y apagarse para siempre cada <code>500</code> milisegundos!</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"177\" endIndex=\"180\" /></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text value=\"Timeout\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>500</code>.</p></body></html>"
          },
          {
            "title": "Stopping the Interval",
            "id": 120609,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para detener <code>setInterval()</code> de ejecutarse indefinidamente, podemos usar el método <code>clearInterval</code>.<br /></p><p>Podemos guardar el <code>setInterval</code> en una variable <code>blinkerInterval</code>. Luego usar <code>clearInterval(blinkerInterval)</code> dentro de un <code>setTimeout</code> para que se ejecute después de <code>2500</code> milisegundos.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"26\" /><option startIndex=\"27\" endIndex=\"42\" /><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /><option startIndex=\"283\" endIndex=\"287\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>let</code> seguido de <code>blinkerInterval</code> y luego <code>clearInterval</code>, <code>blinkerInterval</code>, <code>2500</code>.</p></body></html>"
          },
          {
            "title": "intervalID/clearInterval()",
            "id": 120611,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El método <code>clearInterval()</code> toma el <code>blinkerInterval</code> como su único parámetro.</p><p>Al ejecutarse, detiene la acción repetitiva del método <code>setInterval()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>clearInterval</code> seguido de <code>blinkerInterval</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál es un método de JavaScript que ejecuta código de manera asíncrona?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>setInterval()</code></item><item value=\"2\" correct=\"false\"><code>.filter()</code></item></selection><p visible-if=\"wrong\">Asegúrese de elegir <code>setInterval()</code>.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Delay",
            "id": 120784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué especifica el parámetro <code>delay</code> para el método <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">El número de milisegundos que pasarán entre ejecuciones del callback</item><item value=\"2\" correct=\"false\">El número de minutos que pasarán entre ejecuciones del callback</item></selection><p visible-if=\"wrong\">El número de milisegundos que pasarán entre ejecuciones del callback.</p></body></html>"
          },
          {
            "title": "Question: Stopping the Interval",
            "id": 120785,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué afirmación es verdadera respecto al método <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Se ejecuta indefinidamente a menos que agreguemos código adicional para detenerlo</item><item value=\"2\" correct=\"false\">Solo permite que el callback se ejecute 10 veces</item></selection><p visible-if=\"wrong\">Se ejecuta indefinidamente a menos que agreguemos código adicional para detenerlo.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Callback",
            "id": 120783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuáles son dos parámetros comunes que tiene <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Una función de callback y un retraso</item><item value=\"2\" correct=\"false\"><code>setInterval()</code> solo acepta una función de callback como parámetro</item></selection><p visible-if=\"wrong\">Una función de callback y un retraso.</p></body></html>"
          },
          {
            "title": "Question: intervalID/clearInterval()",
            "id": 120787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué método podemos usar para detener la ejecución de <code>setInterval()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>clearInterval()</code></item><item value=\"2\" correct=\"false\"><code>setTimeout</code></item></selection><p visible-if=\"wrong\">Asegúrese de elegir <code>clearInterval()</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Callback",
            "id": 120790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifica la función de callback para que la cuenta regresiva comience con un <code>setInterval</code> y también se detenga si <code>countdown &lt; 0</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" countdown = \" /><text value=\"3\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" countdownInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(countdown);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" countdown--;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &lt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  clearInterval(countdownInterval);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;GO&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"1000\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"56\" /><option startIndex=\"154\" endIndex=\"167\" /><option startIndex=\"168\" endIndex=\"185\" /><option startIndex=\"25\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"3\" /><text type=\"break\" /><text value=\"2\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"GO\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>countdownInterval</code> seguido de <code>setInterval</code> y luego <code>clearInterval</code>, <code>countdownInterval</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Delay",
            "id": 120791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Completa el código estableciendo el retraso entre las ejecuciones de la función de callback a <code>600</code> milisegundos.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" count = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" intervalID;\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (count &lt; \" /><text value=\"3\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  count += \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Callback executed&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  clearInterval(intervalID);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;The interval was cleared after 3 executions&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" intervalID = setInterval(callback, \" /><text value=\"600\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"start();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"284\" endIndex=\"287\" /></interactions><output><content><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"The interval was cleared after 3 executions\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>600</code>.</p></body></html>"
          },
          {
            "title": "Example: intervalID/clearInterval()",
            "id": 120794,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifica el método <code>clearInterval()</code> para detener la ejecución de la función de callback después de <code>2</code> segundos.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" intervalId;\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"startInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  intervalId = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"if\" class=\"keyword\" /><text value=\" (direction === \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;right&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    }\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(direction);\" /><text type=\"break\" /><text value=\"  }, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"stopInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  clearInterval(intervalId);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Interval stopped&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"startInterval();\" /><text type=\"break\" /><text value=\"setTimeout(stopInterval, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"277\" endIndex=\"290\" /><option startIndex=\"370\" endIndex=\"382\" /><option startIndex=\"384\" endIndex=\"388\" /></options></interaction></interactions><output><content><text value=\"right\" /><text type=\"break\" /><text value=\"left\" /><text type=\"break\" /><text value=\"right\" /><text type=\"break\" /><text value=\"Interval stopped\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>clearInterval</code> seguido de <code>stopInterval</code> y finalmente <code>2000</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}