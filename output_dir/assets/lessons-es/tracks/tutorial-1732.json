{
  "tutorial": {
    "id": 1732,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Aplicación de Presupuesto",
    "descriptionContent": "Practica tus comparaciones de cadenas y números codificando una aplicación de presupuesto",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1732-icon-banner.svg",
    "chapters": [
      {
        "id": 11582,
        "title": "Aplicación de Presupuesto",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Save budget",
            "id": 106471,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En este proyecto, escribiremos un borrador del código JavaScript que está planeado para esta aplicación de presupuesto.\n\nPara hacer cálculos, primero necesitamos guardar el presupuesto del usuario en una variable.\n\n1. Crea la variable `const` `budget` y guarda el valor `3200` en ella.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const budget = 3200;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Set savings priority",
            "id": 106467,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El usuario puede decidir cuán importantes son los ahorros para el mes.\n\n1. Crea la variable `const` `savingPriority` y asigna a la variable el valor de cadena `\"high\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Fixed expenses",
            "id": 106465,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La aplicación también registra los gastos fijos mensuales del usuario.\n\n1. Crea la variable `const` `rent` y asígnale el valor `1100`.\n2. Crea la variable `const` `utilities` y asígnale el valor `370`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "New item",
            "id": 106458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, también añadiremos una variable para un artículo que el usuario quiere comprar.\n\n1. Programa la variable `newLaptop` y asígnale el valor `1200`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Total spendings",
            "id": 106472,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a calcular los costos mensuales.\n\n1. Para calcular los costos mensuales del usuario, crea la variable `totalCosts`.\n1. Luego, suma `rent` a `utilities` y asigna este cálculo a `totalCosts`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Budget left",
            "id": 106466,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a calcular el presupuesto restante.\n\n1. Crea la variable `const` `budgetLeft`.\n2. Luego, resta `totalCosts` de `budget` y asigna el cálculo a `budgetLeft`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Buy Laptop",
            "id": 106464,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next:\n\n1. Crea la variable `const` `buyLaptop`.\n2. Verifica si `budgetLeft` es *mayor o igual a* `newLaptop`, y almacena la comparación en `buyLaptop`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Can afford?",
            "id": 106463,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Informemos al usuario si puede permitirse el nuevo portátil.\n\n1. Muestra el valor `\"New Laptop Within Budget:\"` en la consola.\n2. En una nueva línea, muestra el valor de la variable `buyLaptop` en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Save instead",
            "id": 106462,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, aconseja al usuario si debería priorizar el ahorro en su lugar.\n\n1. Muestra el valor `\"Postpone Purchase and Save Instead:\"` en la consola.\n2. En una nueva línea, verifica si `savingPriority` es igual a `\"high\"` y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Change values",
            "id": 106469,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Más adelante aprenderemos cómo hacer que el código como este sea mucho más inteligente. Pero por ahora, cambiemos algunos valores y veamos cómo afectan el resultado. Debido a que hemos usado variables `const`, y sus valores no pueden ser reasignados, debes cambiar los valores en las inicializaciones de las variables.\n\n1. Establece `budget` a `2500`.\n2. Establece `savingPriority` a `\"low\"`.\n3. Establece `rent` a `800`.\n4. Establece `utilities` a `200`.\n5. Ejecuta el código para ver cómo cambia el resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");",
                  "solvedContent": "const budget = 2500;\nconst savingPriority = \"low\";\nconst rent = 800;\nconst utilities = 200;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}