{
  "tutorial": {
    "id": 1825,
    "version": 14,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Animal del Mes: Votación",
    "descriptionContent": "Usa JavaScript para crear botones de upvote y downvote",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1825-icon-banner.svg",
    "chapters": [
      {
        "id": 12108,
        "title": "Animal del Mes: Votación",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 110536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El Zoológico te ha contratado para construir una página donde los usuarios puedan votar a favor o en contra del \"Animal del Mes\".\n\nPrimero, familiaricémonos con los archivos proporcionados: `index.html`, `style.css` y `script.js`.\n\nEl archivo `index.html` actualmente contiene una foto de un Oso Panda y un pie de foto correspondiente. El archivo `style.css` contiene algunos estilos básicos para nuestra página. El archivo `script.js` está en blanco por ahora, trabajaremos en escribir la lógica de JavaScript en pasos posteriores.\n\nComo se mencionó, necesitaremos expandir esta página para permitir que los usuarios \"voten a favor\" o \"voten en contra\" del \"Animal del Mes\". Comenzaremos agregando un elemento de texto en pantalla para mostrar el conteo actual.\n\n1. Agrega un elemento de párrafo con un `id` de `\"votes\"` justo después del pie de foto ( `\"nom nom nom\"` ). Para fines de demostración, establece el texto de este elemento de párrafo en \"3 Votos\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 110542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora vamos a crear los botones que los usuarios usarán para `Upvote` o `Downvote` en el `Animal del Mes`. Primero, enfoquémonos en agregar el botón de `Upvote` en la pantalla, que eventualmente incrementará el conteo de votos en 1 con cada clic.\n\n1. Crea un elemento `button` con un `id` de `\"upvote\"` inmediatamente después del nuevo elemento `<p>` de \"votos\".\n2. Luego, establece el contenido de texto del elemento `button` a `Upvote`.\n3. Finalmente, dentro de `style.css`, selecciona el botón de upvote usando su `id` en un conjunto de reglas para la propiedad adecuada para cambiar su color de fondo a `green`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an element in CSS by its `id` using `#id`. For example, to access a button element with the `id` of `example`, use `#example`."
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 110543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora que tenemos un botón de upvote, abordemos el botón de downvote. Cuando se haga clic, este botón disminuirá el conteo de votos en 1, pero implementaremos esta funcionalidad más adelante. Por ahora, concéntrate en agregar el elemento a la página y configurar correctamente las propiedades proporcionadas.\n\n1. Crea un elemento de botón con un `id` de `\"downvote\"` inmediatamente después del botón de upvote recién creado.\n2. A continuación, establece el contenido de texto del elemento del botón en `Downvote`.\n3. Dentro de `style.css`, apunta al botón de downvote usando su `id` y establece la propiedad adecuada para cambiar su color de fondo a `red`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}",
                  "solvedContent": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}\n\n#downvote {\n background-color: red;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `Upvote` button."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 110544,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora que tenemos todos nuestros elementos en pantalla creados, comencemos a agregar la funcionalidad de votación en JavaScript. Para hacerlo, primero importaremos el archivo `script.js` al final del archivo `index.html`. Crearemos una variable para almacenar el conteo de votos (para fines de demostración, comenzaremos en 3) y la registraremos en la consola para verificar que nuestro archivo esté correctamente vinculado.\n\n1. Importa el archivo `script.js` en el elemento `body` del archivo `index.html` usando una etiqueta `<script>`.\n2. En `script.js`, inicializa una variable `counter` con un valor de `3`.\n3. Finalmente, registra la variable `counter` en la consola y ejecuta tu código para verificar que el archivo `script.js` esté correctamente vinculado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "let counter = 3;\nconsole.log(counter);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change its value whenever `Upvote` or `Downvote` button is clicked."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 110547,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, implementemos las funciones `upvote()` y `downvote()`, que aumentarán y disminuirán el conteo de votos en 1, respectivamente. Primero abordemos la función `upvote()`: declara la función e implementa el cuerpo de la función de manera que la variable `counter` se incremente en 1 cuando se llame.\n\n1. Primero, elimina la declaración `console.log` escrita en el paso anterior.\n2. A continuación, declara una función llamada `upvote()`, que no debe tomar ningún parámetro.\n3. Finalmente, implementa el cuerpo de la función de manera que al llamar a la función se incremente la variable `counter` en `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\nconsole.log(counter);",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax of a function without parameters looks like this:\n```javascript\nfunction functionName(){\n    //statements\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 110550,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La función `upvote` incrementa la variable `counter` en 1, pero también necesitamos implementar la funcionalidad para actualizar el contenido de la página. Vamos a apuntar al elemento `<p>` `votes` que creamos anteriormente y establecer su texto para reflejar la variable `counter` actualizada.\n\n1. Primero, apunta al elemento `p` `votes` por su ID y elige la propiedad de contenido correcta para actualizar. Queremos actualizar el texto del elemento.\n2. Luego, establece la propiedad de contenido a la concatenación de la variable `counter` y la cadena de texto `\" Votes\"`. ¡No olvides el espacio y la capitalización correcta!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to update an `html` element's text content, you can use either the `innerHTML`, `innerText`, or `textContent` content properties. "
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 110551,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, primero abordemos la función `downvote()`. Declara una nueva función llamada `downvote()` e implementa su cuerpo de función de manera que al llamarla disminuya la variable `counter` en `1`.\n\n1. Primero, declara una función llamada `downvote()`, que no debe tomar ningún parámetro.\n2. Luego, implementa el cuerpo de la función de manera que al llamar a la función disminuya la variable `counter` en `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To decrease a variable by 1, you can use `-` or `--` or `-=`. For example, `a--` or `a-=1` or `a=a-1`."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 110552,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, de manera similar a la función `upvote()`, necesitamos implementar la funcionalidad `downvote()` para actualizar el contenido de la página. Como antes, apuntaremos al elemento `<p>` de `votes` y estableceremos su texto para reflejar la variable `counter` actualizada.\n\n1. Dentro de la función `downvote()`, apunta al elemento `<p>` de `votes` por su ID y elige la propiedad de contenido correcta para actualizar.\n2. Luego, establece el texto del elemento a la concatenación de la variable `counter` y la cadena `\" Votes\"`. ¡No olvides el espacio!",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `upvote()` function."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 110553,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora que tenemos nuestra funcionalidad de JavaScript completa, vamos a añadir las llamadas a las funciones de los botones apropiados para completar el proyecto. Adjunta `onclick` event listeners a cada botón para llamar adecuadamente a las funciones `upvote()` y `downvote()`. Asegúrate de probar los botones para verificar tu trabajo.\n\n1. Añade un `onclick` event listener al botón de upvote que llame a la función `upvote()`.\n2. Añade un `onclick` event listener al botón de downvote que llame a la función `downvote()`.\n3. Intenta hacer clic en los botones de upvote y downvote para confirmar que has implementado correctamente la funcionalidad de votación.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\" onclick=\"upvote()\">Upvote</button>\n    <button id=\"downvote\" onclick=\"downvote()\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can add an onclick listener to any element using the `onclick` attribute. For example, `<button onclick=\"func()\"></button>`"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}