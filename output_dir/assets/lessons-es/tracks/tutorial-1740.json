{
  "tutorial": {
    "id": 1740,
    "version": 17,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Programa de Recibos",
    "descriptionContent": "Aprende a usar Loops para crear un programa de recibos de clientes",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1740-icon-banner.svg",
    "chapters": [
      {
        "id": 11608,
        "title": "Programa de Recibos",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Setup Element Identifiers",
            "id": 106886,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Usemos nuestro conocimiento de bucles, arrays y funciones para procesar datos complejos y crear un resumen de recibos de clientes.\n\nPara llenar la tabla de resumen con datos, hemos agregado IDs de elementos en todo el HTML.\n- La fila de encabezado de la tabla contendrá los nombres de los clientes y debería tener `id` s de `customer0`, `customer1`, `customer2`.\n- La primera fila de datos de la tabla contendrá la lista de artículos del recibo y debería tener `id` s de `receipt0`, `receipt1`, `receipt2`.\n- La segunda fila de datos de la tabla contendrá el total del recibo y debería tener `id` s de `total0`, `total1`, `total2`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  // Your code starts here\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Loop through Customers",
            "id": 106876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, trabajaremos en el análisis de los datos. Dentro de la función `populateTable()`, comenzaremos escribiendo un bucle for para iterar a través del array `customers`. Nombra la variable iteradora `i`.\n\n1. Escribe un bucle for para iterar desde 0 hasta el último índice del array `customers`.\n2. Dentro del cuerpo del bucle for, utiliza `console.log()` para mostrar la variable iteradora `i` y verificar que tu bucle está funcionando.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Customer & Receipt Data",
            "id": 106877,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En cada iteración, haz que tu código guarde los datos correspondientes de `customers` y `receipts` en variables.\n\n1. Primero, dentro del nuevo bucle elimina la declaración `console.log()` que agregaste en el paso anterior.\n2. Dentro del bucle crea una variable `customer` y asígnala al valor del elemento actual de `customers` usando la notación de corchetes.\n3. Crea una variable `receipt` y asígnala al valor del elemento actual de `receipts` usando la notación de corchetes.\n4. Finalmente, `console.log()` la variable `customer`, y en la siguiente línea `console.log()` la variable `receipt`, para verificar que iteraste correctamente a través de cada array.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an array's elements using bracket syntax: `array[index]`. Remember that arrays are indexed starting at 0."
                }
              ]
            }
          },
          {
            "title": "Setup Receipt Processing",
            "id": 106878,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nuestro programa necesitará procesar los datos del recibo y los precios. Dentro del bucle `for`, debajo de las variables `customer` y `receipt`, configura dos variables más: una para almacenar una cadena de los artículos del recibo y otra para almacenar el total del recibo.\n\n1. Primero, elimina las declaraciones `console.log()` que agregaste en el último paso.\n2. Crea una variable `receipt_list` y asígnale una cadena vacía. Asegúrate de usar `let` y no `const`, ya que el valor se reasignará más tarde.\n3. Crea una variable `sum` y asígnale un valor de 0. Asegúrate de que esta variable también sea una variable `let`.\n4. Finalmente, registra la variable `receipt_list` seguida de la variable `sum` en la consola para asegurarte de que tu bucle esté funcionando correctamente.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An empty string is `\"\"`."
                }
              ]
            }
          },
          {
            "title": "Loop through Receipt Data",
            "id": 106879,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora procesemos los datos del recibo. Escribe un bucle for para iterar a través de la variable `receipt` que guardaste anteriormente. Nombra la variable iteradora `j`.\n\n1. Primero, elimina las declaraciones `console.log()` que agregaste en el último paso.\n2. Después de inicializar la variable `sum`, escribe un bucle for para iterar desde 0 hasta el índice final de la variable `receipt`. Recuerda usar `j` como la variable iteradora.\n3. Dentro del cuerpo del bucle for, utiliza `console.log` para mostrar la variable iteradora y verificar que tu bucle está funcionando.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Receipt Data",
            "id": 106880,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dentro del bucle `for` que escribiste para iterar a través del contenido de `receipt`, guarda el nombre del artículo y su precio en variables en cada iteración.\n\n1. Primero, elimina la declaración `console.log()` que agregaste en el último paso.\n2. Crea una variable `item` y guarda los datos correspondientes de `receipt` (usando la variable iteradora del bucle for).\n3. Crea una variable `price` y guarda los datos correspondientes de `prices` (usando `item` como índice).\n4. Finalmente, `console.log()` ambas variables (`item` y `price`) para verificar que iteras correctamente a través de cada array. Haz un console log de cada una en una declaración separada.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Build the Receipt List",
            "id": 106881,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora que los datos están desglosados, construye la lista de elementos del recibo. En cada iteración del segundo bucle for, concatena el `item` con la variable `receipt_list` y un carácter de nueva línea ( `\"\\n\"` ).\n\n1. Primero, elimina las declaraciones `console.log()` que agregaste en el último paso.\n2. Establece `receipt_list` igual a `receipt_list` concatenado con el `item` y un carácter de nueva línea ( `\"\\n\"` ).\n3. Finalmente, registra la variable `receipt_list` en la consola para asegurarte de que tu bucle esté funcionando adecuadamente.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To concatenate item and add a new line character, write \n```javascript\n  receipt_list += item + \"\\n\";\n```"
                }
              ]
            }
          },
          {
            "title": "Sum the Prices",
            "id": 106882,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, añade el `price` del artículo a la variable `sum`. Luego, fuera del segundo bucle for, utiliza `console.log()` para mostrar las variables `receipt_list` y `sum`.\n\n1. Primero, elimina la declaración `console.log()` que añadiste en el último paso.\n2. Establece `sum` igual a `sum` más el `price`.\n3. Fuera del segundo bucle for, utiliza `console.log()` para mostrar la variable `receipt_list` seguida de la variable `sum`. Usa dos declaraciones `console.log` para esto.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Plan out Table Population",
            "id": 106884,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora podemos poblar la tabla. Lo haremos con una función llamada `setElementText` que toma dos parámetros: `id` y `text`.\n\nPrimero, planifiquemos la selección de elementos y los valores a poblar.\n\n1. Primero, elimina las declaraciones `console.log()` que agregaste en el último paso.\n2. Escribe declaraciones `console.log` (después del segundo bucle for, pero aún dentro del primer bucle for) para registrar el `id` del elemento objetivo junto con los datos que queremos poblar. Observa el código necesario para hacerlo a continuación.\n3. Completa esto para las variables `customer`, `receipt_list` y `sum`. En total, deberías tener 9 mensajes `console.log` una vez que el bucle se complete.\n\n```javascript\nconsole.log(\"customer\" + i.toString(), customer);\nconsole.log(\"receipt\" + ...\nconsole.log(\"total\" + ...\n```\nAsegúrate de usar las cadenas \"customer\", \"receipt\" y \"total\" para sus respectivos registros en la consola, como se muestra arriba.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can consult index.html if you have trouble remembering the identifier naming conventions.\nTo convert an integer to a string, you can use the built-in JavaScript function `toString()`."
                }
              ]
            }
          },
          {
            "title": "Populate Receipt List & Sum",
            "id": 106885,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, usa la función `setElementText` para llenar el nombre del cliente (de la variable `customer`), los artículos (de la variable `receipt_list`) y el total (de la variable `sum`).\n\n1. Primero, elimina las declaraciones `console.log()` que agregaste en el último paso.\n2. Llena la fila `Customer` de la tabla usando la función `setElementText()`.\n3. Llena la fila `Items` de la tabla usando la función `setElementText()`.\n4. Llena la fila `total` de la tabla usando la función `setElementText()`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    setElementText(\"customer\" + i.toString(), customer);\n    setElementText(\"receipt\" + i.toString(), receipt_list);\n    setElementText(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To populate the `Customer` row, code the following\n```javascript\nsetElementText(\"customer\" + i.toString(), customer);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}