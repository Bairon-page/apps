{
  "tutorial": {
    "id": 1948,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Artículos de la lista de deseos",
    "descriptionContent": "Usa bucles para agregar los artículos de tu lista de deseos a tu carrito de compras y sumar el precio total",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1948-icon-banner.svg",
    "chapters": [
      {
        "id": 12568,
        "title": "Programa de lista de deseos",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Create Total Variable",
            "id": 113705,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Usemos nuestro conocimiento de los bucles for para agregar los artículos de nuestra lista de deseos a nuestro carrito de compras y sumar el precio total.\n\nYa hemos agregado un array `wishlist` que almacena la lista de deseos de un usuario, un array `prices` que almacena los precios de esos artículos, un array `quantity` que almacena la cantidad de cada artículo de la lista de deseos y un array `availableStock` que almacena el stock disponible para esos artículos.\n\nLos índices de cada array se corresponden con un producto.\n\nAhora, agreguemos una forma de llevar un registro del precio total de nuestros artículos.\n\n1. Crea una variable llamada `total` y asígnale `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "First for Loop",
            "id": 113706,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Comencemos a crear nuestro primer bucle for para recorrer nuestro array de deseos.\n\n1. Codifica un bucle for con una variable contador `i` establecida en `0`.\n2. Arma la condición para que ejecute su bloque de código mientras `i` sea menor que la longitud de `wishlist`.\n3. Dentro de los paréntesis, incrementa la variable contador en `1`.\n4. Dentro del cuerpo del bucle for, muestra la variable contador para probar que el bucle está funcionando.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < wishlist.length`, hence we loop through each item of our wishlist no matter the size.\n2. It is important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Adding to Shopping Cart",
            "id": 113707,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, vamos a mostrar cómo añadir los artículos de nuestra lista de deseos al carrito de compras. Queremos que muestre algo como \n```\n1 Red T-shirt added to your shopping cart.\n```\n\n1. Dentro del bucle for, reemplaza el contenido de `console.log` construyendo una cadena para mostrar algo como `<quantity> <wishlist item> added to your shopping cart.` Mira la pista si quieres ver cómo se hace esto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `wishlist` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(quantity[i] + \" \" + wishlist[i] + \" added to your shopping cart.\"\n```"
                }
              ]
            }
          },
          {
            "title": "Calculate the Total",
            "id": 113708,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Calculemos el total de nuestros artículos usando nuestro bucle `for`. Usaremos la asignación de suma para no tener que seguir creando una nueva variable `total` cada vez.\n\n1. Dentro del cuerpo del bucle `for` y debajo de `console.log()`, multiplica el elemento actual del array `prices` con el elemento actual del array `quantity`. Usa la asignación de suma para añadir esto a la variable `total`. Mira la pista si necesitas ayuda con esto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The addition assignment operator is `+=`"
                }
              ]
            }
          },
          {
            "title": "Display Total Price",
            "id": 113719,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mostremos el precio total después de sumar todos los precios.\n\n1. Después del bucle for, `display` nuestro total. Debería mostrarse como `Total Price: $<total>`. Mira la pista si quieres ver cómo se hace esto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "```JS\nconsole.log(\"Total Price: $\" + total);\n```"
                }
              ]
            }
          },
          {
            "title": "Second for Loop",
            "id": 113720,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, comencemos a escribir nuestro segundo bucle for para restar la cantidad de los artículos de nuestra lista de deseos del stock disponible.\n\n1. Codifica un bucle for con una variable contador `i` establecida en `0`.\n2. Arma la condición para que ejecute su bloque de código mientras `i` sea menor que la longitud del array `availableStock`.\n3. Dentro de los paréntesis, incrementa la variable contador en `1`.\n4. Dentro del cuerpo del bucle for, muestra la variable contador para probar que el bucle está funcionando correctamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < availableStock.length`, hence we loop through each item of our `availableStock` array no matter the size.\n2. It's important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Update Available Stock",
            "id": 113721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a restar la cantidad de los artículos de nuestra lista de deseos del array `availableStock`.\n\n1. Dentro del cuerpo del segundo bucle for y encima del `console.log`, usa la autoasignación para restar el artículo actual en el array `quantity` del artículo actual del array `availableStock`. Mira la pista si quieres ver cómo se hace esto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\navailableStock[i] -= quantity[i];\n```"
                }
              ]
            }
          },
          {
            "title": "Display Available Stock",
            "id": 113722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, mostremos nuestro stock disponible actualizado de cada artículo en nuestro bucle.\n\n1. Dentro del segundo bucle for, reemplaza el contenido de `console.log` construyendo una cadena para mostrar algo como `There are <number> <item> left.` Mira la pista si quieres ver cómo se hace esto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `wishlist` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}