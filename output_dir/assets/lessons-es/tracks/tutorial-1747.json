{
  "tutorial": {
    "id": 1747,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Comprobador de Tamaño de Archivo",
    "descriptionContent": "Escribe un código que use una función para verificar si el tamaño de un archivo está dentro de los límites de carga",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1747-icon-banner.svg",
    "chapters": [
      {
        "id": 11622,
        "title": "Comprobador de Tamaño de Archivo",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Function",
            "id": 106853,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a escribir código que use una función para verificar si el tamaño de un archivo está dentro de los límites de carga.\n\nNecesitamos crear una función que verifique el tamaño del archivo.\n\n1. Crea una función llamada `checkSize()` con el parámetro `fileSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function checkSize(fileSize) {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Max Size",
            "id": 106855,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear también una variable que almacene el tamaño máximo de archivo permitido.\n\n1. Crea una constante llamada `maxSize` que contenga el máximo de gigabytes permitidos y asígnale el valor `5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Min Size",
            "id": 106864,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dado que tenemos una variable para el tamaño máximo de archivo, también tengamos una para el tamaño mínimo de archivo.\n\n1. Crea una constante llamada `minSize` que contenga los gigabytes mínimos permitidos y asígnale el valor `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Upload",
            "id": 106859,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mostraremos si se permitirá o no la carga en función del tamaño del archivo.\n\n1. Usa una declaración de visualización para mostrar `\"Upload Permitted?\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Comparison of maximum size",
            "id": 106856,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a decirle al usuario si ha excedido el tamaño máximo de archivo. Podemos hacerlo comprobando si `fileSize` es mayor que `maxSize`.\n\n1. Crea una constante `overMaxSize`, verifica si `fileSize` es mayor que `maxSize`, y almacena el resultado en la constante.\n2. Añade otra declaración de visualización que muestre `\"The file is too large: \" + overMaxSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `>` operator to check if a value is greater than another value."
                }
              ]
            }
          },
          {
            "title": "Comparison of minimum size",
            "id": 106858,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Digamos también a los usuarios si su carga de archivo es demasiado pequeña. Podemos verificar si `fileSize` es menor que `minSize`.\n\n1. Crea una constante `underMinSize`, verifica si `fileSize` es menor que `minSize`, y almacena el resultado en la constante.\n2. Añade otra declaración de visualización que muestre `\"The file is too small: \"+ underMinSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `<` operator to check if a value is less than another value."
                }
              ]
            }
          },
          {
            "title": "Calling",
            "id": 106849,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora que hemos creado una función, vamos a ponerla en uso. Para usar una función, necesitamos llamarla.\n\n1. Crea una nueva constante que contenga un valor numérico, luego pasa esa constante a la función `checkSize()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}\nconst movieSizeGB = 6;\ncheckSize(movieSizeGB);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to call a function is:\n```javascript\nfunctionName(value);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}