{
  "tutorial": {
    "id": 2370,
    "version": 3,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Funciones",
    "descriptionContent": "Desafíate con algo de práctica en funciones",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13841,
        "title": "Calcular el precio con impuestos",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Price with Tax",
            "id": 123347,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Estás construyendo una aplicación web para un restaurante que calcula el precio total de un artículo después de impuestos.\n\n1. Completa la función `calculate_tax` que toma un precio específico y lo actualiza con un impuesto añadido del 10%.\n2. Asegúrate de devolver el `price` actualizado después del cálculo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_tax(price):\n    ",
                  "solvedContent": "def calculate_tax(price):\n    price += price * 0.1\n    return price"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13846,
        "title": "Puede nadar",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Can Swim",
            "id": 123359,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vas a darte un chapuzón rápido en la piscina, pero no soportas el agua fría. ¡Asegurémonos de que la temperatura del agua sea adecuada para nadar!\n\n1. Dentro de la función, escribe una declaración `if else` para verificar la temperatura del agua. Si la temperatura es superior a 30, devuelve `True`. De lo contrario, devuelve `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def can_swim(temperature):",
                  "solvedContent": "def can_swim(temperature):\n if temperature > 30:\n  return True\n else:\n  return False"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13848,
        "title": "Cantidad total",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Total",
            "id": 123348,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es tu cumpleaños y tus amigos decidieron regalarte algo de dinero. Pusieron el dinero en un frasco y te lo dieron.\n\n1. Actualiza la función `calculate_total` para que **itere** sobre todas las cantidades de dinero en el frasco, las sume y devuelva el `sum` total.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_total(jar):\n sum = 0\n \n\n",
                  "solvedContent": "def calculate_total(jar):\n sum = 0\n for money in jar:\n  sum += money\n return sum"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13847,
        "title": "El Juego del Mago",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "The Wizard Spells",
            "id": 123360,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Trabajas en el desarrollo de un juego de magos. Tu tarea es construir un modificador de daño para los hechizos que los personajes pueden lanzar. Cada hechizo puede causar una cantidad diferente de daño a la `enemy_health`. Actualiza la función `cast_spell`.\n\n1. Si el nombre del hechizo es `\"Incendio\"`, establece `damage` a `30`\n2. Si el nombre del hechizo es `\"Avda Kedavra\"`, establece `damage` a `100`\n3. Actualiza la `enemy_health` restando el `damage` de `enemy_health`.\n4. Devuelve `enemy_health` desde la función.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n\n elif spell_name == 'Avada Kedavra':",
                  "solvedContent": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n  damage = 30\n elif spell_name == 'Avada Kedavra':\n  damage = 100\n enemy_health = enemy_health - damage\n return enemy_health"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13849,
        "title": "Verificar disponibilidad en stock",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Check In Stock Availability",
            "id": 123374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Trabajas en una tienda de óptica. Tu tarea es programar un programa que verifique si hay suficientes gafas en el inventario. La función `check_stock` toma una lista `eyeglasses` como parámetro y tiene una variable `in_stock` que inicialmente se establece en `False`.\n\n1. Si el número de gafas es mayor o igual a `5`, establece `in_stock` en `True` e imprime el mensaje `\"Eyeglasses in stock\"`.\n2. De lo contrario, imprime el mensaje `\"Out of stock\"`.\n3. Devuelve la variable `in_stock` desde la función.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def check_stock(eyeglasses):\n in_stock = False\n",
                  "solvedContent": "def check_stock(eyeglasses):\n in_stock = False\n if (len(eyeglasses) >= 5):\n  in_stock = True\n  print(\"Eyeglasses in stock\")\n else:\n  print(\"Out of stock\")\n return in_stock\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}