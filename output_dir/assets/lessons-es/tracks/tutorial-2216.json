{
  "tutorial": {
    "id": 2216,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Tipos y Comparaciones",
    "descriptionContent": "Tipos y Comparaciones",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 7200,
        "title": "Comparando números",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Challenge 1",
            "id": 62414,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Debajo del segundo `console.log`, escribe otro `console.log` que imprima el resultado de verificar si los caracteres son mayores o iguales a 250.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const characters = 134;\nconsole.log(\"Character limit reached:\");",
                  "solvedContent": "const characters = 134;\nconsole.log(\"Character limit reached:\");\nconsole.log(characters >= 250);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 2",
            "id": 62412,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea la variable `const` `inProgress`. Verifica si `downloaded` es menor que `100`, y guarda la comparación dentro de `inProgress`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const downloaded = 67;\n",
                  "solvedContent": "const downloaded = 67;\nconst inProgress = downloaded < 100;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 3",
            "id": 62413,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verifica si `emails` es mayor o igual a `capacity` y almacena el resultado de la comparación en una variable llamada `full`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const capacity = 1000;\nconst emails = 157;\n",
                  "solvedContent": "const capacity = 1000;\nconst emails = 157;\nconst full = emails >= capacity;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 4",
            "id": 62411,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verifica si `age` es mayor o igual a `minAge` y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const age = 19;\nconst minAge = 16;\nconsole.log(\"Old enough to drive:\");\n",
                  "solvedContent": "const age = 19;\nconst minAge = 16;\nconsole.log(\"Old enough to drive:\");\nconsole.log(age >= minAge);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 5",
            "id": 62458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verifica si `temperature` es menor que 32 grados y almacena el resultado de la comparación en una variable `const` llamada `isFreezing`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const temperature = 30;\nconst ",
                  "solvedContent": "const temperature = 30;\nconst isFreezing = temperature < 32;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7232,
        "title": "Comparando cadenas",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Challenge 1",
            "id": 62712,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compara `position` con `expected` usando el operador de desigualdad estricta y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const position = \"last\";\nconst expected = \"first\";\n",
                  "solvedContent": "const position = \"last\";\nconst expected = \"first\";\nconsole.log(position !== expected);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 2",
            "id": 62721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compara `onlineStatus` con `lastSeen` usando el operador de igualdad y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const onlineStatus = \"offline\";\nconst lastSeen = \"yesterday\";\n",
                  "solvedContent": "const onlineStatus = \"offline\";\nconst lastSeen = \"yesterday\";\nconsole.log(onlineStatus === lastSeen);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 3",
            "id": 62713,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compara `offBrand` con `onBrand` usando el operador de igualdad y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const offBrand = \"Orange\";\nconst onBrand = \"Apple\";\n",
                  "solvedContent": "const offBrand = \"Orange\";\nconst onBrand = \"Apple\";\nconsole.log(offBrand === onBrand);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 4",
            "id": 62722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compara `studentName` con `\"Tina\"` usando el operador de desigualdad y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const studentName = \"Anna\";\n",
                  "solvedContent": "const studentName = \"Anna\";\nconsole.log(studentName !== \"Tina\");"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7720,
        "title": "Descubriendo tipos",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 67672,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Asigna un valor de tipo **number** a la variable `age`. Luego une la cadena `\"Age: \"` a esta variable y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const age;\n",
                  "solvedContent": "const age = 26;\nconsole.log(\"Age: \" + age);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 67671,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `joke` y asígnale un **string** con el mejor chiste que conozcas.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const joke = \"Why was 6 afraid of 7? Because 789\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 67585,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Une la variable `const` `messages` con la cadena `\" new messages\"` y muéstrala en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const messages = 8;\nconsole.log( );",
                  "solvedContent": "const messages = 8;\nconsole.log(messages + \" new messages\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 67586,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Codifica una declaración de visualización, y dentro de ella, une las variables `text` y `shuffle` para mostrar `Shuffle playlist: true`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const shuffle = true;\nconst text = \"Shuffle playlist: \";\n",
                  "solvedContent": "const shuffle = true;\nconst text = \"Shuffle playlist: \";\nconsole.log(text + shuffle);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 67587,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `winner` que una la cadena `\"Lucky number: \"` con la variable `number`. Muestra el valor de la variable `winner` en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const number = 7;\n\n",
                  "solvedContent": "const number = 7;\nconst winner = \"Lucky number: \" + number;\nconsole.log(winner);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 6",
            "id": 67701,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea la variable `const` `sugar` que almacene un número de tu elección. Luego une la variable con la cadena `\" grams of sugar\"` y muestra el resultado en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const sugar = 100;\nconsole.log(sugar + \" grams of sugar\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 7",
            "id": 67699,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Une la variable `movie` con `\" audience score: \"`, y luego la variable `score`, para mostrar `Joker audience score: 90`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const movie = \"Joker\";\nconst score = 90;\nconsole.log(  );",
                  "solvedContent": "const movie = \"Joker\";\nconst score = 90;\nconsole.log(movie + \" audience score: \" + score);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 8",
            "id": 67700,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Une la variable `user` con la cadena `\" is online: \"`, y luego la variable `isOnline`. Asigna la expresión a la variable `message`. Muestra la variable `message` en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const user = \"Joe\";\nconst isOnline = true;\nconst message;\nconsole.log(message);",
                  "solvedContent": "const user = \"Joe\";\nconst isOnline = true;\nconst message = user + \" is online: \" + isOnline;\nconsole.log(message);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 9",
            "id": 67670,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `isWeekend` que contenga el valor **booleano** de tu elección, y muéstrala en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "const isWeekend = false;\nconsole.log(isWeekend);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12688,
        "title": "Operadores lógicos",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "AND operator",
            "id": 115168,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `result` que almacene una expresión lógica. Esta expresión debe verificar si la velocidad de internet es mayor que 30, *y* que la cámara esté conectada.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let internetSpeed = 32;\r\nlet isCamConnected = true;\r\n\r\nconsole.log(\"Online class : \" + result);",
                  "solvedContent": "let internetSpeed = 32;\r\nlet isCamConnected = true;\r\nconst result = (internetSpeed > 30) && (isCamConnected);\r\nconsole.log(\"Online class : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "AND operator 2",
            "id": 115132,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Almacena una expresión lógica en `result` que verifique si el artículo comprado es igual a `\"perfume\"`, *y* el stock es `>` que `0`, *y* la factura es `<=` al pago del cliente. Usa `&&` para encadenar las tres condiciones.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let purchasedItem = \"perfume\";\r\nlet stock = 4;\r\nlet bill = 20;\r\nlet customerPayment = 25;\r\nconst result = ;\r\nconsole.log(\"Transaction approved? : \" + result);",
                  "solvedContent": "let purchasedItem = \"perfume\";\r\nlet stock = 4;\r\nlet bill = 20;\r\nlet customerPayment = 25;\r\nconst result = (purchasedItem === \"perfume\") && (stock > 0) && (bill <= customerPayment);\r\nconsole.log(\"Transaction approved? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "OR operator",
            "id": 115169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `result` que almacene una expresión lógica. La expresión debe verificar si el WiFi está conectado *o* si los datos móviles están activados.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isWifiConnected = true;\r\nlet isMobileDataOn = false;\r\n\r\nconsole.log(\"Is the internet working fine? : \" + result);",
                  "solvedContent": "let isWifiConnected = true;\r\nlet isMobileDataOn = false;\r\nconst result = isWifiConnected || isMobileDataOn;\r\nconsole.log(\"Is the internet working fine? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "OR operator 2",
            "id": 115134,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Almacena una expresión lógica en `result` que verifique si el pago en efectivo *o* el saldo de crédito *o* el saldo de la tarjeta son mayores que la factura.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet creditBalance = 5;\r\nlet cardBalance = 15;\r\nconst result = ;\r\nconsole.log(\"Payment Successful? : \" + result);",
                  "solvedContent": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet creditBalance = 5;\r\nlet cardBalance = 15;\r\nconst result = (cashPayment > bill) || (creditBalance > bill) || (cardBalance > bill);\r\nconsole.log(\"Payment Successful? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "NOT operator",
            "id": 115170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `result` que almacene el valor negado de la variable `laptopBatteryEmpty`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let laptopBatteryEmpty = false;\r\n\r\nconsole.log(\"Laptop Charged? : \" + result);",
                  "solvedContent": "let laptopBatteryEmpty = false;\r\nconst result = !laptopBatteryEmpty;\r\nconsole.log(\"Laptop Charged? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "NOT operator 2",
            "id": 115135,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En la variable `result`, niega una expresión lógica que verifica si el swipe está caído *y* el pago en línea está caído.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isSwipeDown = false;\r\nlet isOnlinePayDown = true;\r\nconst result = ;\r\nconsole.log(\"Is any mode of payment accepted? : \" + result);",
                  "solvedContent": "let isSwipeDown = false;\r\nlet isOnlinePayDown = true;\r\nconst result = !(isSwipeDown && isOnlinePayDown);\r\nconsole.log(\"Is any mode of payment accepted? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logical Expression",
            "id": 115133,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `result` que almacene una expresión lógica. La expresión debe verificar si el swipe está funcionando *o* si el pago en efectivo es mayor o *igual* al monto de la factura.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet isSwipeWorking = false;\r\n\r\nconsole.log(\"Payment Successful? : \" + result);",
                  "solvedContent": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet isSwipeWorking = false;\r\nconst result = isSwipeWorking || (cashPayment >= bill);\r\nconsole.log(\"Payment Successful? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logical Expression 2",
            "id": 115171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `rgbCheck` que almacene una expresión lógica. La expresión lógica debe verificar si las variables `r`, `g` y `b` son menores o iguales a 255 para formar un color RGB válido.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let r = 200;\r\nlet g = 300;\r\nlet b = 10;\r\n\r\nconsole.log(\"Valid RGB? : \" + rgbCheck);",
                  "solvedContent": "let r = 200;\r\nlet g = 300;\r\nlet b = 10;\r\nconst rgbCheck = (r <= 255) && (g <= 255) && (b <= 255);\r\nconsole.log(\"Valid RGB? : \" + rgbCheck);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}