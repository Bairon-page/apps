{
  "tutorial": {
    "id": 3142,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Transacciones",
    "descriptionContent": "Aprende a ejecutar múltiples consultas usando SQLite en Express",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15461,
        "title": "Capítulo #1",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 135938,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Las transacciones nos permiten ejecutar múltiples consultas de base de datos como una sola unidad de trabajo, asegurando la integridad de los datos y acelerando el proceso.</p><p>Aprendamos cómo gestionar transacciones de manera eficiente.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135939,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A menudo, queremos agregar múltiples valores a la vez. Podemos lograr eso usando múltiples valores con la declaración <code>INSERT INTO</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross', 34);&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"202\" endIndex=\"208\" /><option startIndex=\"209\" endIndex=\"213\" /><option startIndex=\"229\" endIndex=\"235\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>INSERT</code> seguido de <code>INTO</code> y finalmente <code>VALUES</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 135940,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para usar una transacción, primero necesitamos una declaración. Comenzamos preparando una consulta parametrizada.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT,\" /><text type=\"break\" /><text value=\"  age INTEGER\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross');&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name) VALUES (?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"314\" endIndex=\"316\" /><option startIndex=\"316\" endIndex=\"324\" /><option startIndex=\"326\" endIndex=\"332\" /><option startIndex=\"333\" endIndex=\"337\" /><option startIndex=\"353\" endIndex=\"359\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>db</code> seguido de <code>.prepare</code> y luego <code>INSERT</code>, <code>INTO</code>, <code>VALUES</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 135947,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Las transacciones agrupan múltiples declaraciones de base de datos para que todas tengan éxito o fallen juntas.</p><p>Para agrupar declaraciones en una sola transacción, usamos <code>db.transaction</code>, que toma una función de callback para ejecutarlas todas juntas.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross');&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name) VALUES (?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.transaction\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"352\" endIndex=\"354\" /><option startIndex=\"354\" endIndex=\"366\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>db</code> seguido de <code>.transaction</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy",
            "id": 135949,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para prepararse para agregar múltiples nombres en una sola transacción, usamos una función de callback que recorre el array.</p><p>Dentro del bucle, configuramos cada nombre para que se agregue como parte de una operación agrupada.<br /></p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross');&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name) VALUES (?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.transaction(\" /><text value=\"(\" /><text value=\"names\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" name \" /><text value=\"of\" class=\"keyword\" /><text value=\" names) insertFriend.run(name);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"368\" endIndex=\"373\" /><option startIndex=\"382\" endIndex=\"407\" /><option startIndex=\"408\" endIndex=\"430\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>names</code> seguido de <code>for (const name of names)</code> y finalmente <code>insertFriend.run(name)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy - Copy",
            "id": 135950,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para ejecutar la transacción, pasamos un array, activando el bucle dentro del callback para preparar cada elemento para la inserción.</p><p>Los elementos se agregarán inmediatamente porque la transacción llama directamente a la declaración preparada para cada elemento.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross');&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name) VALUES (?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"names\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" name \" /><text value=\"of\" class=\"keyword\" /><text value=\" names) insertFriend.run(name);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" newFriends = [\" /><text value=\"&quot;Joey&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rachel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Phoebe&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"insertTransaction(newFriends);\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"512\" endIndex=\"529\" /><option startIndex=\"530\" endIndex=\"540\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>insertTransaction</code> seguido de <code>newFriends</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy - Copy - Copy",
            "id": 135951,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para asegurarnos de que nuestra transacción está funcionando como se espera. Vamos a recuperar y mostrar todas las entradas en nuestra base de datos.</p><p>Prepara una declaración que podamos ejecutar para obtener todas las entradas.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross');&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name) VALUES (?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"names\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" name \" /><text value=\"of\" class=\"keyword\" /><text value=\" names) insertFriend.run(name);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" newFriends = [\" /><text value=\"&quot;Joey&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rachel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Phoebe&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"insertTransaction(newFriends);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rows = db.prepare(\" /><text value=\"&quot;SELECT * FROM friends&quot;\" class=\"string\" /><text value=\").all();\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" row \" /><text value=\"of\" class=\"keyword\" /><text value=\" rows) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`\" /><text value=\"${row.id}\" class=\"subst\" /><text value=\": \" /><text value=\"${row.name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"557\" endIndex=\"559\" /><option startIndex=\"559\" endIndex=\"560\" /><option startIndex=\"560\" endIndex=\"567\" /><option startIndex=\"569\" endIndex=\"575\" /><option startIndex=\"576\" endIndex=\"577\" /><option startIndex=\"578\" endIndex=\"582\" /><option startIndex=\"583\" endIndex=\"590\" /></options></interaction></interactions><output><content><text value=\"ID: 1, Name: Chandler\" /><text type=\"break\" /><text value=\"ID: 2, Name: Monica\" /><text type=\"break\" /><text value=\"ID: 3, Name: Ross\" /><text type=\"break\" /><text value=\"ID: 4, Name: Joey\" /><text type=\"break\" /><text value=\"ID: 5, Name: Rachel\" /><text type=\"break\" /><text value=\"ID: 6, Name: Phoebe\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>db</code> seguido de <code>.</code> y luego <code>prepare</code>, <code>SELECT</code>, <code>*</code>, <code>FROM</code>, <code>friends</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 135944,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Las transacciones también ayudan con el manejo de errores. Si alguna consulta dentro de una transacción falla, todas las consultas se revierten, manteniendo la consistencia.</p><p>En este caso, el nombre <code>\"Chandler\"</code> no se puede agregar de nuevo ya que <code>name</code> está marcado como <code>UNIQUE</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"scriipt.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT UNIQUE\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name) VALUES ('Chandler'), ('Monica'), ('Ross');&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name) VALUES (?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"names\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" name \" /><text value=\"of\" class=\"keyword\" /><text value=\" names) insertFriend.run(name);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" newFriends = [\" /><text value=\"&quot;Joey&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rachel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Phoebe&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Chandler&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  insertTransaction(newFriends);\" /><text type=\"break\" /><text value=\"} \" /><text value=\"catch\" class=\"keyword\" /><text value=\" (error) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Transaction failed:&quot;\" class=\"string\" /><text value=\", error.message);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"532\" endIndex=\"535\" /><option startIndex=\"573\" endIndex=\"578\" /><option startIndex=\"580\" endIndex=\"585\" /><option startIndex=\"626\" endIndex=\"631\" /><option startIndex=\"631\" endIndex=\"632\" /><option startIndex=\"632\" endIndex=\"639\" /></options></interaction></interactions><output><content><text value=\"Transaction failed: UNIQUE constraint failed: friends.name\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>try</code> seguido de <code>catch</code> y luego <code>error</code>, <code>error</code>, <code>.</code>, <code>message</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy",
            "id": 135948,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agregar filas con múltiples columnas, como nombre y edad, requiere separar los valores con una coma.<br /></p><p>En el bucle, pasamos el nombre y la edad a la declaración preparada como argumentos separados, asegurando que cada par se inserte correctamente.</p><code version=\"2\" codelang=\"javascript\" name=\"transactionSetup.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`CREATE TABLE IF NOT EXISTS friends (\" /><text type=\"break\" /><text value=\"  id INTEGER PRIMARY KEY AUTOINCREMENT,\" /><text type=\"break\" /><text value=\"  name TEXT,\" /><text type=\"break\" /><text value=\"  age INTEGER\" /><text type=\"break\" /><text value=\");`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO friends (name, age) VALUES ('Chandler', 32), ('Monica', 30), ('Ross', 34);&quot;\" class=\"string\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertFriend = db.prepare(\" /><text value=\"&quot;INSERT INTO friends (name, age) VALUES (?, ?)&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"friends\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" friend \" /><text value=\"of\" class=\"keyword\" /><text value=\" friends) insertFriend.run(friend.name, friend.age);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" newFriends = [\" /><text type=\"break\" /><text value=\"  { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Joey&quot;\" class=\"string\" /><text value=\", \" /><text value=\"age\" class=\"attr\" /><text value=\": \" /><text value=\"31\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"  { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Rachel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"age\" class=\"attr\" /><text value=\": \" /><text value=\"29\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"  { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Phoebe&quot;\" class=\"string\" /><text value=\", \" /><text value=\"age\" class=\"attr\" /><text value=\": \" /><text value=\"33\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"];\" /><text type=\"break\" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  insertTransaction(newFriends);\" /><text type=\"break\" /><text value=\"} \" /><text value=\"catch\" class=\"keyword\" /><text value=\" (error) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".error(\" /><text value=\"&quot;Transaction failed:&quot;\" class=\"string\" /><text value=\", error.message);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" rows = db.prepare(\" /><text value=\"&quot;SELECT * FROM friends&quot;\" class=\"string\" /><text value=\").all();\" /><text type=\"break\" /><text value=\"  rows.forEach(\" /><text value=\"row\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`ID: \" /><text value=\"${row.id}\" class=\"subst\" /><text value=\", Name: \" /><text value=\"${row.name}\" class=\"subst\" /><text value=\", Age: \" /><text value=\"${row.age}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"242\" endIndex=\"243\" /><option startIndex=\"257\" endIndex=\"268\" /><option startIndex=\"269\" endIndex=\"271\" /><option startIndex=\"256\" endIndex=\"257\" /><option startIndex=\"271\" endIndex=\"272\" /><option startIndex=\"509\" endIndex=\"519\" /><option startIndex=\"496\" endIndex=\"507\" /></options></interaction></interactions><output><content><text value=\"ID: 1, Name: Chandler, Age: 32\" /><text type=\"break\" /><text value=\"ID: 2, Name: Monica, Age: 30\" /><text type=\"break\" /><text value=\"ID: 3, Name: Ross, Age: 34\" /><text type=\"break\" /><text value=\"ID: 4, Name: Joey, Age: 31\" /><text type=\"break\" /><text value=\"ID: 5, Name: Rachel, Age: 29\" /><text type=\"break\" /><text value=\"ID: 6, Name: Phoebe, Age: 33\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>,</code> seguido de <code>(</code> y luego <code>'Chandler',</code>, <code>32</code>, <code>)</code>, <code>friend.name</code>, <code>friend.age</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 135952,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usa una transacción para bajar el precio de varios artículos a la vez en el inventario de una tienda.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;store.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`CREATE TABLE IF NOT EXISTS inventory ( id INTEGER PRIMARY KEY AUTOINCREMENT, item TEXT, price INTEGER );`\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`INSERT INTO inventory (item, price) VALUES ('Video Game', 60), ('Board Game', 40), ('Card Game', 15);`\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" updatePrice = db.prepare(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;UPDATE inventory SET price = price - 5 WHERE item = ?&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" discountTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"items\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  items.forEach(\" /><text value=\"(\" /><text value=\"item\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" updatePrice.run(item));\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"discountTransaction([\" /><text value=\"&quot;Video Game&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Card Game&quot;\" class=\"string\" /><text value=\"]);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" items = db.prepare(\" /><text value=\"&quot;SELECT * FROM inventory&quot;\" class=\"string\" /><text value=\").all();\" /><text type=\"break\" /><text value=\"items.forEach(\" /><text value=\"(\" /><text value=\"item\" class=\"params\" /><text value=\") =&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Item: \" /><text value=\"${item.item}\" class=\"subst\" /><text value=\", Price: \" /><text value=\"${item.price}\" class=\"subst\" /><text value=\"`\" /><text value=\"),\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"446\" endIndex=\"448\" /><option startIndex=\"448\" endIndex=\"449\" /><option startIndex=\"449\" endIndex=\"460\" /><option correct=\"false\"><content><text value=\"exec\" /></content></option></options></interaction></interactions><output><content><text value=\"Item: Video Game, Price: 55\" /><text type=\"break\" /><text value=\"Item: Board Game, Price: 40\" /><text type=\"break\" /><text value=\"Item: Card Game, Price: 10\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>db</code> seguido de <code>.</code> y finalmente <code>transaction</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 135953,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué sucede si una consulta falla dentro de una transacción?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Todas las operaciones se revierten</item><item value=\"2\" correct=\"false\">Solo la consulta fallida se revierte</item><item value=\"3\" correct=\"false\">Se elimina toda la base de datos</item><item value=\"4\" correct=\"false\">La transacción procede con las consultas restantes</item></selection><p visible-if=\"wrong\">Todas las operaciones se revierten.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 135954,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crea una transacción para gestionar las lecturas de energía de cada habitación en un edificio, añadiendo nuevas lecturas de una vez.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;energy.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`CREATE TABLE IF NOT EXISTS energy_readings ( id INTEGER PRIMARY KEY AUTOINCREMENT, room TEXT, reading INTEGER );`\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" insertReading = db.prepare(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;INSERT INTO energy_readings (room, reading) VALUES (?, ?)&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"readings\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  readings.forEach(\" /><text value=\"(\" /><text value=\"reading\" class=\"params\" /><text value=\") =&gt;\" /><text type=\"break\" /><text value=\"    insertReading.run(reading.room, reading.reading),\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"logTransaction([\" /><text type=\"break\" /><text value=\"  { \" /><text value=\"room\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Kitchen&quot;\" class=\"string\" /><text value=\", \" /><text value=\"reading\" class=\"attr\" /><text value=\": \" /><text value=\"450\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"  { \" /><text value=\"room\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Bathroom&quot;\" class=\"string\" /><text value=\", \" /><text value=\"reading\" class=\"attr\" /><text value=\": \" /><text value=\"320\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"  { \" /><text value=\"room\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Living Room&quot;\" class=\"string\" /><text value=\", \" /><text value=\"reading\" class=\"attr\" /><text value=\": \" /><text value=\"560\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"]);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" readings = db.prepare(\" /><text value=\"&quot;SELECT * FROM energy_readings&quot;\" class=\"string\" /><text value=\").all();\" /><text type=\"break\" /><text value=\"readings.forEach(\" /><text value=\"(\" /><text value=\"reading\" class=\"params\" /><text value=\") =&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Room: \" /><text value=\"${reading.room}\" class=\"subst\" /><text value=\", Reading: \" /><text value=\"${reading.reading}\" class=\"subst\" /><text value=\"`\" /><text value=\"),\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"218\" endIndex=\"231\" /><option startIndex=\"234\" endIndex=\"244\" /><option startIndex=\"402\" endIndex=\"419\" /><option correct=\"false\"><content><text value=\"db.run\" /></content></option><option correct=\"false\"><content><text value=\"insertReading.prepare\" /></content></option></options></interaction></interactions><output><content><text value=\"Room: Kitchen, Reading: 450\" /><text type=\"break\" /><text value=\"Room: Bathroom, Reading: 320\" /><text type=\"break\" /><text value=\"Room: Living Room, Reading: 560\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>insertReading</code> seguido de <code>db.prepare</code> y finalmente <code>insertReading.run</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 135955,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Considera este bloque de código de transacción. ¿Cuál es su propósito?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" updateSalary = db.prepare(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;UPDATE employees SET salary = salary + ? WHERE role = ?&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" raiseTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"amounts\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  amounts.forEach(\" /><text value=\"(\" /><text value=\"[amount, role]\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" updateSalary.run(amount, role));\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"raiseTransaction([\" /><text type=\"break\" /><text value=\"  [\" /><text value=\"5000\" class=\"number\" /><text value=\", \" /><text value=\"&quot;Engineer&quot;\" class=\"string\" /><text value=\"],\" /><text type=\"break\" /><text value=\"  [\" /><text value=\"3000\" class=\"number\" /><text value=\", \" /><text value=\"&quot;Designer&quot;\" class=\"string\" /><text value=\"],\" /><text type=\"break\" /><text value=\"]);\" /><text type=\"break\" /></content></code><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Aumenta los salarios de los empleados con roles específicos </item><item value=\"2\" correct=\"false\">Disminuir todos los salarios por las cantidades dadas</item><item value=\"3\" correct=\"false\">Agregar nuevos empleados con esos salarios</item><item value=\"4\" correct=\"false\">Eliminar empleados según sus roles</item></selection><p visible-if=\"wrong\">Aumenta los salarios de los empleados con roles específicos .</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 135956,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usa una transacción para restablecer las puntuaciones de varios jugadores en una tabla de clasificación de un juego.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;leaderboard.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`CREATE TABLE IF NOT EXISTS players ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, score INTEGER );`\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"db.exec(\" /><text type=\"break\" /><text value=\"  \" /><text value=\"`INSERT INTO players (name, score) VALUES ('Mario', 100), ('Luigi', 98), ('Peach', 85);`\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" resetScore = db.prepare(\" /><text value=\"&quot;UPDATE players SET score = 0 WHERE name = ?&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" resetTransaction = db.transaction(\" /><text value=\"(\" /><text value=\"names\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  names.forEach(\" /><text value=\"(\" /><text value=\"name\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" resetScore.run(name));\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"resetTransaction([\" /><text value=\"&quot;Mario&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Peach&quot;\" class=\"string\" /><text value=\"]);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" players = db.prepare(\" /><text value=\"&quot;SELECT * FROM players&quot;\" class=\"string\" /><text value=\").all();\" /><text type=\"break\" /><text value=\"players.forEach(\" /><text value=\"(\" /><text value=\"player\" class=\"params\" /><text value=\") =&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Player: \" /><text value=\"${player.name}\" class=\"subst\" /><text value=\", Score: \" /><text value=\"${player.score}\" class=\"subst\" /><text value=\"`\" /><text value=\"),\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"444\" endIndex=\"449\" /><option startIndex=\"449\" endIndex=\"450\" /><option startIndex=\"450\" endIndex=\"457\" /><option startIndex=\"468\" endIndex=\"478\" /><option startIndex=\"478\" endIndex=\"479\" /><option startIndex=\"479\" endIndex=\"482\" /><option correct=\"false\"><content><text value=\"prepare\" /></content></option></options></interaction></interactions><output><content><text value=\"Player: Mario, Score: 0\" /><text type=\"break\" /><text value=\"Player: Luigi, Score: 98\" /><text type=\"break\" /><text value=\"Player: Peach, Score: 0\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>names</code> seguido de <code>.</code> y luego <code>forEach</code>, <code>resetScore</code>, <code>.</code>, <code>run</code>.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 135957,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué declaración SQL se utiliza dentro de una transacción para ejecutar una consulta de actualización en SQLite?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>db.prepare(\"UPDATE tableName SET column = value WHERE condition\")</code></item><item value=\"2\" correct=\"false\"><code>db.transaction('\"UPDATE tableName SET column = value WHERE condition\")</code></item><item value=\"3\" correct=\"false\"><code>db.execute(\"UPDATE tableName SET column = value WHERE condition\")</code></item><item value=\"4\" correct=\"false\"><code>db.commit(\"UPDATE tableName SET column = value WHERE condition\")</code></item></selection><p visible-if=\"wrong\"><code>db.prepare(\"UPDATE tableName SET column = value WHERE condition\")</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}