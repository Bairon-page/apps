{
  "tutorial": {
    "id": 1369,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Funciones como expresiones",
    "descriptionContent": "expresión de función",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9988,
        "title": "Función como expresiones",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Function",
            "id": 89381,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos usar una comprensión de lista para crear una nueva lista aplicando una función como <code>halve()</code> a cada elemento de una lista existente como <code>prices</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve\" class=\"title\" /><text value=\"(num)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num/\" /><text value=\"2\" class=\"number\" /></content></code></body></html>"
          },
          {
            "title": "Function 2",
            "id": 89382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La función que usaremos, <code>halve()</code>, toma un número <code>num</code> como argumento y devuelve su mitad con <code>num/2</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve\" class=\"title\" /><text value=\"(num)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" num/\" /><text value=\"2\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"48\" /><option startIndex=\"59\" endIndex=\"64\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>num</code> seguido de <code>num/2</code>.</p></body></html>"
          },
          {
            "title": "Loop",
            "id": 89383,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Como antes, comenzamos iterando a través de cada <code>price</code> en la lista original <code>prices</code> con un bucle <code>for</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve\" class=\"title\" /><text value=\"(num)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [halve(price) \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved)\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"90\" endIndex=\"109\" /></interactions><output><content><text value=\"[5.0, 11.0, 15.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>for price in prices</code>.</p></body></html>"
          },
          {
            "title": "Function as an expression",
            "id": 89384,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos elegir las operaciones que queremos aplicar a cada valor de <code>price</code> en una función como <code>halve()</code>, y usarla como una expresión.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve\" class=\"title\" /><text value=\"(num)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [halve(price) \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"77\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"88\" /><option startIndex=\"88\" endIndex=\"89\" /></options></interaction></interactions><output><content><text value=\"[5.0, 11.0, 15.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>halve</code> seguido de <code>(</code> y luego <code>price</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Multiple expressions",
            "id": 89670,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Las funciones son útiles cuando queremos aplicar más expresiones, como eliminar el impuesto antes de reducir a la mitad el precio.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"60\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve\" class=\"title\" /><text value=\"(num)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  no_tax = \" /><text value=\"0.85\" class=\"number\" /><text value=\" * num\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" no_tax/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [halve(price) \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"72\" /><option startIndex=\"82\" endIndex=\"90\" /></options></interaction></interactions><output><content><text value=\"[4.25, 9.35, 12.75, 17.0, 24.65, 25.5]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>no_tax = 0.85 * num</code> seguido de <code>no_tax/2</code>.</p></body></html>"
          },
          {
            "title": "Return statement",
            "id": 89671,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Solo podemos usar funciones que tienen una declaración <code>return</code> ya que en realidad estamos agregando el valor devuelto a la nueva lista.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"22\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve\" class=\"title\" /><text value=\"(num)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" num/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [halve(price) \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"53\" endIndex=\"59\" /></interactions><output><content><text value=\"[5.0, 11.0, 15.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>return</code>.</p></body></html>"
          },
          {
            "title": "Question: Function as an expression",
            "id": 89665,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cómo usamos una llamada a función como una expresión?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Llamamos a la función con la variable del bucle como argumento, para aplicarla en cada elemento de la lista</item><item value=\"2\" correct=\"false\">Llamamos a la función sin ningún argumento</item></selection><p visible-if=\"wrong\">Llamamos a la función con la variable del bucle como argumento, para aplicarla en cada elemento de la lista.</p></body></html>"
          },
          {
            "title": "Question: Multiple expressions",
            "id": 89673,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Por qué necesitaríamos usar una función como la expresión en una <em>list comprehension</em>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para aplicar múltiples expresiones en los valores que estamos iterando</item><item value=\"2\" correct=\"false\">Porque las expresiones son siempre funciones</item></selection><p visible-if=\"wrong\">Para aplicar múltiples expresiones en los valores que estamos iterando.</p></body></html>"
          },
          {
            "title": "Question: Return statement",
            "id": 89674,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Podemos usar esta función dentro de una comprensión de lista?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_full_name\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  full = \" /><text value=\"&quot;Claire&quot;\" class=\"string\" /><text value=\" + \" /><text value=\"&quot;Johnson&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  print(full)\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">No, porque no devuelve un valor</item><item value=\"2\" correct=\"false\">Sí, podemos usar cualquier función dentro de una list comprehension</item></selection><p visible-if=\"wrong\">No, porque no devuelve un valor.</p></body></html>"
          },
          {
            "title": "Example: Function",
            "id": 89666,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dentro de la comprensión de lista, llama a la función <code>add_comma()</code> con la variable de bucle <code>name</code> como argumento.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"authors = [\" /><text value=\"&quot;Virginia Woolf&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_comma\" class=\"title\" /><text value=\"(name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  parts = name.split(\" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" parts[\" /><text value=\"1\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot;, &quot;\" class=\"string\" /><text value=\" + parts[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"authors_update = [add_comma(name) \" /><text value=\"for\" class=\"keyword\" /><text value=\" name \" /><text value=\"in\" class=\"keyword\" /><text value=\" authors]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(authors_update)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"150\" endIndex=\"159\" /><option startIndex=\"159\" endIndex=\"160\" /><option startIndex=\"160\" endIndex=\"164\" /><option startIndex=\"164\" endIndex=\"165\" /></options></interaction></interactions><output><content><text value=\"['Woolf, Virginia', 'Steinbeck, John']\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>add_comma</code> seguido de <code>(</code> y luego <code>name</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: Function 2",
            "id": 89667,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dentro de la función <code>add_comma()</code>, divide el nombre en una lista llamada <code>parts</code> usando <code>split()</code>. Luego añade una coma entre el índice <code>1</code> y el índice <code>0</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"authors = [\" /><text value=\"&quot;Virginia Woolf&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_comma\" class=\"title\" /><text value=\"(name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  parts = name.split(\" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" parts[\" /><text value=\"1\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot;, &quot;\" class=\"string\" /><text value=\" + parts[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"authors_update = [add_comma(name) \" /><text value=\"for\" class=\"keyword\" /><text value=\" name \" /><text value=\"in\" class=\"keyword\" /><text value=\" authors]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(authors_update)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"94\" /><option startIndex=\"104\" endIndex=\"130\" /></options></interaction></interactions><output><content><text value=\"['Woolf, Virginia', 'Steinbeck, John']\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>parts = name.split(\" \")</code> seguido de <code>parts[1] + \", \" + parts[0]</code>.</p></body></html>"
          },
          {
            "title": "Example: Loop",
            "id": 89668,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dentro de la comprensión de listas, codifica un bucle <code>for</code> para iterar a través de cada <code>name</code> en la lista <code>authors</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"authors = [\" /><text value=\"&quot;Virginia Woolf&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_comma\" class=\"title\" /><text value=\"(name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  parts = name.split(\" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" parts[\" /><text value=\"1\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot;, &quot;\" class=\"string\" /><text value=\" + parts[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"authors_update = [add_comma(name) \" /><text value=\"for\" class=\"keyword\" /><text value=\" name \" /><text value=\"in\" class=\"keyword\" /><text value=\" authors]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(authors_update)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"166\" endIndex=\"185\" /></interactions><output><content><text value=\"['Woolf, Virginia', 'Steinbeck, John']\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>for name in authors</code>.</p></body></html>"
          },
          {
            "title": "Example: Function as an expression",
            "id": 89669,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Llama a la función en cada valor de la lista <code>words</code>, pasando la variable del bucle como argumento.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"words = [\" /><text value=\"&quot;apple&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;alligator&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;abracadabra&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;avatar&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"has_double_a\" class=\"title\" /><text value=\"(word)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  count = word.count(\" /><text value=\"&quot;a&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" count == \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"double_a = [has_double_a(word) \" /><text value=\"for\" class=\"keyword\" /><text value=\" word \" /><text value=\"in\" class=\"keyword\" /><text value=\" words]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(double_a)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"153\" endIndex=\"157\" /></interactions><output><content><text value=\"[False, True, False, False]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>word</code>.</p></body></html>"
          },
          {
            "title": "Example: Multiple expressions",
            "id": 89675,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dentro de la función <code>passed()</code>, escribe una línea de código para añadir un bono de 10 puntos al puntaje, luego devuelve el resultado de si el puntaje con bono es mayor a <code>90</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"scores = [\" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"12\" class=\"number\" /><text value=\", \" /><text value=\"83\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"passed\" class=\"title\" /><text value=\"(score)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  with_bonus = score + \" /><text value=\"10\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" with_bonus &gt; \" /><text value=\"90\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"passing_scores = [passed(score) \" /><text value=\"for\" class=\"keyword\" /><text value=\" score \" /><text value=\"in\" class=\"keyword\" /><text value=\" scores]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(passing_scores)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"67\" /><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"77\" endIndex=\"92\" /></options></interaction></interactions><output><content><text value=\"[False, False, True]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>with_bonus = score + 10</code> seguido de <code>return</code> y finalmente <code>with_bonus &gt; 90</code>.</p></body></html>"
          },
          {
            "title": "Example: Return statement",
            "id": 89676,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Imprime el resultado de la función de una manera que nos permita usar el resultado de la función dentro de una comprensión de lista.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"scores = [\" /><text value=\"156\" class=\"number\" /><text value=\", \" /><text value=\"70\" class=\"number\" /><text value=\", \" /><text value=\"100\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"passed\" class=\"title\" /><text value=\"(score)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  with_bonus = score + \" /><text value=\"10\" class=\"number\" /><text type=\"break\" /><text value=\"  passed = with_bonus &gt; \" /><text value=\"90\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" passed\" /><text type=\"break\" /><text type=\"break\" /><text value=\"passing_scores = [passed(score) \" /><text value=\"for\" class=\"keyword\" /><text value=\" score \" /><text value=\"in\" class=\"keyword\" /><text value=\" scores]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(passing_scores)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"99\" endIndex=\"105\" /></interactions><output><content><text value=\"[True, False, True]\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>return</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}