{
  "tutorial": {
    "id": 2791,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Anotaciones de Tipo",
    "descriptionContent": "Aprende sobre las anotaciones de tipo en TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14779,
        "title": "Anotaciones de Tipo",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 130497,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ya hemos aprendido cómo crear una variable de tipo <code>string</code>. Llamamos al proceso de definir el tipo <strong>anotación de tipo</strong>.</p><p>Ahora intenta anotar una variable nombrada con el tipo <code>number</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" distance: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"14\" endIndex=\"20\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>number</code>.</p></body></html>"
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 130520,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Después de establecer el tipo a <code>number</code>, solo podemos asignar un valor del tipo definido.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" distance: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"distance = \" /><text value=\"101\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(distance);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"33\" endIndex=\"36\" /><option correct=\"false\"><content><text value=\"&quot;Hello!&quot;\" /></content></option><option correct=\"false\"><content><text value=\"true\" /></content></option></options></interaction></interactions><output><content><text value=\"101\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>101</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 130498,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A continuación, echemos un vistazo a las anotaciones de tipo booleano. Anota la variable <code>isCompleted</code> con el tipo <code>boolean</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isCompleted: \" /><text value=\"boolean\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"17\" endIndex=\"24\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>boolean</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 130521,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Después de establecer el tipo a <code>boolean</code>, solo podemos asignar un valor booleano.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isCompleted: \" /><text value=\"boolean\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"isCompleted = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isCompleted);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"44\" /><option correct=\"false\"><content><text value=\"101\" /></content></option><option correct=\"false\"><content><text value=\"&quot;Hello!&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>true</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130500,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si creamos una variable sin un tipo, TypeScript infiere el tipo basado en el valor asignado a ella. Esto se llama <strong>inferencia de tipos</strong>.</p><p>Intenta causar un error asignando el valor incorrecto.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" price = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"price = \" /><text value=\"&quot;expensive&quot;\" class=\"string\" /><text value=\"; \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"36\" /><option correct=\"false\"><content><text value=\"99\" /></content></option><option correct=\"false\"><content><text value=\"5\" /></content></option></options></interaction></interactions><output><content><text value=\"Error: Type &quot;string&quot; is not assignable to type &quot;number&quot;\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>\"expensive\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130501,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si el tipo es claro, TypeScript nos permite omitir la anotación de tipo. Sin embargo, es útil incluir anotaciones de tipo para mejorar la legibilidad.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isLoggedIn: \" /><text value=\"boolean\" class=\"built_in\" /><text value=\" = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(isLoggedIn);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"15\" /><option startIndex=\"16\" endIndex=\"23\" /><option startIndex=\"26\" endIndex=\"30\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>:</code> seguido de <code>boolean</code> y finalmente <code>true</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 131250,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El tipo <code>any</code> en TypeScript es un tipo que puede representar cualquier valor, similar a cómo funcionan las variables en JavaScript.</p><p><code>any</code> te permite optar por no realizar la comprobación de tipos, desactivando efectivamente el sistema de tipos de TypeScript para esa variable.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" anything: \" /><text value=\"any\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;What am I?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(anything);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"17\" /></options></interaction></interactions><output><content><text value=\"What am I?\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>any</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy - Copy",
            "id": 131251,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si usamos <code>any</code>, podemos asignar cualquier valor.</p><p>Aunque usar <code>any</code> puede ser útil, debe usarse con moderación ya que elimina los beneficios de la seguridad de tipos.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" anything: \" /><text value=\"any\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;What am I?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(anything);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"anything = \" /><text value=\"42\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(anything);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"17\" /><option startIndex=\"69\" endIndex=\"71\" /></options></interaction></interactions><output><content><text value=\"What am I?\" /><text type=\"break\" /><text value=\"42\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>any</code> seguido de <code>42</code>.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 131281,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál de las siguientes es la forma correcta de declarar una variable booleana con el nombre <code>isOpen</code> en TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>let isOpen: boolean;</code></item><item value=\"2\" correct=\"false\"><code>boolean isOpen;</code></item></selection><p visible-if=\"wrong\"><code>let isOpen: boolean;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130503,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Define una variable para cada uno de los siguientes: un string, un número y un boolean.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" city: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Calgary&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" zipCode: \" /><text value=\"number\" class=\"built_in\" /><text value=\" = \" /><text value=\"2000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isCapital: \" /><text value=\"boolean\" class=\"built_in\" /><text value=\" = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;City: &quot;\" class=\"string\" /><text value=\" + city);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Zip Code: &quot;\" class=\"string\" /><text value=\" + zipCode);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Is a capital: &quot;\" class=\"string\" /><text value=\" + isCapital);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"10\" endIndex=\"16\" /><option startIndex=\"43\" endIndex=\"49\" /><option startIndex=\"73\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"string\" /></content></option><option correct=\"false\"><content><text value=\"number\" /></content></option><option correct=\"false\"><content><text value=\"boolean\" /></content></option></options></interaction></interactions><output><content><text value=\"City: Calgary\" /><text type=\"break\" /><text value=\"Zip Code: 2000\" /><text type=\"break\" /><text value=\"Is a capital: false\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>string</code> seguido de <code>number</code> y finalmente <code>boolean</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130504,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Elige el valor que coincide con el tipo de la variable.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" weight: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"weight = \" /><text value=\"50\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(weight);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"31\" /><option correct=\"false\"><content><text value=\"&quot;heavy&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"50\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>50</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130505,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Agrega el tipo correcto para permitir solo valores de texto para esta variable.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" question: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Me?&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(question);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"14\" endIndex=\"20\" /></interactions><output><content><text value=\"Me?\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130506,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cómo creas una variable de tipo <code>number</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>let age: number;</code></item><item value=\"2\" correct=\"false\"><code>let age;</code></item></selection><p visible-if=\"wrong\"><code>let age: number;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 131252,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Para qué se utiliza el tipo <code>any</code> en TypeScript?<br /></p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para representar un valor de cualquier tipo, omitiendo la verificación de tipos</item><item value=\"2\" correct=\"false\">Para asegurar la comprobación estricta de tipos para todas las variables</item><item value=\"3\" correct=\"false\">Para optimizar el rendimiento del código y la velocidad de ejecución</item></selection><p visible-if=\"wrong\">Para representar un valor de cualquier tipo, omitiendo la verificación de tipos.</p></body></html>"
          }
        ]
      }
    ]
  }
}