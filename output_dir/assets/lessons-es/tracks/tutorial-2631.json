{
  "tutorial": {
    "id": 2631,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Comparaciones y bucles",
    "descriptionContent": "Los desafíos son ejercicios más difíciles que pondrán a prueba tus habilidades.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14508,
        "title": "Verificación de Contraseña",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Password Check",
            "id": 129168,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una variable `const` llamada `isPasswordCorrect` para verificar si la contraseña introducida por el usuario es la misma que la contraseña que el sistema ha almacenado previamente.\n\n1. Inicializa una variable `const` `isPasswordCorrect` para verificar si `userPassword` es exactamente la misma que `savedPassword`.\n\nSalida:\n```javascript\nAccess granted: true\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userPassword = \"283746\";\r\nconst savedPassword = \"283746\";\r\n\r\nconsole.log(\"Access granted: \" + isPasswordCorrect);",
                  "solvedContent": "const userPassword = \"283746\";\nconst savedPassword = \"283746\";\nconst isPasswordCorrect = userPassword === savedPassword;\nconsole.log(\"Access granted: \" + isPasswordCorrect);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14509,
        "title": "Verificación de edad",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Age Check",
            "id": 129169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Completa el código para determinar si un cliente de 23 años tiene la edad legal para beber.\n\n1. En la primera línea, inicializa una variable `const` llamada `age`. Asígnale el valor numérico de `23`.\n2. Luego, crea otra variable `ageCheck` que verifique si la variable `age` es mayor o igual a la edad legal para beber. La edad legal para beber es `21`.\n3. Por último, modifica el `console.log` de manera que imprima `Of Legal Drinking Age: true` si el cliente tiene la edad legal para beber y `Of Legal Drinking Age: false` si el cliente es menor de edad. Usa la variable `ageCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nconsole.log(\"Of Legal Drinking Age: \");",
                  "solvedContent": "const age = 23;\nconst ageCheck = age >= 21;\nconsole.log(\"Of Legal Drinking Age: \" + ageCheck);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14510,
        "title": "Verificación de presupuesto",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Budget Check",
            "id": 129170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Quieres verificar si tienes suficiente dinero para comprar nuevos auriculares.\n\n1. Completa la variable `hasEnoughMoney` para que almacene el resultado booleano de si `price` es menor *o* igual a `budget`.\n\nSalida:\n```javascript\nI have enough money:\nfalse\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 23;\r\nconst price = 80;\r\nconst hasEnoughMoney = price  budget;\r\nconsole.log(\"I have enough money:\");\r\nconsole.log(hasEnoughMoney);",
                  "solvedContent": "const budget = 23;\nconst price = 80;\nconst hasEnoughMoney = price <= budget;\nconsole.log(\"I have enough money:\");\nconsole.log(hasEnoughMoney);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14511,
        "title": "Bucle While",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "While Loop",
            "id": 129171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Completa el cuerpo del bucle while de manera que cada iteración aumente `count` en 1 y luego usa `console.log()` para mostrar el `count` actual.\n\nEjecuta el código para verificar tu respuesta. Al finalizar, tu consola debería listar los números del 1 al 10.\n\n1. Primero, haz que el bucle while incremente `count` en 1.\n2. Luego, haz que el bucle use `console.log()` para mostrar el `count` actual.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let count = 0;\r\nwhile (count < 10) {}",
                  "solvedContent": "let count = 0;\nwhile (count < 10) {\n  count = count + 1;\n  console.log(count);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14512,
        "title": "Bucle For",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "For Loop",
            "id": 129172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Recrea el contador del último desafío (cuenta desde 1 hasta 10), pero esta vez usando un bucle for. La estructura del bucle ya está proporcionada. Debes completar los parámetros faltantes del bucle.\n\nEjecuta la prueba para verificar tu respuesta. Al finalizar, tu consola debería listar los números del 1 al 10.\n\n1. Primero, completa el primer parámetro del bucle for: la inicialización de la variable de contador `i`. Este es el valor en el que el bucle debe comenzar.\n2. Luego, completa el segundo parámetro del bucle for: la condición del bucle. Esta es la condición bajo la cual el bucle debe detenerse.\n3. Finalmente, implementa la iteración del contador para que incremente la variable de contador `i` en 1 en cada paso.\n\n```javascript\n1\n2\n...\n9\n10\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "for (let i = ; i <= ; i) {\n  console.log(i);\n}",
                  "solvedContent": "for (let i = 1; i <= 10; i++) {\n  console.log(i);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14513,
        "title": "Bucle de cuenta regresiva",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Countdown Loop",
            "id": 129173,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Completa la condición y el cuerpo del bucle de manera que cada iteración muestre en la consola el `count` actual y luego disminuya el `count` actual en 1. El bucle debe contar hacia atrás desde 15.\n\nEjecuta la prueba para verificar tu respuesta. Al finalizar, tu consola debería listar los números del 1 al 15 en orden descendente.\n\n1. Primero, implementa la condición del bucle: el bucle debe ejecutarse mientras el `count` sea mayor que `0`.\n2. Luego, implementa el cuerpo del código del bucle: primero debe `console.log` el `count` actual y luego disminuir el `count` en 1.\n\n```\n15\n14\n13\n12\n...\n3\n2\n1\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let count = 15;\r\nwhile (count ) {}",
                  "solvedContent": "let count = 15;\nwhile (count > 0) {\n  console.log(count);\n  count--;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11550,
        "title": "Concatenar nombres",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Concatenate Name",
            "id": 106220,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Usa un bucle `for` para concatenar las cadenas de los arreglos `firstName` y `lastName`. Asegúrate de concatenar un solo espacio entre el nombre y el apellido. Inserta los resultados en el arreglo `fullName`.\n\nSalida:\n[ 'Axe Rod', 'Miles Rhoades', 'Maya Wagner' ]",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstName = ['Axe', 'Miles', 'Maya'];\nconst lastName = ['Rod', 'Rhoades', 'Wagner'];\nconst fullName = [];\n\n\n\nconsole.log(fullName);",
                  "solvedContent": "const firstName = ['Axe', 'Miles', 'Maya'];\nconst lastName = ['Rod', 'Rhoades', 'Wagner'];\nconst fullName = [];\nfor (let i = 0; i < lastName.length; i++) {\n  fullName.push(firstName[i] + ' ' + lastName[i]);\n}\nconsole.log(fullName);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11435,
        "title": "Completa un bucle",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Complete a Loop",
            "id": 105740,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Completa el bucle for, aumentando `i` en `2` después de cada iteración.\n\nEjecuta la prueba para verificar tu respuesta. Al finalizar, la consola debería contener cada otro número del 0 al 20.\n\n1. Completa las condiciones del bucle for añadiendo la variable `i` dos veces cada vez.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "for (let i = 0; i <= 20; ) {\n  console.log(i);\n}",
                  "solvedContent": "for (let i = 0; i <= 20; i = i + 2) {\n  console.log(i);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11432,
        "title": "Bucle For Anidado",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Nested For Loop",
            "id": 105747,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Completa los parámetros del bucle for anidado para iterar a través de los datos de temperatura y `console.log` la temperatura promedio de cada semana.\n\n1. Haz que el bucle exterior itere a través de `temperature_data` usando una variable contador que llames `i`.\n2. Haz que el bucle interior itere a través de cada sub-arreglo de `temperature_data` usando una variable contador que llames `j`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let temperature_data = [\n  [60.2, 61.2, 63.4, 64.8, 65.1, 63.2, 62.9],\n  [62.5, 63.8, 63.4, 64.6, 65.8, 64.9, 65.0],\n  [63.4, 64.5, 65.2, 64.8, 65.1, 64.9, 66.2],\n  [66.3, 66.8, 66.4, 66.8, 67.8, 67.9, 68.2]\n];\nfor () {\n  let length = temperature_data[i].length;\n  let weeklySum = 0;\n  for () {\n    weeklySum += temperature_data[i][j];\n  }\n  console.log(\"Week \" + i + \" Average Temperature: \" + (weeklySum / 7));\n}",
                  "solvedContent": "let temperature_data = [\n  [60.2, 61.2, 63.4, 64.8, 65.1, 63.2, 62.9],\n  [62.5, 63.8, 63.4, 64.6, 65.8, 64.9, 65.0],\n  [63.4, 64.5, 65.2, 64.8, 65.1, 64.9, 66.2],\n  [66.3, 66.8, 66.4, 66.8, 67.8, 67.9, 68.2]\n];\nfor (let i = 0; i < temperature_data.length; i++) {\n  let length = temperature_data[i].length;\n  let weeklySum = 0;\n  for (let j = 0; j < length; j++) {\n    weeklySum += temperature_data[i][j];\n  }\n  console.log(\"Week \" + i + \" Average Temperature: \" + (weeklySum / 7));\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11433,
        "title": "Iterar a través de una lista",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Iterate Through a List",
            "id": 105742,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Supongamos que has extraído datos de asistentes de una invitación de calendario. Sin embargo, necesitas una lista limpia de nombres sin ningún título de trabajo. Nota la organización de los datos: los nombres son seguidos por posiciones, con todos los nombres existiendo en índices pares.\n\nEscribe un bucle for que itere a través de la lista y solo registre los nombres de los asistentes en la consola.\n\n1. Primero, implementa un bucle for que itere todos los números pares desde 0 hasta el final de la lista `meetingAttendees`.\n2. Luego, implementa el cuerpo del bucle for para registrar cada asistente de la reunión en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let meetingAttendees = [\"Diane Moll\", \"CEO\", \"Stanley Winstead\", \"CFO\",\r\n  \"Herta Pickett\", \"CFO\", \"Lynn Hanby\", \"COO\"\r\n];\r\n\r\nfor() {\r\n   console.log();\r\n}",
                  "solvedContent": "let meetingAttendees = [\"Diane Moll\", \"CEO\", \"Stanley Winstead\", \"CFO\",\r\n  \"Herta Pickett\", \"CFO\", \"Lynn Hanby\", \"COO\"\r\n];\r\n\r\nfor (let i = 0; i < meetingAttendees.length; i += 2) {\r\n  console.log(meetingAttendees[i]);\r\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}