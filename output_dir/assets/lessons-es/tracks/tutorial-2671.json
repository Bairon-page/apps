{
  "tutorial": {
    "id": 2671,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Biblioteca - Parte 1",
    "descriptionContent": "Sumérgete en la POO creando objetos de libros. Esta primera parte del proyecto te introduce a crear y gestionar tu propia estantería digital.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2671-icon-banner.svg",
    "chapters": [
      {
        "id": 14646,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 129536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido al proyecto de **Library**, donde usaremos programación orientada a objetos para crear un sistema de biblioteca para llevar un registro de libros. Comenzaremos con la clase `Book`.\n\n1. Crea una nueva clase llamada `Book`.\n2. En el método `__init__`, añade `self`, `title` y `author` como parámetros.\n3. Almacena `title` en `self.title`.\n4. Almacena `author` en `self.author`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agrega una propiedad `available` a la clase `Book`. Esta propiedad indica si el libro está disponible para ser prestado o no.\n\n1. En el método `__init__`, establece `self.available` a `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea un método `checkout` para la clase `Book`. Este método cambiará la propiedad `available` a `False` si el libro está disponible y devolverá `True`. Si el libro no está disponible, debería devolver `False`.\n\n1. Añade un método `checkout`.\n   - Usa una declaración if/else para verificar si el libro está disponible.\n   - Cambia el estado `available` a `False` si el libro está disponible, y devuelve `True`.\n   - Si el libro no está disponible, devuelve `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, añade un método `return_book` a la clase `Book`. Este método cambiará la propiedad available a `True`.\n\n1. Añade un método `return_book`. En este método, establece `self.available` a `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mostremos la información sobre un libro dado.\n\n1. Agrega un método `display_info`. Usa un f-string y la función `print` para imprimir la información del libro.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 129541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es hora de poner a trabajar la clase `Book`.\n\n1. Crea tres variables: `book1`, `book2`, `book3`. Asígnales tres libros diferentes y dales a todos diferentes valores de título y autor.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 129542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, crea una lista llamada `books` y pon todos los libros en la lista.\n\n1. Crea una lista llamada `books` y añade `book1`, `book2` y `book3` a ella.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 129543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, usa un bucle for para mostrar la información de cada libro en la lista `books`.\n\n1. Usa un bucle for para iterar a través de la lista `books`. Llama al método `display_info` para cada libro.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]\nfor book in books:\n  book.display_info()"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}