{
  "tutorial": {
    "id": 2659,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Piedra, Papel, Tijeras - Parte 1",
    "descriptionContent": "¡Construye tu propio juego! En esta primera parte, estableceremos el escenario creando la lógica básica del juego. Permitiremos que el jugador y la computadora elijan una opción y determinaremos al ganador.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2659-icon-banner.svg",
    "chapters": [
      {
        "id": 14633,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129425,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido al proyecto de **Piedra, Papel, Tijeras**, donde construiremos un juego de piedra, papel, tijeras.\n\n1. Comienza usando la función `print` para mostrar un mensaje. Dentro de los paréntesis de la función `print`, inserta una cadena como `\"Let's play rock, paper, or scissors\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129426,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pide al jugador que haga su elección. Para capturar la entrada del usuario, utiliza la función `input` y almacena la entrada del usuario en una variable.\n\n1. Declara una variable `player_choice` para capturar la entrada del jugador y guárdala en la variable. Dentro de los paréntesis de la función `input`, incluye un mensaje apropiado para elegir piedra, papel o tijeras.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 129432,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para verificar lo que el usuario eligió, queremos transformar la elección en una cadena en minúsculas. Así, no importa si el usuario escribe `Rock` o `rock`, o incluso `ROCK`, podemos reconocerlo correctamente.\n\n1. Añade `.lower()` al final de la función `input` para convertir la cadena de entrada a minúsculas. Debería verse como el siguiente fragmento de código:\n   ```Python\n   player_choice = input(\"Choose rock, paper, or scissors: \").lower()\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129427,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a configurar la elección de la computadora.\n\n1. En la parte superior del archivo, agrega `import random` para permitirnos usar una función especial de Python.\n2. Declara una variable `choices` y asígnale una lista que contenga `[\"rock\", \"paper\", \"scissors\"]`. Pronto aprenderemos más sobre listas. Por ahora, solo debes saber que es una colección de valores.\n3. Declara una variable `computer_choice`. Asigna a la nueva variable el resultado de `random.choice(choices)`, que elige una opción aleatoria de la lista:\n   ```Python\n   computer_choice = random.choice(choices)\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129428,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El jugador ha elegido, la computadora ha elegido, y ahora revelemos la elección de la computadora.\n\n1. Usa la función `print` para mostrar un f-string que imprima `\"Computer chose: \"` y luego el valor de `computer_choice`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129429,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, determinaremos quién es el ganador. Necesitamos una combinación de declaraciones `if`, `elif` y `else` para comparar el `player_choice` y el `computer_choice`.\n\n1. Escribe una declaración `if` que verifique si la elección del jugador vence a la elección de la computadora:\n   ```\n   if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n   ```\n2. Usa `elif` para verificar el caso de un empate cuando la elección del jugador es igual a la elección de la computadora.\n3. Finalmente, añade una declaración `else`.\n4. En cada caso, establece una variable `winner` con la cadena \"Player\", \"Tie\" o \"Computer\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, imprime un mensaje basado en quién gana.\n\n1. Escribe una declaración `if` que verifique si `winner` es igual a `\"Player\"`.\n2. Si es verdadero, imprime `\"You won\"`.\n3. Escribe una declaración `elif` que verifique si `winner` es igual a `\"Computer\"`.\n4. Si es verdadero, imprime `\"Computer won\"`.\n5. Escribe una cláusula `else` que imprima `\"It's a tie\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}