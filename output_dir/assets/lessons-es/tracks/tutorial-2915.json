{
  "tutorial": {
    "id": 2915,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Manejo de Errores",
    "descriptionContent": "Aprende a manejar errores de manera elegante en Express",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15016,
        "title": "Capítulo #1",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132438,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El manejo de errores en Express es una parte crucial.</p><p>No podemos esperar que el cliente envíe datos perfectos y sin errores, por lo que es importante validar.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132439,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Con <code>res.status</code>, establecemos el estado HTTP para la respuesta.</p><p>El <code>500 Internal Server Error</code> indica que el servidor encontró un problema inesperado que le impidió completar la solicitud.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"34\" /><option startIndex=\"34\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"41\" endIndex=\"44\" /><option startIndex=\"44\" endIndex=\"45\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>res</code> seguido de <code>.</code> y luego <code>status</code>, <code>(</code>, <code>500</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 132444,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Es una buena práctica enviar un mensaje de error y el código de estado.</p><p>Garantiza que el cliente reciba una descripción de error clara y legible por máquina, comúnmente utilizada en APIs para estandarizar el manejo de errores.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"500\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"  \" /><text value=\"error\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;An error occurred&quot;\" class=\"string\" /><text type=\"break\" /><text value=\" });\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"81\" /><option startIndex=\"45\" endIndex=\"50\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>.json</code> seguido de <code>error:</code> y finalmente <code>\"An error occurred\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132441,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si necesitamos un cierto parámetro para procesar una solicitud, es mejor validarlo antes de proceder.<br /><br /><br /></p><p>Si falta el parámetro, podemos devolver una respuesta con el código de estado HTTP <code>400 Bad Request</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!req.query.id) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Missing id parameter&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`You passed in \" /><text value=\"${req.query.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"32\" /><option startIndex=\"34\" endIndex=\"47\" /><option startIndex=\"64\" endIndex=\"67\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>if</code> seguido de <code>!req.query.id</code> y finalmente <code>400</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 132442,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lo mismo es cierto para los parámetros de ruta. Un parámetro de ruta requerido debe ser validado.</p><p>Necesitamos asegurarnos de que toda la información requerida esté presente y, si no, proporcionar al cliente un mensaje de error claro y significativo.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/user/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!req.params.id) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Missing id parameter&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`User ID: \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"76\" /><option startIndex=\"83\" endIndex=\"105\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>400</code> seguido de <code>\"Missing id parameter\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 132445,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Devolvemos <code>404 Not Found</code> si no podemos encontrar el recurso que el cliente está solicitando. Necesitamos <code>return</code> para evitar intentar enviar otra respuesta.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/user/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = database.find(userId);\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!user) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({ \" /><text value=\"error\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;User not found&quot;\" class=\"string\" /><text value=\" });\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\" res.json({ \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"`User ID: \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\", user });\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"135\" endIndex=\"138\" /><option startIndex=\"147\" endIndex=\"153\" /><option startIndex=\"154\" endIndex=\"170\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>404</code> seguido de <code>error:</code> y finalmente <code>\"User not found\"</code>.</p></body></html>"
          },
          {
            "title": "Question: Request Parameters",
            "id": 122449,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál es una razón por la que queremos asegurarnos de saber exactamente qué información está solicitando el cliente?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Si el servidor no tiene la información solicitada, necesitaremos generar una respuesta de error</item><item value=\"2\" correct=\"false\">Saber exactamente lo que el cliente está solicitando no siempre es importante</item></selection><p visible-if=\"wrong\">Si el servidor no tiene la información solicitada, necesitaremos generar una respuesta de error.</p></body></html>"
          },
          {
            "title": "Question: Set Status",
            "id": 122452,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué método podemos usar para mostrarle al cliente una respuesta a su solicitud?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>.send()</code></item><item value=\"2\" correct=\"false\"><code>.format()</code></item></selection><p visible-if=\"wrong\">Asegúrese de elegir <code>.send()</code>.</p></body></html>"
          },
          {
            "title": "Question: Set Status",
            "id": 122450,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuando el servidor no tiene los datos solicitados de un método <code>GET</code> qué estado de respuesta HTTP añadimos al objeto de respuesta?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>404</code></item><item value=\"2\" correct=\"false\"><code>500</code></item></selection><p visible-if=\"wrong\">Asegúrese de elegir <code>404</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132447,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Accede al parámetro de consulta <code>id</code> y guárdalo en la variable llamada <code>id</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" id = req.query.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (id === \" /><text value=\"undefined\" class=\"literal\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Missing id parameter&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`You passed in \" /><text value=\"${req.query.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"41\" endIndex=\"44\" /><option startIndex=\"44\" endIndex=\"50\" /><option startIndex=\"50\" endIndex=\"54\" /><option correct=\"false\"><content><text value=\".params\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>req</code> seguido de <code>.query</code> y finalmente <code>.id;</code>.</p></body></html>"
          },
          {
            "title": "Question: Back-end Errors",
            "id": 120219,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál es un ejemplo de una respuesta apropiada del servidor cuando ocurre un error?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Mostrando al usuario información sobre el error</item><item value=\"2\" correct=\"false\">Una solicitud de cliente defectuosa</item></selection><p visible-if=\"wrong\">Mostrando al usuario información sobre el error.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy - Copy - Copy",
            "id": 132449,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Establece el código de estado apropiado para indicar que el recurso solicitado no se pudo encontrar.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/product/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" productId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" product = database.find(productId);\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!product) {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"404\" class=\"number\" /><text value=\").json({ \" /><text value=\"error\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Product not found&quot;\" class=\"string\" /><text value=\" });\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\" res.json({ \" /><text value=\"message\" class=\"attr\" /><text value=\": \" /><text value=\"`Product ID: \" /><text value=\"${productId}\" class=\"subst\" /><text value=\"`\" /><text value=\", product });\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"150\" endIndex=\"153\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>404</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}