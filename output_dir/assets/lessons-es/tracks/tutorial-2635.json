{
  "tutorial": {
    "id": 2635,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "DOM y eventos",
    "descriptionContent": "Los desafíos son ejercicios más difíciles que pondrán a prueba tus habilidades.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14546,
        "title": "HTML desde imagen de árbol",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 129206,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear una aplicación de chat. \n![html tree](https://mimo.app/i/dom_tree_1.png)\n\n1. Crea el árbol HTML que se muestra en esta imagen añadiendo los elementos apropiados.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <textarea></textarea>\n    <br />\n    <input>\n    <button>Send</button>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14547,
        "title": "HTML desde la Descripción",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Date Range",
            "id": 129207,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea un sitio web que permita al usuario elegir un rango de fechas. Codifica lo siguiente en el archivo `.html`.\n\n1. Agrega un input de tipo `date` como hijo del `body`.\n2. Agrega un input de tipo `date` como hermano del otro input.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <input name=\"checkin\" type=\"date\">\n    <input name=\"checkout\" type=\"date\">\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14548,
        "title": "DOM firstElementChild",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 129208,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear una página de perfil de empleado. Codifica lo siguiente en la etiqueta script.\n\n1. Usa el DOM para establecer el texto del primer elemento hijo del elemento `body` a `\"Employee Profile\"`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1></h1>\n    <script src=\"index.js\">\n    </script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "document.body.firstElementChild.textContent = \"Employee Profile\";\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14549,
        "title": "Página de Detalle del Producto",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Product Detail Page",
            "id": 129209,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear una página de pedidos de productos. Tenemos una función `qtyChanged`, que calcula el costo total basado en el precio y la cantidad y luego establece el texto del elemento `p`.\n\n1. Completa el código que actualiza el total cada vez que se cambia la entrada. Usa el manejador de eventos `.onchange`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Breakfast Sandwich</h1>\n    <img src=\"https://mimo.app/i/croissant.png\" id=\"shape\"\n      style=\"width:100px;height:100px;border: 1px solid black\">\n    <br> Price: $1.99 <br> Qty<input type=\"number\">\n    <p> Total Price: $0 </p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\n",
                  "solvedContent": "const input = document.querySelector(\"input\");\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\ninput.onchange = qtyChanged;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14550,
        "title": "Términos de servicio",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Terms of Service",
            "id": 129210,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear un cuadro de \"términos de servicio\" que verifica si realmente lo leíste. Tenemos la función `checkReading` que determina si el usuario ha llegado al final.\n\n1. Completa el código que llama a la función `checkReading` cada vez que el usuario se desplaza por el `textarea`. Necesitarás crear una variable con el nombre de tu elección para lograr esto.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <textarea style=\"height: 200px; width: 100%;\">\n   Please read these terms of service (\"terms\", \"terms of service\") carefully before using [website] website (the \"service\") operated by [name] (\"us\", 'we\", \"our\").\n\n   Conditions of Use\n\n   We will provide their services to you, which are subject to the conditions stated below in this document. Every time you visit this website, use its services or make a purchase, you accept the following conditions. This is why we urge you to read them carefully.\n\n   Privacy Policy\n\n   Before you continue using our website we advise you to read our privacy policy [link to privacy policy] regarding our user data collection. It will help you better understand our practices.\n  </textarea>\n  <p></p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\n",
                  "solvedContent": "const terms = document.getElementsByTagName(\"textarea\")[0];\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\nterms.onscroll =  checkReading;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14551,
        "title": "Botón de Me Gusta",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Like Button",
            "id": 129211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear un botón de \"me gusta\" que requiera hacer doble clic.\n\n1. Agrega el código necesario para llamar a la función `like` cuando se haga doble clic en el botón de corazón.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>My Vacation</h1>\n    <img id=\"like\" src=\"https://mimo.app/i/beach.png\"\n      style=\"width:100px;height:100px;border:1px solid black\">\n    <p></p>\n    <button class=\"heart\">huh</button>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\n",
                  "solvedContent": "const img = document.querySelector(\"button\");\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\nimg.ondblclick = like;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": ".heart {\n  width: 36px;\n  height: 36px;\n  position: relative;\n  margin: 1em auto;\n  transform-origin: 50% 50%;\n  transform: rotate(45deg) scale(1);\n  cursor: pointer;\n  background: transparent;\n  border: none !important;\n  font-size: 0;\n}\n\n.heart:before {\n  content: \"\";\n  position: absolute;\n  display: block;\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  background-color: tomato;\n  width: inherit;\n  height: 24px;\n  top: 12px;\n  left: 0;\n}\n\n.heart:after {\n  content: \"\";\n  position: absolute;\n  display: block;\n  background-color: tomato;\n  width: 24px;\n  top: 0;\n  left: 12px;\n  height: inherit;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12312,
        "title": "Hijos del DOM",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Job Listing",
            "id": 111612,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear una página de ofertas de trabajo. Codifica lo siguiente en la etiqueta script.\n\n1. Usa el DOM para acceder al `ul` como el segundo hijo del body y guárdalo en una variable llamada `jobs`.\n2. Usa el DOM para acceder a los dos hijos del elemento `ul` y establece su texto a algún título de trabajo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n    </script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n      let jobs = document.body.children[1];\n      jobs.children[0].innerHTML = \"Software QA\";\n      jobs.children[1].innerHTML = \"Project Manager\";\n    </script>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12277,
        "title": "Eliminar elemento",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Remove Element",
            "id": 111486,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En este archivo HTML, la tarea es eliminar un elemento `p` existente usando JavaScript.\n\n1. En el archivo `script.js`, crea una nueva variable const y nómbrala `paraEl`.\n2. Usa el método `getElementById()` en el objeto `document` para obtener el párrafo con el `id` de `para`. Asigna este valor a `paraEl`.\n3. Obtén el elemento `body` usando el método `querySelector()`. Asigna este valor a una variable const llamada `bodyEl`.\n4. En el objeto `bodyEl`, ejecuta el método `removeChild()`, pasándole la variable `paraEl` como su parámetro. Esto debería resultar en que el elemento `p` sea eliminado del documento.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <h1 id=\"the-heading\">Removing elements here!</h1>\n  <p id=\"para\">I'm about to be removed from the document!</p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nbodyEl.removeChild();",
                  "solvedContent": "const paraEl = document.getElementById('para');\nconst bodyEl = document.querySelector('body');\nbodyEl.removeChild(paraEl);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12223,
        "title": "Filtro",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filter",
            "id": 111061,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Démosle a nuestros usuarios la capacidad de buscar un producto. La función `searchProducts` que realizará la búsqueda ya está creada para ti.\n\n1. La primera entrada en la página debería buscar los productos cuando el usuario escriba en ella.\n2. La entrada de tipo checkbox en la página debería buscar los productos cuando el usuario haga clic en ella.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Shopper</h1> Search <input><br> Free Shipping <input type=\"checkbox\">\n    <ul>\n    </ul>\n    <br>\n    <br>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();",
                  "solvedContent": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\nconst input = document.querySelector(\"input\");\ninput.oninput = searchProducts;\nconst checkbox = document.querySelectorAll(\"input\")[1];\ncheckbox.onchange = searchProducts;\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12217,
        "title": "Perfil del empleado",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 111055,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Agreguemos la capacidad de ver diferentes secciones de nuestro perfil de empleado. En el archivo `script.js` tenemos la función `showInfo()` para mostrar la información del empleado, `showPayHistory()` para mostrar los recibos de pago, y `showTimeOff()` para mostrar el tiempo libre.\n\n1. Haz que el primer `button` muestre la información del empleado cuando se haga clic.\n2. Haz que el segundo `button` muestre el historial de pagos cuando se haga clic.\n3. Haz que el tercer `button` muestre el tiempo libre cuando se haga clic.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>Employee Profile</h1>\n    <button>Info</button> | <button>Pay History</button> | <button>Time\n      off</button>\n    <br>\n    <br>\n    <div> Janie Culliver, Sales Rep </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\n\n\n",
                  "solvedContent": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\ndocument.querySelectorAll(\"button\")[0].onclick = showInfo;\ndocument.querySelectorAll(\"button\")[1].onclick = showPayHistory;\ndocument.querySelectorAll(\"button\")[2].onclick = showTimeOff;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": "button {\n  background: none;\n  border: none;\n  padding: 0;\n  /*optional*/\n  font-family: arial, sans-serif;\n  /*input has OS specific font-family*/\n  color: #069;\n  text-decoration: underline;\n  cursor: pointer;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12219,
        "title": "Planificador de viajes",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Trip Planner",
            "id": 111057,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nuestra aplicación de reservas necesita informar al usuario si elige fechas no válidas. Ya tenemos la función `valid()`, que valida asegurándose de que las fechas estén en orden. También tenemos la función `book()`, que completa la reserva.\n\n1. Haz que el campo de entrada `Check In` ejecute el comando de validación cuando se cambie.\n2. Haz que el campo de entrada `Check Out` ejecute el comando de validación cuando se cambie.\n3. Haz que el botón complete la reserva cuando se haga clic.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Book Your Room</h1> Check In <input name=\"checkin\" type=\"date\">\n    <br> Check Out <input name=\"checkout\" type=\"date\">\n    <p></p>\n    <button disabled onclick=\"book()\">Book</button>\n    <br>\n    <div></div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\n\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\n\n\n",
                  "solvedContent": "const checkin = document.querySelectorAll(\"input\")[0];\nconst checkout = document.querySelectorAll(\"input\")[1];\nconst button = document.querySelector(\"button\");\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\ncheckin.onchange = valid;\ncheckout.onchange = valid;\nbutton.onclick = bookTrip;"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".done {\n  text-decoration: line-through;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12220,
        "title": "Aplicación de Chat",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 111058,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear una aplicación de chat. Nos han dado la función `typing`, que muestra un mensaje indicando que el usuario está escribiendo. También está la función `send`, que coloca el texto en la ventana de chat.\n\n1. Agrega código para que el mensaje `Typing...` se muestre cuando el usuario escribe en el campo de texto.\n2. Agrega código para que envíe el mensaje cuando se hace clic en el botón.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <textarea style=\"height: 200px; width: 100%;\">\n  </textarea>\n    <p></p>\n    <br>\n    <input><button>Send</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}\ninput.oninput = typing;\nbutton.onclick = send;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12218,
        "title": "Juego",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Game",
            "id": 111056,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear un juego de patos. Hay una función `move` que actualiza la ubicación del pato cuando se mueve el slider. Hay una función `win` que prueba si el pato ha llegado a casa. Programa lo siguiente en el archivo `script.js`.\n\n1. La función `move` debe ser llamada cada vez que se ingresa el valor del input de rango moviendo el slider.\n2. La función `win` debe ser llamada cada vez que se cambia el input de rango. La función luego verificará si el usuario ha ganado el juego.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Make the duck go home</h1>\n    <img src=\"https://mimo.app/i/batduck.png\" width=\"50px\"\n      style=\"position:absolute; border-radius: 50%;\">\n    <img src=\"https://mimo.app/i/house-2.png\" width=\"70px\"\n      style=\"left:100px;position:absolute\">\n    <br>\n    <br>\n    <br>\n    <input type=\"range\" value=\"0\">\n    <p></p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}\ninput.oninput = move;\ninput.onchange = win;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12216,
        "title": "Cambiador de canal",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Channel Changer",
            "id": 111054,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a crear el control remoto para Cat TV. En el archivo `script.js` ya tenemos dos funciones:\n- `up` cambia el canal hacia arriba\n- `down` cambia el canal hacia abajo\n\n1. Agrega código para que el canal suba cada vez que se haga clic en el primer botón.\n2. Agrega código para que el canal baje cada vez que se haga clic en el segundo botón.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Cat TV</h1>\n   \n    <img src=\"https://mimo.app/i/shushi.png\" width=\"100px\" height=\"100px\">\n    <br>\n    <button>Up</button>\n    <button>Down</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}",
                  "solvedContent": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}\ndocument.getElementsByTagName(\"button\")[0].onclick = up;\ndocument.getElementsByTagName(\"button\")[1].onclick = down;"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}