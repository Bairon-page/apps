{
  "tutorial": {
    "id": 1929,
    "version": 11,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Publicaciones en redes sociales",
    "descriptionContent": "Usa tus habilidades de HTML, CSS y JS para agregar publicaciones a una página de redes sociales",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1929-icon-banner.svg",
    "chapters": [
      {
        "id": 12524,
        "title": "Publicaciones en redes sociales",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 113196,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a usar nuestro conocimiento de Páginas Web Dinámicas para crear un sitio web de redes sociales.\n\nYa hemos agregado el código HTML y CSS, pero el sitio aún no es funcional.\n\nHay un logo, un cuadro de entrada, alertas y una publicación.\n\nRevisa el código y ejecútalo antes de avanzar a la siguiente lección.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n text-align: center;\r\n}\r\n\r\nh1 {\r\n font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n width: 100%;\r\n height: 150px;\r\n padding: 12px;\r\n box-sizing: border-box;\r\n border: none;\r\n border-radius: 4px;\r\n background-color: seashell;\r\n resize: none;\r\n}\r\n\r\n#addBtn {\r\n padding: 10px;\r\n margin: 10px;\r\n font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n padding: 12px;\r\n margin: 12px;\r\n text-align: justify;\r\n background-color: lavenderblush;\r\n font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n padding: 12px;\r\n margin: 12px;\r\n background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n padding: 12px;\r\n margin: 12px;\r\n background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Post 1 - Define function",
            "id": 113197,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En las redes sociales, podemos publicar lo que queramos, con solo hacer clic en un botón.\n\n¡Implementaremos lo mismo en nuestro proyecto!\n\nComencemos simplemente creando una nueva función. Esta función añadirá una nueva publicación cada vez que el usuario haga clic en el botón `Add`.\n\n1. Ve a `script.js`.\n2. Crea una nueva función llamada `addPost`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function addPost(){\r\n\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to create a function is :\n```javascript\nfunction functionName() {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Adding Post 2 - Calling function",
            "id": 113218,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para usar una función, siempre necesitamos llamarla.\n\nAntes de agregar código a la función `addPost`, la llamaremos en nuestro archivo HTML para ver los cambios en nuestro DOM a medida que agregamos el código.\n\n1. Ve a `index.html` y encuentra el botón `Add`.\n2. Agrega un atributo `onclick` a este botón y configúralo en `addPost()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The `Add` button is below the `textarea` element in `index.html`."
                }
              ]
            }
          },
          {
            "title": "Adding Post 3 - Creating New Div",
            "id": 113225,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Si miras el código de la primera publicación, verás que la publicación está en un elemento `div`.\n\nPor lo tanto, cada vez que el usuario agrega una publicación, necesitamos crear un nuevo elemento `div`.\n\nAdemás, podría suceder que el usuario no proporcione ninguna entrada. En este caso, no queremos que se publique nada.\n\nPor lo tanto, podemos estructurar nuestro código de tal manera que si la entrada no es `\"\"`, entonces hay una publicación.\n\n¡Y la mejor manera de hacerlo es usando condicionales!\n\n1. Ve al archivo `script.js` y accede al elemento `textarea` por ID. Puedes obtener su ID del código HTML.\n2. Obtén el valor del elemento `textarea`.\n3. Almacena este valor en una variable llamada `input`.\n4. Forma una declaración `if` verificando si el `input` no es `\"\"`.\n5. Dentro de la declaración `if`, crea un nuevo elemento `div` y almacénalo en una variable llamada `postDiv`.\n6. Usa `.className` para asignar la clase `post` al nuevo `div`. Para cambiar los valores de los atributos en JavaScript, siempre puedes usar el operador punto. Por ejemplo, `element.className = \"new\"` asignará una clase llamada `new` al elemento.\n7. Usa `getElementById` o `querySelector` para acceder al `body` del HTML por su ID y añade el `postDiv` al `body`.\n8. Ejecuta el código, escribe algo y haz clic en el botón `Add`. Deberías ver un nuevo `div` vacío en la parte inferior.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `.value` to get the value of the element.\n2. Use `!=` operator to check if `input` is not equal to `\"\"`.\n3. Use `createElement` to create a new element in JavaScript.\n4. The structure of `if` looks like this:\n```javascript\nif(condition) {\n \n}\n```"
                }
              ]
            }
          },
          {
            "title": "Adding Post 4 - Adding paragraph to div",
            "id": 113250,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La parte de `div` está hecha.\n\nPero ahora, también necesitamos mostrar la entrada del usuario. Para eso, crearemos nuevos párrafos cada vez que el usuario haga clic en el botón `Add`.\n\n1. Dentro de la declaración `if`, crea un elemento de párrafo y guárdalo en una variable llamada `p`.\n2. Cambia el `innerHTML` del párrafo al valor almacenado en `input`.\n3. Añade el párrafo al `postDiv`.\n4. Ejecuta el código, escribe algo y presiona `Add`. Deberías ver un nuevo `div` con algo de texto en la parte inferior.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `createElement` to create a new element in JavaScript.\n2. Use `appendChild` to append one element to other in JavaScript.\n3. Remember that the `input` variable already stores the value of the input `textarea` element."
                }
              ]
            }
          },
          {
            "title": "Adding Post 5 - Like Button",
            "id": 113228,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Buen trabajo! Pero, ¿qué es una publicación en redes sociales sin un botón de \"me gusta\" o de comentario?\n\nPor lo tanto, lo siguiente son los dos botones - `Like` y `Comment`.\n\nPrimero, vamos a crear el botón `Like`.\n\n1. Crea un nuevo elemento `button` debajo del párrafo dentro de la declaración `if` y guárdalo en una variable llamada `likeButton`.\n2. Cambia el `innerHTML` del botón a `Like`.\n3. Añade el botón al `postDiv`.\n4. Ejecuta el código, publica algún texto y observa cómo aparece el botón `Like` en la parte inferior de tu publicación.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `createElement` to create a new element in JavaScript.\n2. Use `appendChild` to append one element to other in JavaScript."
                }
              ]
            }
          },
          {
            "title": "Adding Post 6 - Comment Button",
            "id": 113233,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Hora de usar el botón `Comment`.\n\n¡Es igual que el botón `Like`!\n\n1. Crea un nuevo elemento `button` debajo del botón `Like` y guárdalo en una variable llamada `commentButton`.\n2. Cambia el `innerHTML` del botón a `Comment`.\n3. Añade el botón al `postDiv`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the previous code.\n "
                }
              ]
            }
          },
          {
            "title": "Adding Post 7 - Final touches",
            "id": 113244,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Los elementos que creamos se ven bien hasta ahora.\n\nSin embargo, hay un pequeño detalle. Cada vez que se añade una publicación, la caja de entrada también debería limpiarse.\n\n1. Establece el valor de la caja de `input` a `\"\"` usando ID.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Check the ID of elements from the HTML code and use `document.getElementById` or `querySelector` to access it."
                }
              ]
            }
          },
          {
            "title": "Coding counter",
            "id": 113245,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Guau! ¡Nuestro sitio de redes sociales ahora agrega publicaciones!\n\nAdemás, nota que hay un pequeño cuadro verde que indica el número de publicaciones.\n\nEn este momento, no cambia cuando agregamos una nueva publicación. ¡Así que trabajemos en esto!\n\n1. Crea una nueva variable llamada `counter` encima de la función `addPost()` y configúrala en `1`. La estamos configurando en `1` inicialmente porque ya tenemos una publicación, pero la actualizaremos más tarde. Así que asegúrate de que no sea una constante.\n2. Queremos aumentar el contador solo cuando los usuarios ingresen un texto y publiquen, así que vamos al bloque `if` dentro de la función `addPost`. Incrementa el valor del contador en `1`.\n3. Accede al elemento `span` que contiene el número de publicaciones. Revisa el código HTML para el ID.\n4. Cambia el `innerHTML` del `span` a `counter`.\n5. Ejecuta el código y verifica el resultado.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable =\n          'true';</b>\". Voila! You can now edit the webpage text that you are\n        in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\nbody{\r\n  text-align: center;\r\n}\r\n\r\nh1{\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn{\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. You can increment a variable's value by 1 either directly like `varName = varName + 1` or by using shorthand operators like `varName += 1` or by using increment operator like `varName++`.\n2. Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change whenever the user adds a new post."
                }
              ]
            }
          },
          {
            "title": "Remove 1 - Defining function",
            "id": 113246,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Hasta ahora todo bien! Casi hemos terminado.\n\nSolo hay una última cosa que necesitamos abordar: el botón `Remove alert`.\n\nCuando el usuario haga clic en este botón, toda la alerta debería desaparecer.\n\nComencemos con una nueva función vacía.\n\n1. Crea una nueva función llamada `remove` fuera de la función `addPost()`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\n",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to create a function is :\n```javascript\nfunction functionName() {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Remove 2 - Calling function",
            "id": 113248,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Antes de codificar la funcionalidad para nuestra nueva función, ¡llamémosla cuando se haga clic en el botón!\n\n1. Encuentra el botón `Remove alert`.\n2. Agrega un atributo `onclick` a este botón y configúralo en `remove()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button onclick=\"remove()\">Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The `Remove alert` button is below the paragraph element inside the `notification` `div`.  "
                }
              ]
            }
          },
          {
            "title": "Remove 3 - Removing element",
            "id": 113249,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Eliminar un elemento es bastante sencillo.\n\nTodo lo que tenemos que hacer es acceder al elemento que queremos eliminar y luego eliminarlo usando `removeChild`.\n\n1. Obtén el `div` de notificaciones usando su ID y guárdalo en una variable llamada `notificationDiv`.\n2. Elimina este `div` del `body`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button onclick=\"remove()\">Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {\r\n \r\n}",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {\r\n  const notificationDiv = document.getElementById(\"notification\");\r\n  document.getElementById(\"body\").removeChild(notificationDiv);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `removeChild` to remove an element from another. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}