{
  "tutorial": {
    "id": 3117,
    "version": 2,
    "type": "practiceRequired",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "React: Exploración Profunda 2",
    "descriptionContent": "React: Exploración Profunda 2",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15418,
        "title": "React Deep Dive 2 Práctica Requerida #1",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 135660,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Implementa actualizaciones de estado utilizando una actualización funcional en un contador.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Counter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Counter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Counter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Counter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" Counter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [count, setCount] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" increaseCount = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setCount(\" /><text value=\"(\" /><text value=\"prevCount\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevCount + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Count: {count}\" /><text value=\"&lt;/\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{increaseCount}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Increment\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" Counter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"153\" endIndex=\"181\" /><option correct=\"false\"><content><text value=\"count + 1\" /></content></option><option correct=\"false\"><content><text value=\"count++\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>(prevCount) =&gt; prevCount + 1</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135661,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué enfoque implementa correctamente las actualizaciones funcionales en React?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>setState((prev) =&gt; prev + 1)</code></item><item value=\"2\" correct=\"false\"><code>setState(state + 1)</code></item><item value=\"3\" correct=\"false\"><code>setState((state) + 1)</code></item><item value=\"4\" correct=\"false\"><code>setState((state) =&gt; state)</code></item></selection><p visible-if=\"wrong\"><code>setState((prev) =&gt; prev + 1)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #1",
            "id": 135694,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Implementa un componente que actualice la cita usando <code>useEffect</code>.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Loading...\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" QuoteDisplay \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./QuoteDisplay&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"QuoteDisplay\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"QuoteDisplay.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState, useEffect } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" QuoteDisplay = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [quote, setQuote] = useState(\" /><text value=\"&quot;Fetching a quote...&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  useEffect(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setQuote(\" /><text value=\"&quot;To be, or not to be, that is the question.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h3\" class=\"name\" /><text value=\"&gt;\" /><text value=\"{quote}\" /><text value=\"&lt;/\" /><text value=\"h3\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" QuoteDisplay;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"146\" endIndex=\"155\" /><option startIndex=\"156\" endIndex=\"158\" /><option startIndex=\"159\" endIndex=\"161\" /><option startIndex=\"162\" endIndex=\"163\" /><option startIndex=\"226\" endIndex=\"227\" /><option correct=\"false\"><content><text value=\"(\" /></content></option><option correct=\"false\"><content><text value=\")\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>useEffect</code> seguido de <code>()</code> y luego <code>=&gt;</code>, <code>{</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135695,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En el siguiente código de ejemplo, ¿cuál será la salida en la consola después de renderizar?</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Render me!\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Message \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Message&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Message\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Message.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useEffect } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" Message = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  useEffect(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Rendered&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Hello React!\" /><text value=\"&lt;/\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" Message;\" /><text type=\"break\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Renderizado</item><item value=\"2\" correct=\"false\">Hola</item><item value=\"3\" correct=\"false\">Actualizado</item><item value=\"4\" correct=\"false\">Nada</item></selection><p visible-if=\"wrong\">Asegúrese de elegir Renderizado.</p></body></html>"
          },
          {
            "title": "Lesson #1",
            "id": 135709,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Implementa un contador simple usando <code>useEffect</code> que registra en la consola cada vez que el contador se actualiza.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Loading...\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Counter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Counter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Counter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Counter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState, useEffect } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" Counter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [count, setCount] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  useEffect(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Current count is: \" /><text value=\"${count}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }, [count]);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h1\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Counter: {count}\" /><text value=\"&lt;/\" /><text value=\"h1\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{()\" class=\"string\" /><text value=\" =&gt;\" /><text value=\" setCount(count + 1)}&gt;Increase Count\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" Counter;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"191\" endIndex=\"198\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>[count]</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135725,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuándo se ejecuta la función de limpieza en <code>useEffect</code>?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Cuando el componente se desmonta</item><item value=\"2\" correct=\"false\">Cuando el componente se monta</item><item value=\"3\" correct=\"false\">Cuando el componente se actualiza</item><item value=\"4\" correct=\"false\">Cada 10 segundos</item></selection><p visible-if=\"wrong\">Cuando el componente se desmonta.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 135730,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál de estas afirmaciones es verdadera sobre el array de dependencias del hook <code>useEffect</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un array de dependencias vacío significa que <code>useEffect</code> se ejecuta una vez al montar</item><item value=\"2\" correct=\"false\">Limpia automáticamente el componente</item><item value=\"3\" correct=\"false\">Obliga al componente a desmontarse</item><item value=\"4\" correct=\"false\">Se ejecuta cada vez que un componente funcional se vuelve a renderizar</item></selection><p visible-if=\"wrong\">Un array de dependencias vacío significa que <code>useEffect</code> se ejecuta una vez al montar.</p></body></html>"
          }
        ]
      },
      {
        "id": 15429,
        "title": "React Deep Dive 2 Práctica Requerida #2",
        "type": "practiceLevel2",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 135662,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usa el hook <code>useState</code> para agrupar la actualización de un contador y registrar el número de clics en un botón.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" ClickTracker \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./ClickTracker&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"ClickTracker\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"ClickTracker.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" ClickTracker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [clicks, setClicks] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" handleClick = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setClicks(\" /><text value=\"(\" /><text value=\"prev\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prev + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Button clicked!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Clicks: {clicks}\" /><text value=\"&lt;/\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{handleClick}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Click me!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" ClickTracker;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"149\" endIndex=\"158\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>setClicks</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 135663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cómo beneficia el rendimiento en React la agrupación de actualizaciones de estado?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Al reducir el número de re-renderizados</item><item value=\"2\" correct=\"false\">Al aumentar el número de ciclos de renderizado</item><item value=\"3\" correct=\"false\">Haciendo que las actualizaciones de estado sean sincrónicas</item><item value=\"4\" correct=\"false\">Usando más memoria</item></selection><p visible-if=\"wrong\">Al reducir el número de re-renderizados.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 135696,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Usa el hook correcto para establecer un nuevo color después de cada re-renderizado de la aplicación.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Changing background...\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" App \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./App&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"App\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"App.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState, useEffect } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" App = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [color, setColor] = useState(\" /><text value=\"&quot;white&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  useEffect(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"const\" class=\"keyword\" /><text value=\" colors = [\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&quot;lightcoral&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&quot;lightblue&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&quot;lightgreen&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&quot;lightgoldenrodyellow&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    ];\" /><text type=\"break\" /><text value=\"    \" /><text value=\"const\" class=\"keyword\" /><text value=\" randomColor = colors[\" /><text value=\"Math\" class=\"built_in\" /><text value=\".floor(\" /><text value=\"Math\" class=\"built_in\" /><text value=\".random() * colors.length)];\" /><text type=\"break\" /><text value=\"    setColor(randomColor);\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"style\" class=\"attr\" /><text value=\"=\" /><text value=\"{{\" class=\"string\" /><text value=\" \" /><text value=\"backgroundColor:\" class=\"attr\" /><text value=\" \" /><text value=\"color\" class=\"attr\" /><text value=\", \" /><text value=\"height:\" class=\"attr\" /><text value=\" &quot;\" /><text value=\"100vh\" class=\"attr\" /><text value=\"&quot; }}&gt;\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" App;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"123\" endIndex=\"132\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>useEffect</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135710,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué matriz de dependencias hará que <code>useEffect</code> se ejecute cada vez que cambie la variable <code>score</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>[score]</code></item><item value=\"2\" correct=\"false\"><code>[count]</code></item><item value=\"3\" correct=\"false\"><code>[]</code></item><item value=\"4\" correct=\"false\"><code>[setScore]</code></item></selection><p visible-if=\"wrong\">Asegúrese de elegir <code>[score]</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 135712,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál es el propósito del array de dependencias en el hook <code>useEffect</code>?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para determinar cuándo volver a ejecutar el efecto</item><item value=\"2\" correct=\"false\">Para almacenar datos obtenidos de APIs</item><item value=\"3\" correct=\"false\">Para registrar los errores durante un fetch</item><item value=\"4\" correct=\"false\">Para estilizar el componente de manera diferente</item></selection><p visible-if=\"wrong\">Para determinar cuándo volver a ejecutar el efecto.</p></body></html>"
          },
          {
            "title": "Lesson #1",
            "id": 135724,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Modifica el hook <code>useEffect</code> para registrar un mensaje cuando el componente se monta y se desmonta utilizando una función de limpieza.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Loading...\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Logger \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Logger&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(\" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"));\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Logger\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Logger.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useEffect } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" Logger = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  useEffect(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Component Mounted&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"    \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Component Unmounted&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }, []);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Open the console to see the log messages!\" /><text value=\"&lt;/\" /><text value=\"p\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" Logger;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"128\" endIndex=\"134\" /><option startIndex=\"135\" endIndex=\"140\" /><option startIndex=\"141\" endIndex=\"176\" /><option startIndex=\"180\" endIndex=\"185\" /><option correct=\"false\"><content><text value=\")\" /></content></option><option correct=\"false\"><content><text value=\"{} =&gt;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>return</code> seguido de <code>() =&gt;</code> y luego <code>console.log(\"Component Unmounted\");</code>, <code>, [])</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}