{
  "tutorial": {
    "id": 2896,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Cuestionario - Parte 1",
    "descriptionContent": "Aprovecha el poder de Express para construir una aplicación de Quiz bien estructurada y compleja",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2896-icon-banner.svg",
    "chapters": [
      {
        "id": 14987,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132139,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido al proyecto de **Quiz**. Construiremos una API que servirá preguntas y verificará si el usuario respondió correctamente.\n\nComenzaremos configurando el servidor de Express.\n\n1. Declara una variable `express` y requiere el módulo `express`.\n2. Declara una variable `app` e inicialízala llamando a la función `express`.\n3. Declara una variable `port` y asígnale el valor `3000`.\n4. Usa la función `listen` en `app` para que la aplicación escuche en el puerto especificado por la variable `port`.\n5. Registra un mensaje en la consola dentro del callback de la función `listen` para que sepamos que nuestro servidor está funcionando correctamente.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});"
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 132207,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Para nuestro cuestionario, necesitamos preguntas. Vamos a crear una clase `Question`, que será responsable de almacenar el id de la pregunta, el texto de la pregunta, las opciones y la respuesta correcta.\n\n1. En el archivo `Question.js`, declara una clase `Question` y el constructor debe aceptar `id`, `question`, `options` y `correctAnswer` como parámetros e inicializarlos.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n}"
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #2",
            "id": 132140,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora agreguemos un método para verificar si la respuesta proporcionada es correcta.\n\n1. Agrega un método `isCorrectAnswer` dentro de la clase `Question` que acepte un parámetro `answer` y verifique si es el mismo que el `correctAnswer` para la pregunta. Dependiendo del resultado, el método debe devolver `true` o `false`.\n2. Finalmente, exporta la clase `Question` usando `module.exports = Question;`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n}",
                  "solvedContent": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;"
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #4",
            "id": 132142,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Necesitaremos algunas preguntas para nuestro cuestionario.\n\n1. Crea un array llamado `questionsData` que contenga objetos que representen cada pregunta.\n2. Añade al menos dos preguntas. Cada objeto de pregunta debe tener un `id`, `question`, `options` (un array de opciones de respuesta) y `correctAnswer` (la respuesta correcta de las opciones).\n\nSiéntete libre de usar las siguientes preguntas si no quieres inventar las tuyas propias:\n```\nconst questionsData = [\n  {\n    id: 1,\n    question: \"What is the capital of France?\",\n    options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n    correctAnswer: \"Paris\",\n  },\n  {\n    id: 2,\n    question: \"What is 2 + 2?\",\n    options: [\"3\", \"4\", \"5\", \"6\"],\n    correctAnswer: \"4\",\n  },\n];\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];"
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132148,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, usaremos la clase `Question` y los datos de la pregunta en una nueva clase `Quiz`.\n\n1. En el archivo `Quiz.js`, crea una variable llamada `Question` e importa el módulo `Question` en ella.\n2. Crea una clase `Quiz` que contenga un array de las preguntas:\n   - La clase debe tener un constructor que procese el array `questionsData`.\n   - Dentro del constructor, cada entrada en `questionsData` debe transformarse en un objeto `Question`.\n   - El objeto `Question` debe crearse utilizando las propiedades de cada entrada en `questionsData` (por ejemplo, `id`, `question`, `options` y `correctAnswer`).\n   - Todos los objetos de pregunta deben almacenarse en un array `questions` dentro de la clase `Quiz`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];",
                  "solvedContent": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n}"
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #5",
            "id": 132143,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora añadamos funcionalidad para obtener una pregunta aleatoria.\n\n1. Añade un método `getRandomQuestion` en la clase `Quiz` que seleccione y devuelva una pregunta aleatoria de `this.questions`.\n2. Finalmente, exporta la clase `Quiz`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n}",
                  "solvedContent": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n  getRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    return this.questions[randomIndex];\n  }\n}\n\nmodule.exports = Quiz;"
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #9",
            "id": 132147,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, en `quizRoutes.js`, definiremos los manejadores de rutas para nuestra aplicación de Quiz.\n\n1. Importa la clase `Quiz` y crea una instancia de `quiz` usando `require`.\n2. Inicializa un nuevo objeto router. No olvides importar Express para hacerlo.\n3. Crea una ruta GET `/question` en el router.\n   - Debe seleccionar una pregunta aleatoria y devolverla como una respuesta JSON.\n   - La respuesta JSON debe tener las claves `id`, `question` y `options` que tomas de la pregunta que recibes del quiz.\n4. Exporta `router` usando `module.exports = router;`.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n  getRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    return this.questions[randomIndex];\n  }\n}\n\nmodule.exports = Quiz;",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, () => {\n console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": null
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const express = require(\"express\");\nconst Quiz = require(\"./Quiz\");\n\nconst router = express.Router();\nconst quiz = new Quiz();\n\nrouter.get(\"/question\", (req, res) => {\n  const question = quiz.getRandomQuestion();\n  res.json({\n    id: question.id,\n    question: question.question,\n    options: question.options,\n  });\n});\n\nmodule.exports = router;"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #7",
            "id": 132145,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, extendamos nuestro archivo principal `app.js` para incluir el endpoint de la ruta del cuestionario.\n\n1. Primero, requiere los módulos necesarios `quizRoutes`.\n2. Monta el middleware de enrutamiento `quizRoutes` en la ruta `/quiz` para permitir llamar al endpoint `/quiz/question`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "Question.js",
                  "codeLanguage": "javascript",
                  "content": "class Question {\n  constructor(id, question, options, correctAnswer) {\n    this.id = id;\n    this.question = question;\n    this.options = options;\n    this.correctAnswer = correctAnswer;\n  }\n\n  isCorrectAnswer(answer) {\n    return this.correctAnswer === answer;\n  }\n}\n\nmodule.exports = Question;",
                  "solvedContent": null
                },
                {
                  "name": "Quiz.js",
                  "codeLanguage": "javascript",
                  "content": "const Question = require(\"./Question\");\n\nconst questionsData = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"Paris\", \"Rome\", \"Berlin\", \"Madrid\"],\n  correctAnswer: \"Paris\",\n}, {\n  id: 2,\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: \"4\",\n}, ];\n\nclass Quiz {\n  constructor() {\n    this.questions = [];\n    for (let i = 0; i < questionsData.length; i++) {\n      const q = questionsData[i];\n      this.questions.push(new Question(q.id, q.question, q.options, q\n        .correctAnswer));\n    }\n  }\n  getRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    return this.questions[randomIndex];\n  }\n}\n\nmodule.exports = Quiz;",
                  "solvedContent": null
                },
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\napp.listen(port, () => {\n  console.log(`App is running on port ${port}`);\n});",
                  "solvedContent": "const express = require('express');\nconst quizRoutes = require(\"./quizRoutes\");\n\nconst app = express();\nconst port = 3000;\n\napp.use(\"/quiz\", quizRoutes);\n\napp.listen(port, () => {\n  console.log(`App is running on port ${port}`);\n});"
                },
                {
                  "name": "quizRoutes.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require(\"express\");\nconst Quiz = require(\"./Quiz\");\n\nconst router = express.Router();\nconst quiz = new Quiz();\n\nrouter.get(\"/question\", (req, res) => {\n  const question = quiz.getRandomQuestion();\n  res.json({\n    id: question.id,\n    question: question.question,\n    options: question.options,\n  });\n});\n\nmodule.exports = router;",
                  "solvedContent": null
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/quiz/question",
                "body": null
              }
            }
          }
        ]
      }
    ]
  }
}