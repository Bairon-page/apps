{
  "tutorial": {
    "id": 1752,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Patrón de ondas",
    "descriptionContent": "Usa bucles para mostrar un patrón de onda en la consola.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1752-icon-banner.svg",
    "chapters": [
      {
        "id": 11632,
        "title": "Patrón de ondas",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Creating the variable",
            "id": 106973,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Un desarrollador intentó mostrar un asterisco `*` y tildes `~` en la consola para simular una playa. El `*` para el sol y el `~` para las olas.\n\nLamentablemente, hay algunos errores.\n\nAntes de comenzar, echa un vistazo al resultado que el programador intentaba lograr:\n\n```JS\n*\n~\n~~\n~~~\n~~~~\n~~~~~\n```\n\nAhora veamos el código que escribieron y comencemos a corregirlo. El bucle while está usando una variable `counter`. Pero, ¿existe eso en el código?\n\n1. Comienza creando la variable counter utilizada en el bucle while y asígnale `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nconsole.log(\"*\");\nwhile (counter > 5) {\n  line -= \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter > 5) {\n  line -= \"~\";\n  counter++;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Updating the condition",
            "id": 106972,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El desarrollador quería detener el bucle cuando `counter` es mayor que `5`.\n\n1. Vamos a arreglar eso actualizando la condición a `counter <= 5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter > 5) {\n  line -= \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line -= \"~\";\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using comparison operators. Use `<=`."
                }
              ]
            }
          },
          {
            "title": "Adding the string",
            "id": 106971,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El desarrollador tiene que unir las cadenas, pero está usando `-=`.\n\n1. Dentro del bloque de código del bucle while, actualiza el operador `-=` para que sume la cadena a `line`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line -= \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `+=` to add the string to the line."
                }
              ]
            }
          },
          {
            "title": "Displaying the line",
            "id": 106970,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Antes de continuar, intenta ejecutar el código. Notarás que las olas aún no se muestran.\n\nCada vez que el bucle se ejecuta, tenemos que mostrar la línea para mostrar las olas.\n\n1. Muestra la variable `line` cada vez que el bucle while ejecuta su bloque de código.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log()` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Great work",
            "id": 106979,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Buen trabajo arreglando el programa. Ahora muestra un asterisco `*` y un montón de tildes `~` para simular una playa.\n\nAntes de continuar para hacer la salida aún más genial, ejecuta tu código para ver el estado actual.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\r\nlet counter = 1;\r\nconsole.log(\"*\");\r\nwhile (counter <= 5) {\r\n  line += \"~\";\r\n  counter++;\r\n  console.log(line);\r\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Running the loop ten times",
            "id": 106968,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Con nuestro programa en funcionamiento, experimentemos más con el código.\n\n1. Cambia el número en la condición para ejecutar el bloque de código 10 veces.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 5) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 10) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Run the loop while the counter is less than or equal to 10."
                }
              ]
            }
          },
          {
            "title": "Personalizing the program",
            "id": 106965,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a personalizar el programa.\n\n1. Muestra algo diferente a `*` y `~` en la consola. Intenta usar algo divertido, como emojis.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let line = \"\";\nlet counter = 1;\nconsole.log(\"*\");\nwhile (counter <= 10) {\n  line += \"~\";\n  counter++;\n  console.log(line);\n}",
                  "solvedContent": "let line = \"\";\nlet counter = 1;\nconsole.log(\"Binary Pyramid\");\nwhile (counter <= 10) {\n  line += \"01\";\n  counter++;\n  console.log(line);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Change `\"~\"` to something else.  "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}