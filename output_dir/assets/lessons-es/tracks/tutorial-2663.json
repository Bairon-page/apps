{
  "tutorial": {
    "id": 2663,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Sistema de Pedido de Comida - Parte 1",
    "descriptionContent": "Embárcate en un viaje culinario: un sistema de pedidos de comida italiana. Sumérgete en el delicioso mundo de las pizzas y pastas mientras construyes un servicio de entrega.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2663-icon-banner.svg",
    "chapters": [
      {
        "id": 14638,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129468,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido al proyecto del **Sistema de Pedidos de Comida**. Vamos a construir un sistema para pedir tu comida favorita. Comencemos el proyecto creando una lista de comidas italianas tradicionales que queremos incluir en nuestro menú.\n\n1. Crea una lista llamada `italian_food`. En esta lista, incluye cuatro valores de cadena de platos como `\"Pasta Bolognese\"`, `\"Pepperoni pizza\"`, `\"Margherita pizza\"`, y `\"Lasagna\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129469,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, crea una función para verificar si una comida está lista para ordenar.\n\n1. Define una función llamada `find_meal` que acepte dos parámetros: `name` y `menu`.\n2. En la función, devuelve el nombre si puedes encontrarlo en el menú pasado (que debería representar una lista como la definida anteriormente).\n3. Si la comida (pasada como el primer parámetro) no se encuentra en el menú (pasado como el segundo parámetro), devuelve `None`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129470,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Después de definir con éxito la función de búsqueda, es hora de adaptarla a nuestro caso.\n\n1. Crea una función `select_meal` con `name` como parámetro.\n2. Dentro de la función `select_meal`, llama a la función `find_meal` y pasa el nombre junto con la lista predefinida `italian_food` a la función `find_meal`.\n3. La función `select_meal` debería entonces devolver lo que recibe de la función `find_meal`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129471,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, crea otra función para mostrar el menú a los clientes.\n\n1. Define una función llamada `display_available_meals`.\n2. Dentro de la función, usa una función `print` para imprimir `Available Italian Meals:`.\n3. Usa un bucle para iterar a través de la lista `italian_food` y imprimir cada comida.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129472,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crea una función para resumir tu pedido de comida o notificarte si esa comida no se encuentra en nuestro menú.\n\n1. Define una función llamada `create_summary`. La función debe tomar dos argumentos, `name` y `amount`.\n2. Dentro de la función, crea una variable llamada `order` y asígnale el resultado de llamar a `select_meal` con el parámetro `name`.\n3. Añade una declaración condicional que verifique si se encontró la comida.\n   - Devuelve una cadena formateada indicando las cantidades y el nombre de la comida si se encuentra el `order`.\n   - Si `order` es `None`, devuelve `Meal not found`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129473,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es hora de interactuar con el cliente virtual y dejar que haga un pedido.\n\n1. Al final de tu código, imprime el mensaje de bienvenida `Welcome to the Food Order System!`.\n2. Después, llama a la función `display_available_meals`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\"",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\"\n\nprint(\"Welcome to the Food Order System!\")\ndisplay_available_meals()"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 129474,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación: recibir el pedido del cliente.\n\n1. Al final de tu código, añade dos funciones `input`.\n   - La primera debe obtener la elección de comida y guardarse en una variable llamada `name_input`.\n   - La segunda debe pedir la cantidad del pedido y guardarse en una variable llamada `amount_input`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\"\n\nprint(\"Welcome to the Food Order System!\")\ndisplay_available_meals()",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\"\n\nprint(\"Welcome to the Food Order System!\")\ndisplay_available_meals()\nname_input = input(\"Enter the name of the meal you want to order: \")\namount_input = int(input(\"Enter the quantity you want to order: \"))"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 129475,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Muestra el resumen del pedido o informa al cliente que la comida elegida no está en el menú.\n\n1. Ahora, llama a la función `create_summary` y pasa los argumentos `name_input` y `amount_input`. Crea una variable `result` que almacene el valor de retorno de la llamada a la función.\n2. Luego, imprime el valor de `result`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\"\n\nprint(\"Welcome to the Food Order System!\")\ndisplay_available_meals()\nname_input = input(\"Enter the name of the meal you want to order: \")\namount_input = int(input(\"Enter the quantity you want to order: \"))",
                  "solvedContent": "italian_food = [\n  \"Pasta Bolognese\",\n  \"Pepperoni pizza\",\n  \"Margherita pizza\",\n  \"Lasagna\"\n]\n\ndef find_meal(name, menu):\n  return name if name in menu else None\n\ndef select_meal(name):\n  return find_meal(name, italian_food)\n\ndef display_available_meals():\n  print(\"Available Italian Meals:\")\n  for meal in italian_food:\n    print(meal)\n\ndef create_summary(name, amount):\n  order = select_meal(name)\n  if order:\n    return f\"You ordered {amount} {name}\"\n  else:\n    return \"Meal not found\"\n\nprint(\"Welcome to the Food Order System!\")\ndisplay_available_meals()\nname_input = input(\"Enter the name of the meal you want to order: \")\namount_input = int(input(\"Enter the quantity you want to order: \"))\n\nresult = create_summary(name_input, amount_input)\nprint(result)"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}