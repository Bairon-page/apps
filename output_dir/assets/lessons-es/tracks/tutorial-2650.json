{
  "tutorial": {
    "id": 2650,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Introducción a Python",
    "descriptionContent": "Ejercicios de Desafío basados en Introducción a Python",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14658,
        "title": "Hola - Python",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "How Challenges Work",
            "id": 129686,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Cada desafío requerirá que escribas el código de acuerdo con las instrucciones.\n\nTu código será probado automáticamente cuando presiones el botón de enviar. Verás algunos comentarios para saber si es correcto. También puedes ejecutar tu código antes de enviarlo presionando el botón Ejecutar Código. ¡Vamos a intentarlo!\n\n1. Termina la declaración de impresión codificando `print`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "(\"Hello!\")",
                  "solvedContent": "print(\"Hello!\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14659,
        "title": "Declaración de Strings",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Declaring Variables with String Values",
            "id": 129687,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Tu amigo te pidió que averiguaras qué tan bien está yendo su canal de YouTube. ¡Vamos a encontrar sus mejores y peores videos!\n\n1. Crea una variable `most_viewed` y asígnale el valor `\"7 Amazing Mugs I CANNOT live without\"`.\n2. Crea una variable `least_viewed` y asígnale el valor `\"The Best Mug to Take Scuba Diving\"`.\n3. Usa la función `print` para mostrar las variables en la consola, cada una en una línea diferente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "most_viewed = \"7 Amazing Mugs I CANNOT live without\"\nleast_viewed = \"The Best Mug to Take Scuba Diving\"\n\nprint(most_viewed)\nprint(least_viewed)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14660,
        "title": "Declaración de números",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Declaring Variables with Number Values",
            "id": 129688,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Tu banda favorita subió un nuevo video! Vamos a ver cuántas personas lo vieron y comentaron.\n\n1. Crea una variable `views` y asígnale el valor `1145`.\n2. Crea una variable `comments` y asígnale el valor `200`.\n3. Usa una declaración `print` para mostrar la variable `views` en la consola.\n4. Usa una declaración `print` para mostrar la variable `comments` en la consola.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "views = 1145\ncomments = 200\n\nprint(views)\nprint(comments)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14661,
        "title": "Edad legal para conducir",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Legal Driving Age",
            "id": 129689,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sam tiene 16 años y quiere saber si es lo suficientemente mayor para conducir un coche. Completa los operadores faltantes para mostrar que cualquier persona menor de 17 años no tiene permitido conducir.\n\n1. Termina la comparación `too_young` para responder a la pregunta en la consola con un `Boolean` que diga que Sam es demasiado joven para conducir.\n2. Termina la comparación `car_driver` para mostrar que ella no puede conducir un coche.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "sams_age = 16\r\ntoo_young = sams_age  17\r\ncar_driver = sams_age  17\r\n\r\nprint(f\"Is Sam too young to drive? {too_young}\")\r\nprint(f\"Can Sam drive a car? {car_driver}\")",
                  "solvedContent": "sams_age = 16\r\ntoo_young = sams_age < 17\r\ncar_driver = sams_age > 17\r\n\r\nprint(f\"Is Sam too young to drive? {too_young}\")\r\nprint(f\"Can Sam drive a car? {car_driver}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14662,
        "title": "Verificación de Contraseña Antigua",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Old Password Check",
            "id": 129690,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lorde olvidó su contraseña y está usando un programa para restaurarla. El programa verifica si su nueva contraseña es diferente de la antigua. También hace que Lorde ingrese la nueva contraseña dos veces para asegurarse de que esté escrita correctamente. ¡Terminemos ese programa!\n\n1. Usa el operador de desigualdad en `compare_old_new` para mostrar que las contraseñas **no** son iguales.\n2. Asegúrate de que `new_password` coincida con `repeat_new_password`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "old_password = \"hello123\"\r\nnew_password = \"goodbye321\"\r\ncompare_old_new = old_password new_password\r\nrepeat_new_password = \"goodbye321\"\r\ncompare_new = new_password repeat_new_password\r\n\r\nprint(f\"Is new password different from old password? {compare_old_new}\")\r\nprint(f\"Has new password been introduced correctly? {compare_new}\")",
                  "solvedContent": "old_password = \"hello123\"\r\nnew_password = \"goodbye321\"\r\ncompare_old_new = old_password != new_password\r\nrepeat_new_password = \"goodbye321\"\r\ncompare_new = new_password == repeat_new_password\r\n\r\nprint(f\"Is new password different from old password? {compare_old_new}\")\r\nprint(f\"Has new password been introduced correctly? {compare_new}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14663,
        "title": "Precio de la entrada de cine",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Movie Ticket Price",
            "id": 129691,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jonas va al cine. Revisó los precios y necesitará un boleto para un adulto.\n\n1. Completa el f-string para mostrar que comprará un boleto para un adulto usando la variable correcta.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "age = 15\r\nadult_ticket = age >= 12\r\n\r\nprint( \"Buy one adult ticket: {}\")",
                  "solvedContent": "age = 15\r\nadult_ticket= age >= 12\r\n\r\nprint(f\"Buy one adult ticket: {adult_ticket}\")"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13124,
        "title": "Operador de desigualdad",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Inequality Operator with Variables",
            "id": 118105,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Ayudemos a nuestro amigo YouTuber a averiguar cuándo debería pedir a su audiencia que se suscriba!\n\n1. Usa `views` y `subscribers` para crear una nueva variable llamada `askToSubscribe` que contenga el resultado de una comparación de desigualdad entre los dos.\n2. Muestra el resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "views = 1533\nsubscribers = 123\n",
                  "solvedContent": "views = 1533\nsubscribers = 123\n\naskToSubscribe = views != subscribers\n\nprint(askToSubscribe)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13119,
        "title": "Usando variables: números",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Using variables that have numbers",
            "id": 118100,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Eres el baterista de una nueva banda increíble! ¡Vamos a calcular el tiempo total que la gente ha pasado escuchando tu canción más popular!\n\n1. Crea una variable `totalListenTime`. Multiplica `bestSongLength` por `bestSongListens` y guarda el resultado en la variable.\n2. Usa una declaración `print` para mostrar la nueva variable.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "bestSongLength = 3.5\nbestSongListens = 456",
                  "solvedContent": "bestSongLength = 3.5\nbestSongListens = 456\n\ntotalListenTime = bestSongLength * bestSongListens\nprint(totalListenTime)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13121,
        "title": "Operador de igualdad con números",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Checking for equality with numbers",
            "id": 118102,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Has decidido compartir tus increíbles chistes con el mundo y ¡has creado una cuenta de Twitter! Vamos a usar el operador de igualdad para ver si ya has alcanzado los 1000 seguidores.\n\n1. Crea una variable llamada `celebrationTime` y asígnale el resultado de la comparación entre `followers` y `1000`.\n2. Usa una declaración `print` para mostrar el resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "followers = 900",
                  "solvedContent": "followers = 900\ncelebrationTime = followers == 1000\n\nprint(celebrationTime)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13122,
        "title": "Operador de igualdad con strings",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Checking for equality with strings",
            "id": 118103,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Acabas de descubrir el video de animales más adorable! Pero parece un poco familiar. Vamos a averiguar si fue hecho por tu creador de contenido favorito.\n\n1. Crea una variable `madeByFavorite` y asígnale el resultado de una comparación entre `newCreator` y `favoriteCreator`. Asegúrate de usar el operador de igualdad.\n2. Muestra la nueva variable.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "newCreator = \"Bunnies4Ever\"\nfavoriteCreator = \"BestBunnies\"",
                  "solvedContent": "newCreator = \"Bunnies4Ever\"\nfavoriteCreator = \"BestBunnies\"\n\nmadeByFavorite = newCreator == favoriteCreator\n\nprint(madeByFavorite)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13118,
        "title": "Actualización de variables",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Updating variables with new values",
            "id": 118099,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Decidiste comenzar una carrera en YouTube y publicaste tu primer video. Vamos a revisar y ver cuántos \"likes\" está obteniendo.\n\n1. Incrementa la variable `likes` en 1.\n2. Usa la declaración `print` para mostrar el valor de la variable `likes`.\n3. Incrementa la variable `likes` en 1 nuevamente.\n4. Usa la declaración `print` para mostrar el valor de la variable `likes` nuevamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "likes = 1145\nlikes = 1146",
                  "solvedContent": "likes = 1145\nlikes = 1146\nlikes = 1147\nprint (likes)\nlikes = 1148\nprint (likes)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13123,
        "title": "Operador de igualdad con variables",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equality with numbers in variables",
            "id": 118104,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "¡Tu primo pequeño ha creado su propia plataforma de redes sociales! Te convencieron de unirte. Vamos a verificar si tu primera publicación obtuvo el mismo número de vistas y comentarios.\n\n1. Crea una variable `everyoneComments` y asígnale el resultado de una comparación entre `views` y `comments`.\n2. Muestra el resultado.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "views = 1511\ncomments = 1511",
                  "solvedContent": "views = 1511\ncomments = 1511\n\neveryoneComments = views == comments\n\nprint(everyoneComments)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13113,
        "title": "Operador mayor que",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Greater than operator",
            "id": 118090,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dos personas están jugando a los bolos. Bowler1 hace 5 strikes y 5 spares. Bowler2 hace 4 strikes y seis spares. ¡No hay empates!\n\n1. Después de `\"bowler1 wins:\"`, crea una declaración `print` para verificar si la puntuación de bowler1 es mayor que la de bowler2.\n2. Después de `\"bowler2 wins:\"`, imprime la comparación para verificar si la puntuación de bowler2 es mayor que la de bowler1.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "sam_strikes = 5\r\nsam_spares = 5\r\nleo_strikes = 4\r\nleo_spares = 6\r\nsam_score = sam_strikes * 30 + sam_spares * 20\r\nleo_score = leo_strikes * 30 + leo_spares * 20\r\n\r\n#Decide winner\r\nprint(\"Sam wins:\")\r\n\r\nprint(\"Leo wins:\")",
                  "solvedContent": "sam_strikes = 5\r\nsam_spares = 5\r\nleo_strikes = 4\r\nleo_spares = 6\r\nsam_score = sam_strikes * 30 + sam_spares * 20\r\nleo_score = leo_strikes * 30 + leo_spares * 20\r\n\r\n#Decide winner\r\nprint(\"Sam wins:\")\r\nprint(sam_score > leo_score)\r\n\r\nprint(\"Leo wins:\")\r\nprint(leo_score > sam_score)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13111,
        "title": "Operadores",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Operators",
            "id": 118088,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Anne está usando un cajero automático para agregar un `deposit` de $200 a su cuenta. Ella quiere hacer un `withdrawal` de $100.\n\n1. Completa el código para mostrar que el `withdrawal` de Anne es `approved` si tiene suficiente dinero en su `account_balance`, o `denied` de lo contrario.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "deposit  200\r\nwithdrawal  100\r\naccount_balance = deposit - withdrawal\r\nprint(\"Account balance is:\")\r\nprint(account_balance)\r\nprint(\"Withdrawal is:\")\r\nprint(withdrawal)\r\n\r\napproved  withdrawal  account_balance\r\ndenied  withdrawal  account_balance\r\n\r\nprint(\"Withdrawal approved. \") \r\nprint(approved)\r\n\r\nprint(\"Withdrawal denied. \")\r\nprint(denied)",
                  "solvedContent": "deposit = 200\r\nwithdrawal = 100\r\naccount_balance = deposit - withdrawal\r\nprint(\"Account balance is:\")\r\nprint(account_balance)\r\nprint(\"Withdrawal is:\")\r\nprint(withdrawal)\r\n\r\napproved = withdrawal <= account_balance\r\ndenied = withdrawal > account_balance\r\n\r\nprint(\"Withdrawal approved. \") \r\nprint(approved)\r\n\r\nprint(\"Withdrawal denied. \")\r\nprint(denied)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13112,
        "title": "Operadores de igualdad y desigualdad",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equality and inequality operators",
            "id": 118089,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El ID de un votante se compara con el registro de votantes antes de que se le entregue una boleta a alguien.\n\n1. Crea una variable `valid_voter` que almacene la comparación del `ID_name` del votante y el `voter_register_name`.\n2. Imprime la comparación de `valid_voter` con `True` para ver si el votante recibe una boleta o tiene que registrarse.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "#voter_id_match_registry\r\nID_name = \"Kristen Stewart\"\r\nvoter_register_name = \"Kristen Jaymes Stewart\"\r\n\r\n\r\nprint(\"Here's your ballot.\")\r\nprint(valid_voter  True)\r\n\r\nprint(\"You must register to vote first.\")\r\nprint(valid_voter  True)",
                  "solvedContent": "#voter_id_match_registry\r\nID_name = \"Kristen Stewart\"\r\nvoter_register_name = \"Kristen Jaymes Stewart\"\r\nvalid_voter = ID_name == voter_register_name\r\n\r\nprint(\"Here's your ballot.\")\r\nprint(valid_voter == True)\r\n\r\nprint(\"You must register to vote first.\")\r\nprint(valid_voter != True)"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}