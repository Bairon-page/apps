{
  "tutorial": {
    "id": 2646,
    "version": 6,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Números Aleatorios - Parte 1",
    "descriptionContent": "Crea un backend que pueda ayudar si no tienes una moneda o un dado a mano",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2646-icon-banner.svg",
    "chapters": [
      {
        "id": 14609,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129321,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido al proyecto de **Números Aleatorios**. Construiremos una aplicación de servidor simple que genera números aleatorios.\n\nComenzaremos configurando el servidor Express.\n\n1. Declara una variable `express` y requiere el módulo `express`.\n2. Declara una variable `app` e inicialízala llamando a la función `express`.\n3. Declara una variable `port` y asígnale el valor `3000`.\n4. Usa la función `listen` en `app` para que la aplicación escuche en el puerto especificado por la variable `port`.\n5. Registra un mensaje en la consola dentro del callback de la función `listen` para que sepamos que nuestro servidor está funcionando correctamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});"
                }
              ],
              "hints": [
                {
                  "title": "Give your hint a title",
                  "content": "Give your hint some content"
                }
              ],
              "httpOptions": {
                "method": "GET",
                "path": "/",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #2",
            "id": 129323,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Comenzamos creando una ruta que simulará un lanzamiento de moneda. Usaremos el método `get` de `app` para manejar la solicitud GET en la ruta `/coinFlip`.\n\n1. Usa la función `app.get` para crear un nuevo endpoint en `/coinFlip`.\n2. Dentro de la función de callback (que toma los parámetros `req` y `res`), calcula un número aleatorio de 0 o 1 (cara o cruz).\n3. Responde con un objeto JSON, usando el método `json` de `res`, donde `result` es `\"Heads\"` si el lanzamiento de moneda es 0 y `\"Tails\"` en caso contrario.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/coinFlip",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #3",
            "id": 129324,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, vamos a añadir otra ruta para lanzar un dado de seis caras.\n\n1. Similar al lanzamiento de moneda, crea una ruta `GET` en el camino `/diceRoll`.\n2. Actualiza el cálculo del número aleatorio para dar un resultado entre 1 y 6 (inclusive).\n3. Responde con JSON donde `result` es el número obtenido al lanzar el dado aleatoriamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/diceRoll",
                "body": null
              }
            }
          },
          {
            "title": "Lesson #4",
            "id": 129325,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Por último, vamos a crear una ruta que generará un número aleatorio entre 1 y 100.\n\n1. Crea otra ruta `GET` en el camino '/randomNumber'.\n2. Modifica el cálculo del número aleatorio para dar un resultado entre 1 y 100 (inclusive).\n3. Responde con JSON donde `result` es el número generado aleatoriamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "app.js",
                  "codeLanguage": "javascript",
                  "content": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});",
                  "solvedContent": "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.listen(port, function() {\n  console.log(`App is listening on port ${port}`);\n});\n\napp.get('/coinFlip', function(req, res) {\n  const result = Math.floor(Math.random() * 2);\n  res.status(200).json({ result: result === 0 ? 'Heads' : 'Tails' });\n});\n\napp.get('/diceRoll', function(req, res) {\n  const result = Math.floor(Math.random() * 6) + 1;\n  res.status(200).json({ result: result });\n});\n\napp.get('/randomNumber', function(req, res) {\n  const result = Math.floor(Math.random() * 100) + 1;\n  res.status(200).json({ result: result });\n});"
                }
              ],
              "hints": [],
              "httpOptions": {
                "method": "GET",
                "path": "/randomNumber",
                "body": null
              }
            }
          }
        ]
      }
    ]
  }
}