{
  "tutorial": {
    "id": 2903,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Lista de Tareas - Parte 1",
    "descriptionContent": "¿Demasiado que hacer? ¿Demasiadas cosas que manejar a la vez? En este proyecto, ¡construiremos un gestor de tareas para ayudar con eso!",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2903-icon-banner.svg",
    "chapters": [
      {
        "id": 14994,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 132190,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido al proyecto de **Lista de Tareas**. Crearemos un programa que permita a los usuarios ver una lista y agregar tareas.\n\nLo primero que necesitamos es un array para almacenar nuestras tareas.\n\n1. Declara una variable `items` e inicialízala como un array vacío.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const items = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 132191,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "A continuación, vamos a crear una función que pueda mostrar una lista dada de elementos.\n\n1. Declara una función `displayList` que tome un parámetro `items`.\n2. Dentro de la función, recorre todos los elementos del array `items` pasado y muestra cada elemento de la lista junto con su índice. Comienza a contar desde `1`, no desde `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];",
                  "solvedContent": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 132192,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "También necesitamos una función que añada un nuevo elemento a la lista.\n\n1. Declara una función `addItem` que tome dos parámetros `items` y `itemToAdd`.\n2. Añade `itemToAdd` al array `items` que fue pasado a la función.\n3. Si quieres, imprime que el nuevo elemento fue añadido exitosamente a la lista de elementos.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}",
                  "solvedContent": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 132189,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Usaremos `@mimo-org/input` para capturar la entrada del usuario.\n\n1. En la parte superior del archivo, declara una variable `input` y requiere el módulo `input`. Estamos usando `@mimo-org/input` para interactuar con el usuario en la consola.\n   ```const input = require(\"@mimo-org/input\");```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 132193,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Con las funciones de visualización y adición de la lista hechas, ahora podemos configurar nuestro bucle principal y menú.\n\n1. Declara un booleano llamado `running` y configúralo en `true`.\n2. Implementa un bucle `while` con la condición de la variable `running`.\n3. Dentro del bucle, muestra al usuario las opciones posibles.\n   - Dile al usuario que escribir `1` mostrará la lista.\n   - Explica que escribir `2` añadirá un nuevo elemento.\n   - Muestra al usuario que `3` terminará el programa.\n4. Solicita al usuario una entrada y guárdala en una variable llamada `choice`.\n5. Si la elección del usuario es `3`, establece `running` en `false` para salir del bucle `while`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 3) {\n    running = false;\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 132194,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, determinaremos la acción a realizar basada en la elección del usuario.\n\n1. Para el caso `1` llama a la función `displayList` con el argumento `items`.\n2. El caso `2` no debe hacer nada por ahora. Nos encargaremos de eso después.\n3. Si se ingresó algo diferente a `1`, `2` o `3`, imprime un mensaje de error.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 3) {\n    running = false;\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a encargarnos de añadir nuevos elementos.\n\n1. Para el caso `2`, antes de llamar a `addItem`, declara la variable `newItem` y establece su valor usando el prompt. Pídele al usuario que ingrese una nueva tarea.\n2. Después de capturar el nuevo elemento del usuario en `newItem`, llama a la función `addItem` con los argumentos `items` y `newItem` para añadir el nuevo elemento.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}