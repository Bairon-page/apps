{
  "tutorial": {
    "id": 2660,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Piedra, Papel, Tijeras - Parte 2",
    "descriptionContent": "Aquí, ampliaremos el proyecto para jugar al mejor de tres y, con eso, convertirlo en un juego real.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2660-icon-banner.svg",
    "chapters": [
      {
        "id": 14634,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129433,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido de nuevo al proyecto de **Piedra, Papel, Tijeras**. Vamos a jugar al mejor de tres para hacer el juego más interesante. Quien gane dos juegos primero es el ganador.\n\n1. Al inicio del programa, crea dos nuevas variables, `player_wins` y `computer_wins`, y establece ambos valores en `0`. Estas variables llevarán el registro del número de juegos que gana el jugador y la computadora, respectivamente.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129434,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Tenemos que ejecutar múltiples juegos hasta que alguien gane dos juegos, por lo que necesitamos poner nuestro código actual dentro de un bucle `while`.\n\nEn cada iteración del bucle, seguiremos pidiendo al jugador su elección y generaremos la elección de la computadora.\n\n1. Mueve todo tu código existente, excepto la declaración de importación y las variables `player_wins` y `computer_wins`, dentro de un nuevo bucle `while`. La condición del bucle debe ser si `player_wins` es todavía menor que dos y `computer_wins` también es menor que `2`.\n\nCrearemos un bucle infinito porque las variables `player_wins` y `computer_wins` nunca se actualizan. Nos aseguraremos de que el programa funcione como se espera y se detenga nuevamente después de dos victorias en un segundo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    print(\"You won\")\n  elif winner == \"Computer\":\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129435,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Cuando un juego termina, la puntuación debe actualizarse según quién gane.\n\n1. Agrega código para incrementar la variable `player_wins` en las declaraciones if `if winner == \"Player\"`.\n2. Actualiza la variable `computer_wins` en el bloque `elif winner == \"Computer\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    print(\"You won\")\n  elif winner == \"Computer\":\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129436,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Los resultados del juego tienen más sentido si la puntuación se muestra al final de cada ronda. ¿No es así?\n\n1. Añade una declaración `print` al final, pero aún dentro del bucle `while`, para mostrar la puntuación actual en la consola después de cada ronda. La declaración debería imprimir: `Current Score - Player: {player_wins}, Computer: {computer_wins}`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_wins = 0\ncomputer_wins = 0\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")\n\n  print(f\"Current Score - Player: {player_wins}, Computer: {computer_wins}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129437,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lastly, let's announce the overall winner once the loop exits.\n\nAgrega una declaración al final de tu programa para mostrar un mensaje dependiendo de quién ganó más juegos.\n\n1. Si `player_wins > computer_wins`, imprime `¡Felicidades! Ganaste.`.\n2. Si no, imprime `¡La computadora ganó!`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nplayer_wins = 0\ncomputer_wins = 0\n\nprint(\"Let's play rock, paper, or scissors\")\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")\n\n  print(f\"Current Score - Player: {player_wins}, Computer: {computer_wins}\")",
                  "solvedContent": "import random\n\nplayer_wins = 0\ncomputer_wins = 0\n\nprint(\"Let's play rock, paper, or scissors\")\n\nwhile player_wins < 2 and computer_wins < 2:\n  player_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\n  choices = [\"rock\", \"paper\", \"scissors\"]\n  computer_choice = random.choice(choices)\n  print(f\"Computer chose: {computer_choice}\")\n\n  if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n    winner = \"Player\"\n  elif player_choice == computer_choice:\n    winner = \"Tie\"\n  else:\n    winner = \"Computer\"\n\n  if winner == \"Player\":\n    player_wins += 1\n    print(\"You won\")\n  elif winner == \"Computer\":\n    computer_wins += 1\n    print(\"Computer won\")\n  else:\n    print(\"It's a tie\")\n\n  print(f\"Current Score - Player: {player_wins}, Computer: {computer_wins}\")\n\nif player_wins > computer_wins:\n  print(\"Congratulations! You won the best of three.\")\nelse:\n  print(\"Computer won the best of three. Better luck next time!\")"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}