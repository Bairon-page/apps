{
  "tutorial": {
    "id": 3096,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Pokédex - Parte 3",
    "descriptionContent": "Completa tu Pokédex implementando una vista detallada para cada Pokémon individual",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-3096-icon-banner.svg",
    "chapters": [
      {
        "id": 15387,
        "title": "Capítulo #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 135418,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenido de nuevo al proyecto **Pokédex**. En la tercera parte, añadiremos una nueva ruta y un componente para mostrar los detalles individuales de los Pokémon.\n\nComenzaremos con un nuevo componente básico e importarlo en `App.jsx` para incluir una ruta para él.\n\n1. En el archivo `Pokemon.jsx`, crea un componente `Pokemon` que devuelva un `h1` con el texto *Pokémon Details* y exporta el componente. Asegúrate de importar `React` así como de exportar el componente.\n2. Importa el componente `Pokemon` en `App.jsx`\n3. Define una nueva `Route` en el componente `Routes` para la ruta `\"/pokemon\"` que renderiza el componente `Pokemon`.",
              "preselectedFileIndex": 10,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Search from \"./Search\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n      <Link to=\"/search\">Search</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Search from \"./Search\";\nimport Pokemon from \"./Pokemon\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n      <Link to=\"/search\">Search</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n        <Route path=\"/search\" element={<Search />} />\n        <Route path=\"/pokemon\" element={<Pokemon />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <>\n      <h1>All Pokemon</h1>\n      <ul>\n        {pokemons.map((pokemon, index) => (\n          <PokemonCard key={index} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Pokedex;",
                  "solvedContent": null
                },
                {
                  "name": "Search.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Search = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [filteredPokemons, setFilteredPokemons] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  useEffect(() => {\n    if (input === \"\") {\n      setFilteredPokemons([]);\n    } else {\n      const filtered = pokemons.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(input.toLowerCase()),\n      );\n      setFilteredPokemons(filtered);\n    }\n  }, [input, pokemons]);\n\n  return (\n    <>\n      <h1>Search a Pokémon</h1>\n      <input\n        placeholder=\"Enter Pokémon name...\"\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <ul>\n        {filteredPokemons.map((pokemon) => (\n          <PokemonCard key={pokemon.name} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;",
                  "solvedContent": null
                },
                {
                  "name": "Search.css",
                  "codeLanguage": "css",
                  "content": "input {\n  font-family: 'Press Start 2P', sans-serif;\n}",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport \"./PokemonCard.css\";\n\nconst PokemonCard = ({ pokemon }) => {\n  return (\n    <div className=\"pokemon-card\">\n      <img\n        src={`https://raw.githubusercontent.com/getmimo/things-api/main/files/pokedex/sprites/master/sprites/pokemon/${pokemon.url\n          .split(\"/\")\n          .filter(Boolean)\n          .pop()}.png`}\n        alt={pokemon.name}\n      />\n      <h2>{pokemon.name}</h2>\n    </div>\n  );\n};\n\nexport default PokemonCard;",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.css",
                  "codeLanguage": "css",
                  "content": ".pokemon-card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 0px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pokemon-card img {\n  max-width: 150px;\n  margin-bottom: -20px;\n}\n\n.pokemon-card h2 {\n  font-size: small;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Pokemon.jsx",
                  "codeLanguage": "jsx",
                  "content": "",
                  "solvedContent": "import React from \"react\";\n\nconst Pokemon = () => {\n  return <h1>Pokémon Details</h1>;\n};\n\nexport default Pokemon;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 135423,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es hora de listar Pokémon con enlaces clicables para ir a la página de detalles. Vamos a actualizar el componente `PokemonCard` para incluir un `Link` que navegue a la página de detalles del Pokémon.\n\n1. Importa `Link` desde `react-router-dom` en el archivo `PokemonCard.jsx`.\n2. Envuelve el contenido de la tarjeta dentro de un `Link` que navegue a `/pokemon?name=name`, reemplazando el segundo `name` con el nombre actual del `pokemon`.",
              "preselectedFileIndex": 8,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Search from \"./Search\";\nimport Pokemon from \"./Pokemon\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n      <Link to=\"/search\">Search</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n        <Route path=\"/search\" element={<Search />} />\n        <Route path=\"/pokemon\" element={<Pokemon />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <>\n      <h1>All Pokemon</h1>\n      <ul>\n        {pokemons.map((pokemon, index) => (\n          <PokemonCard key={index} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Pokedex;",
                  "solvedContent": null
                },
                {
                  "name": "Search.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Search = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [filteredPokemons, setFilteredPokemons] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  useEffect(() => {\n    if (input === \"\") {\n      setFilteredPokemons([]);\n    } else {\n      const filtered = pokemons.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(input.toLowerCase()),\n      );\n      setFilteredPokemons(filtered);\n    }\n  }, [input, pokemons]);\n\n  return (\n    <>\n      <h1>Search a Pokémon</h1>\n      <input\n        placeholder=\"Enter Pokémon name...\"\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <ul>\n        {filteredPokemons.map((pokemon) => (\n          <PokemonCard key={pokemon.name} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;",
                  "solvedContent": null
                },
                {
                  "name": "Search.css",
                  "codeLanguage": "css",
                  "content": "input {\n  font-family: 'Press Start 2P', sans-serif;\n}",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport \"./PokemonCard.css\";\n\nconst PokemonCard = ({ pokemon }) => {\n  return (\n    <div className=\"pokemon-card\">\n      <img\n        src={`https://raw.githubusercontent.com/getmimo/things-api/main/files/pokedex/sprites/master/sprites/pokemon/${pokemon.url\n          .split(\"/\")\n          .filter(Boolean)\n          .pop()}.png`}\n        alt={pokemon.name}\n      />\n      <h2>{pokemon.name}</h2>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n",
                  "solvedContent": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PokemonCard.css\";\n\nconst PokemonCard = ({ pokemon }) => {\n  return (\n    <Link to={`/pokemon?name=${pokemon.name}`}>\n      <div className=\"pokemon-card\">\n        <img\n          src={`https://raw.githubusercontent.com/getmimo/things-api/main/files/pokedex/sprites/master/sprites/pokemon/${pokemon.url\n            .split(\"/\")\n            .filter(Boolean)\n            .pop()}.png`}\n          alt={pokemon.name}\n        />\n        <h2>{pokemon?.name}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default PokemonCard;\n"
                },
                {
                  "name": "PokemonCard.css",
                  "codeLanguage": "css",
                  "content": ".pokemon-card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 0px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pokemon-card img {\n  max-width: 150px;\n  margin-bottom: -20px;\n}\n\n.pokemon-card h2 {\n  font-size: small;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Pokemon.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Pokemon = () => {\n  return <h1>Pokémon Details</h1>;\n};\n\nexport default Pokemon;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy",
            "id": 135424,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a mejorar el componente `Pokemon` obteniendo datos de Pokémon desde la API.\n\n1. Importa `useState`, `useEffect` de `react` y `useLocation` de `react-router-dom`.\n2. Configura un estado inicial para almacenar los datos del Pokémon: `pokemon`. Inicia esta variable de estado con `null`.\n3. Usa `useLocation` para extraer el `name` del Pokémon de los parámetros de consulta y guárdalo en una variable `pokemonName`.\n4. Usa `useEffect` para obtener el Pokémon cuando el parámetro de consulta se cargue y se guarde en la variable `pokemonName`:\n   - Usa `fetch` para obtener los datos de `https://pokedex.mimo.dev/api/pokemon/${pokemonName}`.\n   - Una vez que obtengas una respuesta, accede al JSON y actualiza la variable de estado `pokemon` con los datos recibidos.\n5. Si hay un Pokémon disponible para mostrar, muestra su nombre y una imagen con el `src` configurado en `pokemon.sprites.front_default` y el `alt` configurado con el nombre del Pokémon.",
              "preselectedFileIndex": 10,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Search from \"./Search\";\nimport Pokemon from \"./Pokemon\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n      <Link to=\"/search\">Search</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n        <Route path=\"/search\" element={<Search />} />\n        <Route path=\"/pokemon\" element={<Pokemon />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <>\n      <h1>All Pokemon</h1>\n      <ul>\n        {pokemons.map((pokemon, index) => (\n          <PokemonCard key={index} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Pokedex;",
                  "solvedContent": null
                },
                {
                  "name": "Search.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Search = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [filteredPokemons, setFilteredPokemons] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  useEffect(() => {\n    if (input === \"\") {\n      setFilteredPokemons([]);\n    } else {\n      const filtered = pokemons.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(input.toLowerCase()),\n      );\n      setFilteredPokemons(filtered);\n    }\n  }, [input, pokemons]);\n\n  return (\n    <>\n      <h1>Search a Pokémon</h1>\n      <input\n        placeholder=\"Enter Pokémon name...\"\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <ul>\n        {filteredPokemons.map((pokemon) => (\n          <PokemonCard key={pokemon.name} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;",
                  "solvedContent": null
                },
                {
                  "name": "Search.css",
                  "codeLanguage": "css",
                  "content": "input {\n  font-family: 'Press Start 2P', sans-serif;\n}",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PokemonCard.css\";\n\nconst PokemonCard = ({ pokemon }) => {\n  return (\n    <Link to={`/pokemon?name=${pokemon.name}`}>\n      <div className=\"pokemon-card\">\n        <img\n          src={`https://raw.githubusercontent.com/getmimo/things-api/main/files/pokedex/sprites/master/sprites/pokemon/${pokemon.url\n            .split(\"/\")\n            .filter(Boolean)\n            .pop()}.png`}\n          alt={pokemon.name}\n        />\n        <h2>{pokemon?.name}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default PokemonCard;\n",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.css",
                  "codeLanguage": "css",
                  "content": ".pokemon-card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 0px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pokemon-card img {\n  max-width: 150px;\n  margin-bottom: -20px;\n}\n\n.pokemon-card h2 {\n  font-size: small;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Pokemon.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Pokemon = () => {\n  return <h1>Pokémon Details</h1>;\n};\n\nexport default Pokemon;\n",
                  "solvedContent": "import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Pokemon = () => {\n  const [pokemon, setPokemon] = useState(null);\n  const query = new URLSearchParams(useLocation().search);\n  const pokemonName = query.get(\"name\");\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      if (!pokemonName) return;\n\n      const response = await fetch(\n        `https://pokedex.mimo.dev/api/pokemon/${pokemonName}`,\n      );\n      const data = await response.json();\n      setPokemon(data);\n    };\n\n    fetchPokemon();\n  }, [pokemonName]);\n\n  return (\n    <>\n      {pokemon && (\n        <div>\n          <h1>{pokemon.name}</h1>\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pokemon;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy - Copy",
            "id": 135425,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Completemos el componente `Pokemon` introduciendo estados de carga y error y mostrando más datos.\n\n1. Añade variables de estado adicionales: `loading` y `error`. Inicia `loading` con `true` y `error` con `null`.\n2. Establece `loading` a `false` una vez que los datos sean recuperados.\n3. Usa un bloque try-catch en tu función de fetch para manejar errores, estableciendo el estado `error` según sea necesario.\n4. Ajusta el JSX retornado para mostrar carga, error o contenido recuperado. Muestra *Error* para asegurar que el usuario entienda que hay un error en caso de que encuentres un error.\n5. Muestra más de los datos cargados, como `height` y `weight`.\n6. Si quieres, considera mostrar los elementos de los dos arrays, `abilities` y `types`.",
              "preselectedFileIndex": 10,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Search from \"./Search\";\nimport Pokemon from \"./Pokemon\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n      <Link to=\"/search\">Search</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n        <Route path=\"/search\" element={<Search />} />\n        <Route path=\"/pokemon\" element={<Pokemon />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <>\n      <h1>All Pokemon</h1>\n      <ul>\n        {pokemons.map((pokemon, index) => (\n          <PokemonCard key={index} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Pokedex;",
                  "solvedContent": null
                },
                {
                  "name": "Search.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Search = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [filteredPokemons, setFilteredPokemons] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  useEffect(() => {\n    if (input === \"\") {\n      setFilteredPokemons([]);\n    } else {\n      const filtered = pokemons.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(input.toLowerCase()),\n      );\n      setFilteredPokemons(filtered);\n    }\n  }, [input, pokemons]);\n\n  return (\n    <>\n      <h1>Search a Pokémon</h1>\n      <input\n        placeholder=\"Enter Pokémon name...\"\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <ul>\n        {filteredPokemons.map((pokemon) => (\n          <PokemonCard key={pokemon.name} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;",
                  "solvedContent": null
                },
                {
                  "name": "Search.css",
                  "codeLanguage": "css",
                  "content": "input {\n  font-family: 'Press Start 2P', sans-serif;\n}",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PokemonCard.css\";\n\nconst PokemonCard = ({ pokemon }) => {\n  return (\n    <Link to={`/pokemon?name=${pokemon.name}`}>\n      <div className=\"pokemon-card\">\n        <img\n          src={`https://raw.githubusercontent.com/getmimo/things-api/main/files/pokedex/sprites/master/sprites/pokemon/${pokemon.url\n            .split(\"/\")\n            .filter(Boolean)\n            .pop()}.png`}\n          alt={pokemon.name}\n        />\n        <h2>{pokemon?.name}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default PokemonCard;\n",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.css",
                  "codeLanguage": "css",
                  "content": ".pokemon-card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 0px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pokemon-card img {\n  max-width: 150px;\n  margin-bottom: -20px;\n}\n\n.pokemon-card h2 {\n  font-size: small;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Pokemon.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Pokemon = () => {\n  const [pokemon, setPokemon] = useState(null);\n  const query = new URLSearchParams(useLocation().search);\n  const pokemonName = query.get(\"name\");\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      if (!pokemonName) return;\n\n      const response = await fetch(\n        `https://pokedex.mimo.dev/api/pokemon/${pokemonName}`,\n      );\n      const data = await response.json();\n      setPokemon(data);\n    };\n\n    fetchPokemon();\n  }, [pokemonName]);\n\n  return (\n    <>\n      {pokemon && (\n        <div>\n          <h1>{pokemon.name}</h1>\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pokemon;\n",
                  "solvedContent": "import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Pokemon = () => {\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const query = new URLSearchParams(useLocation().search);\n  const pokemonName = query.get(\"name\");\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      if (!pokemonName) return;\n\n      try {\n        const response = await fetch(\n          `https://pokedex.mimo.dev/api/pokemon/${pokemonName}`,\n        );\n        if (!response.ok) throw new Error(\"Pokémon not found\");\n\n        const data = await response.json();\n        setPokemon(data);\n        setError(null);\n      } catch (err) {\n        setPokemon(null);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPokemon();\n  }, [pokemonName]);\n\n  return (\n    <>\n      {loading && <p>Loading ..</p>}\n      {error && <p>Error ..</p>}\n      {pokemon && (\n        <div>\n          <h1>{pokemon.name}</h1>\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n          {pokemon.height && <p>Height: {pokemon.height}</p>}\n          {pokemon.weight && <p>Weight: {pokemon.weight}</p>}\n          {pokemon.abilities && (\n            <p>\n              <span>Abilities: </span>\n              {pokemon.abilities.map((ability) => ability.ability.name).join(\", \")}\n            </p>\n          )}\n          {pokemon.types && (\n            <p>\n              <span>Types: </span>\n              {pokemon.types.map((type) => type.type.name).join(\", \")}\n            </p>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pokemon;\n"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy - Copy - Copy",
            "id": 135426,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Como toque final, vamos a actualizar el color de los enlaces del componente `PokemonCard`.\n\n1. En el archivo `App.css`, crea una nueva regla que apunte a los elementos `a`:\n   - Establece `color` a `black`.",
              "preselectedFileIndex": 3,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\" />\n    <title>Pokédex</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Pokedex from \"./Pokedex\";\nimport Search from \"./Search\";\nimport Pokemon from \"./Pokemon\";\n\nconst NavigationBar = () => {\n  return (\n    <nav>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokedex\">Pokédex</Link>\n      <Link to=\"/search\">Search</Link>\n    </nav>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter>\n    <NavigationBar />\n    <div className=\"content\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/pokedex\" element={<Pokedex />} />\n        <Route path=\"/search\" element={<Search />} />\n        <Route path=\"/pokemon\" element={<Pokemon />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}\n",
                  "solvedContent": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\nbody {\n  margin: 0;\n  font-family: \"Press Start 2P\", sans-serif;\n  background-color: #F7E39C;\n  text-align: center;\n}\n\n.content {\n  width: 90%;\n  max-width: 640px;\n  margin: 0 auto;\n}\n\np {\n  line-height: 1.5;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: #D13325;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\nnav a {\n  text-decoration: none;\n  font-weight: bold;\n  color: #F7E39C;\n  margin: 0 4px;\n}\n\nnav a:hover {\n  color: black;\n}\n\na {\n color: black;\n}"
                },
                {
                  "name": "Home.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Pokédex App</h1>\n      <p>Explore the world of Pokémon with our comprehensive Pokédex.</p>\n    </div>\n  );\n};\n\nexport default Home;",
                  "solvedContent": null
                },
                {
                  "name": "Pokedex.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <>\n      <h1>All Pokemon</h1>\n      <ul>\n        {pokemons.map((pokemon, index) => (\n          <PokemonCard key={index} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Pokedex;",
                  "solvedContent": null
                },
                {
                  "name": "Search.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Search = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [filteredPokemons, setFilteredPokemons] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchPokemons = async () => {\n    fetch(\"https://pokedex.mimo.dev/api/pokemon\")\n      .then((response) => response.json())\n      .then((data) => setPokemons(data));\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  useEffect(() => {\n    if (input === \"\") {\n      setFilteredPokemons([]);\n    } else {\n      const filtered = pokemons.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(input.toLowerCase()),\n      );\n      setFilteredPokemons(filtered);\n    }\n  }, [input, pokemons]);\n\n  return (\n    <>\n      <h1>Search a Pokémon</h1>\n      <input\n        placeholder=\"Enter Pokémon name...\"\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <ul>\n        {filteredPokemons.map((pokemon) => (\n          <PokemonCard key={pokemon.name} pokemon={pokemon} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;",
                  "solvedContent": null
                },
                {
                  "name": "Search.css",
                  "codeLanguage": "css",
                  "content": "input {\n  font-family: 'Press Start 2P', sans-serif;\n}",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PokemonCard.css\";\n\nconst PokemonCard = ({ pokemon }) => {\n  return (\n    <Link to={`/pokemon?name=${pokemon.name}`}>\n      <div className=\"pokemon-card\">\n        <img\n          src={`https://raw.githubusercontent.com/getmimo/things-api/main/files/pokedex/sprites/master/sprites/pokemon/${pokemon.url\n            .split(\"/\")\n            .filter(Boolean)\n            .pop()}.png`}\n          alt={pokemon.name}\n        />\n        <h2>{pokemon?.name}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default PokemonCard;\n",
                  "solvedContent": null
                },
                {
                  "name": "PokemonCard.css",
                  "codeLanguage": "css",
                  "content": ".pokemon-card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 0px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pokemon-card img {\n  max-width: 150px;\n  margin-bottom: -20px;\n}\n\n.pokemon-card h2 {\n  font-size: small;\n}",
                  "solvedContent": null
                },
                {
                  "name": "Pokemon.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Pokemon = () => {\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const query = new URLSearchParams(useLocation().search);\n  const pokemonName = query.get(\"name\");\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      if (!pokemonName) return;\n\n      try {\n        const response = await fetch(\n          `https://pokedex.mimo.dev/api/pokemon/${pokemonName}`,\n        );\n        if (!response.ok) throw new Error(\"Pokémon not found\");\n\n        const data = await response.json();\n        setPokemon(data);\n        setError(null);\n      } catch (err) {\n        setPokemon(null);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPokemon();\n  }, [pokemonName]);\n\n  return (\n    <>\n      {loading && <p>Loading ..</p>}\n      {error && <p>Error ..</p>}\n      {pokemon && (\n        <div>\n          <h1>{pokemon.name}</h1>\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n          {pokemon.height && <p>Height: {pokemon.height}</p>}\n          {pokemon.weight && <p>Weight: {pokemon.weight}</p>}\n          {pokemon.abilities && (\n            <p>\n              <span>Abilities: </span>\n              {pokemon.abilities.map((ability) => ability.ability.name).join(\", \")}\n            </p>\n          )}\n          {pokemon.types && (\n            <p>\n              <span>Types: </span>\n              {pokemon.types.map((type) => type.type.name).join(\", \")}\n            </p>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pokemon;\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}