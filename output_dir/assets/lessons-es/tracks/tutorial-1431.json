{
  "tutorial": {
    "id": 1431,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Encapsulando objetos",
    "descriptionContent": "Aprende a identificar el código OOP y a pensar como un desarrollador creando objetos encapsulados",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10318,
        "title": "Introducción a OOP",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 92845,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Aprendamos sobre los diferentes estilos de codificación utilizados por los desarrolladores. Exploraremos la <strong>programación funcional</strong> y la <strong>programación orientada a objetos</strong>.</p></body></html>"
          },
          {
            "title": "FP vs OOP",
            "id": 92841,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Diferentes estilos de codificación también se conocen como <strong>paradigmas</strong>. Un estilo común se llama <strong>programación funcional</strong>, o FP por sus siglas en inglés.</p><p>En programación funcional, usamos muchas funciones y variables.</p><code version=\"2\" codelang=\"python\" name=\"fp.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getTotal\" class=\"title\" /><text value=\"(a, b)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + b\" /><text type=\"break\" /><text type=\"break\" /><text value=\"num1 = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"num2 = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"total = getTotal(num1, num2)\" /><text type=\"break\" /><text value=\"print(total)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"12\" /></options></interaction></interactions><output><content><text value=\"5\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>def</code> seguido de <code>getTotal</code>.</p></body></html>"
          },
          {
            "title": "FP 1",
            "id": 92840,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En el estilo FP, mantenemos los datos y la funcionalidad por separado. Pasamos datos a las funciones cada vez que queremos algo.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"distance = getDistance(mph, h)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"85\" /><option startIndex=\"88\" endIndex=\"89\" /><option startIndex=\"81\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>(</code> seguido de <code>mph</code> y finalmente <code>)</code>.</p></body></html>"
          },
          {
            "title": "FP 2",
            "id": 92839,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En la programación funcional, las funciones <strong>devuelven</strong> nuevos valores y luego utilizan esos valores en otra parte del código.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"distance = getDistance(mph, h)\" /><text type=\"break\" /><text value=\"print(distance)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"33\" /><option startIndex=\"96\" endIndex=\"104\" /></options></interaction></interactions><output><content><text value=\"120\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>return</code> seguido de <code>distance</code>.</p></body></html>"
          },
          {
            "title": "OOP 1",
            "id": 92838,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En <strong>programación orientada a objetos (OOP)</strong>, agrupamos datos y funcionalidad como propiedades y métodos dentro de objetos, como <code>Virtual_Pet</code> aquí.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;brown&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;rocky&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(rocky.name)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"144\" endIndex=\"149\" /><option startIndex=\"169\" endIndex=\"173\" /></options></interaction></interactions><output><content><text value=\"brown\" /><text type=\"break\" /><text value=\"rocky\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>rocky</code> seguido de <code>name</code>.</p></body></html>"
          },
          {
            "title": "OOP 2",
            "id": 92833,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La POO es útil para modelar objetos, sean de la vida real o no. Los objetos tienen propiedades y métodos que tratamos como una sola cosa, como <code>car</code> aquí.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  mileage = \" /><text value=\"12000\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self, miles)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.mileage += miles\" /><text type=\"break\" /><text type=\"break\" /><text value=\"tesla = Car()\" /><text type=\"break\" /><text value=\"tesla.drive(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(tesla.mileage)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"9\" /></options></interaction></interactions><output><content><text value=\"12100\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>class</code> seguido de <code>Car</code>.</p></body></html>"
          },
          {
            "title": "OOP 3",
            "id": 92836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En OOP, usamos métodos para <strong>actualizar</strong> los valores existentes de un objeto, como aquí donde usamos <code>eat()</code> para actualizar el valor de <code>hungry</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"62\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"65\" endIndex=\"70\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>self</code> seguido de <code>.</code> y luego <code>hungry</code>, <code>=</code>, <code>False</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 92832,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué es la programación orientada a objetos?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un estilo de programación donde agrupamos datos y funcionalidades relacionadas</item><item value=\"2\" correct=\"false\">Un estilo de programación donde mantenemos los datos y la funcionalidad separados</item></selection><p visible-if=\"wrong\">Un estilo de programación donde agrupamos datos y funcionalidades relacionadas.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 92831,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuándo usamos OOP?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Al agrupar datos y funcionalidad dentro de un objeto</item><item value=\"2\" correct=\"false\">Cuando queremos que las funciones devuelvan nuevos valores en lugar de actualizar propiedades</item></selection><p visible-if=\"wrong\">Al agrupar datos y funcionalidad dentro de un objeto.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 92863,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál será el valor de la propiedad <code>hungry</code> después de que llamemos al método <code>eat()</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"dog = Dog()\" /><text type=\"break\" /><text value=\"dog.eat()\" /><text type=\"break\" /><text value=\"print(dog.hungry);\" /></content><output><content><text value=\"False\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Verdadero</item><item value=\"2\" correct=\"true\">Falso</item></selection><p visible-if=\"wrong\">Asegúrese de elegir Falso.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 92829,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vamos a crear una alcancía virtual con POO. Primero, creamos una nueva clase llamada <code>Piggy</code> con una propiedad <code>value</code> establecida en 0.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>value</code> seguido de <code>=</code> y finalmente <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 92828,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A continuación, añade un método llamado <code>addMoney()</code> que acepte un parámetro llamado <code>amount</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"30\" /><option startIndex=\"31\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"45\" /><option startIndex=\"46\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"53\" /><option startIndex=\"53\" endIndex=\"54\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>def</code> seguido de <code>addMoney</code> y luego <code>(</code>, <code>self,</code>, <code>amount</code>, <code>)</code>, <code>:</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 92834,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ahora, hagamos que <code>addMoney()</code> actualice el valor con la suma del valor actual de <code>Piggy</code> y <code>amount</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"85\" endIndex=\"91\" /><option startIndex=\"59\" endIndex=\"63\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"69\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>self</code> seguido de <code>.</code> y luego <code>value</code>, <code>amount</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 92844,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pongamos $100 en nuestra alcancía llamando al método <code>addMoney()</code> de <code>Piggy</code> con <code>100</code> como argumento.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"myPiggy = Piggy()\" /><text type=\"break\" /><text value=\"myPiggy.addMoney(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"115\" endIndex=\"136\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>myPiggy.addMoney(100)</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 92852,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Finalmente, vamos a mostrar la propiedad <code>value</code> de <code>myPiggy</code> para ver si realmente se actualizó.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"myPiggy = Piggy()\" /><text type=\"break\" /><text value=\"myPiggy.addMoney(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(myPiggy.value)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"144\" endIndex=\"157\" /></interactions><output><content><text value=\"100\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>myPiggy.value</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 10320,
        "title": "Encapsulación",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Encapsulation",
            "id": 92859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En OOP, agrupamos datos y funciones relacionadas en el mismo objeto. A esto lo llamamos <strong>encapsulación</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Fido'\" class=\"string\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"True\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"9\" /><option startIndex=\"9\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>class</code> seguido de <code>Dog</code> y finalmente <code>:</code>.</p></body></html>"
          },
          {
            "title": "Non-encapsulated example 1",
            "id": 92856,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En FP, el código no está encapsulado. ¿Puedes explicar por qué este código no muestra encapsulación?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Los datos y la función no están agrupados juntos en un objeto</item><item value=\"2\" correct=\"false\">Los datos y la función no están relacionados</item></selection><p visible-if=\"wrong\">Los datos y la función no están agrupados juntos en un objeto.</p></body></html>"
          },
          {
            "title": "Non-encapsulated example 2",
            "id": 92857,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Podemos identificar código que no está bien encapsulado si los métodos y propiedades relacionados están en diferentes objetos. ¿Cómo podemos encapsular este código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"False\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Mueve <code>eat()</code> dentro de la clase <code>Dog</code></item><item value=\"2\" correct=\"false\">Haz que <code>Dog</code> y <code>eat</code> sean ambas funciones</item></selection><p visible-if=\"wrong\">Mueve <code>eat()</code> dentro de la clase <code>Dog</code>.</p></body></html>"
          },
          {
            "title": "Encapsulated example 1",
            "id": 92860,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En OOP, identificamos qué métodos y propiedades pertenecen juntos y deben ser añadidos a nuestros objetos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"'orange'\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"meow\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"'Meow'\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"&quot;gray&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;accelerating...&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Encapsulated example 2",
            "id": 92858,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Con la encapsulación, también tenemos métodos que utilizan las otras propiedades que pertenecen al objeto, como en este ejemplo <code>eat</code> accede a <code>hungry</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Fido'\" class=\"string\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"   \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"68\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"73\" /><option startIndex=\"73\" endIndex=\"79\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>self</code> seguido de <code>.</code> y finalmente <code>hungry</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 92855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué es la encapsulación?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Agrupar datos y funciones relacionadas en el mismo objeto</item><item value=\"2\" correct=\"false\">Agrupar datos relacionados en un objeto y sus funciones en otro</item></selection><p visible-if=\"wrong\">Agrupar datos y funciones relacionadas en el mismo objeto.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 92854,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Está encapsulado este código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"'red'\" class=\"string\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   self.on = \" /><text value=\"True\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sí</item><item value=\"2\" correct=\"false\">No, porque contiene una función</item></selection><p visible-if=\"wrong\">Asegúrese de elegir Sí.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 92853,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Está encapsulado este código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Mike'\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"'Hi there!'\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sí</item><item value=\"2\" correct=\"false\">No</item></selection><p visible-if=\"wrong\">Asegúrese de elegir Sí.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 92851,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Por qué este código no está encapsulado dentro de la clase <code>Laptop</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Laptop\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"turnOn\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"True\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>turnOn()</code> no está en la clase <code>Laptop</code> por lo que la función no es parte del objeto <code>Laptop</code></item><item value=\"2\" correct=\"false\"><code>turnOn</code> es una función y no una propiedad</item></selection><p visible-if=\"wrong\"><code>turnOn()</code> no está en la clase <code>Laptop</code> por lo que la función no es parte del objeto <code>Laptop</code>.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 92850,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cómo podemos encapsular este código?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Pon <code>base</code>, <code>height</code>, y <code>getArea()</code> en la misma clase</item><item value=\"2\" correct=\"false\">Pon solo <code>base</code> y <code>height</code> en la misma clase</item></selection><p visible-if=\"wrong\">Pon <code>base</code>, <code>height</code>, y <code>getArea()</code> en la misma clase.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 92849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Convierte este código no encapsulado en código POO. Primero, crea una clase llamada <code>Rectangle</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>class</code> seguido de <code>Rectangle:</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 92848,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Encapsulamos los datos y la función al darle a <code>Rectangle</code> las propiedades <code>base</code> y <code>height</code> y un método <code>getArea()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"99\" endIndex=\"102\" /><option startIndex=\"103\" endIndex=\"110\" /><option startIndex=\"110\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option startIndex=\"86\" endIndex=\"92\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>height</code> seguido de <code>def</code> y luego <code>getArea</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 92847,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A continuación, terminaremos el método <code>getArea()</code>. Añade <code>self.base</code>, <code>*</code>, y luego <code>self.height</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"151\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>self.base * self.height</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 92846,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En este punto, podemos eliminar el antiguo código FP. Llamemos al método <code>getArea()</code> del rectángulo para que podamos almacenar el resultado en una variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rect = Rectangle()\" /><text type=\"break\" /><text value=\"area = rect.getArea()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"126\" endIndex=\"130\" /><option startIndex=\"130\" endIndex=\"131\" /><option startIndex=\"131\" endIndex=\"138\" /><option startIndex=\"138\" endIndex=\"139\" /><option startIndex=\"139\" endIndex=\"140\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>rect</code> seguido de <code>.</code> y luego <code>getArea</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 92826,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mostremos el resultado en la consola para ver si es lo que esperamos.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rect = Rectangle()\" /><text type=\"break\" /><text value=\"area = rect.getArea()\" /><text type=\"break\" /><text value=\"print(area)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"141\" endIndex=\"146\" /><option startIndex=\"146\" endIndex=\"147\" /><option startIndex=\"147\" endIndex=\"151\" /><option startIndex=\"151\" endIndex=\"152\" /></options></interaction></interactions><output><content><text value=\"12\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>print</code> seguido de <code>(</code> y luego <code>area</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}