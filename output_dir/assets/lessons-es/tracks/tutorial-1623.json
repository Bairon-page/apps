{
  "tutorial": {
    "id": 1623,
    "version": 11,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Solicitudes POST",
    "descriptionContent": "Aprende cómo usar una solicitud POST para enviar datos a un servidor",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 11127,
        "title": "PUBLICAR",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 103320,
            "contentType": "interactive",
            "images": [
              {
                "id": "5d5e1f86-5b01-497f-8ee6-04ace8d2921f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Cuando se trata de métodos HTTP, podemos agruparlos de manera general en dos categorías.</p><p>Hay métodos que <em>solicitan</em> un dato o un comportamiento del servidor, como <code>GET</code>, y aquellos que <em>envían</em> datos al servidor.</p><img src=\"5d5e1f86-5b01-497f-8ee6-04ace8d2921f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "POST",
            "id": 103321,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>POST</code> es un método de solicitud que usamos para <em>enviar</em> nuevos datos al servidor, como un nuevo curso que Mimo quiere ofrecer.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>POST</code>.</p></body></html>"
          },
          {
            "title": "POST URL",
            "id": 103325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>`POST` se basa en una URL que contiene la dirección del servidor, junto con el tipo de recurso al que los nuevos datos están <em>relacionados</em>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"21\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>mimo.org</code>.</p></body></html>"
          },
          {
            "title": "POST URL 2",
            "id": 103332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La URL de esta solicitud <code>POST</code> nos dice que este nuevo dato debe guardarse bajo <code>courses</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"22\" endIndex=\"29\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>/</code> seguido de <code>courses</code>.</p></body></html>"
          },
          {
            "title": "POST URL Query Parameters",
            "id": 103333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A diferencia de <code>GET</code>, las solicitudes <code>POST</code> rara vez utilizan parámetros de consulta en su URL y, en su lugar, dependen del cuerpo de la solicitud.</p><p>El cuerpo de la solicitud contiene los datos que se envían al servidor, generalmente en formatos como JSON.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;languages&quot;\" class=\"string\" /><text value=\": [\" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"32\" /><option startIndex=\"86\" endIndex=\"87\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>{</code> seguido de <code>}</code>.</p></body></html>"
          },
          {
            "title": "Question: POST",
            "id": 103338,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Para qué usamos las solicitudes <code>POST</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Para enviar nuevos datos al servidor</item><item value=\"2\" correct=\"false\">Para recuperar datos del servidor</item></selection><p visible-if=\"wrong\">Para enviar nuevos datos al servidor.</p></body></html>"
          },
          {
            "title": "Question: POST URL",
            "id": 103339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cómo sabe el navegador a dónde enviar los datos en la solicitud <code>POST</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">A través de la dirección del servidor en la URL de la solicitud</item><item value=\"2\" correct=\"false\">Al leer los datos que la solicitud está enviando</item></selection><p visible-if=\"wrong\">A través de la dirección del servidor en la URL de la solicitud.</p></body></html>"
          },
          {
            "title": "Question: POST URL 2",
            "id": 103340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mirando esta URL, ¿a qué podría estar relacionada la información que estamos enviando?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un nuevo artículo enviado por alguien</item><item value=\"2\" correct=\"false\">Un nuevo usuario que se registró</item></selection><p visible-if=\"wrong\">Un nuevo artículo enviado por alguien.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 103342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codifica un método de solicitud HTTP que envíe nuevos datos a un servidor.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>POST</code>.</p></body></html>"
          },
          {
            "title": "Example: POST URL",
            "id": 103344,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Envía una solicitud <code>POST</code> a un servidor en <code>fakenews.com</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>POST</code>.</p></body></html>"
          },
          {
            "title": "Example: POST URL 2",
            "id": 103345,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A través de la URL de la solicitud <code>POST</code>, hazle saber al servidor que los datos que estás enviando son un nuevo artículo.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>/</code> seguido de <code>article</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 11128,
        "title": "Solicitud y Respuesta",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "POST Body",
            "id": 103326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>  Las solicitudes <code>POST</code> se parecen mucho a las solicitudes <code>GET</code> en Express.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"8\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>post</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2",
            "id": 103327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Al igual que con las solicitudes <code>GET</code>, también definimos el endpoint para las solicitudes <code>POST</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"9\" endIndex=\"17\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>\"/users\"</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy",
            "id": 132314,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>A diferencia de las solicitudes <code>GET</code> que tienen un cuerpo vacío, las solicitudes <code>POST</code><em>contienen</em> datos en su cuerpo de solicitud.</p><p>Podemos acceder al cuerpo del objeto de solicitud a través de <code>req.body</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"64\" /></options></interaction></interactions><output><content><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin24&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>req</code> seguido de <code>.body</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy",
            "id": 132315,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para permitir el acceso al cuerpo, necesitamos decirle a nuestra aplicación express que use <code>express.json</code>, un middleware incorporado.</p><p>Pronto cubriremos el middleware. Por ahora, sabe que nos ayuda a analizar los datos JSON entrantes, lo que nos permite trabajar con los cuerpos de las solicitudes.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"101\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin24&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>express.json()</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy",
            "id": 132316,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Recuerda que JSON representa un objeto de JavaScript. Una vez que lo analizamos, podemos acceder y trabajar con los datos en el cuerpo de la solicitud.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(username);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(email);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"96\" endIndex=\"104\" /><option startIndex=\"133\" endIndex=\"138\" /></options></interaction></interactions><output><content><text value=\"_crazyPumpkin24\" /><text type=\"break\" /><text value=\"mia@mimo.org\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>username</code> seguido de <code>email</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - Copy",
            "id": 132317,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Enviemos una respuesta de vuelta al cliente, tal como lo hacemos en las solicitudes <code>GET</code>, entregando datos como HTML, texto o JSON.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"75\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>res</code> seguido de <code>.</code> y finalmente <code>send</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - ",
            "id": 132319,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>El estado predeterminado si todo va según lo planeado y se crea o añade un nuevo elemento a la base de datos es <code>201 Created</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"87\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>.</code> seguido de <code>status(201)</code> y luego <code>.</code>, <code>send</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - Copy",
            "id": 132320,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Para crear un nuevo usuario, podríamos requerir ciertos parámetros, como un correo electrónico, que se envíen con la solicitud.</p><p>Si tenemos todos los datos y podemos agregar al usuario, enviamos <code>201 Created</code>. Si faltan datos, enviamos <code>400 Bad Request</code> con un mensaje de error.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"224\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"Email is required\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>400</code> seguido de <code>201</code>.</p></body></html>"
          },
          {
            "title": "POST Headers",
            "id": 103330,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Una solicitud <code>POST</code> tiene encabezados que proporcionan contexto adicional, como <code>Content-Type</code>, que nos indica el formato del cuerpo de la solicitud.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin24&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>Content-Type:</code> seguido de <code>application/json</code>.</p></body></html>"
          },
          {
            "title": "POST Headers 2",
            "id": 103329,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Puedes ver que el cuerpo de esta solicitud <code>POST</code> tiene el <code>Content-Type</code> de <code>application/json</code>.</p><p>Este es el caso para la mayoría de las solicitudes de API. Se utilizan otros formatos para cosas como datos de formularios o cargas de archivos.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin24&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"57\" endIndex=\"68\" /><option startIndex=\"68\" endIndex=\"69\" /><option startIndex=\"69\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>application</code> seguido de <code>/</code> y finalmente <code>json</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Body",
            "id": 103347,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Dónde almacenan las solicitudes <code>POST</code> los datos que envían al servidor?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">En el cuerpo de la solicitud</item><item value=\"2\" correct=\"false\">Solo en la URL, como valores de parámetros de consulta</item></selection><p visible-if=\"wrong\">En el cuerpo de la solicitud.</p></body></html>"
          },
          {
            "title": "Example: POST Body JSON",
            "id": 103354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crea un endpoint <code>POST</code> para <code>/users</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hello from the endpoint!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"3\" endIndex=\"4\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"9\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"/users\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Asegúrese de elegir <code>app</code> seguido de <code>.</code> y luego <code>post</code>, <code>\"/users\"</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Body 2",
            "id": 103348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué podría enviar esta `POST request al servidor?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy &gt;:(&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un comentario a un artículo, que contiene el texto del comentario y el autor</item><item value=\"2\" correct=\"false\">Los datos de un usuario, incluyendo el nombre de usuario y la descripción</item></selection><p visible-if=\"wrong\">Un comentario a un artículo, que contiene el texto del comentario y el autor.</p></body></html>"
          },
          {
            "title": "Question: POST Body JSON",
            "id": 103349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál es una opción popular para formatear los datos de una solicitud <code>POST</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JSON</item><item value=\"2\" correct=\"false\">HTTP</item></selection><p visible-if=\"wrong\">Asegúrese de elegir JSON.</p></body></html>"
          },
          {
            "title": "Question: POST Headers",
            "id": 103350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Cuál será el código de estado si se proporcionan todos los datos requeridos y la solicitud es exitosa?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>201 Created</code></item><item value=\"2\" correct=\"false\"><code>400 Bad Request</code></item></selection><p visible-if=\"wrong\"><code>201 Created</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Body 2",
            "id": 103353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Establece los códigos correctos.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"224\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>400</code> seguido de <code>201</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Headers",
            "id": 103355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Envía una respuesta junto con el código de estado correcto.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"87\" /><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Asegúrese de elegir <code>res</code> seguido de <code>.</code> y luego <code>status</code>, <code>(</code>, <code>201</code>, <code>)</code>, <code>.</code>, <code>send</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Headers 2",
            "id": 103351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>¿Qué nos dice el encabezado <code>Content-Type</code> de una solicitud <code>POST</code>?<br /></p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment\" /><text type=\"break\" /><text value=\"Host: fakenews.com\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy &gt;:(&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">El formato de los datos que estamos enviando al servidor</item><item value=\"2\" correct=\"false\">El formato de los datos en la base de datos del servidor</item></selection><p visible-if=\"wrong\">El formato de los datos que estamos enviando al servidor.</p></body></html>"
          }
        ]
      }
    ]
  }
}