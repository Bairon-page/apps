{
  "tutorial": {
    "id": 2010,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Informe de la Tienda de Regalos",
    "descriptionContent": "Usa tus conocimientos de operaciones con arrays para crear un informe de la tienda de regalos",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2010-icon-banner.svg",
    "chapters": [
      {
        "id": 12785,
        "title": "Informe de la Tienda de Regalos",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 115889,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En este proyecto, usarás tu conocimiento de los operadores de arrays de JavaScript, como `.reduce()`, `.map()`, y `.filter()`, para analizar los datos de ventas de una tienda de regalos recién abierta.\n\nNos vamos a centrar en analizar las ventas de la primera semana, así que primero vamos a crear una variable llamada `firstWeekSales` para almacenar un array que contenga solo los datos de ventas de la primera semana. Para practicar la escritura de sintaxis concisa, deberías usar una función en línea.\n\n1. Llama a la función de JavaScript apropiada en el array `sales` para generar un nuevo array que contenga solo los datos de ventas de la primera semana. Almacena tu resultado en `firstWeekSales`.\n2. Luego, `console.log` el texto `\"First Week Sales: \"` concatenado con `firstWeekSales` para verificar tu trabajo. Deberías tener solo 7 valores en tu nuevo array.\n\nEjemplo de salida:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 116143,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora, necesitamos crear un array correspondiente con los datos de clientes de la primera semana. Como se mencionó en el paso anterior, usaremos una función inline para practicar más.\n\n1. Crea una variable llamada `firstWeekCustomers` y usa una sintaxis similar al paso anterior para almacenar un array con los datos de clientes de los primeros 7 días.\n2. Como antes, usa `console.log` para mostrar el texto `\"First Week Customers: \"` concatenado con `firstWeekCustomers` para verificar tu trabajo. Deberías tener solo 7 valores en tu nuevo array.\n\nTu salida de ambos archivos debería ser la siguiente:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\nFirst Week Customers: 25,30,20,35,36,32,44\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 116144,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Simplifiquemos nuestra sintaxis incorporando funciones flecha. Debes mantener las mismas declaraciones de `console.log`.\n\n1. Convierte las dos funciones en línea de `.filter()` a funciones flecha.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter(function(element, index) {\n return index < 7;\n});\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 116145,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Tenemos un array con las cifras de ventas de la primera semana. Vamos a calcular su suma para encontrar el total de ventas semanales de la tienda de regalos.\n\n1. Crea una nueva variable llamada `firstWeekSalesSum`.\n2. Luego, llama a la función incorporada de JavaScript adecuada en el array `firstWeekSales` para calcular su suma. Almacena este valor en tu nueva variable `firstWeekSalesSum`. Deberías usar una arrow function.\n3. Finalmente, `console.log` el texto `\"First Week Sales Sum: \"` concatenado con la variable `firstWeekSalesSum` para verificar tu trabajo.\n\nTu salida debería ser:\n```\nFirst Week Sales: 455,505,340,780,690,880,900\nFirst Week Customers: 25,30,20,35,36,32,44\nFirst Week Sales Sum: 4550 \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 116147,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora realicemos la misma operación en `firstWeekCustomers` para encontrar el total de clientes de la primera semana. Nuevamente, deberías usar una función flecha para simplificar tu sintaxis.\n\n1. Crea una nueva variable llamada `firstWeekCustomersSum`.\n2. Luego, llama a la función de JavaScript adecuada en el array `firstWeekCustomers` para calcular su suma, y almacena este valor en tu nueva variable `firstWeekCustomersSum`. Deberías usar una función flecha.\n3. Finalmente, `console.log` el texto `\"First Week Customers Sum: \"` concatenado con la variable `firstWeekCustomersSum` para verificar tu trabajo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6",
            "id": 116148,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vamos a usar nuestros totales calculados para encontrar los promedios de ventas diarias y por cliente.\n\n1. Crea una variable llamada `firstWeekAverage` y calcula el promedio de ventas diarias usando `firstWeekSalesSum`.\n2. Luego, crea una variable llamada `firstWeekCustomerAvg` y calcula el promedio de ventas por cliente usando `firstWeekSalesSum` y `firstWeekCustomersSum`.\n3. Para verificar tu trabajo, `console.log` el texto `\"First Week Average: \"` concatenado con la variable `firstWeekAverage`.\n4. Finalmente, `console.log` el texto `\"First Week Customer Average: \"` concatenado con la variable `firstWeekCustomerAvg`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 116149,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "El dueño de la tienda de regalos ha solicitado algunos análisis más detallados para la primera semana. Les gustaría ver el promedio de ventas por cliente de cada día, etiquetado con el día de la semana correspondiente. Primero, vamos a crear el array de promedios diarios de ventas.\n\n1. Crea una nueva variable llamada `firstWeekDailyAverage`.\n2. Luego, llama a la función `.map()` en el array `firstWeekSales` para calcular el promedio de ventas por cliente de cada día, almacenando el nuevo array en `firstWeekDailyAverage`. Debes usar el valor del `index` del array para referenciar el array `firstWeekCustomers` y realizar tu cálculo (las ventas de cada día divididas por el número de clientes de ese día).\n2. Luego, `console.log` tu variable `firstWeekDailyAverage` resultante para verificar tu trabajo. No añadas ningún texto.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\nconsole.log(firstWeekDailyAverage);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8",
            "id": 116150,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ahora usemos `.map()` para etiquetar cada promedio diario.\n\n1. Primero, elimina la declaración `console.log` que registra `firstWeekDailyAverage`.\n2. A continuación, crea una variable llamada `labeled` y llama a `.map()` en la variable `firstWeekDailyAverage`. Tu función debe concatenar el día correspondiente de la semana (puedes usar el valor `index` para referenciar el array `daysofTheWeek`) con un espacio y el promedio de ese día redondeado a 2 decimales.\n3. Luego, `console.log` la variable `labeled`.\n\nPor ejemplo, tu array resultante podría contener un valor: `Monday 28.55`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nconsole.log(firstWeekDailyAverage);\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\nconsole.log(labeled);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To round a number, you can call `.toFixed()` with the number of decimals passed as a parameter."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 116152,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finalmente, combinemos los valores etiquetados en una cadena. Se considera una buena práctica hacer que nuestra salida sea lo más legible posible, por lo que cada valor debe estar separado por una coma y un espacio.\n\n1. Primero, elimina la declaración `console.log` que registra la variable `labeled`.\n2. A continuación, crea una variable llamada `labeledString`.\n3. Luego, llama a la función de JavaScript adecuada en el array `labeled` para concatenar los valores en una sola cadena almacenada en `labeledString`. Cada valor debe estar separado por una coma y un espacio.\n4. Finalmente, `console.log` tu nueva variable `labeledString` para verificar tu trabajo.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\n\n\n\n\n",
                  "solvedContent": "let sales = [455, 505, 340, 780, 690, 880, 900, 685, 835, 754];\nlet customers = [25, 30, 20, 35, 36, 32, 44, 45, 34, 15];\nlet daysOfTheWeek = [\"Monday\", \"Tuesday\", \"Wednesday\",\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nlet firstWeekSales = sales.filter((element, index) => index < 7);\nconsole.log(\"First Week Sales: \" + firstWeekSales);\n\nlet firstWeekCustomers = customers.filter((element, index) => index < 7);\nconsole.log(\"First Week Customers: \" + firstWeekCustomers);\n\nlet firstWeekSalesSum = firstWeekSales.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Sales Sum: \" + firstWeekSalesSum);\n\nlet firstWeekCustomersSum = firstWeekCustomers.reduce((prev, curr) => prev + curr);\nconsole.log(\"First Week Customers Sum: \" + firstWeekCustomersSum);\n\nlet firstWeekAverage = firstWeekSalesSum / 7;\nlet firstWeekCustomerAvg = firstWeekSalesSum / firstWeekCustomersSum;\nconsole.log(\"First Week Average: \" + firstWeekAverage);\nconsole.log(\"First Week Customer Average: \" + firstWeekCustomerAvg);\n\nlet firstWeekDailyAverage = firstWeekSales.map(function(element, index) {\n return (element / firstWeekCustomers[index]);\n});\n\nlet labeled = firstWeekDailyAverage.map(function(element, index) {\n return daysOfTheWeek[index] + \" \" + element.toFixed(2);\n});\n\nlet labeledString = labeled.reduce(function(prev, curr) {\n return prev + \", \" + curr;\n});\nconsole.log(labeledString);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}