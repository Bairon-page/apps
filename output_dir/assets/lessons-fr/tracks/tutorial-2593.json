{
  "tutorial": {
    "id": 2593,
    "version": 15,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Jeu de devinettes - Partie 1",
    "descriptionContent": "Crée ton propre jeu ! Dans cette première partie, nous allons poser les bases en élaborant la logique de jeu de base. Il s'agit de définir les règles et de laisser les joueurs tenter leur chance.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2593-icon-banner.svg",
    "chapters": [
      {
        "id": 14367,
        "title": "Apprendre",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro",
            "id": 127993,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenue dans le **Jeu de Devinettes**, où tu vas créer ton propre jeu. Le *Jeu de Devinettes*, comme tu l'as deviné, consiste à deviner le bon numéro.\n\n1. Commence par créer la structure de base d'un document HTML. Inclue `<!doctype HTML>`, `html`, `head`, et `body` tags.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title",
            "id": 127994,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoute un titre pour ta page web. Que dirais-tu de *Jeu de Devinettes* ? Ou choisis quelque chose que tu préfères !\n\n1. Ajoute des balises `title` dans la section `head`.\n2. Ajoute un titre entre les balises `title` que tu viens d'ajouter.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Container",
            "id": 127995,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoutons un conteneur que nous utiliserons pour afficher le contenu du jeu.\n\n1. Ajoute un conteneur `<div>` pour le jeu à l'intérieur de la section `<body>`.\n2. Pour le `div`, définis la `class` à `\"container\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Title and description",
            "id": 127996,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, ajoutons un en-tête et un paragraphe au conteneur.\n\n1. Ajoute un élément `h1` pour afficher le nom du jeu.\n2. Ajoute un paragraphe pour expliquer les règles du jeu. (Par exemple, `Devine un nombre entre 1 et 100`.)",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Input and button",
            "id": 127997,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pour permettre à tes joueurs d'interagir avec le jeu, nous aurons besoin d'éléments interactifs.\n\n1. Ajoute un champ `<input>` où les joueurs taperont leurs suppositions. Défini son type à `\"number\"` et donne-lui l'id `\"guess\"`.\n2. Ajoute un bouton pour que les joueurs soumettent leurs suppositions.\n3. Enfin, ajoute un paragraphe vide avec l'id `\"feedback\"` que nous utiliserons pour les retours.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Testing JavaScript",
            "id": 128876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous avons tout le HTML dont nous avons besoin. Avant de passer à l'écriture de notre logique, nous devrions essayer de voir si nous avons correctement lié l'élément JavaScript.\n\n1. Ajoute une instruction `console.log` pour imprimer quelque chose dans la console.\n2. Dans le fichier HTML, lie le fichier JS au fichier HTML en ajoutant `<script src=\"script.js\"></script>` juste avant la balise de fermeture `</body>`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "console.log(\"Hello!\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Interaction",
            "id": 127998,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, commençons à ajouter la logique au jeu.\n\n1. Ajoute une fonction vide `checkGuess` dans le fichier JS.\n2. Retourne dans notre fichier HTML et appelle la fonction avec un clic sur le bouton ajouté.\n3. Assure-toi que l'instruction `console.log` pour imprimer quelque chose dans la console est maintenant exécutée lors du clic sur le bouton.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button>Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "console.log(\"Hello!\");",
                  "solvedContent": "function checkGuess() {\n  console.log(\"Hello!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "References",
            "id": 128000,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans notre fonction `checkGuess`, nous devons obtenir des références aux éléments d'entrée et de retour.\n\n1. Crée deux variables appelées `inputElement` et `feedbackElement`.\n2. Utilise `document.getElementById()` avec les ids corrects pour obtenir des références aux deux éléments.\n3. Si tu le souhaites, supprime l'instruction d'impression d'avant.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  console.log(\"Hello!\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById('guess');\n  const feedbackElement =  document.getElementById(\"feedback\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Guessing",
            "id": 128001,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, extrayez la valeur du champ de saisie, qui représente la supposition.\n\n1. Utilisez `.value` pour accéder à la valeur de `inputElement`.\n2. Enregistrez la valeur dans une nouvelle variable appelée `guess`.\n\nLe code ajouté devrait ressembler à ceci : `let guess = inputElement.value;`",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n}",
                  "solvedContent": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Random number",
            "id": 128002,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous avons obtenu la supposition du joueur, mais ce qui manque encore, c'est le nombre aléatoire que nous voulons que le joueur devine. JS nous permet de le faire avec une ligne qui peut sembler un peu compliquée au début, mais reste avec nous.\n\n1. En haut du fichier, en dehors de la fonction, ajoute le code suivant :\n   ```JavaScript\n   let randomNumber = Math.floor(Math.random() * 100) + 1;\n   ```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}"
                }
              ],
              "hints": [
                {
                  "title": "What does this code do?",
                  "content": "Math.random() generates a decimal between 0 (inclusive) and 1 (exclusive). Multiplying by 100 gives a range from 0 to just under 100. Math.floor() rounds this down to a whole number between 0 and 99, and adding 1 shifts this range to between 1 and 100."
                }
              ]
            }
          },
          {
            "title": "Comparing",
            "id": 128003,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous avons un nombre aléatoire, et nous avons une supposition. Nous pouvons maintenant comparer la supposition avec le nombre aléatoire. Commençons par le bloc *if else*.\n\n1. À l'intérieur de la fonction, en dessous de la variable `guess`, ajoute un bloc `if` pour comparer si `guess` est égal à `randomNumber`.\n2. Ajoute un bloc `else if` pour vérifier si `guess` est inférieur à `randomNumber`.\n3. Enfin, ajoute un bloc `else` pour gérer le dernier cas restant (`guess` étant supérieur à `randomNumber`.)",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (randomNumber == guess){\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #1",
            "id": 128004,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pour donner à notre joueur le bon retour d'information, à l'intérieur des blocs de code de l'instruction conditionnelle, nous voulons modifier le `feedbackElement` en conséquence.\n\n1. À l'intérieur du bloc `if`, définis le `innerHTML` du `feedbackElement` à un message de succès pour indiquer que le joueur a deviné le nombre correctement !\n2. Utilise `feedbackElement.style.color` et attribue-lui la couleur `\"green\"` pour indiquer davantage le succès.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess === randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Feedback #2",
            "id": 128005,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Tu voudras probablement aussi informer le joueur si la supposition était trop basse ou trop haute. Faisons cela en donnant le retour d'information dans les blocs `else if` et `else`.\n\n1. Défini `feedbackElement.innerHTML` sur soit `\"Too low! Try again.\"` ou `\"Too high! Try again.\"`.\n2. Change la couleur de `feedbackElement` en rouge dans ces cas.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n\n  } else {\n   \n  }\n}",
                  "solvedContent": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.textContent = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Stylesheet",
            "id": 128006,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "En dernière étape, ajoutons une feuille de style.\n\n1. Lien vers la feuille de style `style.css` à l'intérieur de la balise `head`.\n2. Ajoute du style au jeu comme tu le souhaites.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Guessing Game</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>Guessing Game</h1>\n      <p>Guess a number between 1 and 100</p>\n      <input type=\"number\" id=\"guess\">\n      <button onclick=\"checkGuess()\">Submit Guess</button>\n      <p id=\"feedback\"></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: gold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n\n.container {\n    background-color: white;\n    padding: 40px;\n    border-radius: 8px;\n    box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.1);\n    text-align: center;\n    width: 320px;\n    max-width: 90%;\n}\n\ninput {\n    width: 80%;\n    padding: 12px;\n    font-size: 24px;\n    margin-bottom: 12px;\n}\n\nbutton {\n    width: 100%;\n    padding: 12px;\n    font-weight: bold;\n    background-color: blue;\n    border: 2px solid blue;\n    color: white;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: white;\n    color: blue;\n}\n"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let randomNumber = Math.floor(Math.random() * 100) + 1;\n\nfunction checkGuess() {\n  const inputElement = document.getElementById(\"guess\");\n  const feedbackElement = document.getElementById(\"feedback\");\n  const guess = inputElement.value;\n  if (guess == randomNumber) {\n    feedbackElement.innerHTML = \"Congratulations!\";\n    feedbackElement.style.color = \"green\";\n  } else if (guess < randomNumber) {\n    feedbackElement.innerHTML = \"Too low! Try again.\";\n    feedbackElement.style.color = \"red\";\n  } else {\n    feedbackElement.innerHTML = \"Too high! Try again.\";\n    feedbackElement.style.color = \"red\";\n  }\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}