{
  "tutorial": {
    "id": 3093,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "useState",
    "descriptionContent": "useState",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15384,
        "title": "useState",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 135388,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Explorons comment gérer l'état en utilisant le hook <code>useState</code>, en nous concentrant sur des concepts avancés tels que les mises à jour fonctionnelles et le regroupement des mises à jour d'état.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 135393,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La façon la plus simple de mettre à jour l'état est de référencer directement sa valeur actuelle.</p><p>Par exemple, nous pouvons utiliser la variable d'état existante pour calculer la nouvelle valeur et la passer à la fonction de mise à jour.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" SmashCounter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./SmashCounter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"SmashCounter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"SmashCounter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" SmashCounter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [smashPoints, setSmashPoints] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" addSmash = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setSmashPoints(smashPoints + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Hulk Smash Points: {smashPoints}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{addSmash}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Add Smash Point!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" SmashCounter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"156\" endIndex=\"170\" /><option startIndex=\"171\" endIndex=\"182\" /><option startIndex=\"183\" endIndex=\"186\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>setSmashPoints</code> suivi de <code>smashPoints</code> et enfin <code>+ 1</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135389,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les mises à jour fonctionnelles garantissent que React utilise toujours l'état le plus récent, même lors de mises à jour rapides.</p><p>Au lieu de se fier à la variable d'état actuelle, nous passons une fonction au <em>updater</em>, qui reçoit l'état précédent comme argument.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" SmashCounter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./SmashCounter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"SmashCounter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"SmashCounter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" SmashCounter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [smashPoints, setSmashPoints] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" addSmash = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setSmashPoints(\" /><text value=\"(\" /><text value=\"prevPoints\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevPoints + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Hulk Smash Points: {smashPoints}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{addSmash}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Add Smash Point!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" SmashCounter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"171\" endIndex=\"183\" /><option startIndex=\"184\" endIndex=\"186\" /><option startIndex=\"187\" endIndex=\"201\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>(prevPoints)</code> suivi de <code>=&gt;</code> et enfin <code>prevPoints + 1</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 135390,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les appels multiples à <code>setState</code> à l'intérieur du même gestionnaire d'événements sont regroupés en un seul re-rendu.<br /><br /></p><p>Le regroupement des mises à jour d'état aide React à optimiser pour un seul re-rendu pour plus d'efficacité.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" BasketballScore \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./BasketballScore&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"BasketballScore\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"BasketballScore.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" BasketballScore = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [score, setScore] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" increaseScore = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setScore(\" /><text value=\"(\" /><text value=\"prevScore\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevScore + \" /><text value=\"2\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"    setScore(\" /><text value=\"(\" /><text value=\"prevScore\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevScore + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Basketball Score: {score}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{increaseScore}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Score Basket + Free Throw!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" BasketballScore;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"152\" endIndex=\"160\" /><option startIndex=\"124\" endIndex=\"137\" /><option startIndex=\"196\" endIndex=\"204\" /><option startIndex=\"327\" endIndex=\"340\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>increaseScore</code> suivi de <code>setScore</code> puis <code>setScore</code>, <code>increaseScore</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 135391,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Tu pourrais vouloir utiliser une valeur d'état comme un getter, en contournant le setter. Nous pouvons omettre le setter si nous ne voulons jamais mettre à jour une variable d'état.</p><p>Utilise un <code>_</code> à la place du setter.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Admin \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Admin&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Admin\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Admin.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" UserRole = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [role, _] = useState(\" /><text value=\"&quot;Admin&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"User Role: {role}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" UserRole;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"83\" /><option correct=\"false\"><content><text value=\"setRole\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>_</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 135394,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bien que ce soit une approche valide, si tu sais que la valeur ne changera pas, envisage d'utiliser une constante simple au lieu d'une variable d'état.</p><p>Utilise un <code>_</code> à la place du setter.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Admin \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Admin&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Admin\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Admin.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" UserRole = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" role = \" /><text value=\"&quot;Admin&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"User Role: {role}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" UserRole;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"60\" /><option startIndex=\"61\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"67\" /><option startIndex=\"68\" endIndex=\"75\" /><option startIndex=\"75\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>const</code> suivi de <code>role</code> puis <code>=</code>, <code>\"Admin\"</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 135392,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons également utiliser une fonction pour définir l'état initial avec <code>useState</code>. Cela est pratique lors du calcul de la valeur de l'état initial.</p><p>Dans ce cas, nous sélectionnons un caractère aléatoire dans la liste des caractères passés via les props.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" CharacterSelector \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./CharacterSelector&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" characters = [\" /><text value=\"&quot;Thor&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Loki&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Hela&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Odin&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"CharacterSelector\" class=\"name\" /><text value=\" \" /><text value=\"characters\" class=\"attr\" /><text value=\"=\" /><text value=\"{characters}\" class=\"string\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"CharacterSelector.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" CharacterSelector = \" /><text value=\"(\" /><text value=\"{ characters }\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [character, _] = useState(\" /><text type=\"break\" /><text value=\"    \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" characters[\" /><text value=\"Math\" class=\"built_in\" /><text value=\".floor(\" /><text value=\"Math\" class=\"built_in\" /><text value=\".random() * characters.length)],\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Today's hero is: {character}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" CharacterSelector;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"115\" endIndex=\"123\" /><option startIndex=\"123\" endIndex=\"124\" /><option startIndex=\"196\" endIndex=\"197\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>useState</code> suivi de <code>(</code> et enfin <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 135652,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Utilise les mises à jour fonctionnelles dans l'état pour t'assurer d'utiliser toujours la dernière valeur d'état.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" ClickCounter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./ClickCounter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"ClickCounter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"ClickCounter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" ClickCounter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [count, setCount] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" increment = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setCount(\" /><text value=\"(\" /><text value=\"prevCount\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevCount + \" /><text value=\"2\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Times clicked: {count}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{increment}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Click me!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" ClickCounter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"155\" endIndex=\"164\" /><option startIndex=\"169\" endIndex=\"178\" /><option correct=\"false\"><content><text value=\"count\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>prevCount</code> suivi de <code>prevCount</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 135653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lequel des énoncés suivants est vrai lors de l'utilisation des mises à jour fonctionnelles dans le hook <code>useState</code> ?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ils s'assurent que l'état le plus récent est utilisé</item><item value=\"2\" correct=\"false\">Ils provoquent toujours plusieurs re-rendus</item><item value=\"3\" correct=\"false\">Ils ne permettent pas d'accéder à l'état précédent</item><item value=\"4\" correct=\"false\">Ils sont moins efficaces que les mises à jour directes</item></selection><p visible-if=\"wrong\">Ils s'assurent que l'état le plus récent est utilisé.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 135654,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Appelle la fonction pour regrouper plusieurs mises à jour d'état afin d'assurer un re-rendu efficace.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" StockTracker \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./StockTracker&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"StockTracker\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"StockTracker.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" StockTracker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [stock, setStock] = useState(\" /><text value=\"10\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" updateStock = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setStock(\" /><text value=\"(\" /><text value=\"prevStock\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevStock - \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"    setStock(\" /><text value=\"(\" /><text value=\"prevStock\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevStock - \" /><text value=\"3\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Stock Remaining: {stock}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{updateStock}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Sell multiple items\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" StockTracker;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"322\" endIndex=\"333\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>updateStock</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 135655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est l'avantage de regrouper les mises à jour d'état dans le même gestionnaire d'événements ?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il minimise le nombre de re-rendus</item><item value=\"2\" correct=\"false\">Il crée plusieurs phases de rendu</item><item value=\"3\" correct=\"false\">Cela conduit toujours à des problèmes de performance</item><item value=\"4\" correct=\"false\">Il enregistre automatiquement les mises à jour d'état dans la console</item></selection><p visible-if=\"wrong\">Il minimise le nombre de re-rendus.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 135656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Utilise <code>useState</code> avec une fonction pour calculer efficacement les valeurs d'état initiales.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" NumberSelector \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./NumberSelector&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"NumberSelector\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"NumberSelector.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" NumberSelector = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [selectedNumber, _] = useState(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" \" /><text value=\"Math\" class=\"built_in\" /><text value=\".round(\" /><text value=\"Math\" class=\"built_in\" /><text value=\".random() * \" /><text value=\"100\" class=\"number\" /><text value=\"));\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Random Number: {selectedNumber}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" NumberSelector;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"112\" endIndex=\"113\" /><option startIndex=\"113\" endIndex=\"114\" /><option startIndex=\"115\" endIndex=\"117\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>(</code> suivi de <code>)</code> et enfin <code>=&gt;</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 135657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment peux-tu définir l'état initial en utilisant <code>useState</code> avec une fonction ?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Passer une fonction à <code>useState</code> qui calcule la valeur initiale</item><item value=\"2\" correct=\"false\">Attribuer directement une valeur constante à l'intérieur du composant</item><item value=\"3\" correct=\"false\">Utilise la fonction <code>setState</code></item><item value=\"4\" correct=\"false\">Utilise un hook <code>useMemo</code></item></selection><p visible-if=\"wrong\">Passer une fonction à <code>useState</code> qui calcule la valeur initiale.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 135658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Évite d'utiliser le setter d'état si la valeur ne changera pas, en utilisant une constante à la place.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" PlanetInfo \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./PlanetInfo&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"PlanetInfo\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"PlanetInfo.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" PlanetInfo = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [planet, _] = useState(\" /><text value=\"&quot;Earth&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Home Planet: {planet}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" PlanetInfo;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"86\" endIndex=\"87\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>_</code>.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 135659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pourquoi contournerais-tu complètement l'utilisation de la fonction de définition d'état ?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Si une variable d'état est constante et ne change pas</item><item value=\"2\" correct=\"false\">Pour augmenter la vitesse de rendu en supprimant l'état</item><item value=\"3\" correct=\"false\">Les variables d'état ne peuvent pas être utilisées dans les composants fonctionnels</item><item value=\"4\" correct=\"false\">C'est une erreur et elle doit être évitée</item></selection><p visible-if=\"wrong\">Si une variable d'état est constante et ne change pas.</p></body></html>"
          }
        ]
      }
    ]
  }
}