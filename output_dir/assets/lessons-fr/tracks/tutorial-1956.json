{
  "tutorial": {
    "id": 1956,
    "version": 7,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Livres de bibliothèque",
    "descriptionContent": "Pratique les objets JavaScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1956-icon-banner.svg",
    "chapters": [
      {
        "id": 12600,
        "title": "Livres de bibliothèque",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 113950,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans ce projet, nous allons créer et interagir avec deux objets JavaScript sur le thème du \"livre\". Commençons par le premier objet !\n\n1. Tout d'abord, déclare un nouvel objet JavaScript et assigne-le à une variable nommée `book1`. Utilise `const` pour créer la variable.\n2. Ensuite, crée une propriété `title` et définis sa valeur à `\"Pride and Prejudice\"`.\n3. Enfin, crée une propriété `author` et définis sa valeur à `\"Jane Austen\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to declare a JavaScript object, you can use curly-brace notation, like so: \n\n```\nconst object1 = {\n   property1: \"Blue\",\n   property2: \"Medium\"\n};\n```"
                }
              ]
            }
          },
          {
            "title": "Step 2",
            "id": 114012,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Confirmons que nous avons créé l'objet `book1` et correctement défini ses propriétés. Une fois terminé, tu devrais voir le titre et l'auteur de `book1` affichés dans la console.\n\n1. Juste après la déclaration de l'objet `book1`, écris une instruction `console.log` qui affiche le `title` de `book1` suivi du texte `\" by \"` et de son `author`. N'oublie pas d'ajouter un espace avant et après `by`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};\nconsole.log(book1.title + \" by \" + book1.author);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 114013,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Les livres ont beaucoup plus de propriétés que simplement `title` et `author`. Par exemple, le nombre de pages, son temps de lecture moyen, ou le nombre de copies disponibles. Ajoutons quelques propriétés supplémentaires à `book1`.\n\n1. Ajoute une propriété `pages` avec la valeur numérique `432`.\n2. Ensuite, ajoute une propriété `avgTime` contenant le texte `\"7 Hours\"`.\n3. Enfin, ajoute une propriété `copies` avec la valeur numérique `3`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n};\nconsole.log(book1.title + \" by \" + book1.author);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 114014,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vérifions que nous pouvons accéder à nos propriétés nouvellement créées et les enregistrer dans la console.\n\n1. Écris une instruction `console.log` qui enregistre la propriété `pages` de `book1` suivie d'un deux-points ( `:`, n'oublie pas l'espace !) et de la propriété `avgTime`.\n2. Ensuite, écris une instruction `console.log` qui enregistre la propriété `copies` suivie du texte `\" copies available\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 114015,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons une propriété pour suivre le nombre d'exemplaires disponibles, implémentons une fonction pour emprunter un exemplaire et modifier de manière appropriée la propriété `copies`.\n\n1. Tout d'abord, déclare une méthode d'objet nommée `checkOut` qui ne prend aucun paramètre.\n2. Ensuite, dans le corps de cette fonction, fais en sorte que le code accède à la propriété `copies` et la diminue de `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To access an object property from within the object, you need to use the keyword `this`."
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 114019,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, implémentons une méthode d'objet pour enregistrer le retour d'un exemplaire lorsqu'un lecteur rend un livre donné.\n\n1. Déclare et implémente une fonction `checkIn` de manière similaire à la méthode `checkOut` que tu viens d'écrire.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 114020,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il est temps de tester nos nouvelles méthodes d'objet !\n\n1. Juste après les instructions `console.log`, appelle la fonction `checkOut` de `book1` puis `console.log` le nombre de copies disponibles de `book1`.\n2. Ensuite, appelle la fonction `checkIn` de `book1` puis `console.log` le nombre de copies disponibles de `book1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8",
            "id": 114018,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Les objets sont faciles à manipuler et à réutiliser ! Créons un deuxième objet sur le thème du \"livre\" et accédons à ses propriétés et méthodes.\n\n1. Tout d'abord, copie l'objet `book1` dans un nouvel objet nommé `book2`. Cet objet doit venir après l'objet `book1`, mais avant les déclarations `console.log` et les appels de méthode d'objet. Utilise `const` pour le créer.\n2. Ensuite, modifie le contenu de l'objet `book2` pour refléter \"The Old Man and the Sea\" par \"Ernest Hemingway\", qui fait 127 pages et devrait prendre 3 heures à lire. Il y a 2 exemplaires dans le système de bibliothèque et il devrait également avoir la même fonctionnalité de \"check in/out\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 9",
            "id": 114021,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vérifions que nous pouvons utiliser l'objet `book2` de la même manière que nous pouvions utiliser l'objet `book1`.\n\n1. Modifie les références de code pour les instructions `console.log` et les appels de méthode d'objet pour faire référence à ton nouvel objet `book2`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book2.title + \" by \" + book2.author);\nconsole.log(book2.pages + \": \" + book2.avgTime);\nconsole.log(book2.copies + \" copies available\");\nbook2.checkOut();\nconsole.log(book2.copies);\nbook2.checkIn();\nconsole.log(book2.copies);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}