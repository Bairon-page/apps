{
  "tutorial": {
    "id": 1740,
    "version": 17,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Programme de réception",
    "descriptionContent": "Apprends à utiliser les boucles pour créer un programme de reçu client",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1740-icon-banner.svg",
    "chapters": [
      {
        "id": 11608,
        "title": "Programme de réception",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Setup Element Identifiers",
            "id": 106886,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilisons nos connaissances sur les boucles, les tableaux et les fonctions pour traiter des données complexes et créer un résumé des reçus clients.\n\nAfin de remplir le tableau récapitulatif avec des données, nous avons ajouté des identifiants d'éléments dans tout le HTML.\n- La ligne d'en-tête du tableau contiendra les noms des clients et devrait avoir des `id` de `customer0`, `customer1`, `customer2`.\n- La première ligne de données du tableau contiendra la liste des articles des reçus et devrait avoir des `id` de `receipt0`, `receipt1`, `receipt2`.\n- La deuxième ligne de données du tableau contiendra le total des reçus et devrait avoir des `id` de `total0`, `total1`, `total2`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  // Your code starts here\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Loop through Customers",
            "id": 106876,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, nous allons travailler sur l'analyse des données. Dans la fonction `populateTable()`, nous allons commencer par écrire une boucle for pour parcourir le tableau `customers`. Nomme la variable d'itération `i`.\n\n1. Écris une boucle for pour itérer de 0 jusqu'à l'index final du tableau `customers`.\n2. Dans le corps de la boucle for, utilise `console.log()` pour afficher la variable d'itération `i` afin de vérifier que ta boucle fonctionne.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Customer & Receipt Data",
            "id": 106877,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "À chaque itération, fais en sorte que ton code enregistre les données correspondantes `customers` et `receipts` dans des variables.\n\n1. Tout d'abord, à l'intérieur de la nouvelle boucle, supprime l'instruction `console.log()` que tu as ajoutée à l'étape précédente.\n2. À l'intérieur de la boucle, crée une variable `customer` et assigne-lui la valeur de l'élément actuel de `customers` en utilisant la notation par crochets.\n3. Crée une variable `receipt` et assigne-lui la valeur de l'élément actuel de `receipts` en utilisant la notation par crochets.\n4. Enfin, utilise `console.log()` pour afficher la variable `customer`, et à la ligne suivante, utilise `console.log()` pour afficher la variable `receipt`, afin de vérifier que tu as bien itéré à travers chaque tableau.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    console.log(i);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an array's elements using bracket syntax: `array[index]`. Remember that arrays are indexed starting at 0."
                }
              ]
            }
          },
          {
            "title": "Setup Receipt Processing",
            "id": 106878,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Notre programme devra traiter les données de reçus et de prix. Dans la boucle `for`, en dessous des variables `customer` et `receipt`, configure deux autres variables : une pour stocker une chaîne de caractères des articles du reçu et une autre pour stocker le total du reçu.\n\n1. Tout d'abord, supprime les déclarations `console.log()` que tu as ajoutées à l'étape précédente.\n2. Crée une variable `receipt_list` et assigne-lui une chaîne vide. Assure-toi d'utiliser `let` et non `const`, car la valeur sera réassignée plus tard.\n3. Crée une variable `sum` et assigne-lui une valeur de 0. Assure-toi que cette variable est également une variable `let`.\n4. Enfin, affiche la variable `receipt_list` suivie de la variable `sum` dans la console pour t'assurer que ta boucle fonctionne correctement.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    console.log(customer);\n    console.log(receipt);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An empty string is `\"\"`."
                }
              ]
            }
          },
          {
            "title": "Loop through Receipt Data",
            "id": 106879,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Traduisons maintenant les données du reçu. Écris une boucle for pour itérer à travers la variable `receipt` que tu as sauvegardée précédemment. Nomme la variable d'itération `j`.\n\n1. Tout d'abord, supprime les déclarations `console.log()` que tu as ajoutées à l'étape précédente.\n2. Après avoir initialisé la variable `sum`, écris une boucle for pour itérer de 0 à l'index final de la variable `receipt`. N'oublie pas d'utiliser `j` comme variable d'itération.\n3. À l'intérieur du corps de la boucle for, utilise `console.log` pour afficher la variable d'itération afin de vérifier que ta boucle fonctionne.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n background-color: #273C75;\n color: white;\n}\n\n#project {\n font-family: sans-serif;\n}\n\n.bold {\n font-weight: bold;\n}\n\nh3 {\n margin-top: 20%;\n}\n\ntable {\n border-collapse: collapse;\n font-size: 10px;\n}\n\ntr,\nth,\ntd {\n border: 5px solid white;\n padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `.length` property when writing the for loop to ensure it works for any length array."
                }
              ]
            }
          },
          {
            "title": "Save Receipt Data",
            "id": 106880,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans la boucle `for` que tu as écrite pour parcourir le contenu de `receipt`, enregistre le nom de l'article et son prix dans des variables à chaque itération.\n\n1. Tout d'abord, supprime l'instruction `console.log()` que tu as ajoutée à l'étape précédente.\n2. Crée une variable `item` et enregistre les données correspondantes de `receipt` (en utilisant la variable d'itération de la boucle `for`).\n3. Crée une variable `price` et enregistre les données correspondantes de `prices` (en utilisant `item` comme index).\n4. Enfin, utilise `console.log()` pour afficher les deux variables (`item` et `price`) afin de vérifier que tu parcours correctement chaque tableau. Affiche chaque variable dans une instruction distincte.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      console.log(j);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Build the Receipt List",
            "id": 106881,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que les données sont décomposées, construis la liste des articles du reçu. À chaque itération de la deuxième boucle `for`, concatène l'`item` avec la variable `receipt_list` et un caractère de nouvelle ligne ( `\"\\n\"` ).\n\n1. Tout d'abord, supprime les déclarations `console.log()` que tu as ajoutées à l'étape précédente.\n2. Assigne à `receipt_list` la valeur de `receipt_list` concaténée avec l'`item` et un caractère de nouvelle ligne ( `\"\\n\"` ).\n3. Enfin, affiche la variable `receipt_list` dans la console pour t'assurer que ta boucle fonctionne correctement.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      console.log(item);\n      console.log(price);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To concatenate item and add a new line character, write \n```javascript\n  receipt_list += item + \"\\n\";\n```"
                }
              ]
            }
          },
          {
            "title": "Sum the Prices",
            "id": 106882,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, ajoute le `price` de l'article à la variable sum. Puis, en dehors de la deuxième boucle for, utilise `console.log()` pour afficher les variables `receipt_list` et `sum`.\n\n1. D'abord, supprime l'instruction `console.log()` que tu as ajoutée à l'étape précédente.\n2. Assigne à `sum` la valeur de `sum` plus le `price`.\n3. En dehors de la deuxième boucle for, utilise `console.log()` pour afficher la variable `receipt_list` suivie de la variable `sum`. Utilise deux instructions `console.log` pour cela.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      console.log(receipt_list);\n    }\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Plan out Table Population",
            "id": 106884,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous pouvons maintenant remplir le tableau. Nous allons le faire avec une fonction appelée `setElementText` qui prend deux paramètres : `id` et `text`.\n\nPlanifions d'abord le ciblage des éléments et les valeurs à remplir.\n\n1. Tout d'abord, supprime les instructions `console.log()` que tu as ajoutées à l'étape précédente.\n2. Écris des instructions `console.log` (après la deuxième boucle for, mais toujours à l'intérieur de la première boucle for) pour enregistrer l'élément ciblé `id` ainsi que les données que nous voulons remplir. Regarde ci-dessous le code nécessaire pour le faire.\n3. Complète cela pour les variables `customer`, `receipt_list`, et `sum`. Au total, tu devrais avoir 9 messages `console.log` une fois la boucle terminée.\n\n```javascript\nconsole.log(\"customer\" + i.toString(), customer);\nconsole.log(\"receipt\" + ...\nconsole.log(\"total\" + ...\n```\nAssure-toi d'utiliser les chaînes \"customer\", \"receipt\", et \"total\" pour leurs journaux respectifs, comme montré ci-dessus.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(receipt_list);\n    console.log(sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can consult index.html if you have trouble remembering the identifier naming conventions.\nTo convert an integer to a string, you can use the built-in JavaScript function `toString()`."
                }
              ]
            }
          },
          {
            "title": "Populate Receipt List & Sum",
            "id": 106885,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, utilise la fonction `setElementText` pour remplir le nom du client (à partir de la variable `customer`), les articles (à partir de la variable `receipt_list`) et le total (à partir de la variable `sum`).\n\n1. D'abord, supprime les instructions `console.log()` que tu as ajoutées à l'étape précédente.\n2. Remplis la ligne `Customer` du tableau en utilisant la fonction `setElementText()`.\n3. Remplis la ligne `Items` du tableau en utilisant la fonction `setElementText()`.\n4. Remplis la ligne `total` du tableau en utilisant la fonction `setElementText()`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Receipt Summary</title>\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body onload=\"populateTable()\">\n    <div id=\"project\">\n      <h2>Customer Receipts</h2>\n      <table>\n        <tr>\n          <th class=\"bold\">Customer:</th>\n          <th id=\"customer0\"></th>\n          <th id=\"customer1\"></th>\n          <th id=\"customer2\"></th>\n        </tr>\n        <tr>\n          <td class=\"bold\">Items:</td>\n          <td id=\"receipt0\"></td>\n          <td id=\"receipt1\"></td>\n          <td id=\"receipt2\"></td>\n        </tr>\n        <tr>\n          <td class=\"bold\">Total:</td>\n          <td id=\"total0\"></td>\n          <td id=\"total1\"></td>\n          <td id=\"total2\"></td>\n        </tr>\n      </table>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: #273C75;\n  color: white;\n}\n\n#project {\n  font-family: sans-serif;\n}\n\n.bold {\n  font-weight: bold;\n}\n\nh3 {\n  margin-top: 20%;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 10px;\n}\n\ntr,\nth,\ntd {\n  border: 5px solid white;\n  padding: 10px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    console.log(\"customer\" + i.toString(), customer);\n    console.log(\"receipt\" + i.toString(), receipt_list);\n    console.log(\"total\" + i.toString(), sum);\n  }\n}",
                  "solvedContent": "const customers = [\"John S.\", \"Emma M.\", \"Frank T.\"];\nconst receipts = [\n  [\"eggs\", \"white bread\", \"milk\"],\n  [\"milk\", \"cheese\", \"butter\", \"pancake mix\", \"flour\"],\n  [\"cereal\", \"whole wheat bread\", \"milk\", \"cheese\", \"eggs\", \"vanilla\"]\n];\nconst prices = {\n  \"eggs\": 3.50,\n  \"white bread\": 4.50,\n  \"milk\": 5.99,\n  \"cheese\": 6.50,\n  \"butter\": 3.45,\n  \"pancake mix\": 4.50,\n  \"flour\": 5.75,\n  \"cereal\": 4.50,\n  \"whole wheat bread\": 6.50,\n  \"vanilla\": 8.75\n};\n\nfunction setElementText(id, text) {\n  document.getElementById(id).innerText = text;\n}\n\nfunction populateTable() {\n  for (let i = 0; i < customers.length; i++) {\n    const customer = customers[i];\n    const receipt = receipts[i];\n    let receipt_list = \"\";\n    let sum = 0;\n    for (let j = 0; j < receipt.length; j++) {\n      const item = receipt[j];\n      const price = prices[item];\n      receipt_list += item + \"\\n\";\n      sum += price;\n    }\n    setElementText(\"customer\" + i.toString(), customer);\n    setElementText(\"receipt\" + i.toString(), receipt_list);\n    setElementText(\"total\" + i.toString(), sum);\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To populate the `Customer` row, code the following\n```javascript\nsetElementText(\"customer\" + i.toString(), customer);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}