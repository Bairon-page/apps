{
  "tutorial": {
    "id": 2662,
    "version": 7,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Liste de tâches - Partie 2",
    "descriptionContent": "Ajoute un menu interactif à ta liste de tâches et améliore-la en permettant de supprimer à nouveau des tâches",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2662-icon-banner.svg",
    "chapters": [
      {
        "id": 14637,
        "title": "Chapitre #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129462,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenue dans le projet **ToDo List**. Dans la deuxième partie, nous allons rendre la liste de tâches interactive.\n\nTout d'abord, nous allons modifier notre code pour afficher les options permettant à l'utilisateur d'interagir avec l'application.\n\n1. Ajoute quatre fonctions print à la fin du bloc de la boucle `while`. La première doit dire `\"Options:\"`, et les suivantes doivent dire `\"1) Add Task\"`, `\"2) Remove Task\"`, et `\"3) Quit\"`.\n2. Ajoute une instruction `break` à la fin pour que la boucle ne s'exécute qu'une seule fois.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n  break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129463,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pour réellement mettre en œuvre les instructions données à l'utilisateur, nous devons lire leur entrée et réagir en conséquence.\n\n1. Ajoute une fonction `input` avant l'instruction `break` que tu viens d'ajouter pour enregistrer le choix de l'utilisateur dans une variable nommée `choice`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n  break",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 129920,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Faisons en sorte que le programme se comporte en fonction de l'entrée de l'utilisateur.\n\n1. Ajoute une instruction `if` pour vérifier ce que l'utilisateur a saisi avant l'instruction `break`.\n2. Si `choice` est `\"1\"`, affiche `\"Adding task\"`.\n3. Si `choice` est `\"2\"`, affiche `\"Removing task\"`.\n4. Si l'utilisateur a saisi `\"3\"`, affiche `\"Quitting\"`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  break",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n\n  break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129464,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Changeons le comportement de la boucle. Nous voulons que l'exécution du code s'arrête uniquement lorsque l'utilisateur choisit l'option 3.\n\n1. Déplace la déclaration `break` dans le dernier bloc `elif`, où tu vérifies si l'utilisateur a choisi l'option 3.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n\n  break",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 129764,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous allons maintenant implémenter l'ajout de tâches réelles. À partir de maintenant, nous n'avons plus besoin des tâches de démonstration. Nous voulons également supprimer l'ajout de tâches au début du programme car nous avons maintenant un endroit dédié pour ce comportement.\n\n1. Supprime les deux tâches de démonstration de la liste `todo_list`.\n2. Supprime les lignes au début de la boucle while qui demandent à l'utilisateur d'ajouter une tâche immédiatement.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break",
                  "solvedContent": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 129921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, nous devons implémenter l'ajout ou la suppression de tâches en fonction de l'entrée de l'utilisateur. Tout d'abord, nous allons nous concentrer sur l'ajout de tâches.\n\n1. Ajoute une fonction `input` et demande à l'utilisateur d'entrer la tâche qu'il souhaite ajouter. Enregistre la tâche saisie par l'utilisateur dans une variable appelée `new_task`.\n2. Ajoute `new_task` à la `todo_list`.\n3. Imprime une confirmation que la tâche a été ajoutée à la liste de tâches.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break",
                  "solvedContent": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n    new_task = input(\"Enter the task: \")\n    todo_list.append(new_task)\n    print(f\"Task '{new_task}' added to the ToDo list\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129466,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, donnons à l'utilisateur la fonctionnalité de supprimer des tâches de la liste ToDo.\n\n1. À l'intérieur de la branche `elif` pour le choix `\"2\"`, remplace la fonction `print` par une vérification pour voir si le `todo_list` est vide.\n2. Si `todo_list` est vide, affiche qu'il est vide.\n3. Si la liste n'est pas vide, utilise la fonctionnalité `pop` pour supprimer la dernière tâche de la liste.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n    new_task = input(\"Enter the task: \")\n    todo_list.append(new_task)\n    print(f\"Task '{new_task}' added to the ToDo list\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break",
                  "solvedContent": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n    new_task = input(\"Enter the task: \")\n    todo_list.append(new_task)\n    print(f\"Task '{new_task}' added to the ToDo list\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n    if len(todo_list) > 0:\n      removed_task = todo_list.pop()\n    else:\n      print(\"Your ToDo list is empty\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}