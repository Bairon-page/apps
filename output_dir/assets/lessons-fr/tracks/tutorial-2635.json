{
  "tutorial": {
    "id": 2635,
    "version": 6,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "DOM & Événements",
    "descriptionContent": "Les défis sont des exercices plus difficiles qui mettront tes compétences à l'épreuve.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14546,
        "title": "HTML à partir d'une image d'arbre",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 129206,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons une application de chat. \n![html tree](https://mimo.app/i/dom_tree_1.png)\n\n1. Crée l'arborescence HTML montrée dans cette image en ajoutant les éléments appropriés.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <textarea></textarea>\n    <br />\n    <input>\n    <button>Send</button>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14547,
        "title": "HTML à partir de la description",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Date Range",
            "id": 129207,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créer un site web qui permet à l'utilisateur de choisir une plage de dates. Code le suivant dans le fichier `.html`.\n\n1. Ajoute un input de type `date` comme enfant du `body`.\n2. Ajoute un input de type `date` comme frère de l'autre input.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <input name=\"checkin\" type=\"date\">\n    <input name=\"checkout\" type=\"date\">\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14548,
        "title": "DOM firstElementChild",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 129208,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons une page de profil d'employé. Code ceci dans la balise script.\n\n1. Utilise le DOM pour définir le texte du premier élément enfant de l'élément `body` à `\"Employee Profile\"`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1></h1>\n    <script src=\"index.js\">\n    </script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "document.body.firstElementChild.textContent = \"Employee Profile\";\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14549,
        "title": "Page de détail du produit",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Product Detail Page",
            "id": 129209,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons une page de commande de produit. Nous avons une fonction `qtyChanged`, qui calcule le coût total en fonction du prix et de la quantité, puis définit le texte de l'élément `p`.\n\n1. Complète le code qui met à jour le total chaque fois que l'entrée est modifiée. Utilise le gestionnaire d'événements `.onchange`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Breakfast Sandwich</h1>\n    <img src=\"https://mimo.app/i/croissant.png\" id=\"shape\"\n      style=\"width:100px;height:100px;border: 1px solid black\">\n    <br> Price: $1.99 <br> Qty<input type=\"number\">\n    <p> Total Price: $0 </p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\n",
                  "solvedContent": "const input = document.querySelector(\"input\");\n\nfunction qtyChanged() {\n  document.querySelector(\"p\").innerHTML = \"Total Price: $\" + (Number(input.value) * 1.99);\n}\ninput.onchange = qtyChanged;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14550,
        "title": "Conditions d'utilisation",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Terms of Service",
            "id": 129210,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons une boîte de \"conditions d'utilisation\" qui vérifie si tu l'as réellement lue. Nous avons la fonction `checkReading` qui détermine si l'utilisateur a fait défiler jusqu'en bas.\n\n1. Termine le code qui appelle la fonction `checkReading` chaque fois que l'utilisateur fait défiler le `textarea`. Tu devras créer une variable avec le nom de ton choix pour y parvenir.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <textarea style=\"height: 200px; width: 100%;\">\n   Please read these terms of service (\"terms\", \"terms of service\") carefully before using [website] website (the \"service\") operated by [name] (\"us\", 'we\", \"our\").\n\n   Conditions of Use\n\n   We will provide their services to you, which are subject to the conditions stated below in this document. Every time you visit this website, use its services or make a purchase, you accept the following conditions. This is why we urge you to read them carefully.\n\n   Privacy Policy\n\n   Before you continue using our website we advise you to read our privacy policy [link to privacy policy] regarding our user data collection. It will help you better understand our practices.\n  </textarea>\n  <p></p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\n",
                  "solvedContent": "const terms = document.getElementsByTagName(\"textarea\")[0];\n\nfunction checkReading () {\n  const read = terms.scrollHeight - Math.round(terms.scrollTop) === terms.clientHeight;\n  if(read){\n   document.getElementsByTagName(\"p\")[0].innerHTML = \"Thank You\";\n  }\n}\nterms.onscroll =  checkReading;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14551,
        "title": "Bouton J'aime",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Like Button",
            "id": 129211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons un bouton \"like\" qui nécessite un double-clic.\n\n1. Ajoute le code nécessaire pour appeler la fonction `like` lorsque le bouton en forme de cœur est double-cliqué.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>My Vacation</h1>\n    <img id=\"like\" src=\"https://mimo.app/i/beach.png\"\n      style=\"width:100px;height:100px;border:1px solid black\">\n    <p></p>\n    <button class=\"heart\">huh</button>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\n",
                  "solvedContent": "const img = document.querySelector(\"button\");\n\nfunction like() {\n  document.querySelector(\"p\").innerHTML = \"Liked\";\n}\nimg.ondblclick = like;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": ".heart {\n  width: 36px;\n  height: 36px;\n  position: relative;\n  margin: 1em auto;\n  transform-origin: 50% 50%;\n  transform: rotate(45deg) scale(1);\n  cursor: pointer;\n  background: transparent;\n  border: none !important;\n  font-size: 0;\n}\n\n.heart:before {\n  content: \"\";\n  position: absolute;\n  display: block;\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  background-color: tomato;\n  width: inherit;\n  height: 24px;\n  top: 12px;\n  left: 0;\n}\n\n.heart:after {\n  content: \"\";\n  position: absolute;\n  display: block;\n  background-color: tomato;\n  width: 24px;\n  top: 0;\n  left: 12px;\n  height: inherit;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12312,
        "title": "Enfants du DOM",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Job Listing",
            "id": 111612,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons une page d'offre d'emploi. Code ceci dans la balise script.\n\n1. Utilise le DOM pour accéder à l'élément `ul` en tant que deuxième enfant du corps et enregistre-le dans une variable nommée `jobs`.\n2. Utilise le DOM pour accéder aux deux enfants de l'élément `ul` et définis leur texte sur un titre de poste.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n    </script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <body>\n    <h1>Current Positions Open</h1>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n    <script>\n      let jobs = document.body.children[1];\n      jobs.children[0].innerHTML = \"Software QA\";\n      jobs.children[1].innerHTML = \"Project Manager\";\n    </script>\n  </body>\n</html>"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12277,
        "title": "Supprimer un élément",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Remove Element",
            "id": 111486,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans ce fichier HTML, la tâche consiste à supprimer un élément `p` existant en utilisant JavaScript.\n\n1. Dans le fichier `script.js`, crée une nouvelle variable const et nomme-la `paraEl`.\n2. Utilise la méthode `getElementById()` sur l'objet `document` pour obtenir le paragraphe avec l'`id` de `para`. Assigne cette valeur à `paraEl`.\n3. Obtiens l'élément `body` en utilisant la méthode `querySelector()`. Assigne cette valeur à une variable const nommée `bodyEl`.\n4. Sur l'objet `bodyEl`, exécute la méthode `removeChild()`, en lui passant la variable `paraEl` comme paramètre. Cela devrait entraîner la suppression de l'élément `p` du document.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <body>\n  <h1 id=\"the-heading\">Removing elements here!</h1>\n  <p id=\"para\">I'm about to be removed from the document!</p>\n  <script src=\"script.js\"></script>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nbodyEl.removeChild();",
                  "solvedContent": "const paraEl = document.getElementById('para');\nconst bodyEl = document.querySelector('body');\nbodyEl.removeChild(paraEl);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12223,
        "title": "Filtre",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filter",
            "id": 111061,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Donnons à nos utilisateurs la possibilité de rechercher un produit. La fonction `searchProducts` qui effectuera la recherche est déjà créée pour toi.\n\n1. La première entrée sur la page doit rechercher les produits lorsque l'utilisateur y tape une entrée.\n2. L'entrée de type case à cocher sur la page doit rechercher les produits lorsque l'utilisateur clique dessus.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <h1>Shopper</h1> Search <input><br> Free Shipping <input type=\"checkbox\">\n    <ul>\n    </ul>\n    <br>\n    <br>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();",
                  "solvedContent": "const products = [{\n  name: \"bike\",\n  freeShipping: true\n}, {\n  name: \"gloves\",\n  freeShipping: false\n}, {\n  name: \"phone\",\n  freeShipping: true\n}];\nconst input = document.querySelector(\"input\");\ninput.oninput = searchProducts;\nconst checkbox = document.querySelectorAll(\"input\")[1];\ncheckbox.onchange = searchProducts;\n\n\nfunction searchProducts() {\n  const ul = document.querySelector(\"ul\");\n  ul.innerHTML = \"\";\n  for (let i = 0; i < products.length; i++) {\n    if (show(products[i])) {\n      const li = document.createElement(\"li\");\n      li.innerHTML = products[i].name;\n      ul.appendChild(li);\n    }\n  }\n}\n\nfunction show(product){\n  const input = document.querySelector(\"input\");\n  const shipping = document.querySelectorAll(\"input\")[1];\n  return (input.value === \"\" || product.name.indexOf(input.value) > -1) && (!\n        shipping.checked || product.freeShipping);\n}\nsearchProducts();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12217,
        "title": "Profil de l'employé",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Employee Profile",
            "id": 111055,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoutons la possibilité de voir différentes sections de notre profil d'employé. Dans le fichier `script.js`, nous avons la fonction `showInfo()` pour afficher les informations de l'employé, la fonction `showPayHistory()` pour afficher les bulletins de paie, et la fonction `showTimeOff()` pour afficher les congés.\n\n1. Fais en sorte que le premier `button` affiche les informations de l'employé lorsqu'il est cliqué.\n2. Fais en sorte que le deuxième `button` affiche l'historique des paiements lorsqu'il est cliqué.\n3. Fais en sorte que le troisième `button` affiche les congés lorsqu'il est cliqué.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"index.css\">\n  </head>\n  <body>\n    <h1>Employee Profile</h1>\n    <button>Info</button> | <button>Pay History</button> | <button>Time\n      off</button>\n    <br>\n    <br>\n    <div> Janie Culliver, Sales Rep </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\n\n\n",
                  "solvedContent": "function showInfo() {\n  document.querySelector(\"div\").innerHTML = \"Janie Culliver, Sales Rep\";\n}\n\nfunction showPayHistory() {\n  document.querySelector(\"div\").innerHTML = \"$2334.20<br>$2333.22\";\n}\n\nfunction showTimeOff() {\n  document.querySelector(\"div\").innerHTML = \"Taken this year: 8 days\";\n}\ndocument.querySelectorAll(\"button\")[0].onclick = showInfo;\ndocument.querySelectorAll(\"button\")[1].onclick = showPayHistory;\ndocument.querySelectorAll(\"button\")[2].onclick = showTimeOff;"
                },
                {
                  "name": "index.css",
                  "codeLanguage": "css",
                  "content": "button {\n  background: none;\n  border: none;\n  padding: 0;\n  /*optional*/\n  font-family: arial, sans-serif;\n  /*input has OS specific font-family*/\n  color: #069;\n  text-decoration: underline;\n  cursor: pointer;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12219,
        "title": "Planificateur de voyage",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Trip Planner",
            "id": 111057,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Notre application de réservation doit informer l'utilisateur s'il choisit des dates invalides. Nous avons déjà la fonction `valid()`, qui valide en s'assurant que les dates sont dans l'ordre. Nous avons également la fonction `book()`, qui complète la réservation.\n\n1. Faites en sorte que le champ de saisie `Check In` exécute la commande de validation lorsqu'il est modifié.\n2. Faites en sorte que le champ de saisie `Check Out` exécute la commande de validation lorsqu'il est modifié.\n3. Faites en sorte que le bouton complète la réservation lorsqu'il est cliqué.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Book Your Room</h1> Check In <input name=\"checkin\" type=\"date\">\n    <br> Check Out <input name=\"checkout\" type=\"date\">\n    <p></p>\n    <button disabled onclick=\"book()\">Book</button>\n    <br>\n    <div></div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\n\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\n\n\n",
                  "solvedContent": "const checkin = document.querySelectorAll(\"input\")[0];\nconst checkout = document.querySelectorAll(\"input\")[1];\nconst button = document.querySelector(\"button\");\n\nfunction valid() {\n  if (new Date(checkin.value).getTime() >= new Date(checkout.value).getTime()) {\n    document.querySelector(\"p\").innerHTML =\n      \"Check in date must be before check out\";\n    document.querySelector(\"button\").disabled = true;\n  } else {\n    document.querySelector(\"p\").innerHTML = \"\";\n    document.querySelector(\"button\").disabled = false;\n  }\n}\nfunction bookTrip() {\n  document.querySelector(\"div\").innerHTML = \"Trip is booked\";\n}\ncheckin.onchange = valid;\ncheckout.onchange = valid;\nbutton.onclick = bookTrip;"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".done {\n  text-decoration: line-through;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12220,
        "title": "Application de chat",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Chat App",
            "id": 111058,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons une application de chat. On nous a donné la fonction `typing`, qui affiche un message indiquant que l'utilisateur est en train de taper. Il y a aussi la fonction `send`, qui met le texte dans la fenêtre de chat.\n\n1. Ajoute du code pour que le message `Typing...` s'affiche lorsque l'utilisateur saisit du texte dans le champ de saisie.\n2. Ajoute du code pour envoyer le message lorsque le bouton est cliqué.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <body>\n    <textarea style=\"height: 200px; width: 100%;\">\n  </textarea>\n    <p></p>\n    <br>\n    <input><button>Send</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst button = document.querySelector(\"button\");\n\nfunction typing() {\n  document.querySelector(\"p\").innerHTML = \"Typing...\";\n}\n\nfunction send() {\n  document.querySelector(\"textarea\").innerHTML = document.querySelector(\n      \"textarea\").innerHTML + document.querySelector(\"input\").value +\n    \"&#13;&#10;\";\n  document.querySelector(\"p\").innerHTML = \"\";\n  document.querySelector(\"input\").value = \"\";\n}\ninput.oninput = typing;\nbutton.onclick = send;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12218,
        "title": "Jeu",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Game",
            "id": 111056,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons un jeu de canard. Il y a une fonction `move` qui met à jour l'emplacement du canard lorsque le curseur est déplacé. Il y a la fonction `win` qui teste si le canard est arrivé à la maison. Code les éléments suivants dans le fichier `script.js`.\n\n1. La fonction `move` doit être appelée chaque fois que la valeur d'entrée de la plage est saisie en déplaçant le curseur.\n2. La fonction `win` doit être appelée chaque fois que l'entrée de la plage est modifiée. La fonction vérifiera alors si l'utilisateur a effectivement gagné le jeu.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Make the duck go home</h1>\n    <img src=\"https://mimo.app/i/batduck.png\" width=\"50px\"\n      style=\"position:absolute; border-radius: 50%;\">\n    <img src=\"https://mimo.app/i/house-2.png\" width=\"70px\"\n      style=\"left:100px;position:absolute\">\n    <br>\n    <br>\n    <br>\n    <input type=\"range\" value=\"0\">\n    <p></p>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}",
                  "solvedContent": "const input = document.querySelector(\"input\");\nconst duck = document.querySelector(\"img\");\nconst progress = 10;\n\nfunction move() {\n  const input = document.querySelector(\"input\");\n  duck.style.left = (input.value) + 'px';\n}\n\nfunction win() {\n  const p = document.querySelector(\"p\");\n  const input = document.querySelector(\"input\");\n  if (Number(input.value) >= 100) {\n    p.innerHTML = \"You Win!\";\n  } else {\n    p.innerHTML = \"\";\n  }\n}\ninput.oninput = move;\ninput.onchange = win;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12216,
        "title": "Changeur de chaîne",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Channel Changer",
            "id": 111054,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons la télécommande pour Cat TV. Dans le fichier `script.js`, nous avons déjà deux fonctions :\n- `up` change de chaîne vers le haut\n- `down` change de chaîne vers le bas\n\n1. Ajoute du code pour que la chaîne monte chaque fois que le premier bouton est cliqué.\n2. Ajoute du code pour que la chaîne descende chaque fois que le deuxième bouton est cliqué.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Cat TV</h1>\n   \n    <img src=\"https://mimo.app/i/shushi.png\" width=\"100px\" height=\"100px\">\n    <br>\n    <button>Up</button>\n    <button>Down</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}",
                  "solvedContent": "let index = 0;\nlet currentSrc = \"\";\nconst images = [\"https://mimo.app/i/shushi.png\",\n  \"https://mimo.app/i/sparkles.png\", \"https://mimo.app/i/whiskers.png\"\n];\n\nfunction up() {\n  index = index === 2 ? index : index + 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction down() {\n  index = index === 0 ? index : index - 1;\n  currentSrc = images[index];\n  changeChannel();\n}\n\nfunction changeChannel() {\n  const image = document.getElementsByTagName(\"img\")[0];\n  image.src = currentSrc;\n}\ndocument.getElementsByTagName(\"button\")[0].onclick = up;\ndocument.getElementsByTagName(\"button\")[1].onclick = down;"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}