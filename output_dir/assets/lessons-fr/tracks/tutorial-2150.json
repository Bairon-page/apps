{
  "tutorial": {
    "id": 2150,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Timeout et Intervalles en JS",
    "descriptionContent": "Découvrez les méthodes asynchrones en JavaScript : setTimeout, setInterval et clearInterval.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13418,
        "title": "setTimeout",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>JavaScript possède des méthodes natives qui exécutent du code de manière asynchrone, telles que <code>setTimeout()</code> et <code>setInterval()</code>.</p><p>Dans ce chapitre, nous allons examiner la méthode <code>setTimeout()</code>.</p></body></html>"
          },
          {
            "title": "setTimeout()",
            "id": 120594,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode <code>setTimeout()</code> définit un minuteur, en millisecondes, qui exécute une fonction ou un bloc de code lorsque le minuteur expire.</p><p>Code ton premier <code>setTimeout</code> méthode dans le code d'exemple.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "setTimeout() 2",
            "id": 120595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le code ici est asynchrone. Cela signifie que pendant que nous attendons que le <em>callback</em> soit exécuté, le code après la méthode <code>setTimeout</code> s'exécute.</p><p>La sortie de la console de la méthode <code>setTimeout</code> s'affichera en dernier en raison du délai dans la méthode <code>setTimeout</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"41\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Delay Parameter",
            "id": 120596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le paramètre <code>delay</code> est le temps, en millisecondes, qui s'écoule avant que la fonction ou le bloc de code ne s'exécute.</p><p>Dans le code suivant, définis un délai de <code>2000</code> millisecondes pour l'exécution du bloc de code.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed after 2 seconds'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"95\" endIndex=\"99\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed after 2 seconds\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>2000</code>.</p></body></html>"
          },
          {
            "title": "Delay of 0",
            "id": 120598,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> est toujours asynchrone, même si le paramètre <code>delay</code> est omis ou si nous le définissons à <code>0</code>.</p><p>Avec un <code>delay</code> de <code>0</code>, le code après la méthode <code>setTimeout()</code> s'exécute immédiatement, mais la fonction de rappel est exécutée <em>dès que possible</em>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last, even if we set 0 seconds '\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"112\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last, even if we set 0 seconds \" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>0</code>.</p></body></html>"
          },
          {
            "title": "Callback Function",
            "id": 120597,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setTimeout()</code> exécute le <code>callback</code> après le <code>delay</code> spécifié.</p><p>Le code <em>après</em> le <code>setTimeout</code> continue de s'exécuter indépendamment de l'utilisation d'un callback ou d'un bloc de code.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Executed Last because of setTimeout&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(callback, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"119\" endIndex=\"127\" /></options></interaction></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>callback</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120760,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle affirmation est vraie concernant les méthodes JavaScript ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JavaScript a quelques méthodes qui exécutent du code de manière asynchrone</item><item value=\"2\" correct=\"false\">JavaScript n'a que des méthodes qui exécutent le code de manière synchrone</item></selection><p visible-if=\"wrong\">JavaScript a quelques méthodes qui exécutent du code de manière asynchrone.</p></body></html>"
          },
          {
            "title": "Question: setTimeout()",
            "id": 120761,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que fait la méthode <code>setTimeout()</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il exécute une fonction de rappel lorsqu'un minuteur expire</item><item value=\"2\" correct=\"false\">Il ne fait que régler un minuteur</item></selection><p visible-if=\"wrong\">Il exécute une fonction de rappel lorsqu'un minuteur expire.</p></body></html>"
          },
          {
            "title": "Question: setTimeout() 2",
            "id": 120762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle affirmation est vraie concernant la méthode <code>setTimeout()</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">C'est une méthode JavaScript asynchrone</item><item value=\"2\" correct=\"false\">C'est une méthode JavaScript synchrone</item></selection><p visible-if=\"wrong\">C'est une méthode JavaScript asynchrone.</p></body></html>"
          },
          {
            "title": "Question: Delay Parameter",
            "id": 120763,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que fait le paramètre <code>delay</code> de <code>setTimeout()</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il spécifie combien de millisecondes s'écoulent avant que le callback ne soit exécuté</item><item value=\"2\" correct=\"false\">Cela provoque l'arrêt de l'exécution de tout le code</item></selection><p visible-if=\"wrong\">Il spécifie combien de millisecondes s'écoulent avant que le callback ne soit exécuté.</p></body></html>"
          },
          {
            "title": "Question: Delay of 0",
            "id": 120764,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle est la valeur par défaut du paramètre <code>delay</code> lorsque nous ne lui passons pas de valeur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">0 millisecondes</item><item value=\"2\" correct=\"false\">1000 millisecondes</item></selection><p visible-if=\"wrong\">0 millisecondes.</p></body></html>"
          },
          {
            "title": "Question: Callback Function",
            "id": 120765,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quand la fonction de rappel de <code>setTimeout()</code> est-elle exécutée ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Après l'expiration du minuteur défini par le paramètre <code>delay</code></item><item value=\"2\" correct=\"false\">Avant que le minuteur défini par le paramètre <code>delay</code> n'expire</item></selection><p visible-if=\"wrong\">Après l'expiration du minuteur défini par le paramètre <code>delay</code>.</p></body></html>"
          },
          {
            "title": "Example: setTimeout()",
            "id": 120767,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code la méthode <code>setTimeout()</code> pour compléter le code.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"9000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"194\" endIndex=\"204\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 1000 solutions\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>setTimeout</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay Parameter",
            "id": 120769,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code un délai de <code>8000</code> millisecondes dans la méthode <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"8000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"238\" endIndex=\"242\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 875 solutions\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>8000</code>.</p></body></html>"
          },
          {
            "title": "Example: Delay of 0",
            "id": 120770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour que la fonction de rappel s'exécute dès que possible.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed First'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Last because of setTimeout(), even with no delay'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Executed Second'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"129\" /></interactions><output><content><text value=\"Executed First\" /><text type=\"break\" /><text value=\"Executed Second\" /><text type=\"break\" /><text value=\"Executed Last because of setTimeout(), even with no delay\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example: Callback Function",
            "id": 120771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code la fonction de rappel qui imprime le résultat de <code>calculate()</code>, pour le premier paramètre de <code>setTimeout()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" counter = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"// complex calculation\" class=\"comment\" /><text type=\"break\" /><text value=\" \" /><text value=\"// updates `counter` variable\" class=\"comment\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"calculate();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Calculating...'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" answer = \" /><text value=\"`The result is \" /><text value=\"${counter}\" class=\"subst\" /><text value=\" solutions`\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"printAnswer\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answer);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"setTimeout(printAnswer, \" /><text value=\"5000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Please enter your next request while waiting.'\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"256\" endIndex=\"267\" /></interactions><output><content><text value=\"Calculating...\" /><text type=\"break\" /><text value=\"Please enter your next request while waiting.\" /><text type=\"break\" /><text value=\"The result is 450 solutions\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>printAnswer</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13419,
        "title": "setInterval et clearInterval",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 120561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> est une autre méthode native de JavaScript qui exécute du code de manière asynchrone.</p><p>Avec <code>setInterval</code>, nous pouvons exécuter du code à chaque intervalle de temps défini. Apprenons-en plus sur cette méthode.</p></body></html>"
          },
          {
            "title": "setInterval()",
            "id": 120836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval()</code> prend une fonction de rappel et un intervalle comme paramètres. Ici, le <code>toggleBlinker</code> allume et éteint les clignotants.</p><p>Passe la fonction de rappel et l'intervalle à l'appel <code>setInterval</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"187\" endIndex=\"198\" /><option startIndex=\"199\" endIndex=\"212\" /><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>setInterval</code> suivi de <code>toggleBlinker</code> et enfin <code>500</code>.</p></body></html>"
          },
          {
            "title": "Interval",
            "id": 120608,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>setInterval</code> exécute la fonction de rappel indéfiniment, avec un délai du nombre de millisecondes spécifié que nous passons en tant que deuxième paramètre.</p><p>La première exécution du callback se produit après le temps spécifié. Elle ne s'exécute pas immédiatement.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" toggleBlinker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text value=\"setInterval(toggleBlinker, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"214\" endIndex=\"217\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>500</code>.</p></body></html>"
          },
          {
            "title": "setInterval() Callback",
            "id": 120607,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si nous exécutons le code, nous pourrions obtenir une erreur de délai d'attente car il n'y a pas d'arrêt pour le <code>setInterval</code>.</p><p>Ajoute <code>500</code> millisecondes ici pour voir le code s'allumer et s'éteindre indéfiniment toutes les <code>500</code> millisecondes !</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"177\" endIndex=\"180\" /></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text value=\"Timeout\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>500</code>.</p></body></html>"
          },
          {
            "title": "Stopping the Interval",
            "id": 120609,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour arrêter <code>setInterval()</code> de s'exécuter indéfiniment, nous pouvons utiliser la méthode <code>clearInterval</code>.<br /></p><p>Nous pouvons enregistrer le <code>setInterval</code> dans une variable <code>blinkerInterval</code>. Ensuite, utilise <code>clearInterval(blinkerInterval)</code> à l'intérieur d'un <code>setTimeout</code> pour être exécuté après <code>2500</code> millisecondes.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"26\" /><option startIndex=\"27\" endIndex=\"42\" /><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /><option startIndex=\"283\" endIndex=\"287\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>let</code> suivi de <code>blinkerInterval</code> puis <code>clearInterval</code>, <code>blinkerInterval</code>, <code>2500</code>.</p></body></html>"
          },
          {
            "title": "intervalID/clearInterval()",
            "id": 120611,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode <code>clearInterval()</code> prend le <code>blinkerInterval</code> comme son seul paramètre.</p><p>Lors de l'exécution, il arrête l'action répétée de la méthode <code>setInterval()</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" blinkerInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (blinkerOn) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker off&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"false\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Blinker on&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  blinkerOn = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"setTimeout(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" clearInterval(blinkerInterval);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;STOP!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"2500\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"225\" endIndex=\"238\" /><option startIndex=\"239\" endIndex=\"254\" /></options></interaction></interactions><output><content><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"Blinker on\" /><text type=\"break\" /><text value=\"Blinker off\" /><text type=\"break\" /><text value=\"STOP!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>clearInterval</code> suivi de <code>blinkerInterval</code>.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 120782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle est une méthode JavaScript qui exécute du code de manière asynchrone ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>setInterval()</code></item><item value=\"2\" correct=\"false\"><code>.filter()</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>setInterval()</code>.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Delay",
            "id": 120784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que spécifie le paramètre <code>delay</code> pour la méthode <code>setInterval()</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Le nombre de millisecondes qui s'écouleront entre les exécutions du callback</item><item value=\"2\" correct=\"false\">Le nombre de minutes qui s'écouleront entre les exécutions du callback</item></selection><p visible-if=\"wrong\">Le nombre de millisecondes qui s'écouleront entre les exécutions du callback.</p></body></html>"
          },
          {
            "title": "Question: Stopping the Interval",
            "id": 120785,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle affirmation est vraie concernant la méthode <code>setInterval()</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il s'exécute indéfiniment à moins que nous ajoutions du code supplémentaire pour l'arrêter</item><item value=\"2\" correct=\"false\">Il permet seulement au callback de s'exécuter 10 fois</item></selection><p visible-if=\"wrong\">Il s'exécute indéfiniment à moins que nous ajoutions du code supplémentaire pour l'arrêter.</p></body></html>"
          },
          {
            "title": "Question: setInterval() Callback",
            "id": 120783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quels sont les deux paramètres courants que <code>setInterval()</code> a ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Une fonction de rappel et un délai</item><item value=\"2\" correct=\"false\"><code>setInterval()</code> accepte uniquement une fonction de rappel comme paramètre</item></selection><p visible-if=\"wrong\">Une fonction de rappel et un délai.</p></body></html>"
          },
          {
            "title": "Question: intervalID/clearInterval()",
            "id": 120787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle méthode pouvons-nous utiliser pour arrêter l'exécution de <code>setInterval()</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>clearInterval()</code></item><item value=\"2\" correct=\"false\"><code>setTimeout</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>clearInterval()</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Callback",
            "id": 120790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code la fonction de rappel pour que le compte à rebours commence avec un <code>setInterval</code> et s'arrête également si <code>countdown &lt; 0</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" countdown = \" /><text value=\"3\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" countdownInterval = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(countdown);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" countdown--;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (countdown &lt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  clearInterval(countdownInterval);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;GO&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}, \" /><text value=\"1000\" class=\"number\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"56\" /><option startIndex=\"154\" endIndex=\"167\" /><option startIndex=\"168\" endIndex=\"185\" /><option startIndex=\"25\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"3\" /><text type=\"break\" /><text value=\"2\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"GO\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>countdownInterval</code> suivi de <code>setInterval</code> puis <code>clearInterval</code>, <code>countdownInterval</code>.</p></body></html>"
          },
          {
            "title": "Example: setInterval() Delay",
            "id": 120791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code en définissant le délai entre les exécutions de la fonction de rappel à <code>600</code> millisecondes.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" count = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" intervalID;\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"callback\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (count &lt; \" /><text value=\"3\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  count += \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Callback executed&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  clearInterval(intervalID);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;The interval was cleared after 3 executions&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" intervalID = setInterval(callback, \" /><text value=\"600\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"start();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"284\" endIndex=\"287\" /></interactions><output><content><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"Callback executed\" /><text type=\"break\" /><text value=\"The interval was cleared after 3 executions\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>600</code>.</p></body></html>"
          },
          {
            "title": "Example: intervalID/clearInterval()",
            "id": 120794,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code la méthode <code>clearInterval()</code> pour arrêter l'exécution de la fonction de rappel après <code>2</code> secondes.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" intervalId;\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"startInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  intervalId = setInterval(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"if\" class=\"keyword\" /><text value=\" (direction === \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;right&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"      direction = \" /><text value=\"&quot;left&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"    }\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(direction);\" /><text type=\"break\" /><text value=\"  }, \" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"stopInterval\" class=\"title\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  clearInterval(intervalId);\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Interval stopped&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"startInterval();\" /><text type=\"break\" /><text value=\"setTimeout(stopInterval, \" /><text value=\"2000\" class=\"number\" /><text value=\");\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"277\" endIndex=\"290\" /><option startIndex=\"370\" endIndex=\"382\" /><option startIndex=\"384\" endIndex=\"388\" /></options></interaction></interactions><output><content><text value=\"right\" /><text type=\"break\" /><text value=\"left\" /><text type=\"break\" /><text value=\"right\" /><text type=\"break\" /><text value=\"Interval stopped\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>clearInterval</code> suivi de <code>stopInterval</code> et enfin <code>2000</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}