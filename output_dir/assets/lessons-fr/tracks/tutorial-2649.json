{
  "tutorial": {
    "id": 2649,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Introduction aux Requests",
    "descriptionContent": "Introduction aux Requests",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14620,
        "title": "Notions de base des requêtes",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 129349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dans le développement logiciel, interagir avec des services web est une tâche courante, impliquant souvent l'envoi de requêtes aux serveurs.</p><p>La bibliothèque Python <code>requests</code> simplifie le processus de faire des requêtes.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"7\" endIndex=\"15\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>import</code> suivi de <code>requests</code>.</p></body></html>"
          },
          {
            "title": "Intro - Copy",
            "id": 129555,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La bibliothèque requests en Python est utilisée pour effectuer des requêtes HTTP vers une URL spécifiée.</p><p>La bibliothèque requests simplifiera les choses que tu essaies d'accéder aux données d'un site web ou d'interagir avec un service web.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text value=\"character_data = response.json()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Name: \" /><text value=\"{character_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Status: \" /><text value=\"{character_data[\" /><text value=\"'status'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"90\" /><option startIndex=\"91\" endIndex=\"94\" /><option startIndex=\"95\" endIndex=\"98\" /><option correct=\"false\"><content><text value=\"load\" /></content></option></options></interaction></interactions><output><content><text value=\"Name: Rick Sanchez\" /><text type=\"break\" /><text value=\"Status: Alive\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>requests</code> suivi de <code>get</code> et enfin <code>url</code>.</p></body></html>"
          },
          {
            "title": "Import",
            "id": 129351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour utiliser requests, nous devons l'importer en utilisant le mot-clé <code>import</code>, suivi du nom du package <code>requests</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"http\" /></content></option><option correct=\"false\"><content><text value=\"python\" /></content></option><option startIndex=\"7\" endIndex=\"15\" /><option startIndex=\"0\" endIndex=\"6\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>import</code> suivi de <code>requests</code>.</p></body></html>"
          },
          {
            "title": "NumPy usage",
            "id": 129350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons ensuite appeler <code>requests.get()</code> et lui passer une URL pour effectuer une requête HTTP GET.</p><p>Les requêtes HTTP GET sont le type de requête le plus courant utilisé sur le web, principalement conçues pour récupérer des données à partir d'une ressource donnée.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"22\" /><option startIndex=\"98\" endIndex=\"101\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>url</code> suivi de <code>url</code>.</p></body></html>"
          },
          {
            "title": "NumPy usage - Copy",
            "id": 129556,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La fonction <code>get()</code> renvoie une réponse que nous pouvons enregistrer dans une variable.</p><p>L'objet de réponse a un code de statut et des données ou une erreur attachée.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(response)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"112\" endIndex=\"120\" /></options></interaction></interactions><output><content><text value=\"&lt;Response [200]&gt;\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>response</code> suivi de <code>response</code>.</p></body></html>"
          },
          {
            "title": "Arrays",
            "id": 129353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour accéder aux données, nous devons analyser l'objet de réponse. Nous le faisons avec <code>.json()</code>.</p><p>Les données analysées sont un dictionnaire de clés et de valeurs.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"111\" endIndex=\"119\" /><option startIndex=\"119\" endIndex=\"126\" /></options></interaction></interactions><output><content><text value=\"{'id': 1, 'name': 'Rick Sanchez', 'status': 'Alive', 'species': 'Human', 'type': '', 'gender': 'Male', ...}\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>response</code> suivi de <code>response</code> et enfin <code>.json()</code>.</p></body></html>"
          },
          {
            "title": "Arrays - Copy",
            "id": 129557,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons accéder aux valeurs comme avec n'importe quel autre dictionnaire avec lequel nous travaillons.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\"]) \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;status&quot;\" class=\"string\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"108\" /><option startIndex=\"136\" endIndex=\"140\" /><option startIndex=\"140\" endIndex=\"148\" /><option startIndex=\"157\" endIndex=\"161\" /></options></interaction></interactions><output><content><text value=\"Rick Sanchez\" /><text type=\"break\" /><text value=\"Alive\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>data</code> suivi de <code>data</code> puis <code>[\"name\"]</code>, <code>data</code>.</p></body></html>"
          },
          {
            "title": "Question: NumPy usage",
            "id": 129354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quand devrais-tu utiliser la bibliothèque requests de Python ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Quand tu as besoin d'envoyer des requêtes HTTP facilement et efficacement</item><item value=\"2\" correct=\"false\">Lorsque tu effectues des tâches lourdes en calcul hors ligne</item></selection><p visible-if=\"wrong\">Quand tu as besoin d'envoyer des requêtes HTTP facilement et efficacement.</p></body></html>"
          },
          {
            "title": "Question: Import",
            "id": 129355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le nom de la bibliothèque que nous utilisons pour effectuer des requêtes HTTP en Python ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>requests</code></item><item value=\"2\" correct=\"false\"><code>http_requests</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>requests</code>.</p></body></html>"
          },
          {
            "title": "Question: Import as np",
            "id": 129356,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment analysons-nous l'objet de réponse pour accéder aux données ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>response.json()</code></item><item value=\"2\" correct=\"false\"><code>response.parse()</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>response.json()</code>.</p></body></html>"
          },
          {
            "title": "Example: Import",
            "id": 129358,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Écris le code nécessaire pour importer la bibliothèque requests en Python.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"15\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>import requests</code>.</p></body></html>"
          },
          {
            "title": "Example: Import as np",
            "id": 129359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Fais une requête GET en utilisant la bibliothèque requests.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"90\" /><option startIndex=\"90\" endIndex=\"91\" /><option startIndex=\"91\" endIndex=\"94\" /><option startIndex=\"94\" endIndex=\"95\" /><option startIndex=\"95\" endIndex=\"98\" /><option startIndex=\"98\" endIndex=\"99\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"run\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>requests</code> suivi de <code>.</code> puis <code>get</code>, <code>(</code>, <code>url</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Arrays - Copy - Copy",
            "id": 129558,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Imprime la valeur pour la clé <code>\"status\"</code> dans l'objet de réponse analysé.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\"]) \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;status&quot;\" class=\"string\" /><text value=\"])\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"157\" endIndex=\"171\" /></interactions><output><content><text value=\"Rick Sanchez\" /><text type=\"break\" /><text value=\"Alive\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>data[\"status\"]</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 14622,
        "title": "Utilisation de requests",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Array method",
            "id": 129371,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Travailler avec des API web implique d'envoyer et de recevoir des données sur Internet.</p><p>Lorsqu'on travaille avec la réponse, il est nécessaire d'assurer l'intégrité des données. C'est à cela que sert le code de statut.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"128\" /><option correct=\"false\"><content><text value=\"success_code\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>status_code</code>.</p></body></html>"
          },
          {
            "title": "Array method - Copy",
            "id": 129559,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>L'objet de réponse a un <code>status_code</code> qui lui est attaché.</p><p>Nous devrions vérifier si c'est égal à <code>200</code> pour s'assurer que les données ont été récupérées avec succès.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"128\" /><option startIndex=\"129\" endIndex=\"131\" /><option startIndex=\"132\" endIndex=\"135\" /><option correct=\"false\"><content><text value=\"=\" /></content></option><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>status_code</code> suivi de <code>==</code> et enfin <code>200</code>.</p></body></html>"
          },
          {
            "title": "Array method 2",
            "id": 129372,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Après s'être assuré que les données ont été récupérées avec succès, nous pouvons les décompresser.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"78\" /><option startIndex=\"103\" endIndex=\"111\" /><option startIndex=\"189\" endIndex=\"197\" /><option correct=\"false\"><content><text value=\"status_code\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>response</code> suivi de <code>response</code> et enfin <code>response</code>.</p></body></html>"
          },
          {
            "title": "Array cast",
            "id": 129373,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dans certains cas, nous n'obtiendrons pas ce que nous attendons. Par exemple, il n'y a pas de Pokémon avec le nom <em>Mimo</em>.</p><p>Nous devrions toujours vérifier le <code>status_code</code>, et en cas d'erreur, nous ne touchons pas aux données.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"283\" endIndex=\"287\" /><option startIndex=\"287\" endIndex=\"288\" /><option startIndex=\"293\" endIndex=\"325\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"&quot;failure&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>else</code> suivi de <code>:</code> et enfin <code>print(\"Failed to retrieve data\")</code>.</p></body></html>"
          },
          {
            "title": "Indexing",
            "id": 129374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Au lieu de comparer directement le code de statut, nous pouvons également placer l'appel de requête dans un bloc <code>try</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"response.status_code == 200\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>try</code> suivi de <code>:</code>.</p></body></html>"
          },
          {
            "title": "Indexing - Copy",
            "id": 129560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous ajoutons ensuite un bloc <code>except</code> pour intercepter les erreurs potentielles. Ici, nous prenons l'erreur de l'objet d'erreur et l'utilisons comme <code>error</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error: \" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"296\" endIndex=\"302\" /><option startIndex=\"303\" endIndex=\"330\" /><option correct=\"false\"><content><text value=\"else\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>except</code> suivi de <code>requests.HTTPError as error</code>.</p></body></html>"
          },
          {
            "title": "Indexing - Copy - Copy",
            "id": 129561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous devrions appeler <code>raise_for_status</code> sur l'objet de réponse pour identifier les erreurs que nous pouvons ensuite intercepter via le bloc <code>except</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error: \" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"113\" endIndex=\"121\" /><option startIndex=\"122\" endIndex=\"138\" /><option correct=\"false\"><content><text value=\"check_error\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>response</code> suivi de <code>raise_for_status</code>.</p></body></html>"
          },
          {
            "title": "Question: Array method",
            "id": 129377,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel code de statut sera utilisé pour un appel réussi ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">200</item><item value=\"2\" correct=\"false\">400</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir 200.</p></body></html>"
          },
          {
            "title": "Question: Array method 2",
            "id": 129378,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle méthode peut-on appeler pour vérifier une erreur dans la requête API ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"3\" correct=\"false\"><code>response.check_error()</code></item><item value=\"3\" correct=\"true\"><code>response.raise_for_status()</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>response.raise_for_status()</code>.</p></body></html>"
          },
          {
            "title": "Question: Array cast",
            "id": 129379,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que se passe-t-il lorsque nous envoyons une requête en utilisant la bibliothèque Python <code>requests</code> qui est une URL invalide ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">La bibliothèque requests génère une erreur</item><item value=\"2\" correct=\"false\">Rien ne se passe</item></selection><p visible-if=\"wrong\">La bibliothèque requests génère une erreur.</p></body></html>"
          },
          {
            "title": "Question 2: Array cast",
            "id": 129380,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel type de réponse recevras-tu après avoir envoyé une requête GET à un point de terminaison d'une API ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"print(response)\" /></content><output><content><text value=\"&lt;Response [200]&gt;\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Objet de réponse</item><item value=\"4\" correct=\"false\">Liste de dictionnaires</item></selection><p visible-if=\"wrong\">Objet de réponse.</p></body></html>"
          },
          {
            "title": "Question: Indexing",
            "id": 129381,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le résultat attendu de ce code ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><output><content><text value=\"200\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>200</code></item><item value=\"2\" correct=\"false\"><code>Error</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>200</code>.</p></body></html>"
          },
          {
            "title": "Question: Size",
            "id": 129382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel sera le code de statut de la réponse après l'exécution de ce code, étant donné qu'il n'y a pas de Pokémon appelé \"Mimo\" ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/mimo&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><output><content><text value=\"404\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">200</item><item value=\"2\" correct=\"true\">404</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir 404.</p></body></html>"
          },
          {
            "title": "Example: Array method",
            "id": 129383,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Stocke dans la variable <code>response_json</code> l'objet JSON retourné par la fonction <code>requests.get()</code> après avoir appelé une URL particulière.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text value=\"response_json = response.json()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"98\" endIndex=\"111\" /><option startIndex=\"114\" endIndex=\"122\" /><option startIndex=\"123\" endIndex=\"127\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>response_json</code> suivi de <code>response</code> et enfin <code>json</code>.</p></body></html>"
          },
          {
            "title": "Example: Indexing",
            "id": 129385,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Utilise <code>try</code> puis <code>except</code> pour faire une requête et intercepter une éventuelle erreur.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/mimo&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"  response = requests.get(url)\" /><text type=\"break\" /><text value=\"  response.raise_for_status()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error:\" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"283\" endIndex=\"289\" /><option startIndex=\"290\" endIndex=\"308\" /><option startIndex=\"309\" endIndex=\"311\" /><option startIndex=\"312\" endIndex=\"317\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"else\" /></content></option></options></interaction></interactions><output><content><text value=\"404 Client Error: Not Found for url: https://pokedex.mimo.dev/api/pokemon/mimo\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>try</code> suivi de <code>except</code> puis <code>requests.HTTPError</code>, <code>as</code>, <code>error</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}