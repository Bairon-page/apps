{
  "tutorial": {
    "id": 1700,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Machine à billets",
    "descriptionContent": "Utilise CSS Grid pour créer une mise en page pour une billetterie",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1700-icon-banner.svg",
    "chapters": [
      {
        "id": 11445,
        "title": "Machine à billets",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro 2",
            "id": 105814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pour ce projet, nous allons utiliser des espaces de grille pour créer une interface de ticket pour une application bancaire.\n\nNous commencerons avec le modèle HTML suivant contenant les boutons de l'interface et les règles CSS pour les styliser et les aligner.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Creating a grid",
            "id": 105815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous voulons afficher les boutons sur une grille afin de mieux contrôler leur placement sur la page.\n\nSi tu regardes le code HTML, tu verras que tous les boutons sont à l'intérieur d'un élément `div` avec une classe `grid-container`. Nous allons créer une règle pour cette classe afin de contrôler l'affichage des boutons à l'intérieur.\n\n1. Crée une règle pour la classe `grid-container`.\n2. Crée une grille en définissant la propriété `display` à la bonne valeur.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Add a `display: grid;` rule to display elements inside a parent on a grid."
                }
              ]
            }
          },
          {
            "title": "Grid columns",
            "id": 105837,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous aimerions afficher nos quatre boutons sur deux colonnes avec deux boutons chacun. Ajoutons une règle pour créer deux colonnes de taille égale.\n\n1. À l'intérieur de la règle `.grid-container`, code une propriété pour créer deux colonnes de taille égale qui prennent chacune une fraction de l'espace disponible.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Set the columns with the `grid-template-columns` property.\n2. The number of property values defines the number of columns.\n3. A value like `1fr` means that a column takes one fraction of the available space.\n4. Use this template to help you define your property: \n```css \ngrid-template-columns: <fraction> <fraction>;\n```"
                }
              ]
            }
          },
          {
            "title": "Column gap",
            "id": 105843,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Si tu exécutes ton code, tu verras que pour l'instant les boutons des deux colonnes sont trop proches l'un de l'autre. Ajoutons un espace entre les colonnes pour les séparer.\n\n1. À l'intérieur de la règle `.grid-container`, code une propriété pour créer un espace de `5px` entre les deux colonnes de la grille.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\ncolumn-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Row gap",
            "id": 105845,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que les colonnes ne se collent plus, il est temps de corriger les lignes.\n\n1. À l'intérieur de la règle `.grid-container`, code une propriété pour créer un écart de `25px` entre les deux lignes de la grille.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\nrow-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Gap shorthand",
            "id": 105846,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous avons utilisé `column-gap` et `row-gap` pour définir les espaces séparément, mais nous pouvons en fait le faire en une seule ligne. Changeons notre code.\n\n1. Utilise l'abréviation `gap` pour définir les espaces de ligne à `25px` et les espaces de colonne à `5px` en une seule ligne.\n2. Supprime les propriétés `column-gap` et `row-gap` puisque nous les avons remplacées par l'abréviation.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The gap shorthand looks like: \n```css\ngap: <rowGap> <columnGap>;\n```"
                }
              ]
            }
          },
          {
            "title": "Overview",
            "id": 105847,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Excellent travail ! L'interface de ticket pour l'application bancaire est terminée.\n\nNous ne faisons pas de tests ici, alors n'hésite pas à expérimenter avec les éléments et les règles. Essaie d'ajouter plus de boutons et d'adapter la disposition de la grille en conséquence.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}