{
  "tutorial": {
    "id": 2790,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Types statiques",
    "descriptionContent": "Apprends-en plus sur les types statiques en TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14778,
        "title": "Types statiques",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 130482,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bienvenue dans TypeScript, une extension de JavaScript qui ajoute des types statiques à JavaScript. Ces types aident à détecter les erreurs pendant le développement.</p><p>Tu peux utiliser TypeScript dans n'importe quel environnement où tu peux utiliser JavaScript.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130495,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Une caractéristique clé de TypeScript est son utilisation de types statiques, contrairement à JavaScript, qui permet aux variables de changer de type dynamiquement.</p><p>Nous commençons par créer une variable en TypeScript. Comme en JavaScript, nous pouvons déclarer une variable en utilisant <code>var</code>, <code>let</code>, et <code>const</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\"int\" /></content></option><option correct=\"false\"><content><text value=\"string\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>let</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130485,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comme TypeScript utilise des types statiques, nous devons les définir lors de la création. Ajoutons le type en écrivant un deux-points <code>:</code> suivi du mot-clé <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"13\" /><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"variable\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>:</code> suivi de <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130496,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Enfin, nous voulons attribuer une valeur à notre variable de type <code>string</code>. Comme elle ne peut contenir que des chaînes de caractères, nous ne pouvons attribuer que des chaînes de caractères.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"38\" /><option correct=\"false\"><content><text value=\"42\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>=</code> suivi de <code>\"Hello, world!\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 131280,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comme TypeScript est une extension de JavaScript, tu peux utiliser toutes les fonctions de JavaScript. Affichons la variable pour montrer sa valeur.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(greeting);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"60\" /><option startIndex=\"60\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"Hello, world!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>console.log(</code> suivi de <code>greeting</code> et enfin <code>);</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Contrairement à JavaScript, TypeScript prend en charge les annotations de type pour spécifier les types explicitement.</p><p>Comme tu l'as vu, une <strong>annotation de type</strong> définit le type d'une variable. Dans ce cas, la variable est de type <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(greeting);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Hello, world!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Une fois qu'une variable est définie sur un certain type, tenter de changer le type entraînera une erreur.</p><p>Par exemple, si nous définissons une variable comme une chaîne de caractères, nous ne pouvons pas lui attribuer un nombre plus tard. Essaie d'assigner un <code>number</code> à une variable de type <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" greeting: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Hello, world!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"greeting = \" /><text value=\"42\" class=\"number\" /><text value=\"; \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\"&quot;Hello, TypeScript!&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Error: Type &quot;number&quot; is not assignable to type &quot;string&quot;.\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>42</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130489,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Créons une nouvelle variable de type chaîne appelée <code>name</code> et attribuons-lui une valeur.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Ada&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"8\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option startIndex=\"17\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"24\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Ada\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>let</code> suivi de <code>name</code> puis <code>:</code>, <code>string</code>, <code>=</code>, <code>\"Ada\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130490,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le résultat de ce code TypeScript ?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myVariable: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;TypeScript is cool&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"myVariable = \" /><text value=\"1000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(myVariable);\" /></content><output><content><text value=\"Error: Type &quot;number&quot; is not assignable to type &quot;string&quot;.\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Erreur : Le type \"number\" ne peut pas être assigné au type \"string\"</item><item value=\"2\" correct=\"false\">1000</item></selection><p visible-if=\"wrong\">Erreur : Le type \"number\" ne peut pas être assigné au type \"string\".</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130492,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code TypeScript pour déclarer une variable de type <code>string</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" motto: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Learn TypeScript&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(motto);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"11\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"Learn TypeScript\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130491,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que se passe-t-il si nous essayons d'assigner un nombre à une variable de type chaîne de caractères en TypeScript ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">TypeScript générera une erreur</item><item value=\"2\" correct=\"false\">Aucune erreur ne se produira</item></selection><p visible-if=\"wrong\">TypeScript générera une erreur.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 130493,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute explicitement le type de la variable <code>name</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" = \" /><text value=\"&quot;Maria&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"9\" /><option startIndex=\"10\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"=\" /></content></option></options></interaction></interactions><output><content><text value=\"Maria\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>:</code> suivi de <code>string</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}