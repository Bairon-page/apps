{
  "tutorial": {
    "id": 1750,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Support linguistique",
    "descriptionContent": "Utilise des conditionnels pour traduire un message en fonction du paramètre de langue actuel",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1750-icon-banner.svg",
    "chapters": [
      {
        "id": 11628,
        "title": "Support linguistique",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Setting the variables",
            "id": 106941,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Une grande entreprise de cartes de vœux souhaite offrir un support pour différentes langues sur son site web. Nous allons les aider !\n\nTout d'abord, nous devons définir le message et la première langue.\n\n1. Crée une variable `let` nommée `message` et assigne-lui `\"\"`.\n2. Crée une variable `let` nommée `language` et assigne-lui `English`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\r\n",
                  "solvedContent": "let message = \"\";\r\nlet language = \"English\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Setting the first if",
            "id": 107021,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Commençons par le français.\n\n1. Crée une instruction `if` qui définit le `message` à `\"Thank you\"` si la `language` est `\"English\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"\";\r\nlet language = \"English\";",
                  "solvedContent": "let message = \"\";\r\nlet language = \"English\";\r\nif (language === \"English\") {\r\n  message = \"Thank you\";\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for an `if` statement is :\n```javascript\nif (condition) {<code block>}\n```"
                }
              ]
            }
          },
          {
            "title": "Default message",
            "id": 106937,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il est toujours recommandé d'ajouter un message par défaut.\n\n1. Change la valeur de `language` à `\"Japanese\"`. Tu peux le faire lors de l'initialisation de la variable, ou dans une instruction séparée avant la condition.\n2. Pour définir un message par défaut, ajoute une instruction `else` qui définit `message` à `\"We don't support \"`, puis joins la variable `language` de sorte que la chaîne affichée ressemble à ceci :\n```JS\nWe don't support Japanese\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"\";\nlet language = \"English\";\nif (language === \"English\") {\n  message = \"Thank you\";\n}",
                  "solvedContent": "let message = \"\";\nlet language = \"Japanese\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else {\n  message = \"We don't support \" + language;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "An `else` statement has no condition.\n\nYou can concatenate strings with variables by coding `string` + variable`"
                }
              ]
            }
          },
          {
            "title": "Displaying the message",
            "id": 106930,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Voyons ce que ton programme attribue à `message`.\n\n1. Affiche `message` dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"\";\nlet language = \"Japanese\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else {\n  message = \"We don't support \" + language;\n}\n",
                  "solvedContent": "let message = \"\";\nlet language = \"Japanese\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Supporting Spanish",
            "id": 106935,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoutons la prise en charge de l'espagnol.\n\n1. Change la valeur de `language` à `\"Spanish\"`.\n2. Crée un bloc `else if` juste en dessous du bloc `if`, qui s'exécute lorsque `language` est égal à `\"Spanish\"`. À l'intérieur du bloc de code, définis `message` sur `\"Gracias\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"\";\nlet language = \"Japanese\";\nif (language === \"English\") {\n  message = \"Thank you\";\n\n\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);",
                  "solvedContent": "let message = \"\";\nlet language = \"Spanish\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else if (language === \"Spanish\") {\n  message = \"Gracias\";\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax for `else if` is similar to that of an `if` statement.\n\nThe only difference is, you have to write `else if` instead of `if`."
                }
              ]
            }
          },
          {
            "title": "Supporting German",
            "id": 106933,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, ajoutons la prise en charge de l'allemand. Plus on est de fous, plus on rit !\n\n1. Change la valeur de `language` à `\"German\"`.\n2. Ajoute une deuxième instruction `else if` qui définit `message` à `\"Danke\"` lorsque la langue est `\"German\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"\";\nlet language = \"Spanish\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else if (language === \"Spanish\") {\n  message = \"Gracias\";\n  \n\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);",
                  "solvedContent": "let message = \"\";\nlet language = \"German\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else if (language === \"Spanish\") {\n  message = \"Gracias\";\n} else if (language === \"German\") {\n message = \"Danke\";\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The order of `else if` statements do not matter.\n\nJust make sure that they are after the `if` statement and before the `else` statement."
                }
              ]
            }
          },
          {
            "title": "Switching to Another Language",
            "id": 106934,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons codé la condition, vérifions à nouveau pour nous assurer que tout fonctionne correctement.\n\n1. Change la valeur de `language` à une langue de ton choix. Cela peut être une langue que le code supporte, ou que le code ne supporte pas. Observe le résultat dans la console. Fais cela autant de fois que tu le souhaites.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"\";\nlet language = \"German\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else if (language === \"Spanish\") {\n  message = \"Gracias\";\n} else if (language === \"German\") {\n message = \"Danke\";\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);",
                  "solvedContent": "let message = \"\";\nlet language = \"Pig Latin\";\nif (language === \"English\") {\n  message = \"Thank you\";\n} else if (language === \"Spanish\") {\n  message = \"Gracias\";\n} else if (language === \"German\") {\n message = \"Danke\";\n} else {\n  message = \"We don't support \" + language;\n}\nconsole.log(message);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}