{
  "tutorial": {
    "id": 888,
    "version": 15,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Redéfinition de méthodes",
    "descriptionContent": "Vous voulez le même comportement dans la sous-classe mais des résultats légèrement différents ? Le remplacement est la clé.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6714,
        "title": "Surcharge de méthode",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 57986,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Disons que nous développons un jeu de rôle avec des humains et des sorciers. Les sorciers sont des humains spéciaux qui peuvent attaquer avec des sorts magiques.</p><p>C'est là que la <strong>surcharge de méthode</strong> est utile.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 57996,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons créer une classe <code>Human</code> et avoir une classe <code>Wizard</code> qui l'étend.</p><p>Ensuite, en utilisant la redéfinition de méthode, nous pouvons changer le comportement d'attaque de la classe <code>Wizard</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57997,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Redéfinir une méthode remplace le code de la méthode dans la superclasse par celui de la sous-classe.</p><p>Appelle la méthode <code>receiveDamage()</code> de la classe <code>Wizard</code> pour voir ce qui arrive à la propriété <code>health</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"293\" endIndex=\"299\" /><option startIndex=\"299\" endIndex=\"300\" /><option startIndex=\"300\" endIndex=\"315\" /><option startIndex=\"315\" endIndex=\"316\" /></options></interaction></interactions><output><content><text value=\"100\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>wizard</code> suivi de <code>.</code> puis <code>receiveDamage()</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57998,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour redéfinir une méthode, nous lui donnons le <em>même</em> nom et les mêmes paramètres que la méthode dans la superclasse.</p><p>Nous pouvons redéfinir <code>receiveDamage()</code> de la superclasse en codant la même méthode dans la sous-classe.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"173\" endIndex=\"188\" /></interactions><output><content><text value=\"100\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>receiveDamage()</code>.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57999,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le remplacement signifie que nous pouvons avoir la <em>même méthode</em> dans la sous-classe mais <em>personnaliser</em> son comportement selon ce qui est nécessaire dans la sous-classe.</p><p>Lorsque nous appelons la méthode <code>receiveDamage()</code> sur <code>human</code> et <code>wizard</code>, nous verrons leur comportement similaire mais des résultats différents.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" human = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Human(\" /><text value=\"&quot;ax&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"human.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(human.health);\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"260\" endIndex=\"265\" /><option startIndex=\"266\" endIndex=\"281\" /><option startIndex=\"346\" endIndex=\"352\" /><option startIndex=\"353\" endIndex=\"368\" /></options></interaction></interactions><output><content><text value=\"90\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>human</code> suivi de <code>receiveDamage()</code> puis <code>wizard</code>, <code>receiveDamage()</code>.</p></body></html>"
          },
          {
            "title": "Super",
            "id": 58001,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si nous avons besoin du comportement de la méthode de la superclasse, nous pouvons l'appeler avec le mot-clé <code>super</code>.</p><p>Tape le mot-clé correct pour appeler la méthode <code>attack()</code> de la classe Human.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Swing &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".attack();\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.attack();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"184\" endIndex=\"189\" /></interactions><output><content><text value=\"Swing staff\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>super</code>.</p></body></html>"
          },
          {
            "title": "Something extra",
            "id": 58002,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lors de la redéfinition, nous pouvons nous appuyer sur le comportement de la sous-classe. Après avoir balancé leur bâton, un sorcier peut prononcer un sort.</p><p>Ajoute un comportement spécifique au sorcier à la méthode <code>attack()</code> de la classe <code>Wizard</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Swing &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".attack();\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Zimzalabim!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.attack();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"202\" endIndex=\"213\" /><option startIndex=\"214\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"Swing staff\" /><text type=\"break\" /><text value=\"Zimzalabim!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>console.log</code> suivi de <code>\"Zimzalabim!\"</code>.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57988,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pourquoi voudrions-nous qu'une méthode dans une sous-classe remplace une méthode d'une superclasse ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Pour personnaliser la méthode dans la sous-classe</item><item value=\"2\" correct=\"false\">Pour changer la méthode de la superclasse pour les sous-classes</item></selection><p visible-if=\"wrong\">Pour personnaliser la méthode dans la sous-classe.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57989,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce que la méthode de la sous-classe doit avoir en commun avec la méthode de la superclasse lorsqu'elle la redéfinit ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Le nom et les paramètres</item><item value=\"2\" correct=\"false\">Le corps de la méthode</item></selection><p visible-if=\"wrong\">Le nom et les paramètres.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57990,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode dans la classe <code>Rabbit</code> surcharge-t-elle la méthode de la classe <code>Mammal</code> ?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Mammal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" eat(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(food + \" /><text value=\"&quot; nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rabbit\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Mammal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" eatVeggies(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (food === \" /><text value=\"&quot;lettuce&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(food + \" /><text value=\"&quot; nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Non, il a un nom différent</item><item value=\"2\" correct=\"false\">Oui, il a le même paramètre</item></selection><p visible-if=\"wrong\">Non, il a un nom différent.</p></body></html>"
          },
          {
            "title": "Question: Super",
            "id": 58556,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel mot-clé utilisons-nous lorsque nous appelons une méthode de la superclasse dans la sous-classe ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>super</code></item><item value=\"2\" correct=\"false\"><code>this</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>super</code>.</p></body></html>"
          },
          {
            "title": "Question: Extra",
            "id": 109184,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Une sous-classe peut-elle encore utiliser la méthode originale de la superclasse, une fois qu'elle l'a remplacée ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Non, en appelant cette méthode par son nom sans <code>super</code>, la sous-classe utilisera la méthode de substitution</item><item value=\"2\" correct=\"false\">Oui, la sous-classe utilise la méthode de la superclasse par défaut, même après l'avoir redéfinie</item></selection><p visible-if=\"wrong\">Non, en appelant cette méthode par son nom sans <code>super</code>, la sous-classe utilisera la méthode de substitution.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods",
            "id": 108789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Surcharger <code>brush()</code> de la superclasse en codant la même méthode dans la sous-classe.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"brush1.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"118\" /><option startIndex=\"119\" endIndex=\"120\" /><option startIndex=\"149\" endIndex=\"150\" /></options></interaction></interactions><output><content><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>brush</code> suivi de <code>()</code> puis <code>{</code>, <code>}</code>.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods 2",
            "id": 108788,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Appelle la méthode <code>brush()</code> sur l'instance <code>ElectricBrush</code> pour voir ce qui se passe.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myBrush = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"myBrush.brush();\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"190\" endIndex=\"205\" /></interactions><output><content><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>myBrush.brush()</code>.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods 3",
            "id": 108790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Appelle la méthode <code>brush()</code> sur <code>brush1</code> et <code>brush2</code> pour voir leur comportement différent.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ToothBrush();\" /><text type=\"break\" /><text value=\"brush1.brush();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush2 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"brush2.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"186\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"201\" /><option startIndex=\"238\" endIndex=\"244\" /><option startIndex=\"244\" endIndex=\"253\" /></options></interaction></interactions><output><content><text value=\"Cleaning teeth.\" /><text type=\"break\" /><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>brush1</code> suivi de <code>.brush();</code> puis <code>brush2</code>, <code>.brush();</code>.</p></body></html>"
          },
          {
            "title": "Example: Super",
            "id": 109183,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute du code pour que la brosse électrique puisse à la fois nettoyer <em>et</em> vibrer.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".brush();\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myBrush = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"myBrush.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"123\" endIndex=\"128\" /><option startIndex=\"128\" endIndex=\"134\" /><option startIndex=\"134\" endIndex=\"137\" /></options></interaction></interactions><output><content><text value=\"Cleaning teeth.\" /><text type=\"break\" /><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>super</code> suivi de <code>.brush</code> et enfin <code>();</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}