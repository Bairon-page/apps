{
  "tutorial": {
    "id": 1733,
    "version": 7,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Accès Administrateur Système",
    "descriptionContent": "Utiliser JavaScript pour vérifier si un utilisateur est un administrateur système",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1733-icon-banner.svg",
    "chapters": [
      {
        "id": 11585,
        "title": "Accès Administrateur Système",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Variables",
            "id": 106536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons un processus de connexion pour le tableau de bord d'un administrateur.\n\nTout d'abord, configurons certaines des variables dont nous avons besoin.\n\n1. Crée une variable `const` nommée `account` et stocke `\"admin\"` dedans.\n2. Crée une variable `let` nommée `accountStatus` et stocke `\"active\"` dedans.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Admin",
            "id": 106538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous allons utiliser une comparaison pour vérifier si le compte est un administrateur et stocker le résultat dans une variable.\n\n1. Crée une variable `const` nommée `isAdmin`.\n2. Dans la variable `isAdmin`, stocke le résultat de la comparaison suivante : vérifie si `account` est égal à `\"admin\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to use the correct operator:\n```javascript\n===\n```"
                }
              ]
            }
          },
          {
            "title": "Valid",
            "id": 106537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous allons utiliser une autre variable pour conserver le résultat de la vérification afin de s'assurer que le compte est dans un état valide.\n\n1. Crée une variable `const` nommée `isValid`.\n2. Dans `isValid`, stocke le résultat de la comparaison suivante : si `accountStatus` n'est **pas** égal à `\"inactive\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to use the correct operator:\n```javascript\n!==\n```"
                }
              ]
            }
          },
          {
            "title": "Is admin",
            "id": 106539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Affichons la variable avec une invite.\n\n1. Code la syntaxe pour afficher dans la console.\n2. À l'intérieur des parenthèses, code la chaîne de caractères `\"Admin: \"`, puis ajoute la variable `isAdmin` juste après. La console devrait afficher :\n```javascript\nAdmin: true  \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To display a string along with a variable, the code should look like this:\n```javascript\nconsole.log(\"<string value>\"  + <variable>);\n```"
                }
              ]
            }
          },
          {
            "title": "Is Valid",
            "id": 106541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Affichons la variable `isValid` avec une invite.\n\n1. Code la syntaxe pour afficher dans la console.\n2. À l'intérieur des parenthèses, code la chaîne de caractères `\"Valid: \"` puis ajoute la variable `isValid` juste après. La console devrait maintenant afficher ce qui suit :\n```javascript\nAdmin: true\nValid: true  \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);\nconsole.log(\"Valid: \" + isValid);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Regular",
            "id": 106540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Voyons ce qui se passe lorsqu'un utilisateur avec un compte régulier essaie de se connecter.\n\n1. Change la valeur de la variable `account` en `\"regular\"` à la ligne 1 du code.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);\nconsole.log(\"Valid: \" + isValid);",
                  "solvedContent": "const account = \"regular\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);\nconsole.log(\"Valid: \" + isValid);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}