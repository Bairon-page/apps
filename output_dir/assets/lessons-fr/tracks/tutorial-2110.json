{
  "tutorial": {
    "id": 2110,
    "version": 14,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Objets de requête et de réponse",
    "descriptionContent": "Apprends les bases d'Express JS",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13544,
        "title": "L'objet Request",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "app.get()",
            "id": 121523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode <code>get</code> d'Express définit une route spécifique qui correspond aux requêtes <code>GET</code> entrantes vers un chemin spécifié et déclenche une fonction de rappel.</p><p>Nous pouvons créer des endpoints pour toutes les requêtes HTTP. Commençons par <code>/</code>, le soi-disant endpoint racine.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"79\" endIndex=\"82\" /><option startIndex=\"83\" endIndex=\"86\" /><option startIndex=\"87\" endIndex=\"90\" /></options></interaction></interactions><output><content><text value=\"The server is listening on port 3000\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>get</code> et enfin <code>\"/\"</code>.</p></body></html>"
          },
          {
            "title": "Req and Res",
            "id": 122150,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La fonction de rappel accepte deux arguments : un <strong>objet de requête</strong> et un <strong>objet de réponse</strong>. Ceux-ci sont souvent écrits comme <code>req</code> et <code>res</code>.</p><p>Tous les endpoints nécessitent un chemin et utilisent les objets <code>req</code> et <code>res</code> comme paramètres dans leur fonction de rappel.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(req);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"93\" endIndex=\"96\" /><option startIndex=\"98\" endIndex=\"101\" /><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\"  method: &quot;GET&quot;,\" /><text type=\"break\" /><text value=\"  url: &quot;/&quot;,\" /><text type=\"break\" /><text value=\"  headers: {\" /><text type=\"break\" /><text value=\"    host: &quot;localhost:3000&quot;,\" /><text type=\"break\" /><text value=\"    ...\" /><text type=\"break\" /><text value=\"  },\" /><text type=\"break\" /><text value=\"  ...\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req</code> suivi de <code>res</code>.</p></body></html>"
          },
          {
            "title": " req object/req.method",
            "id": 121782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>L'objet <code>req</code> a des propriétés contenant des informations utiles qui peuvent être utilisées pour aider à gérer et répondre aux requêtes.</p><p>La propriété <code>req.method</code> contient par exemple des informations sur le type de requête HTTP qui a été envoyée.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"142\" endIndex=\"145\" /><option startIndex=\"145\" endIndex=\"146\" /><option startIndex=\"146\" endIndex=\"152\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req</code> suivi de <code>.</code> et enfin <code>method</code>.</p></body></html>"
          },
          {
            "title": " req.hostname",
            "id": 121780,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le <strong>hostname</strong> identifie l'appareil ou le serveur qui fait la demande. Cela peut être utile pour décider si une demande est approuvée ou refusée.</p><p>Accédons au <code>hostname</code> pour compléter le journal de la console.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Hostname: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"183\" endIndex=\"186\" /><option startIndex=\"186\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"195\" /><option correct=\"false\"><content><text value=\"path\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Hostname: localhost:3000\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req</code> suivi de <code>.</code> et enfin <code>hostname</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132290,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Déballer la méthode de la requête et le nom d'hôte est la plupart du temps d'une utilité limitée. Cependant, la requête peut contenir un contenu plus utile.</p></body></html>"
          },
          {
            "title": " req.params.name - Copy",
            "id": 132291,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les valeurs des paramètres peuvent être utiles dans une grande variété de situations en permettant à la réponse d'être plus dynamique en fonction de la requête.</p><p>Nous pouvons accéder à une valeur de paramètre à partir d'une route avec des paramètres tels que <code>/flag/:type</code> avec <code>req.params.type</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu/:type&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Menu endpoint called&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Type parameter: \" /><text value=\"${req.params.type}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"188\" endIndex=\"191\" /><option startIndex=\"191\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"203\" /><option correct=\"false\"><content><text value=\"state\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Menu endpoint called\" /><text type=\"break\" /><text value=\"Type parameter: breakfast\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req</code> suivi de <code>.</code> puis <code>params</code>, <code>.</code>, <code>type</code>.</p></body></html>"
          },
          {
            "title": " req.params.name",
            "id": 121783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons spécifier des paramètres dans une route en ajoutant des espaces réservés précédés de deux-points dans le chemin de la route, comme <code>/:type</code>.</p><p>Lorsque nous appelons une route avec un paramètre comme <code>/menu/dinner</code>, le <code>:type</code> dans <code>/menu/:type</code> capture la valeur <code>\"dinner\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu/:type&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Menu endpoint called&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Type parameter: \" /><text value=\"${req.params.type}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"94\" endIndex=\"99\" /><option correct=\"false\"><content><text value=\"type\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Menu endpoint called\" /><text type=\"break\" /><text value=\"Type parameter: dinner\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>:type</code>.</p></body></html>"
          },
          {
            "title": "Question: app.get()",
            "id": 121527,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quels sont les arguments reçus par la fonction de rappel de <code>app.get</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un objet de requête et un objet de réponse</item><item value=\"2\" correct=\"false\">L'adresse IP distante de la requête</item></selection><p visible-if=\"wrong\">Un objet de requête et un objet de réponse.</p></body></html>"
          },
          {
            "title": "Question: req.hostname",
            "id": 121784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que contient le <code>req.hostname</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il contient le nom d'hôte de l'appareil ou du serveur demandeur</item><item value=\"2\" correct=\"false\">Il contient le nom d'hôte du site web</item></selection><p visible-if=\"wrong\">Il contient le nom d'hôte de l'appareil ou du serveur demandeur.</p></body></html>"
          },
          {
            "title": "Question: req.params.name",
            "id": 121790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si nous accédons à <code>/user/Tabatha</code> Que contient <code>req.params.name</code> ?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/user/:name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Name parameter: \" /><text value=\"${req.params.name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name parameter: Tabatha\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Tabatha</code></item><item value=\"2\" correct=\"false\"><code>user</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>Tabatha</code>.</p></body></html>"
          },
          {
            "title": "Example: app.get()",
            "id": 121530,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour accepter les requêtes entrantes sur la route racine.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"88\" endIndex=\"89\" /><option correct=\"false\"><content><text value=\"root\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>/</code>.</p></body></html>"
          },
          {
            "title": "Example: req.method",
            "id": 121789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code afin que la <code>method</code> de la requête HTTP s'affiche dans la console.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"142\" endIndex=\"152\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>req.method</code>.</p></body></html>"
          },
          {
            "title": "Example: req.hostname",
            "id": 121787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Affiche le nom d'hôte du serveur demandeur dans la console.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Hostname: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (req.hostname === \" /><text value=\"'localhost'\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Request Accepted'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Request Denied'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"183\" endIndex=\"186\" /><option startIndex=\"186\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"195\" /><option correct=\"false\"><content><text value=\"host\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Hostname: localhost\" /><text type=\"break\" /><text value=\"Request Accepted\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req</code> suivi de <code>.</code> et enfin <code>hostname</code>.</p></body></html>"
          },
          {
            "title": "Example: req.params.name",
            "id": 121793,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code afin que la valeur du paramètre dynamique du nom de l'animal soit affichée dans la console.</p><p>Ne t'inquiète pas si tu n'as pas encore vu les paramètres dynamiques. Nous y arriverons bientôt.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/pets/:petName&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Thet pet's name is: \" /><text value=\"${req.params.petName}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"217\" endIndex=\"224\" /><option correct=\"false\"><content><text value=\"name\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name parameter: lulo\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>petName</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13545,
        "title": "L'objet Response",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 121794,
            "contentType": "interactive",
            "images": [
              {
                "id": "32ea475c-ef5f-4e9e-8bdd-674ad98fd220"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Similaire à l'objet request, l'objet response fournit également des propriétés et des méthodes auxquelles nous pouvons accéder.</p><p>L'objet <code>res</code> représente la réponse HTTP que notre application Express envoie au front-end après avoir reçu une requête.</p><img src=\"32ea475c-ef5f-4e9e-8bdd-674ad98fd220\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "res.send()",
            "id": 121795,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les méthodes sur l'objet <code>res</code> nous permettent de personnaliser la réponse du serveur aux requêtes entrantes.</p><p>La méthode <code>res.send</code> envoie la réponse HTTP au front-end. Envoyons un texte simple.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Welcome!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"162\" endIndex=\"166\" /><option startIndex=\"167\" endIndex=\"177\" /><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>send</code> suivi de <code>\"Welcome!\"</code>.</p></body></html>"
          },
          {
            "title": "The Request and Response Cycle",
            "id": 121524,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>L'interaction entre le frontend et le serveur web est un cycle. Une requête est envoyée, traitée, et finalement, une réponse est renvoyée.</p><p>Complétons le cycle en utilisant la méthode <code>.send</code> de l'objet <code>res</code> pour envoyer la réponse au frontend.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request method: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;This is the response&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"156\" endIndex=\"164\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>res.send</code>.</p></body></html>"
          },
          {
            "title": "res.status()",
            "id": 121796,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Par défaut, <code>res.send</code> définit automatiquement le code de statut sur <code>200 OK</code> à moins que tu ne spécifies un code de statut différent avec <code>res.status</code>.</p><p>C'est une bonne pratique de définir explicitement le code de statut à <code>200</code> pour indiquer une requête réussie.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Successful Request&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"163\" endIndex=\"166\" /><option startIndex=\"166\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"173\" /><option startIndex=\"174\" endIndex=\"177\" /><option correct=\"false\"><content><text value=\"404\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.</code> puis <code>status</code>, <code>200</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy",
            "id": 132293,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons également choisir de répondre avec du HTML.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;&lt;p&gt;Welcome&lt;/p&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"167\" endIndex=\"183\" /><option correct=\"false\"><content><text value=\"&quot;Welcome&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>\"&lt;p&gt;Welcome&lt;/p&gt;\"</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy",
            "id": 132294,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>res.send</code> peut renvoyer des pages HTML entièrement développées. Cependant, ce n'est pas très courant.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"`\" /><text type=\"break\" /><text value=\"    &lt;html&gt;\" /><text type=\"break\" /><text value=\"      &lt;head&gt;&lt;title&gt;My Page&lt;/title&gt;&lt;/head&gt;\" /><text type=\"break\" /><text value=\"      &lt;body&gt;\" /><text type=\"break\" /><text value=\"        &lt;h1&gt;Welcome to the Homepage!&lt;/h1&gt;\" /><text type=\"break\" /><text value=\"        &lt;p&gt;This is a working HTML page.&lt;/p&gt;\" /><text type=\"break\" /><text value=\"      &lt;/body&gt;\" /><text type=\"break\" /><text value=\"    &lt;/html&gt;\" /><text type=\"break\" /><text value=\"  `\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"160\" endIndex=\"163\" /><option startIndex=\"163\" endIndex=\"164\" /><option startIndex=\"164\" endIndex=\"168\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.</code> et enfin <code>send</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy - Copy",
            "id": 132295,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La plupart du temps, nous voulons renvoyer du JSON avec les données demandées. Nous pouvons le faire avec <code>res.json</code>.</p><p>Nous pouvons créer un objet JavaScript et utiliser <code>res.json</code> pour le convertir automatiquement en format JSON approprié avant de l'envoyer au client.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"168\" /><option startIndex=\"168\" endIndex=\"172\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.</code> et enfin <code>json</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy 1",
            "id": 132296,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bien sûr, nous pouvons et devons également définir explicitement le statut.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"184\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.status(200)</code> et enfin <code>.json</code>.</p></body></html>"
          },
          {
            "title": "Question: res.send()",
            "id": 121801,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que fait la méthode <code>send</code> de l'objet <code>res</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il envoie la réponse HTTP au frontend</item><item value=\"2\" correct=\"false\">Il envoie la requête HTTP au serveur web</item></selection><p visible-if=\"wrong\">Il envoie la réponse HTTP au frontend.</p></body></html>"
          },
          {
            "title": "Question: res.status()",
            "id": 121800,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode <code>status</code> définit-elle un code de statut spécifique pour la réponse HTTP ?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;&lt;p&gt;Successful Request&lt;/p&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Oui</item><item value=\"2\" correct=\"false\">Non</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Oui.</p></body></html>"
          },
          {
            "title": "Example: res.send()",
            "id": 121804,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le cycle de requête et de réponse entre le frontend et le serveur web en envoyant la réponse HTTP avec la méthode correcte.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hello from the server!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"162\" endIndex=\"166\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>send</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132299,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment peux-tu envoyer une réponse HTML en utilisant Express ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.send(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item><item value=\"2\" correct=\"false\"><code>res.html(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item><item value=\"3\" correct=\"false\"><code>res.json(\"&lt;h1&gt;Bonjour&lt;/h1&gt;\");</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>res.send(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code>.</p></body></html>"
          },
          {
            "title": "Example: res.status()",
            "id": 121803,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Définis <code>200</code> comme le code de statut de la réponse.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Request succeeded&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"158\" endIndex=\"161\" /><option startIndex=\"161\" endIndex=\"162\" /><option startIndex=\"162\" endIndex=\"168\" /><option startIndex=\"168\" endIndex=\"169\" /><option startIndex=\"169\" endIndex=\"172\" /><option startIndex=\"172\" endIndex=\"173\" /><option correct=\"false\"><content><text value=\"send\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.</code> puis <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy 1 - Copy",
            "id": 132298,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Définis le code d'état et réponds avec du JSON.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"184\" /><option correct=\"false\"><content><text value=\".send\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.status(200)</code> et enfin <code>.json</code>.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 132300,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle méthode est utilisée pour envoyer un code d'état personnalisé avec une réponse JSON dans Express ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.status().json()</code></item><item value=\"2\" correct=\"false\"><code>res.json()</code></item><item value=\"3\" correct=\"false\"><code>res.status().send()</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>res.status().json()</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}