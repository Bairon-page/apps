{
  "tutorial": {
    "id": 1948,
    "version": 9,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Articles de la liste de souhaits",
    "descriptionContent": "Utilise des boucles pour ajouter les articles de ta liste de souhaits à ton panier et totaliser le prix",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1948-icon-banner.svg",
    "chapters": [
      {
        "id": 12568,
        "title": "Programme de liste de souhaits",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Create Total Variable",
            "id": 113705,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilisons nos connaissances sur les boucles `for` pour ajouter nos articles de liste de souhaits à notre panier et totaliser le prix.\n\nNous avons déjà ajouté un tableau `wishlist` qui stocke la liste de souhaits d'un utilisateur, un tableau `prices` qui stocke les prix de ces articles, un tableau `quantity` qui stocke la quantité de chaque article de la liste de souhaits, et un tableau `availableStock` qui stocke le stock disponible pour ces articles.\n\nLes indices de chaque tableau correspondent à un produit.\n\nMaintenant, ajoutons un moyen de suivre le prix total de nos articles.\n\n1. Crée une variable nommée `total` et assigne-lui `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "First for Loop",
            "id": 113706,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Commençons par créer notre première boucle for pour parcourir notre tableau `wishlist`.\n\n1. Code une boucle for avec une variable compteur `i` initialisée à `0`.\n2. Assemble la condition pour qu'elle exécute son bloc de code tant que `i` est inférieur à la longueur de `wishlist`.\n3. À l'intérieur des parenthèses, incrémente la variable compteur de `1`.\n4. À l'intérieur du corps de la boucle for, affiche la variable compteur pour tester que la boucle fonctionne.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < wishlist.length`, hence we loop through each item of our wishlist no matter the size.\n2. It is important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Adding to Shopping Cart",
            "id": 113707,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, affichons l'ajout de nos articles de la liste de souhaits au panier. Nous voulons qu'il affiche quelque chose comme \n```\n1 Red T-shirt added to your shopping cart.\n```\n\n1. À l'intérieur de la boucle for, remplace le contenu du `console.log` en construisant une chaîne pour afficher quelque chose comme `<quantity> <wishlist item> added to your shopping cart.` Consulte l'indice si tu veux voir comment cela se fait.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `wishlist` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(quantity[i] + \" \" + wishlist[i] + \" added to your shopping cart.\"\n```"
                }
              ]
            }
          },
          {
            "title": "Calculate the Total",
            "id": 113708,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Calculons le total de nos articles en utilisant notre boucle for. Nous utiliserons l'addition avec affectation pour ne pas avoir à créer une nouvelle variable `total` à chaque fois.\n\n1. À l'intérieur du corps de la boucle for et sous le `console.log()`, multiplie l'élément actuel du tableau `prices` avec l'élément actuel du tableau `quantity`. Utilise l'addition avec affectation pour ajouter cela à la variable `total`. Consulte l'indice si tu souhaites de l'aide pour cela.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The addition assignment operator is `+=`"
                }
              ]
            }
          },
          {
            "title": "Display Total Price",
            "id": 113719,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Affichons le prix total après avoir additionné tous les prix.\n\n1. Après la boucle for, `display` notre total. Il devrait s'afficher comme `Total Price: $<total>`. Consulte l'indice si tu veux voir comment cela se fait.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "```JS\nconsole.log(\"Total Price: $\" + total);\n```"
                }
              ]
            }
          },
          {
            "title": "Second for Loop",
            "id": 113720,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, commençons à écrire notre deuxième boucle for pour soustraire la quantité de nos articles de liste de souhaits du stock disponible.\n\n1. Code une boucle for avec une variable compteur `i` initialisée à `0`.\n2. Assemble la condition pour qu'elle exécute son bloc de code tant que `i` est inférieur à la longueur du tableau `availableStock`.\n3. À l'intérieur des parenthèses, incrémente la variable compteur de `1`.\n4. À l'intérieur du corps de la boucle for, affiche la variable compteur pour tester que la boucle fonctionne correctement.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The condition would be `i < availableStock.length`, hence we loop through each item of our `availableStock` array no matter the size.\n2. It's important to increment the counter variable by 1, else the loop will run endlessly. \n3. You can log the counter variable to the console using `console.log(i)`."
                }
              ]
            }
          },
          {
            "title": "Update Available Stock",
            "id": 113721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Soustrayons la quantité de nos articles de liste de souhaits du tableau `availableStock`.\n\n1. À l'intérieur du corps de la deuxième boucle for et au-dessus du `console.log`, utilise l'auto-affectation pour soustraire l'article actuel dans le tableau `quantity` de l'article actuel du tableau `availableStock`. Consulte l'indice si tu veux voir comment cela se fait.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `quantity` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\navailableStock[i] -= quantity[i];\n```"
                }
              ]
            }
          },
          {
            "title": "Display Available Stock",
            "id": 113722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, affichons notre stock disponible mis à jour de chaque article dans notre boucle.\n\n1. À l'intérieur de la deuxième boucle `for`, remplace le contenu du `console.log` en construisant une chaîne pour afficher quelque chose comme `There are <number> <item> left.` Consulte l'indice si tu veux voir comment cela se fait.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(i);\r\n}",
                  "solvedContent": "const wishlist = [\"Red T-Shirt\", \"Blue Jeans\", \"Yellow Sweater\"];\r\nconst prices = [9.99, 14.99, 12.99];\r\nconst quantity = [1, 2, 1];\r\nlet availableStock = [100, 121, 53];\r\nlet total = 0;\r\nfor (let i = 0; i < wishlist.length; i++) {\r\n  console.log(quantity[i] + \" \" + wishlist[i] +\r\n  \" added to your shopping cart.\");\r\n  total += prices[i] * quantity[i];\r\n}\r\nconsole.log(\"Total Price: $\" + total);\r\nfor (let i = 0; i < availableStock.length; i++) {\r\n  availableStock[i] -= quantity[i];\r\n  console.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Because the length of `wishlist` and `availableStock` arrays are the same, we can loop through both and access all of the indices without any issues.\n```JS\nconsole.log(\"There are \" + availableStock[i] + \" \" + wishlist[i] + \" left.\");\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}