{
  "tutorial": {
    "id": 1929,
    "version": 11,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Publications sur les réseaux sociaux",
    "descriptionContent": "Utilise tes compétences en HTML, CSS et JS pour ajouter des publications à une page de réseau social",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1929-icon-banner.svg",
    "chapters": [
      {
        "id": 12524,
        "title": "Publications sur les réseaux sociaux",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 113196,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilisons nos connaissances des pages web dynamiques pour créer un site de réseau social.\n\nNous avons déjà ajouté le code HTML et CSS, mais le site n'est pas encore fonctionnel.\n\nIl y a un logo, une boîte de saisie, des alertes et un post.\n\nVérifie le code et exécute-le avant de passer à la leçon suivante.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n text-align: center;\r\n}\r\n\r\nh1 {\r\n font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n width: 100%;\r\n height: 150px;\r\n padding: 12px;\r\n box-sizing: border-box;\r\n border: none;\r\n border-radius: 4px;\r\n background-color: seashell;\r\n resize: none;\r\n}\r\n\r\n#addBtn {\r\n padding: 10px;\r\n margin: 10px;\r\n font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n padding: 12px;\r\n margin: 12px;\r\n text-align: justify;\r\n background-color: lavenderblush;\r\n font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n padding: 12px;\r\n margin: 12px;\r\n background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n padding: 12px;\r\n margin: 12px;\r\n background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Post 1 - Define function",
            "id": 113197,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans les réseaux sociaux, nous pouvons publier ce que nous voulons, en un clic de bouton.\n\nNous allons implémenter la même chose dans notre projet !\n\nCommençons simplement par créer une nouvelle fonction. Cette fonction ajoutera un nouveau post chaque fois que l'utilisateur cliquera sur le bouton `Add`.\n\n1. Va dans `script.js`.\n2. Crée une nouvelle fonction nommée `addPost`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function addPost(){\r\n\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to create a function is :\n```javascript\nfunction functionName() {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Adding Post 2 - Calling function",
            "id": 113218,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pour utiliser une fonction, nous devons toujours appeler la fonction.\n\nAvant d'ajouter du code à la fonction `addPost`, nous l'appellerons dans notre fichier HTML pour voir les changements dans notre DOM au fur et à mesure que nous ajoutons le code.\n\n1. Va dans `index.html` et trouve le bouton `Add`.\n2. Ajoute un attribut `onclick` à ce bouton et définis-le sur `addPost()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The `Add` button is below the `textarea` element in `index.html`."
                }
              ]
            }
          },
          {
            "title": "Adding Post 3 - Creating New Div",
            "id": 113225,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Si tu regardes le code du premier post, tu verras que le post est dans un élément `div`.\n\nAinsi, chaque fois que l'utilisateur ajoute un post, nous devons créer un nouvel élément `div`.\n\nIl se peut aussi que l'utilisateur ne donne aucune entrée ! Dans ce cas, nous ne voulons rien poster.\n\nAinsi, nous pouvons structurer notre code de manière à ce que si l'entrée n'est pas `\"\"`, alors il y a un post.\n\nEt le meilleur moyen de le faire est d'utiliser des conditionnels !\n\n1. Va dans le fichier `script.js` et accède à l'élément `textarea` par ID. Tu peux obtenir son ID à partir du code HTML.\n2. Obtiens la valeur de l'élément `textarea`.\n3. Stocke cette valeur dans une variable nommée `input`.\n4. Forme une instruction `if` vérifiant si `input` n'est pas `\"\"`.\n5. À l'intérieur de l'instruction `if`, crée un nouvel élément `div` et stocke-le dans une variable nommée `postDiv`.\n6. Utilise `.className` pour attribuer la classe `post` au nouveau `div`. Pour changer les valeurs d'attributs en JavaScript, tu peux toujours utiliser l'opérateur point. Par exemple, `element.className = \"new\"` attribuera une classe nommée `new` à l'élément.\n7. Utilise `getElementById` ou `querySelector` pour accéder au `body` HTML par son ID et ajoute le `postDiv` au `body`.\n8. Exécute le code, tape quelque chose et clique sur le bouton `Add`. Tu devrais voir un nouveau `div` vide en bas.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `.value` to get the value of the element.\n2. Use `!=` operator to check if `input` is not equal to `\"\"`.\n3. Use `createElement` to create a new element in JavaScript.\n4. The structure of `if` looks like this:\n```javascript\nif(condition) {\n \n}\n```"
                }
              ]
            }
          },
          {
            "title": "Adding Post 4 - Adding paragraph to div",
            "id": 113250,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La partie `div` est terminée.\n\nMais maintenant, nous devons également afficher l'entrée de l'utilisateur. Pour cela, nous allons créer de nouveaux paragraphes chaque fois que l'utilisateur clique sur le bouton `Add`.\n\n1. À l'intérieur de l'instruction `if`, crée un élément de paragraphe et stocke-le dans une variable nommée `p`.\n2. Change le `innerHTML` du paragraphe à la valeur stockée dans `input`.\n3. Ajoute le paragraphe au `postDiv`.\n4. Exécute le code, tape quelque chose, et clique sur `Add`. Tu devrais voir un nouveau `div` avec du texte en bas.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `createElement` to create a new element in JavaScript.\n2. Use `appendChild` to append one element to other in JavaScript.\n3. Remember that the `input` variable already stores the value of the input `textarea` element."
                }
              ]
            }
          },
          {
            "title": "Adding Post 5 - Like Button",
            "id": 113228,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bon travail ! Mais qu'est-ce qu'un post sur les réseaux sociaux sans un bouton de like ou de commentaire.\n\nDonc, ensuite, ce sont les deux boutons - `Like` et `Comment`.\n\nD'abord, créons le bouton `Like`.\n\n1. Crée un nouvel élément `button` sous le paragraphe à l'intérieur de l'instruction `if` et stocke-le dans une variable nommée `likeButton`.\n2. Change le `innerHTML` du bouton en `Like`.\n3. Ajoute le bouton au `postDiv`.\n4. Exécute le code, poste du texte et vois le bouton `Like` apparaître en bas de ton post.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `createElement` to create a new element in JavaScript.\n2. Use `appendChild` to append one element to other in JavaScript."
                }
              ]
            }
          },
          {
            "title": "Adding Post 6 - Comment Button",
            "id": 113233,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il est temps pour le bouton `Comment`.\n\nC'est le même que le bouton `Like` !\n\n1. Crée un nouvel élément `button` en dessous du bouton `Like` et stocke-le dans une variable nommée `commentButton`.\n2. Change le `innerHTML` du bouton en `Comment`.\n3. Ajoute le bouton au `postDiv`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the previous code.\n "
                }
              ]
            }
          },
          {
            "title": "Adding Post 7 - Final touches",
            "id": 113244,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Les éléments que nous avons créés ont l'air bien jusqu'à présent.\n\nCependant, il y a un petit détail. Chaque fois qu'un post est ajouté, la boîte de saisie devrait également se vider.\n\n1. Définis la valeur de la boîte de `input` à `\"\"` en utilisant l'ID.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    \r\n  }\r\n}",
                  "solvedContent": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Check the ID of elements from the HTML code and use `document.getElementById` or `querySelector` to access it."
                }
              ]
            }
          },
          {
            "title": "Coding counter",
            "id": 113245,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wow ! Notre site de médias sociaux ajoute maintenant des posts !\n\nRemarque également qu'il y a une petite boîte verte qui indique le nombre de posts.\n\nPour l'instant, elle ne change pas lorsque nous ajoutons un nouveau post. Alors, travaillons là-dessus !\n\n1. Crée une nouvelle variable nommée `counter` au-dessus de la fonction `addPost()` et définis-la à `1`. Nous la définissons à `1` initialement parce que nous avons déjà un post, mais nous la mettrons à jour plus tard. Assure-toi donc qu'elle n'est pas une constante.\n2. Nous voulons seulement augmenter le compteur lorsque les utilisateurs saisissent un texte et postent, alors allons dans le bloc `if` à l'intérieur de la fonction `addPost`. Incrémente la valeur du compteur de `1`.\n3. Accède à l'élément `span` qui contient le nombre de posts. Vérifie le code HTML pour l'ID.\n4. Change le `innerHTML` du `span` en `counter`.\n5. Exécute le code et vérifie le résultat.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable =\n          'true';</b>\". Voila! You can now edit the webpage text that you are\n        in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\nbody{\r\n  text-align: center;\r\n}\r\n\r\nh1{\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn{\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification{\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. You can increment a variable's value by 1 either directly like `varName = varName + 1` or by using shorthand operators like `varName += 1` or by using increment operator like `varName++`.\n2. Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change whenever the user adds a new post."
                }
              ]
            }
          },
          {
            "title": "Remove 1 - Defining function",
            "id": 113246,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jusqu'ici tout va bien ! Nous avons presque terminé.\n\nIl ne reste qu'une dernière chose à aborder - le bouton `Remove alert`.\n\nLorsque l'utilisateur clique sur ce bouton, l'alerte entière doit disparaître.\n\nCommençons par une nouvelle fonction vide.\n\n1. Crée une nouvelle fonction nommée `remove` en dehors de la fonction `addPost()`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\n",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to create a function is :\n```javascript\nfunction functionName() {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Remove 2 - Calling function",
            "id": 113248,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Avant de coder la fonctionnalité de notre nouvelle fonction, appelons-la lorsque le bouton est cliqué !\n\n1. Trouve le bouton `Remove alert`.\n2. Ajoute un attribut `onclick` à ce bouton et définis-le sur `remove()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button>Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button onclick=\"remove()\">Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The `Remove alert` button is below the paragraph element inside the `notification` `div`.  "
                }
              ]
            }
          },
          {
            "title": "Remove 3 - Removing element",
            "id": 113249,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Supprimer un élément est assez simple.\n\nTout ce que nous avons à faire est d'accéder à l'élément que nous voulons supprimer, puis de le supprimer en utilisant `removeChild`.\n\n1. Obtiens le `div` des notifications en utilisant son ID et stocke-le dans une variable nommée `notificationDiv`.\n2. Supprime ce `div` du `body`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body id=\"body\">\n    <h1>friendsbook.</h1>\n    <div id=\"input\">\n      <textarea type=\"text\" placeholder=\"What's on your mind today?\"\n        id=\"inputPost\"></textarea>\n      <button id=\"addBtn\" onclick=\"addPost()\">Add</button>\n    </div>\n    <div id=\"notification\">\n      <p>Your friend, Harry, just shared a post!</p>\n      <button onclick=\"remove()\">Remove alert</button>\n    </div>\n    <div id=\"new\">\n      <b><span id=\"count\">1</span></b> post(s)!\n    </div>\n    <div class=\"post\">\n      <p>You wanna see why DOM manipulation and Dynamic webpages is interesting?\n        Let me tell you a trick. This trick will work on any website. Open the\n        console tab. Type \"<b>document.body.contentEditable = 'true';</b>\".\n        Voila! You can now edit the webpage text that you are in! </p>\n      <button>Like</button>\n      <button>Comment</button>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Lato:wght@300&display=swap');\r\n\r\nbody {\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-family: 'Fredoka One', cursive;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: seashell;\r\n  resize: none;\r\n}\r\n\r\n#addBtn {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.post {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  text-align: justify;\r\n  background-color: lavenderblush;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n#new {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: mediumaquamarine;\r\n}\r\n\r\n#notification {\r\n  padding: 12px;\r\n  margin: 12px;\r\n  background-color: coral;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {\r\n \r\n}",
                  "solvedContent": "let counter = 1;\r\n\r\nfunction addPost() {\r\n  const input = document.getElementById(\"inputPost\").value;\r\n  if (input != \"\") {\r\n    counter++;\r\n    document.getElementById(\"count\").innerHTML = counter;\r\n    const postDiv = document.createElement('div');\r\n    postDiv.className = \"post\";\r\n    document.getElementById(\"body\").appendChild(postDiv);\r\n    const p = document.createElement('p');\r\n    p.innerHTML = input;\r\n    postDiv.appendChild(p);\r\n    const likeButton = document.createElement(\"button\");\r\n    likeButton.innerHTML = \"Like\";\r\n    postDiv.appendChild(likeButton);\r\n    const commentButton = document.createElement(\"button\");\r\n    commentButton.innerHTML = \"Comment\";\r\n    postDiv.appendChild(commentButton);\r\n    document.getElementById(\"inputPost\").value = \"\";\r\n  }\r\n}\r\n\r\nfunction remove() {\r\n  const notificationDiv = document.getElementById(\"notification\");\r\n  document.getElementById(\"body\").removeChild(notificationDiv);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `removeChild` to remove an element from another. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}