{
  "tutorial": {
    "id": 2637,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "React en profondeur",
    "descriptionContent": "React en profondeur",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14566,
        "title": "Syntaxe de useState",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "useState Syntax",
            "id": 129226,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous avons une application de compteur qui permet à un utilisateur d'incrémenter ou de décrémenter un nombre. Nous voulons modifier le composant pour qu'il utilise `useState`.\n\n1. Utilise la syntaxe `useState` pour créer une variable d'état `count` et sa méthode de mise à jour `setCount`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\" />\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"/index.css\" />\n </head>\n <body>\n  <div id=\"root\"></div>\n </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [,] = useState(0);\n\n  const AddCount = () => {\n    setCount(count + 1);\n  };\n\n  const SubtractCount = () => {\n    setCount(count - 1);\n  };\n\n  return (\n    <div className=\"counter\">\n      <div className=\"count\">\n        <h1>{count}</h1>\n      </div>\n      <div className=\"buttons\">\n        <button name=\"add\" onClick={AddCount}>\n          +\n        </button>\n        <button name=\"subtract\" onClick={SubtractCount}>\n          -\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const AddCount = () => {\n    setCount(count + 1);\n  };\n\n  const SubtractCount = () => {\n    setCount(count - 1);\n  };\n\n  return (\n    <div className=\"counter\">\n      <div className=\"count\">\n        <h1>{count}</h1>\n      </div>\n      <div className=\"buttons\">\n        <button name=\"add\" onClick={AddCount}>\n          +\n        </button>\n        <button name=\"subtract\" onClick={SubtractCount}>\n          -\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "html {\n  font-family: Arial, sans-serif;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin: 0 0 8px 0;\n}\n\ninput, textarea, select, button {\n  border: 2px solid #c8c8c8;\n  border-radius: 16px;\n  background-color: #f0f0f0;\n  color: #191919;\n  padding: 8px;\n  box-sizing: border-box;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #e6e6e6;\n}\n\nimg {\n  width: 100%;\n}\n\n.counter {\n  position: absolute;\n  top: 16px;\n  left: 16px;\n}\n\n.count {\n  width: 80px;\n  height: 80px;\n  border: 2px solid #969696;\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.2);\n  border-radius: 50%;\n  margin-bottom: 16px;\n  line-height: 80px;\n  text-align: center;\n}\n\n.buttons {\n  display: flex;\n  margin: auto;\n}\n\n.buttons button {\n  width: 48px;\n  margin: 0 8px;\n  text-align: center;\n}\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14567,
        "title": "Utilisation des variables d'état",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Using State Variables",
            "id": 129227,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans le composant `App`, la variable d'état `value` détermine si `<Fruits />` ou `<Vegetables />` est affiché. Nous voulons que l'élément `<select>` contrôle ce qui est affiché en modifiant `value`.\n\n1. À l'intérieur de la méthode `handleSelect`, appelle la méthode `setValue()` pour mettre à jour `value` avec `event.target.value`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"/index.css\" />\n </head>\n <body>\n  <div id=\"root\"></div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport { Fruits, Vegetables } from \"./Types\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [value, setValue] = useState(\"fruits\");\n\n  const handleSelect = (event) => {};\n\n  return (\n    <div>\n      <p>Select the plant type you enjoy eating more:</p>\n      <select value={value} onChange={handleSelect}>\n        <option value=\"fruits\">Fruits</option>\n        <option value=\"vegetables\">Vegetables</option>\n      </select>\n      {value == \"fruits\" ? <Fruits /> : <Vegetables />}\n    </div>\n  );\n};\n\nexport default App;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport { Fruits, Vegetables } from \"./Types\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [value, setValue] = useState(\"fruits\");\n\n  const handleSelect = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div>\n      <p>Select the plant type you enjoy eating more:</p>\n      <select value={value} onChange={handleSelect}>\n        <option value=\"fruits\">Fruits</option>\n        <option value=\"vegetables\">Vegetables</option>\n      </select>\n      {value == \"fruits\" ? <Fruits /> : <Vegetables />}\n    </div>\n  );\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "html {\n  font-family: Arial, sans-serif;\n  text-align: center;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0px;\n  margin-bottom: 8px;\n}\n\ninput,\ntextarea,\nselect,\nbutton {\n  border: 2px solid rgb(200, 200, 200);\n  border-radius: 16px;\n  background-color: rgb(240, 240, 240);\n  color: rgb(25, 25, 25);\n  padding: 8px;\n  box-sizing: border-box;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: rgb(230, 230, 230);\n}\n\n.type {\n  width: 240px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n  font-size: 0.9em;\n  padding: 16px;\n  box-sizing: border-box;\n  background-color: lightgreen;\n  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);\n}",
                  "solvedContent": null
                },
                {
                  "name": "Types.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nexport const Fruits = () => {\n  return (\n    <p className=\"type\">\n      Nice! Fruits usually are sweet in flavor and are common in desserts,\n      snacks, or juices.\n    </p>\n  );\n};\n\nexport const Vegetables = () => {\n  return (\n    <p className=\"type\">\n      Awesome! Vegetables usually have a milder flavor than fruits and are\n      usually eaten as complements to the main dish.\n    </p>\n  );\n};\n",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14568,
        "title": "Variables d'état multiples",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Multiple State Vars",
            "id": 129228,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Imagine que nous créons un sous-composant destiné à faire partie d'un processus de création de compte. Notre sous-composant demande le prénom et le nom de famille de l'utilisateur. Ajoutons les variables d'état nécessaires qui stockeront les noms dans le sous-composant.\n\n1. Complète le code afin que les hooks `useState` créent correctement deux nouvelles variables d'état `firstname` et `lastname`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\" />\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"/index.css\" />\n </head>\n <body>\n  <div id=\"root\"></div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [, setFirst] = useState(\"\");\n  const [, setLast] = useState(\"\");\n\n  const handleFirst = (event) => {\n    setFirst(event.target.value);\n  };\n  const handleSecond = (event) => {\n    setLast(event.target.value);\n  };\n\n  return (\n    <div className=\"form\">\n      <h1>Your Credentials</h1>\n      <div className=\"form_content\">\n        <p>\n          <strong>\n            Please tell us your first and last name, in that order.\n          </strong>\n        </p>\n        <div className=\"form_row\">\n          <input\n            type=\"text\"\n            name=\"first\"\n            value={firstname}\n            onChange={handleFirst}\n            placeholder=\"First Name\"\n          />\n          <input\n            type=\"text\"\n            name=\"last\"\n            value={lastname}\n            onChange={handleSecond}\n            placeholder=\"Last Name\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [firstname, setFirst] = useState(\"\");\n  const [lastname, setLast] = useState(\"\");\n\n  const handleFirst = (event) => {\n    setFirst(event.target.value);\n  };\n  const handleSecond = (event) => {\n    setLast(event.target.value);\n  };\n\n  return (\n    <div className=\"form\">\n      <h1>Your Credentials</h1>\n      <div className=\"form_content\">\n        <p>\n          <strong>\n            Please tell us your first and last name, in that order.\n          </strong>\n        </p>\n        <div className=\"form_row\">\n          <input\n            type=\"text\"\n            name=\"first\"\n            value={firstname}\n            onChange={handleFirst}\n            placeholder=\"First Name\"\n          />\n          <input\n            type=\"text\"\n            name=\"last\"\n            value={lastname}\n            onChange={handleSecond}\n            placeholder=\"Last Name\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "html {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  background-color: rgb(54, 136, 255);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0px;\n  margin-bottom: 8px;\n}\n\ninput,\ntextarea,\nselect,\nbutton {\n  border: 2px solid rgb(200, 200, 200);\n  border-radius: 16px;\n  background-color: rgb(240, 240, 240);\n  color: rgb(25, 25, 25);\n  padding: 8px;\n  box-sizing: border-box;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: rgb(230, 230, 230);\n}\n\nimg {\n  width: 100%;\n}\n\n.form {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  min-width: 160px;\n  background-color: white;\n  padding: 16px;\n  box-sizing: border-box;\n  border-radius: 32px;\n}\n\n.form .form_content {\n  margin-bottom: 16px;\n}\n\n.form .form_content .form_row {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: nowrap;\n}\n\n.form .form_content .form_row input {\n  width: 45%;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14570,
        "title": "Rendu conditionnel et variables d'état",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Conditional Rendering",
            "id": 129230,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "`App` est conçu pour donner des faits rapides sur les fruits et légumes, avec l'aide des sous-composants `Fruits` et `Vegetables`. Pour contrôler quel sous-composant est affiché, nous avons besoin d'une instruction conditionnelle `if/else`.\n\n1. Complète l'instruction `if/else` pour déterminer quel composant est référencé par `content`.\n    - Si la variable d'état `type` est égale à `fruits`, définis `content` sur `<Fruits />`.\n    - Sinon, définis `content` sur `<Vegetables />`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\" />\n  <script type=\"module\" src=\"./index.js\"></script>\n  <link rel=\"stylesheet\" href=\"/index.css\" />\n </head>\n <body>\n  <div id=\"root\"></div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = (props) => {\n  const [type, setType] = useState(props.type);\n\n  const handleSelect = (e) => {\n    setType(e.target.value);\n  };\n\n  let content;\n  if (type == \"fruits\") {\n  } else {\n  }\n\n  return (\n    <div>\n      <p>Select the plant type you enjoy eating more:</p>\n      <select value={type} onChange={handleSelect}>\n        <option value=\"fruits\">Fruits</option>\n        <option value=\"vegetables\">Vegetables</option>\n      </select>\n      {content}\n    </div>\n  );\n};\n\nexport default App;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport { Fruits, Vegetables } from \"./Types\";\n\nconst App = (props) => {\n  const [type, setType] = useState(props.type);\n\n  const handleSelect = (e) => {\n    setType(e.target.value);\n  };\n\n  let content;\n  if (type == \"fruits\") {\n    content = <Fruits />;\n  } else {\n    content = <Vegetables />;\n  }\n\n  return (\n    <div>\n      <p>Select the plant type you enjoy eating more:</p>\n      <select value={type} onChange={handleSelect}>\n        <option value=\"fruits\">Fruits</option>\n        <option value=\"vegetables\">Vegetables</option>\n      </select>\n      {content}\n    </div>\n  );\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "html {\n  font-family: Arial, sans-serif;\n  text-align: center;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0px;\n  margin-bottom: 8px;\n}\n\ninput,\ntextarea,\nselect,\nbutton {\n  border: 2px solid rgb(200, 200, 200);\n  border-radius: 16px;\n  background-color: rgb(240, 240, 240);\n  color: rgb(25, 25, 25);\n  padding: 8px;\n  box-sizing: border-box;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: rgb(230, 230, 230);\n}\n\n.type {\n  width: 240px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n  font-size: 0.9em;\n  padding: 16px;\n  box-sizing: border-box;\n  background-color: lightgreen;\n  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);\n}",
                  "solvedContent": null
                },
                {
                  "name": "Types.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nexport const Fruits = () => {\n return (\n  <p className=\"type\">Nice! Fruits usually are sweet in flavor and are common in desserts, snacks, or juices.</p>\n );\n}\n\nexport const Vegetables = () => {\n return (\n  <p className=\"type\">Awesome! Vegetables usually have a milder flavor than fruits and are usually eaten as complements to the main dish.</p>\n );\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}