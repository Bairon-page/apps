{
  "tutorial": {
    "id": 1732,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Application de budgétisation",
    "descriptionContent": "Pratique tes comparaisons de chaînes et de nombres en programmant une application de budgétisation",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1732-icon-banner.svg",
    "chapters": [
      {
        "id": 11582,
        "title": "Application de budgétisation",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Save budget",
            "id": 106471,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans ce projet, nous allons rédiger un brouillon du code JavaScript prévu pour cette application de budgétisation.\n\nPour effectuer des calculs, nous devons d'abord enregistrer le budget de l'utilisateur dans une variable.\n\n1. Crée la variable `const` `budget` et enregistre la valeur `3200` dedans.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const budget = 3200;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Set savings priority",
            "id": 106467,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "L'utilisateur peut décider de l'importance des économies pour le mois.\n\n1. Crée la variable `const` `savingPriority` et assigne à la variable la valeur de chaîne `\"high\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Fixed expenses",
            "id": 106465,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "L'application enregistre également les dépenses fixes mensuelles de l'utilisateur.\n\n1. Crée la variable `const` `rent` et assigne-lui la valeur `1100`.\n2. Crée la variable `const` `utilities` et assigne-lui la valeur `370`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "New item",
            "id": 106458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, nous allons également ajouter une variable pour un article que l'utilisateur souhaite acheter.\n\n1. Code la variable `newLaptop` et donne-lui la valeur `1200`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Total spendings",
            "id": 106472,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Calculons les coûts mensuels.\n\n1. Pour calculer les coûts mensuels de l'utilisateur, crée la variable `totalCosts`.\n1. Ensuite, ajoute `rent` à `utilities`, et assigne ce calcul à `totalCosts`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Budget left",
            "id": 106466,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Calculons le budget restant.\n\n1. Crée la variable `const` `budgetLeft`.\n2. Ensuite, soustrais `totalCosts` de `budget`, et assigne le calcul à `budgetLeft`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Buy Laptop",
            "id": 106464,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next:\n\n1. Crée la variable `const` `buyLaptop`.\n2. Vérifie si `budgetLeft` est *supérieur ou égal à* `newLaptop`, et stocke la comparaison dans `buyLaptop`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Can afford?",
            "id": 106463,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Informons l'utilisateur s'il peut se permettre d'acheter le nouvel ordinateur portable.\n\n1. Affiche la valeur `\"New Laptop Within Budget:\"` dans la console.\n2. Sur une nouvelle ligne, affiche la valeur de la variable `buyLaptop` dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Save instead",
            "id": 106462,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, conseille à l'utilisateur s'il doit plutôt donner la priorité à l'épargne.\n\n1. Affiche la valeur `\"Postpone Purchase and Save Instead:\"` dans la console.\n2. Sur une nouvelle ligne, vérifie si `savingPriority` est égal à `\"high\"` et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Change values",
            "id": 106469,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Plus tard, nous apprendrons à rendre ce code beaucoup plus intelligent. Mais pour l'instant, changeons quelques valeurs et voyons comment elles affectent le résultat. Comme nous avons utilisé des variables `const`, et que leurs valeurs ne peuvent pas être réassignées, tu dois changer les valeurs dans les initialisations de variables.\n\n1. Mets `budget` à `2500`.\n2. Mets `savingPriority` à `\"low\"`.\n3. Mets `rent` à `800`.\n4. Mets `utilities` à `200`.\n5. Exécute le code pour voir comment le résultat change.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");",
                  "solvedContent": "const budget = 2500;\nconst savingPriority = \"low\";\nconst rent = 800;\nconst utilities = 200;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}