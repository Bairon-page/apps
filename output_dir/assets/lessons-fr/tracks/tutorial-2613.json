{
  "tutorial": {
    "id": 2613,
    "version": 12,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Rick et Morty - Partie 1",
    "descriptionContent": "Prêt à embarquer pour un voyage interdimensionnel ? Dans cette phase, nous plongeons dans le multivers de JSON. Nous allons analyser et présenter des données du monde de Rick et Morty, posant ainsi les bases de notre boussole de personnages.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2613-icon-banner.svg",
    "chapters": [
      {
        "id": 14464,
        "title": "Partie 1 - Configuration",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 128948,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenue dans le projet **Rick and Morty**. Nous allons créer une page web qui affiche des personnages de la série Rick and Morty en utilisant une API.\n\n1. Configure le fichier HTML de base.\n    - Les balises `<!doctype html>`, `html`, `head`, `title`, `body`, et `link`.\n    - Une balise `title` avec `\"Rick and Morty Character Compass\"` comme contenu, ou choisis un texte que tu préfères.\n    - Une balise `link` à l'intérieur de la balise `head`, avec une référence à un fichier de feuille de style nommé `\"style.css\"`.\n    - Un en-tête `h1` avec `\"Rick and Morty Character Compass\"` comme contenu, ou choisis un texte que tu préfères.\n    - Une balise `div` avec un attribut id de `\"characters-container\"`.\n    - Ajoute une balise `script` sous la balise de fermeture `body` avec un attribut `src` pointant vers `\"script.js\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html lang=\"en\">\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 128949,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous allons commencer par créer un objet personnage avec lequel travailler.\n\n1. Crée une variable nommée `data`, et assigne-lui un objet littéral avec une propriété `characters`. La propriété `characters` sera un tableau. À l'intérieur du tableau, place un seul objet pour représenter un personnage.\n2. Ajoute les propriétés `name`, `status`, `species`, et `image` à l'objet. Remplis-les avec des données sur Rick.\n\n```JSON\n{\n  \"name\": \"Rick Sanchez\",\n  \"status\": \"Alive\",\n  \"species\": \"Human\",\n  \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n}\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    }\n  ]\n}"
                }
              ],
              "hints": [
                {
                  "title": "How should my code look?",
                  "content": "This is the data structure to add.\n```JavaScript\nconst data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    }\n  ]\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #3",
            "id": 128950,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, ajoutons quelques personnages supplémentaires à notre tableau de personnages.\n\n1. Ajoute des objets pour Morty et Summer Smith avec les mêmes propriétés que Rick.\n   ```JSON\n   {\n     \"name\": \"Morty Smith\",\n     \"status\": \"Alive\",\n     \"species\": \"Human\",\n     \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n   },\n   {\n     \"name\": \"Summer Smith\",\n     \"status\": \"Alive\",\n     \"species\": \"Human\",\n     \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n   }\n   ```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    }\n  ]\n}",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 128951,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il est maintenant temps d'utiliser JavaScript pour créer des éléments HTML à partir de nos données JavaScript.\n\n1. Tout d'abord, obtiens une référence à l'élément `characters-container` dans le HTML et stocke-la dans une variable nommée `charactersContainer`.\n2. Ensuite, utilise la méthode intégrée `forEach()` de JavaScript sur `data.characters`, en passant une fonction de rappel qui prend un seul paramètre, qui représentera l'élément actuel dans le tableau (`character`).\n3. À l'intérieur de la fonction de rappel, crée de nouveaux éléments `div` avec la classe `card` et ajoute-les à `charactersContainer`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 128952,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La dernière étape consiste à remplir chaque carte avec les informations du personnage.\n\n1. À l'intérieur de la fonction de rappel de la méthode `forEach`, utilise un template literal pour générer le HTML d'une carte en utilisant les propriétés du personnage : `image`, `name`, `status` et `species`. Assigne ce HTML comme `innerHTML` de la div `card`.\n\nUtilise le code suivant ou quelque chose de similaire, mais assure-toi de définir la classe `character-image` pour l'image, `character-detail`, et `attribute` pour les balises `p` et `span`, respectivement.\n\n```JavaScript\ncard.innerHTML = `\n  <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n  <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n  <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n  <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n`;\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 128953,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que le HTML et le JavaScript sont terminés, il est temps de styliser la page.\n\n1. Crée un nouveau fichier CSS et stylise la balise `body`. Défini :\n    - `font-family` à `Arial, sans-serif`\n    - `background-color` à `#f4f4f4`\n    - `padding` à `20px`\n    - `text-align` à `center`",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 128954,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Comme prochaine étape, nous allons styliser le conteneur qui contient toutes les cartes des personnages.\n\n1. Sélectionne-le par son id `characters-container`. Ajoute le CSS suivant :\n    - `display: flex`\n    - `justify-content: space-around`\n    - `flex-wrap: wrap`\n\nAvec ces propriétés, les cartes s'afficheront en ligne, réparties uniformément, et elles se replieront sur de nouvelles lignes s'il n'y a pas assez d'espace.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 128956,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Les images ont besoin d'un peu d'amour.\n\n1. Sélectionne-les par leur nom de classe, `character-image`.\n    - Définit à la fois la `width` et la `height` à `100px`.\n    - Rends les images rondes en définissant un `border-radius` de `50%`.\n    - Ajoute un peu de marge en bas pour l'espacement, en utilisant `margin-bottom`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 128955,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Les cartes individuelles pourraient être améliorées.\n\n1. Sélectionne-les par leur nom de classe `.card`. Assure-toi de faire ce qui suit :\n    - Affiche les éléments de la carte en colonne et centre les éléments. Réalise cela en créant une règle pour `.card` et en utilisant `flexbox`, `flex-direction`, `align-items`, et `justify-content`.\n    - Ajoute un peu de `padding` et de `margin` pour l'espacement.\n    - Arrondis les bords en définissant un `border-radius`.\n    - Défini la couleur de fond sur `white` et la `width` des cartes à une valeur que tu aimes.\n    - Ajoute une ombre portée pour la profondeur.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 128957,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Plus de style !\n\n1. Définit le `font-weight` de tous les éléments avec la classe `attribute` à `bold` et ajoute un peu d'espace à droite en définissant une valeur pour `margin-right`.\n2. Enfin, ajoute un peu de `margin` à tous les éléments avec la classe `character-detail` pour un meilleur espacement.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n</body>\n<script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}