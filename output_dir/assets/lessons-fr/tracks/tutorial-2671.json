{
  "tutorial": {
    "id": 2671,
    "version": 4,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Bibliothèque - Partie 1",
    "descriptionContent": "Plonge dans la POO en créant des objets livre. Cette première partie du projet t'introduit à la création et à la gestion de ta propre bibliothèque numérique.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2671-icon-banner.svg",
    "chapters": [
      {
        "id": 14646,
        "title": "Chapitre #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 129536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenue dans le projet **Library**, où nous allons utiliser la programmation orientée objet pour créer un système de bibliothèque afin de suivre les livres. Nous allons commencer avec la classe `Book`.\n\n1. Crée une nouvelle classe nommée `Book`.\n2. Dans la méthode `__init__`, ajoute `self`, `title` et `author` comme paramètres.\n3. Stocke `title` dans `self.title`.\n4. Stocke `author` dans `self.author`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoute une propriété `available` à la classe `Book`. Cette propriété indique si le livre est disponible pour être emprunté ou non.\n\n1. Dans la méthode `__init__`, définis `self.available` à `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une méthode `checkout` pour la classe `Book`. Cette méthode changera la propriété `available` à `False` si le livre est disponible et retournera `True`. Si le livre n'est pas disponible, elle devrait retourner `False`.\n\n1. Ajoute une méthode `checkout`.\n   - Utilise une instruction if/else pour vérifier si le livre est disponible.\n   - Change le statut `available` à `False` si le livre est disponible, et retourne `True`.\n   - Si le livre n'est pas disponible, retourne `False`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, ajoute une méthode `return_book` à la classe `Book`. Cette méthode changera la propriété available à `True`.\n\n1. Ajoute une méthode `return_book`. Dans cette méthode, définis `self.available` à `True`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Affichons les informations sur un livre donné.\n\n1. Ajoute une méthode `display_info`. Utilise une f-string et la fonction `print` pour afficher les informations du livre.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #7",
            "id": 129541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il est temps de mettre la classe `Book` au travail.\n\n1. Crée trois variables : `book1`, `book2`, `book3`. Assigne-leur trois livres différents et donne-leur tous des titres et des auteurs différents.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #8",
            "id": 129542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, crée une liste nommée `books`, et mets tous les livres dans la liste.\n\n1. Crée une liste nommée `books` et ajoute `book1`, `book2`, et `book3` à celle-ci.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 129543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, utilise une boucle for pour afficher les informations de chaque livre dans la liste `books`.\n\n1. Utilise une boucle for pour parcourir la liste `books`. Appelle la méthode `display_info` pour chaque livre.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]",
                  "solvedContent": "class Book:\n\n  def __init__(self, title, author):\n    self.title = title\n    self.author = author\n    self.available = True\n\n  def checkout(self):\n    if self.available:\n      self.available = False\n      return True\n    else:\n      return False\n\n  def return_book(self):\n    self.available = True\n\n  def display_info(self):\n    print(f\"Title: {self.title}\\nAuthor: {self.author}\\nAvailable: {'Yes' if self.available else 'No'}\")\n\nbook1 = Book(\"Dracula\", \"Bram Stoker\")\nbook2 = Book(\"1984\", \"George Orwell\")\nbook3 = Book(\"Frankenstein\", \"Mary Shelley\")\nbooks = [book1, book2, book3]\nfor book in books:\n  book.display_info()"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}