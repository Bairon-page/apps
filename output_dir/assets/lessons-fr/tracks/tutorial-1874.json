{
  "tutorial": {
    "id": 1874,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Recommandations d'amis",
    "descriptionContent": "Utilise tes compétences en tableaux pour faire des recommandations d'amis",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1874-icon-banner.svg",
    "chapters": [
      {
        "id": 12324,
        "title": "Recommandations d'amis",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "samsFriend Array",
            "id": 111916,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilisons nos connaissances sur les tableaux pour analyser deux listes d'amis et recommander de nouveaux amis.\n\nCommence par créer un tableau pour stocker les amis de Sam. Nous utiliserons ce tableau pour stocker tous les amis de Sam.\n\n1. Crée une variable `const` nommée `samsFriends` et définis sa valeur sur un tableau vide.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const samsFriends = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Sam's Friends",
            "id": 111918,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous pouvons maintenant ajouter des amis au tableau `samsFriends`.\n\nNous pouvons utiliser la méthode `push()` pour ajouter plusieurs noms à notre tableau en une seule fois. Utilise une seule instruction `push()` de la manière suivante : `samsFriends.push(\"friend1\", \"friend2\", etc)`.\n\n1. Utilise la méthode de tableau `push()` pour ajouter `\"morgan\", \"riley\", \"jessie\", \"skyler\", et \"frankie\"` au tableau `samsFriends`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\n",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to use the `push()` method on the `samsFriends` array by using `samsFriends.push()`."
                }
              ]
            }
          },
          {
            "title": "ashersFriends Array",
            "id": 111919,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons créé le tableau `samsFriends` et ajouté des amis, créons un nouveau tableau pour stocker les amis d'Asher.\n\n1. Crée une variable `const` nommée `ashersFriends` et définis sa valeur sur un tableau vide.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\n",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding Asher's Friends",
            "id": 111920,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous pouvons maintenant ajouter quelques amis au tableau `ashersFriends`.\n\n1. Utilise la méthode de tableau `push()` pour ajouter `\"morgan\", \"aiden\", \"angel\", \"ariel\", et \"skyler\"` au tableau `ashersFriends`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\n",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Recommendation Array",
            "id": 111921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons créé les listes d'amis de Sam et d'Asher, créons un autre tableau pour stocker les amis à recommander à Asher.\n\n1. Crée une variable `const` nommée `friendsRecommendationAsher` et définis sa valeur sur un tableau vide.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "For loop Part 1",
            "id": 111922,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Avec nos tableaux en place, nous devons parcourir chaque nom dans la liste de Sam et vérifier si Asher a également cette personne comme ami.\n\n1. Commence par créer une nouvelle variable `let` appelée `currentFriend` et attribue-lui la valeur `\"\"`.\n2. Crée une boucle `for` qui itère à travers le tableau `samsFriends`.\n3. Dans le corps de la boucle `for`, définis la valeur de la variable `currentFriend` sur l'élément à l'index `i` (ou quelle que soit la variable que tu utilises pour l'itérateur) dans le tableau `samsFriends`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Make sure the `for` loop looks like `for (let i = 0; i < samsFriends.length; i++){}`.\n"
                }
              ]
            }
          },
          {
            "title": "For loop Part 2",
            "id": 111923,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vérifions si chaque ami du tableau d'Asher est également inclus dans le tableau de Sam. Nous utiliserons la méthode de tableau `includes()` pour cette vérification. La méthode `includes(searchElement)` vérifiera si un tableau contient cet `searchElement` et renvoie `true` ou `false`.\n1. Ajoutons cette vérification à notre boucle en créant d'abord la variable `let` `isCommonFriend` et en définissant sa valeur sur `false`.\n2. Ensuite, vérifie si `currentFriend` est dans `ashersFriends` en utilisant `ashersFriends.includes()` et en passant `currentFriend` comme argument de la méthode. Assigne le résultat à `isCommonFriend`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n}",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": " 1. Make sure to use `ashersFriends.includes()` to check if a friend from Sam's list is also in Asher's list.\""
                }
              ]
            }
          },
          {
            "title": "For loop Part 3",
            "id": 111924,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons vérifié si le `currentFriend` est dans la liste d'Asher, créons une instruction `if` pour ajouter l'ami au tableau `friendsRecommendationAsher` si Asher *n'a pas* cet ami en commun.\n\n1. Crée une instruction `if` qui utilise `push()` pour ajouter `currentFriend` au tableau `friendsRecommendationAsher` si `isCommonFriend` est `false`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n}",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n  if (!isCommonFriend) {\r\n    friendsRecommendationAsher.push(currentFriend);\r\n  }\r\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. If `isCommonFriend` is `false`, use `friendsRecommendationAsher.push(<argument>)` to add the friend to our array."
                }
              ]
            }
          },
          {
            "title": "Display Recommended Friends",
            "id": 111936,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons ajouté quelques amis au tableau `friendsRecommendationAsher`, affichons notre liste d'amis recommandés.\n\n1. En dehors de la boucle, utilise `console.log()` pour afficher le texte `\"Friends Recommended for Asher:\"`.\n2. À la ligne suivante, utilise `console.log` pour afficher la variable `friendsRecommendationAsher`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n  if (!isCommonFriend) {\r\n    friendsRecommendationAsher.push(currentFriend);\r\n  }\r\n}",
                  "solvedContent": "const samsFriends = [];\r\nsamsFriends.push(\"morgan\", \"riley\", \"jessie\", \"skyler\", \"frankie\");\r\nconst ashersFriends = [];\r\nashersFriends.push(\"morgan\", \"aiden\", \"angel\", \"ariel\", \"skyler\");\r\nconst friendsRecommendationAsher = [];\r\nlet currentFriend = \"\";\r\nlet isCommonFriend = false;\r\nfor (let i = 0; i < samsFriends.length; i++) {\r\n  currentFriend = samsFriends[i];\r\n  isCommonFriend = ashersFriends.includes(currentFriend);\r\n  if (!isCommonFriend) {\r\n    friendsRecommendationAsher.push(currentFriend);\r\n  }\r\n}\r\nconsole.log(\"Friends Recommended for Asher:\");\r\nconsole.log(friendsRecommendationAsher);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}