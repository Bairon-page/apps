{
  "tutorial": {
    "id": 2632,
    "version": 4,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Flexbox",
    "descriptionContent": "Les défis sont des exercices plus difficiles qui mettront tes compétences à l'épreuve.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14515,
        "title": "Conteneur Flexbox",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Flexbox Container",
            "id": 129175,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Rendre le `<div>` `#container` un flexbox `<div>` en définissant correctement la propriété `display`. Une fois terminé, les étapes d'inscription s'afficheront horizontalement.\n\n1. Cibler correctement le div `container` et attribuer une propriété `display` appropriée pour le transformer en conteneur flexbox.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Registration</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h2>Registration Steps:</h2>\n    <div id=\"container\">\n      <div id=\"step1\">Step 1: Download Paperwork</div>\n      <div id=\"step2\">Step 2: Complete Forms</div>\n      <div id=\"step3\">Step 3: <br>Return Forms to Main Office</div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  font-family: sans-serif;\n  padding: 20px;\n}\n\n#step1,\n#step2,\n#step3 {\n  border: 1px solid black;\n  height: auto;\n  width: 200px;\n  text-align: center;\n  padding-top: 5px;\n}",
                  "solvedContent": "body {\n  font-family: sans-serif;\n  padding: 20px;\n}\n\n#step1,\n#step2,\n#step3 {\n  border: 1px solid black;\n  height: auto;\n  width: 200px;\n  text-align: center;\n  padding-top: 5px;\n}\n\n#container {\n  display: flex;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14516,
        "title": "Étapes d'inscription 1",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Registration Steps 1",
            "id": 129176,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous savons que lorsque nous appliquons flexbox à un conteneur, certaines propriétés sont définies par défaut. Appliquons explicitement la propriété `flex-direction` appropriée afin que l'orientation du `<div>` reste horizontale.\n\n1. Définis la propriété `flex-direction` de l'élément `<div>` `#container` de manière à ce que l'orientation du `<div>` ne change pas (reste horizontale et dans l'ordre croissant).",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Registration</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h2>Registration Steps:</h2>\n    <div id=\"container\">\n      <div id=\"step1\">Step 1: Download Paperwork</div>\n      <div id=\"step2\">Step 2: Complete Forms</div>\n      <div id=\"step3\">Step 3: <br>Return Forms to Main Office</div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n font-family: sans-serif;\n padding: 20px;\n}\n\n#step1,\n#step2,\n#step3 {\n border: 1px solid black;\n height: auto;\n width: 200px;\n text-align: center;\n padding-top: 5px;\n}\n\n#container {\n display: flex;\n}",
                  "solvedContent": "body {\n font-family: sans-serif;\n padding: 20px;\n}\n\n#step1,\n#step2,\n#step3 {\n border: 1px solid black;\n height: auto;\n width: 200px;\n text-align: center;\n padding-top: 5px;\n}\n\n#container {\n display: flex;\n flex-direction: row;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14517,
        "title": "Étapes d'inscription 2",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Registration Steps 2",
            "id": 129177,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, remettons l'orientation à la disposition originale. Configure correctement la propriété `flex-direction` pour que les étapes s'affichent verticalement.\n\n1. Définis la propriété `flex-direction` de l'élément `<div>` `#container` de manière à ce que les étapes s'affichent verticalement.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Registration</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h2>Registration Steps:</h2>\n    <div id=\"container\">\n      <div id=\"step1\">Step 1: Download Paperwork</div>\n      <div id=\"step2\">Step 2: Complete Forms</div>\n      <div id=\"step3\">Step 3: <br>Return Forms to Main Office</div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  font-family: sans-serif;\n  padding: 20px;\n}\n\n#step1,\n#step2,\n#step3 {\n  border: 1px solid black;\n  height: auto;\n  width: 200px;\n  text-align: center;\n  padding-top: 5px;\n}\n\n#container {\n  display: flex;\n}",
                  "solvedContent": "body {\n  font-family: sans-serif;\n  padding: 20px;\n}\n\n#step1,\n#step2,\n#step3 {\n  border: 1px solid black;\n  height: auto;\n  width: 200px;\n  text-align: center;\n  padding-top: 5px;\n}\n\n#container {\n  display: flex;\n  flex-direction: column;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14518,
        "title": "CSS Flexbox : flex-wrap",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Challenge #1",
            "id": 129178,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La galerie de photos contient trop d'images et certaines ont commencé à déborder de la page.\n\n1. Assigne correctement la propriété `flex-wrap` à l'élément avec l'ID `images` de sorte que toutes les images chevauchant le bord de la page passent à une nouvelle ligne.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>My Photo Library</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h3>My Photo Library</h3>\n    <div id=\"images\">\n      <img src=\"https://mimo.app/i/babaganoosh.png\" />\n      <img src=\"https://mimo.app/i/colosseum.png\" />\n      <img src=\"https://mimo.app/i/forest.png\" />\n      <img src=\"https://mimo.app/i/lighthouse.png\" />\n      <img src=\"https://mimo.app/i/moon.png\" />\n      <img src=\"https://mimo.app/i/mountains.png\" />\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n  font-size: 20px;\n}\n\nimg {\n  width: 90px;\n  height: auto;\n  margin: 5px;\n}\n\n#images {\n  border: 1px dotted lightgray;\n  max-width: 500px;\n  margin: auto;\n  display: flex;\n}",
                  "solvedContent": "body {\n  text-align: center;\n  font-family: sans-serif;\n  font-size: 20px;\n}\n\nimg {\n  width: 90px;\n  height: auto;\n  margin: 5px;\n}\n\n#images {\n  border: 1px dotted lightgray;\n  max-width: 500px;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14519,
        "title": "CSS Flexbox : centrage horizontal",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Challenge #2",
            "id": 129179,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilise tes connaissances sur les axes du conteneur Flexbox pour centrer horizontalement le cercle vert. Sélectionne une propriété CSS qui s'aligne le long de l'axe principal.\n\n1. Assigne de manière appropriée la propriété CSS pour centrer horizontalement le cercle vert dans le conteneur Flexbox `#shapes`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Shapes</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <div id=\"shapes\">\n      <div class=\"green circle\"></div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".green {\n  background-color: green;\n}\n\n.circle {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n}\n\n#shapes {\n  display: flex;\n}",
                  "solvedContent": ".green {\n  background-color: green;\n}\n\n.circle {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n}\n\n#shapes {\n  display: flex;\n  justify-content: center;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14520,
        "title": "CSS Flexbox : alignement en bas",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Challenge #3",
            "id": 129180,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilise tes connaissances sur les axes du conteneur Flexbox pour placer le carré bleu en bas du conteneur `#shapes`. Étant donné que la `flex-direction` par défaut est `row`, tu devras sélectionner une propriété qui s'aligne le long de l'axe transversal.\n\n1. Assigne de manière appropriée la propriété CSS pour aligner le carré bleu en bas du conteneur Flexbox `#shapes`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Shapes</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <div id=\"shapes\">\n      <div class=\"blue square\"></div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".blue {\n  background-color: blue;\n}\n\n.square {\n  width: 150px;\n  height: 150px;\n}\n\n#shapes {\n  border: 1px dotted blue;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n}",
                  "solvedContent": ".blue {\n  background-color: blue;\n}\n\n.square {\n  width: 150px;\n  height: 150px;\n}\n\n#shapes {\n  border: 1px dotted blue;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14521,
        "title": "Éléments Équidistants",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Equally Spaced Elements",
            "id": 129181,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il y a quatre éléments `div` à l'intérieur du conteneur flex. Faisons en sorte que chaque élément `div` occupe une quantité égale d'espace dans le conteneur flex.\n\n1. Assigne une valeur de `1` à la propriété correcte pour que chaque `div` grandisse de manière égale dans l'espace.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"item\"></div>\n      <div class=\"item\"></div>\n      <div class=\"item\"></div>\n      <div class=\"item\"></div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".container {\n background-color: #3E416D;\n display: flex;\n}\n\n.item {\n height: 50px;\n width: 50px;\n background-color: #62d76b;\n margin: 5px;\n\n}",
                  "solvedContent": ".container {\n background-color: #3E416D;\n display: flex;\n}\n\n.item {\n height: 50px;\n width: 50px;\n background-color: #62d76b;\n margin: 5px;\n flex-grow: 1;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14522,
        "title": "Éléments de tailles différentes",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Differently Sized Elements",
            "id": 129182,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il y a quatre éléments `div` à l'intérieur du conteneur flex. Rendons le deuxième élément `div` plus grand que les autres.\n\n1. Fais en sorte que le deuxième élément `div` grandisse `4` fois plus que les autres.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"item\"></div>\n      <div class=\"item\" id=\"item-2\"></div>\n      <div class=\"item\"></div>\n      <div class=\"item\"></div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".container {\n background-color: #3E416D;\n display: flex;\n}\n\n.item {\n height: 50px;\n width: 50px;\n background-color: #62d76b;\n margin: 5px;\n flex-grow: 1;\n}\n\n#item-2 {\n\n}",
                  "solvedContent": ".container {\n background-color: #3E416D;\n display: flex;\n}\n\n.item {\n height: 50px;\n width: 50px;\n background-color: #62d76b;\n margin: 5px;\n flex-grow: 1;\n}\n\n#item-2 {\n flex-grow: 4;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14523,
        "title": "Taille d'élément inégale",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Uneven Element Size",
            "id": 129183,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il y a quatre éléments `div` à l'intérieur du conteneur flex. Rendons le deuxième et le dernier élément `div` plus grands que les autres.\n\n1. Ajoute la propriété `display` correcte et sa valeur pour `.container` afin d'en faire un conteneur `flex`.\n2. Fais en sorte que le deuxième et le dernier élément `div` grandissent `4` fois plus que les autres.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"item\"></div>\n      <div class=\"item\" id=\"item-2\"></div>\n      <div class=\"item\"></div>\n      <div class=\"item\" id=\"item-4\"></div>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".container {\n background-color: #3E416D;\n\n}\n\n.item {\n height: 50px;\n width: 50px;\n background-color: #62d76b;\n margin: 5px;\n flex-grow: 1;\n}\n\n#item-2, #item-4 {\n\n}",
                  "solvedContent": ".container {\n background-color: #3E416D;\n display: flex;\n}\n\n.item {\n height: 50px;\n width: 50px;\n background-color: #62d76b;\n margin: 5px;\n flex-grow: 1;\n}\n\n#item-2, #item-4 {\n flex-grow: 4;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}