{
  "tutorial": {
    "id": 2792,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Types d'union",
    "descriptionContent": "Apprends les types union en TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14784,
        "title": "Types d'union",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 130541,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Parfois, il est utile de permettre plusieurs types de valeurs au lieu d'une seule. Regardons des scénarios où une valeur pourrait changer.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 130542,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><strong>Les types union</strong> nous permettent de définir plusieurs types pour une variable. La variable peut contenir un type ou un autre.</p><p>Pour définir un type union, nous utilisons le symbole pipe <code>|</code> entre les types. Le <code>|</code> symbolise <em>ou</em>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" variable: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"29\" /><option startIndex=\"21\" endIndex=\"22\" /><option correct=\"false\"><content><text value=\"&amp;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>|</code> suivi de <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130543,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si nous assignons une chaîne de caractères à notre variable, TypeScript ne se plaindra pas car <code>string</code> fait partie du type union.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" variable: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"variable = \" /><text value=\"&quot;I'm a string!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(variable);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"42\" endIndex=\"57\" /></options></interaction></interactions><output><content><text value=\"I'm a string!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>=</code> suivi de <code>\"I'm a string!\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130544,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Il en va de même pour les nombres. Assigne un nombre à la variable.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" variable: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"variable = \" /><text value=\"42\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(variable);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"42\" endIndex=\"44\" /><option correct=\"false\"><content><text value=\"&quot;I'm a string!&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"42\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>42</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 130553,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>De plus, nous pouvons également changer le type. Assigne une valeur de type <code>string</code> après que la variable ait été assignée à un nombre.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" variable: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"variable = \" /><text value=\"42\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"variable = \" /><text value=\"&quot;Now, I'm a string!&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(variable);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"46\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"77\" /></options></interaction></interactions><output><content><text value=\"Now, I'm a string!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>variable</code> suivi de <code>=</code> et enfin <code>\"Now, I'm a string!\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 130554,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les types d'union peuvent également combiner plus de deux types.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" variable: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"boolean\" class=\"built_in\" /><text value=\";\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"30\" endIndex=\"31\" /><option correct=\"false\"><content><text value=\"&amp;\" /></content></option><option correct=\"false\"><content><text value=\"&amp;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>|</code> suivi de <code>|</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130545,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les types d'union nous permettent d'inclure <code>null</code> et <code>undefined</code>. Ils nous permettent de représenter des valeurs optionnelles. Essayons-le !</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"null\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"name = \" /><text value=\"null\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"23\" /><option startIndex=\"32\" endIndex=\"36\" /><option correct=\"false\"><content><text value=\"99\" /></content></option></options></interaction></interactions><output><content><text value=\"null\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>null</code> suivi de <code>null</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130546,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La même chose fonctionne avec <code>undefined</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"undefined\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"name = \" /><text value=\"undefined\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"28\" /><option startIndex=\"37\" endIndex=\"46\" /><option correct=\"false\"><content><text value=\"99\" /></content></option></options></interaction></interactions><output><content><text value=\"undefined\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>undefined</code> suivi de <code>undefined</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130548,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que représente le symbole <code>|</code> dans un type union ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il symbolise l'opérateur <code>OR</code>, ce qui signifie que la valeur peut être de n'importe quel type séparé par <code>|</code></item><item value=\"2\" correct=\"false\">Il symbolise l'opérateur <code>AND</code>, ce qui signifie que la valeur doit être de tous les types séparés par <code>|</code></item></selection><p visible-if=\"wrong\">Il symbolise l'opérateur <code>OR</code>, ce qui signifie que la valeur peut être de n'importe quel type séparé par <code>|</code>.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 130550,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée un type union avec les types <code>string</code> et <code>boolean</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" something: \" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"boolean\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"something = \" /><text value=\"true\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(something);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"24\" endIndex=\"31\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>boolean</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130547,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quels valeurs ce type union peut-il contenir ?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" variable: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"null\" class=\"literal\" /><text value=\";\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un nombre</item><item value=\"2\" correct=\"false\">Un booléen</item><item value=\"4\" correct=\"false\"><code>undefined</code></item></selection><p visible-if=\"wrong\">Un nombre.</p></body></html>"
          },
          {
            "title": "Lesson #11 - Copy",
            "id": 130555,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée un type union avec les types <code>number</code> et <code>undefined</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" answerToAllQuestions: \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"undefined\" class=\"literal\" /><text value=\";\" /><text type=\"break\" /><text value=\"answerToAllQuestions = \" /><text value=\"42\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(answerToAllQuestions);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"33\" endIndex=\"34\" /></interactions><output><content><text value=\"42\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>|</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}