{
  "tutorial": {
    "id": 859,
    "version": 19,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Extension des classes",
    "descriptionContent": "Apprends à écrire de nouvelles classes basées sur la fonctionnalité d'autres classes.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6493,
        "title": "Héritage",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro 1",
            "id": 56351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Imagine que nous créons un jeu de zoo. Les animaux du zoo ont beaucoup en commun, mais ils sont aussi différents à bien des égards.</p><p>C'est là que l'<strong>héritage</strong> entre en jeu.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 56362,
            "contentType": "interactive",
            "images": [
              {
                "id": "e2b1c6fa-3d58-45ca-a767-16c9bfdd35a8"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons créer une classe <code>Animal</code> pour regrouper les <strong>caractéristiques principales</strong> des animaux.</p><p>Ensuite, en utilisant l'héritage, nous pouvons <em>l'étendre</em> avec des <strong>fonctionnalités supplémentaires</strong> pour les différents types d'animaux.</p><img src=\"e2b1c6fa-3d58-45ca-a767-16c9bfdd35a8\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Extends",
            "id": 56814,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour hériter des fonctionnalités d'une classe, nous devons utiliser le mot-clé <code>extends</code> dans la définition de la classe.</p><p>En codant <code>extends</code>, nous ferons en sorte que la classe <code>Dog</code> hérite de la classe <code>Animal</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"71\" endIndex=\"78\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Property inheritance",
            "id": 56815,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>L'héritage donne à une classe toutes les <strong>propriétés et méthodes</strong> de la classe qu'elle étend ou dont elle hérite.</p><p>Vois par toi-même : crée un objet à partir de la classe <code>Dog</code> et affiche-le.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Pug&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(dog);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"104\" /><option startIndex=\"105\" endIndex=\"108\" /><option startIndex=\"109\" endIndex=\"114\" /><option startIndex=\"129\" endIndex=\"132\" /></options></interaction></interactions><output><content><text value=\"Dog { name: 'Pug' }\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>new</code> suivi de <code>Dog</code> puis <code>\"Pug\"</code>, <code>dog</code>.</p></body></html>"
          },
          {
            "title": "Subclass and superclass",
            "id": 56816,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Étant donné que <code>Dog</code> hérite de <code>Animal</code>, c'est une <strong>sous-classe</strong> de la classe <code>Animal</code>. La classe <code>Animal</code> est donc sa <strong>superclasse</strong>.</p><p>Assure-toi que la classe <code>Dog</code> hérite des propriétés de sa superclasse, <code>Animal</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"71\" endIndex=\"78\" /><option startIndex=\"79\" endIndex=\"85\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>Dog</code> suivi de <code>extends</code> et enfin <code>Animal</code>.</p></body></html>"
          },
          {
            "title": "Question: Inherits",
            "id": 56353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que signifie lorsque nous disons que la classe <code>A</code> a hérité de la classe <code>B</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">La classe <code>A</code> peut accéder à toutes les propriétés et méthodes de la classe <code>B</code></item><item value=\"2\" correct=\"false\">Ils peuvent accéder aux propriétés et méthodes les uns des autres</item></selection><p /><p visible-if=\"wrong\">La classe <code>A</code> peut accéder à toutes les propriétés et méthodes de la classe <code>B</code>.</p></body></html>"
          },
          {
            "title": "Question: Extends",
            "id": 56354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le mot-clé pour qu'une classe hérite d'une autre ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>extends</code></item><item value=\"2\" correct=\"false\"><code>inherits</code></item></selection><p visible-if=\"wrong\">Assurez-vous de choisir <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Question: Superclass",
            "id": 56357,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment appelle-t-on une classe dont héritent d'autres classes ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Superclasse</item><item value=\"2\" correct=\"false\">Classe générale</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Superclasse.</p></body></html>"
          },
          {
            "title": "Question: Subclass",
            "id": 56969,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce que la sous-classe hérite de la superclasse ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"2\" correct=\"true\">Ses méthodes et propriétés</item><item value=\"3\" correct=\"false\">Son nom</item></selection><p visible-if=\"wrong\">Ses méthodes et propriétés.</p></body></html>"
          },
          {
            "title": "Example: Extends",
            "id": 108645,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Fais en sorte que la classe <code>Dishwasher</code> hérite de la classe <code>Appliance</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(brand) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".brand = brand;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dishwasher\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"84\" endIndex=\"91\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>extends</code>.</p></body></html>"
          },
          {
            "title": "Example: Property inheritance",
            "id": 108646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée un objet à partir de la classe <code>Dishwasher</code> et affiche-le.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(brand) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".brand = brand;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dishwasher\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" kitchenAppliance = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dishwasher(\" /><text value=\"&quot;Laundrys&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(kitchenAppliance);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"130\" endIndex=\"133\" /><option startIndex=\"134\" endIndex=\"144\" /><option startIndex=\"145\" endIndex=\"155\" /><option startIndex=\"170\" endIndex=\"186\" /></options></interaction></interactions><output><content><text value=\"Dishwasher { brand: 'Laundrys' }\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>new</code> suivi de <code>Dishwasher</code> puis <code>\"Laundrys\"</code>, <code>kitchenAppliance</code>.</p></body></html>"
          },
          {
            "title": "Example: Subclass and superclass",
            "id": 108727,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assure-toi que la classe <code>Dishwasher</code> hérite des propriétés de sa superclasse, <code>Appliance</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(brand) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".brand = brand;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dishwasher\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Appliance\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"83\" /><option startIndex=\"84\" endIndex=\"91\" /><option startIndex=\"92\" endIndex=\"101\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>Dishwasher</code> suivi de <code>extends</code> et enfin <code>Appliance</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 11902,
        "title": "Héritage avancé",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Constructor inheritance",
            "id": 108631,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Si une sous-classe n'a pas de méthode <code>constructor()</code>, le constructeur de la superclasse devient le <strong>constructeur par défaut</strong>.</p><p>La propriété <code>name</code> de <code>dog</code> est créée via le constructeur de la classe <code>Animal</code>. Essaie de l'accéder.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Pug&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(dog.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"129\" endIndex=\"132\" /><option startIndex=\"132\" endIndex=\"133\" /><option startIndex=\"133\" endIndex=\"137\" /><option correct=\"false\"><content><text value=\"animal.name\" /></content></option></options></interaction></interactions><output><content><text value=\"Pug\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>dog</code> suivi de <code>.</code> et enfin <code>name</code>.</p></body></html>"
          },
          {
            "title": "Method inheritance",
            "id": 108632,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Une sous-classe hérite également des <strong>méthodes</strong> de sa superclasse.</p><p>Essaie d'appeler la méthode <code>eat()</code> à travers l'instance <code>Dog</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"this\" class=\"keyword\" /><text value=\".name + \" /><text value=\"&quot; is eating&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Chocolate Lab&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"180\" endIndex=\"183\" /><option startIndex=\"183\" endIndex=\"184\" /><option startIndex=\"184\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"188\" /><option startIndex=\"188\" endIndex=\"189\" /></options></interaction></interactions><output><content><text value=\"Chocolate Lab is eating\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>dog</code> suivi de <code>.</code> puis <code>eat</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Multiple subclasses",
            "id": 108633,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons créer autant de sous-classes de <code>Animal</code> que nous le souhaitons. Elles auront <em>toutes</em> accès aux propriétés de la classe <code>Animal</code>.</p><p>Fais en sorte que la classe <code>Bird</code> hérite de la classe <code>Animal</code> et appelle <code>eat()</code> sur un objet <code>Bird</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"this\" class=\"keyword\" /><text value=\".name + \" /><text value=\"&quot; is eating&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bird\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Chocolate Lab&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" bird = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Bird(\" /><text value=\"&quot;Blue Jay&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.eat();\" /><text type=\"break\" /><text value=\"bird.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"148\" endIndex=\"152\" /><option startIndex=\"153\" endIndex=\"160\" /><option startIndex=\"161\" endIndex=\"167\" /><option startIndex=\"260\" endIndex=\"263\" /><option startIndex=\"263\" endIndex=\"264\" /><option startIndex=\"264\" endIndex=\"265\" /></options></interaction></interactions><output><content><text value=\"Chocolate Lab is eating\" /><text type=\"break\" /><text value=\"Blue Jay is eating\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>Bird</code> suivi de <code>extends</code> puis <code>Animal</code>, <code>eat</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Additional functionality",
            "id": 108634,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>L'héritage devient utile lorsque les sous-classes ont une <strong>fonctionnalité supplémentaire</strong>, comme leurs propres méthodes.</p><p>Seuls les chiens peuvent aboyer. Ajoute une méthode <code>bark()</code> à la classe <code>Dog</code> et appelle-la.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" bark() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Poodle&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.bark();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"89\" endIndex=\"95\" /><option startIndex=\"158\" endIndex=\"161\" /><option startIndex=\"161\" endIndex=\"162\" /><option startIndex=\"162\" endIndex=\"168\" /></options></interaction></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>bark()</code> suivi de <code>dog</code> puis <code>.</code>, <code>bark()</code>.</p></body></html>"
          },
          {
            "title": "One-way inheritance",
            "id": 108635,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>L'héritage fonctionne <strong>dans un seul sens</strong>. Toutes les instances de <code>Animal</code> ne sont pas un type de <code>Dog</code>, donc elles <em>ne peuvent pas</em> accéder aux fonctionnalités spécifiques de <code>Dog</code>.</p><p>Que se passerait-il si nous essayions de faire <code>.bark();</code> l'oiseau, cela fonctionnerait-il ?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Animal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" bark() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" dog = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog(\" /><text value=\"&quot;Sparky&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"dog.bark();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" bird = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Animal(\" /><text value=\"&quot;Parrot&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"bird.bark();\" /></content><output><content><text value=\"\" /><text type=\"break\" /><text value=\"TypeError: bird.bark is not a function\" /><text type=\"break\" /><text value=\"\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Non, une erreur apparaîtra</item><item value=\"2\" correct=\"false\">Oui, certaines espèces d'oiseaux peuvent aboyer</item></selection><p visible-if=\"wrong\">Non, une erreur apparaîtra.</p></body></html>"
          },
          {
            "title": "Question: Constructor inheritance",
            "id": 56970,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment pouvons-nous créer une instance de <code>Bike</code> avec une propriété <code>speed</code> définie ?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Vehicle\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(speed) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".speed = speed;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Bike\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Vehicle\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Avec <code>const bike = new Bike(\"15 km/h\");</code></item><item value=\"2\" correct=\"false\">Nous ne pouvons pas, car <code>Bike</code> n'a pas de constructeur avec cette propriété</item></selection><p visible-if=\"wrong\">Avec <code>const bike = new Bike(\"15 km/h\");</code>.</p></body></html>"
          },
          {
            "title": "Question: Method inheritance",
            "id": 56967,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment pourrions-nous définir un signet pour l'objet <code>cookBook</code> ?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Book\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(title) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".title = title;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".page = \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" setBookmark(page) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".page = page;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cookbook\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Book\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" cookBook = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Cookbook(\" /><text value=\"&quot;Pie&quot;\" class=\"string\" /><text value=\");\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Avec <code>cookBook.setBookmark(11);</code></item><item value=\"2\" correct=\"false\">Avec <code>Book.setBookmark(11);</code></item></selection><p visible-if=\"wrong\">Avec <code>cookBook.setBookmark(11);</code>.</p></body></html>"
          },
          {
            "title": "Question: Multiple subclasses",
            "id": 108733,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Combien de sous-classes peux-tu créer à partir d'une superclasse ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Autant que tu veux</item><item value=\"2\" correct=\"false\">Au plus dix</item></selection><p visible-if=\"wrong\">Autant que tu veux.</p></body></html>"
          },
          {
            "title": "Question: Additional functionality",
            "id": 108734,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les sous-classes peuvent-elles uniquement utiliser les méthodes que leur superclasse possède ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Non, les sous-classes peuvent également avoir leurs propres méthodes</item><item value=\"2\" correct=\"false\">Les sous-classes <em>ne peuvent pas</em> avoir leurs propres méthodes</item></selection><p visible-if=\"wrong\">Non, les sous-classes peuvent également avoir leurs propres méthodes.</p></body></html>"
          },
          {
            "title": "Question: One-way inheritance",
            "id": 108735,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Est-ce que toutes les sous-classes créées à partir d'une superclasse peuvent accéder aux méthodes des autres ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Non, les méthodes spécifiques à une sous-classe ne peuvent pas être accessibles par d'autres sous-classes</item><item value=\"2\" correct=\"false\">Oui, toutes les sous-classes partagent toutes leurs méthodes spécifiques</item></selection><p visible-if=\"wrong\">Non, les méthodes spécifiques à une sous-classe ne peuvent pas être accessibles par d'autres sous-classes.</p></body></html>"
          },
          {
            "title": "Example: Constructor inheritance",
            "id": 108728,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Affiche la propriété <code>company</code> de <code>employee1</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee1.company);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"179\" endIndex=\"188\" /><option startIndex=\"188\" endIndex=\"189\" /><option startIndex=\"189\" endIndex=\"196\" /></options></interaction></interactions><output><content><text value=\"Human Rights Lawyers Limited\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>employee1</code> suivi de <code>.</code> et enfin <code>company</code>.</p></body></html>"
          },
          {
            "title": "Example: Method inheritance",
            "id": 108729,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Essaie d'appeler la méthode <code>clockIn()</code> via l'instance <code>Lawyer</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" clockIn() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Starting work at &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".company);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"employee1.clockIn();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"234\" endIndex=\"243\" /><option startIndex=\"243\" endIndex=\"244\" /><option startIndex=\"244\" endIndex=\"251\" /><option startIndex=\"251\" endIndex=\"252\" /><option startIndex=\"252\" endIndex=\"253\" /><option startIndex=\"253\" endIndex=\"254\" /></options></interaction></interactions><output><content><text value=\"Starting work at Human Rights Lawyers Limited\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>employee1</code> suivi de <code>.</code> puis <code>clockIn</code>, <code>(</code>, <code>)</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Example: Multiple subclasses",
            "id": 108730,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Fais en sorte que la classe <code>LineCook</code> hérite de la classe <code>Employee</code> et appelle <code>clockIn()</code> sur un objet <code>LineCook</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" clockIn() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Starting work at &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".company);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"LineCook\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee2 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" LineCook(\" /><text value=\"&quot;Tasty Veggie Bar&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"employee1.clockIn();\" /><text type=\"break\" /><text value=\"employee2.clockIn();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"187\" endIndex=\"194\" /><option startIndex=\"195\" endIndex=\"203\" /><option startIndex=\"342\" endIndex=\"351\" /><option startIndex=\"351\" endIndex=\"352\" /><option startIndex=\"352\" endIndex=\"359\" /><option startIndex=\"359\" endIndex=\"360\" /><option startIndex=\"360\" endIndex=\"361\" /></options></interaction></interactions><output><content><text value=\"Starting work at Human Rights Lawyers Limited\" /><text type=\"break\" /><text value=\"Starting work at Tasty Veggie Bar\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>extends</code> suivi de <code>Employee</code> puis <code>employee2</code>, <code>.</code>, <code>clockIn</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example: Additional functionality",
            "id": 108731,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute une méthode <code>work()</code> à la classe <code>Lawyer</code> et appelle-la.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(company) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".company = company;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" clockIn() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Starting work at &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".company);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Lawyer\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Employee\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" work() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time to make justice!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Lawyer(\" /><text value=\"&quot;Human Rights Lawyers Limited&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"employee1.work();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"172\" endIndex=\"180\" /><option startIndex=\"222\" endIndex=\"223\" /><option startIndex=\"288\" endIndex=\"297\" /><option startIndex=\"297\" endIndex=\"298\" /><option startIndex=\"298\" endIndex=\"302\" /><option startIndex=\"302\" endIndex=\"303\" /><option startIndex=\"303\" endIndex=\"304\" /></options></interaction></interactions><output><content><text value=\"Time to make justice!\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>work() {</code> suivi de <code>}</code> puis <code>employee1</code>, <code>.</code>, <code>work</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}