{
  "tutorial": {
    "id": 2216,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Types et comparaisons",
    "descriptionContent": "Types et comparaisons",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 7200,
        "title": "Comparer les nombres",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Challenge 1",
            "id": 62414,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sous le deuxième `console.log`, écris un autre `console.log` qui affiche le résultat de la vérification si les caractères sont supérieurs ou égaux à 250.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const characters = 134;\nconsole.log(\"Character limit reached:\");",
                  "solvedContent": "const characters = 134;\nconsole.log(\"Character limit reached:\");\nconsole.log(characters >= 250);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 2",
            "id": 62412,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée la variable `const` `inProgress`. Vérifie si `downloaded` est inférieur à `100`, et enregistre la comparaison dans `inProgress`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const downloaded = 67;\n",
                  "solvedContent": "const downloaded = 67;\nconst inProgress = downloaded < 100;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 3",
            "id": 62413,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vérifie si `emails` est supérieur ou égal à `capacity` et stocke le résultat de la comparaison dans une variable appelée `full`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const capacity = 1000;\nconst emails = 157;\n",
                  "solvedContent": "const capacity = 1000;\nconst emails = 157;\nconst full = emails >= capacity;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 4",
            "id": 62411,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vérifie si `age` est supérieur ou égal à `minAge` et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const age = 19;\nconst minAge = 16;\nconsole.log(\"Old enough to drive:\");\n",
                  "solvedContent": "const age = 19;\nconst minAge = 16;\nconsole.log(\"Old enough to drive:\");\nconsole.log(age >= minAge);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 5",
            "id": 62458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vérifie si `temperature` est inférieure à 32 degrés et stocke le résultat de la comparaison dans une variable `const` nommée `isFreezing`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const temperature = 30;\nconst ",
                  "solvedContent": "const temperature = 30;\nconst isFreezing = temperature < 32;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7232,
        "title": "Comparer des chaînes",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Challenge 1",
            "id": 62712,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compare `position` à `expected` avec l'opérateur d'inégalité stricte et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const position = \"last\";\nconst expected = \"first\";\n",
                  "solvedContent": "const position = \"last\";\nconst expected = \"first\";\nconsole.log(position !== expected);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 2",
            "id": 62721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compare `onlineStatus` à `lastSeen` avec l'opérateur d'égalité et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const onlineStatus = \"offline\";\nconst lastSeen = \"yesterday\";\n",
                  "solvedContent": "const onlineStatus = \"offline\";\nconst lastSeen = \"yesterday\";\nconsole.log(onlineStatus === lastSeen);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 3",
            "id": 62713,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Comparez `offBrand` à `onBrand` avec l'opérateur d'égalité et affichez le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const offBrand = \"Orange\";\nconst onBrand = \"Apple\";\n",
                  "solvedContent": "const offBrand = \"Orange\";\nconst onBrand = \"Apple\";\nconsole.log(offBrand === onBrand);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 4",
            "id": 62722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Compare `studentName` à `\"Tina\"` avec l'opérateur d'inégalité et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const studentName = \"Anna\";\n",
                  "solvedContent": "const studentName = \"Anna\";\nconsole.log(studentName !== \"Tina\");"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7720,
        "title": "Découverte des types",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 67672,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Assigne une valeur de type **number** à la variable `age`. Ensuite, concatène la chaîne de caractères `\"Age: \"` à cette variable et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const age;\n",
                  "solvedContent": "const age = 26;\nconsole.log(\"Age: \" + age);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 67671,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `joke` et assigne-lui une **chaîne de caractères** avec la meilleure blague que tu connaisses.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const joke = \"Why was 6 afraid of 7? Because 789\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 67585,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Joins la variable `const` `messages` avec la chaîne de caractères `\" new messages\"` et affiche-la dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const messages = 8;\nconsole.log( );",
                  "solvedContent": "const messages = 8;\nconsole.log(messages + \" new messages\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 67586,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code une instruction d'affichage, et à l'intérieur, joins les variables `text` et `shuffle` pour afficher `Shuffle playlist: true`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const shuffle = true;\nconst text = \"Shuffle playlist: \";\n",
                  "solvedContent": "const shuffle = true;\nconst text = \"Shuffle playlist: \";\nconsole.log(text + shuffle);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 67587,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` `winner` qui joint la chaîne de caractères `\"Lucky number: \"` avec la variable `number`. Affiche la valeur de la variable `winner` dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const number = 7;\n\n",
                  "solvedContent": "const number = 7;\nconst winner = \"Lucky number: \" + number;\nconsole.log(winner);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 6",
            "id": 67701,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée la variable `const` `sugar` qui stocke un nombre de ton choix. Ensuite, joins la variable avec la chaîne de caractères `\" grams of sugar\"` et affiche le résultat dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const sugar = 100;\nconsole.log(sugar + \" grams of sugar\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 7",
            "id": 67699,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Joins la variable `movie` avec `\" audience score: \"`, puis la variable `score`, pour afficher `Joker audience score: 90`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const movie = \"Joker\";\nconst score = 90;\nconsole.log(  );",
                  "solvedContent": "const movie = \"Joker\";\nconst score = 90;\nconsole.log(movie + \" audience score: \" + score);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 8",
            "id": 67700,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Joins la variable `user` avec la chaîne de caractères `\" is online: \"`, puis la variable `isOnline`. Assigne l'expression à la variable `message`. Affiche la variable `message` dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const user = \"Joe\";\nconst isOnline = true;\nconst message;\nconsole.log(message);",
                  "solvedContent": "const user = \"Joe\";\nconst isOnline = true;\nconst message = user + \" is online: \" + isOnline;\nconsole.log(message);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 9",
            "id": 67670,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `isWeekend` qui contient la valeur **boolean** de ton choix, et affiche-la dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "const isWeekend = false;\nconsole.log(isWeekend);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12688,
        "title": "Opérateurs Logiques",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "AND operator",
            "id": 115168,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `result` qui stocke une expression logique. Cette expression doit vérifier si la vitesse d'internet est supérieure à 30, *et* que la caméra est connectée.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let internetSpeed = 32;\r\nlet isCamConnected = true;\r\n\r\nconsole.log(\"Online class : \" + result);",
                  "solvedContent": "let internetSpeed = 32;\r\nlet isCamConnected = true;\r\nconst result = (internetSpeed > 30) && (isCamConnected);\r\nconsole.log(\"Online class : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "AND operator 2",
            "id": 115132,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Stocke une expression logique dans `result` qui vérifie si l'article acheté est égal à `\"perfume\"`, *et* que le stock est `>` que `0`, *et* que la facture est `<=` au paiement du client. Utilise `&&` pour enchaîner les trois conditions.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let purchasedItem = \"perfume\";\r\nlet stock = 4;\r\nlet bill = 20;\r\nlet customerPayment = 25;\r\nconst result = ;\r\nconsole.log(\"Transaction approved? : \" + result);",
                  "solvedContent": "let purchasedItem = \"perfume\";\r\nlet stock = 4;\r\nlet bill = 20;\r\nlet customerPayment = 25;\r\nconst result = (purchasedItem === \"perfume\") && (stock > 0) && (bill <= customerPayment);\r\nconsole.log(\"Transaction approved? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "OR operator",
            "id": 115169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `result` qui stocke une expression logique. L'expression doit vérifier si le WiFi est connecté *ou* si les données mobiles sont activées.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isWifiConnected = true;\r\nlet isMobileDataOn = false;\r\n\r\nconsole.log(\"Is the internet working fine? : \" + result);",
                  "solvedContent": "let isWifiConnected = true;\r\nlet isMobileDataOn = false;\r\nconst result = isWifiConnected || isMobileDataOn;\r\nconsole.log(\"Is the internet working fine? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "OR operator 2",
            "id": 115134,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Stocke une expression logique dans `result` qui vérifie si le paiement en espèces *ou* le solde de crédit *ou* le solde de la carte sont supérieurs à la facture.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet creditBalance = 5;\r\nlet cardBalance = 15;\r\nconst result = ;\r\nconsole.log(\"Payment Successful? : \" + result);",
                  "solvedContent": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet creditBalance = 5;\r\nlet cardBalance = 15;\r\nconst result = (cashPayment > bill) || (creditBalance > bill) || (cardBalance > bill);\r\nconsole.log(\"Payment Successful? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "NOT operator",
            "id": 115170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `result` qui stocke la valeur négative de la variable `laptopBatteryEmpty`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let laptopBatteryEmpty = false;\r\n\r\nconsole.log(\"Laptop Charged? : \" + result);",
                  "solvedContent": "let laptopBatteryEmpty = false;\r\nconst result = !laptopBatteryEmpty;\r\nconsole.log(\"Laptop Charged? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "NOT operator 2",
            "id": 115135,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans la variable `result`, nie une expression logique qui vérifie si le swipe est en panne *et* si le paiement en ligne est en panne.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isSwipeDown = false;\r\nlet isOnlinePayDown = true;\r\nconst result = ;\r\nconsole.log(\"Is any mode of payment accepted? : \" + result);",
                  "solvedContent": "let isSwipeDown = false;\r\nlet isOnlinePayDown = true;\r\nconst result = !(isSwipeDown && isOnlinePayDown);\r\nconsole.log(\"Is any mode of payment accepted? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logical Expression",
            "id": 115133,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `result` qui stocke une expression logique. L'expression doit vérifier si le swipe fonctionne *ou* si le paiement en espèces est supérieur *ou* égal à la facture.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet isSwipeWorking = false;\r\n\r\nconsole.log(\"Payment Successful? : \" + result);",
                  "solvedContent": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet isSwipeWorking = false;\r\nconst result = isSwipeWorking || (cashPayment >= bill);\r\nconsole.log(\"Payment Successful? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logical Expression 2",
            "id": 115171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `rgbCheck` qui stocke une expression logique. L'expression logique doit vérifier si les variables `r`, `g` et `b` sont inférieures ou égales à 255 pour former une couleur RGB valide.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let r = 200;\r\nlet g = 300;\r\nlet b = 10;\r\n\r\nconsole.log(\"Valid RGB? : \" + rgbCheck);",
                  "solvedContent": "let r = 200;\r\nlet g = 300;\r\nlet b = 10;\r\nconst rgbCheck = (r <= 255) && (g <= 255) && (b <= 255);\r\nconsole.log(\"Valid RGB? : \" + rgbCheck);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}