{
  "tutorial": {
    "id": 1378,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Constructeurs",
    "descriptionContent": "Constructeurs",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9985,
        "title": "Constructeurs",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Constructor",
            "id": 88767,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Il existe une méthode que nous pouvons utiliser qui est plus flexible lors de la création de différentes instances à partir d'une classe. Elle s'appelle la méthode <strong>constructor</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;brown&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"benny = Virtual_Pet(\" /><text value=\"&quot;black&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(benny.color)\" /></content><output><content><text value=\"brown\" /><text type=\"break\" /><text value=\"black\" /></content></output></code></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode constructeur ressemble à <code>__init__()</code> et nous permet de définir des valeurs uniques pour les variables de classe lorsque nous créons une instance.</p><p>Assure-toi d'utiliser des doubles underscores de chaque côté de <code>init</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>__init__</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Au lieu d'une définition de classe qui aura toujours la même couleur, une méthode constructeur nous permet de spécifier ce que nous voulons lors de sa création.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89360,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lorsque nous créons une instance à partir de la définition de la classe, nous pouvons passer des valeurs uniques à l'intérieur des parenthèses, comme avec <code>yellow</code> ici.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;yellow&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"92\" endIndex=\"93\" /><option startIndex=\"93\" endIndex=\"99\" /><option startIndex=\"99\" endIndex=\"100\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>\"</code> suivi de <code>yellow</code> et enfin <code>\"</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour ajouter cette flexibilité à nos classes, nous commençons par ajouter la fonction de construction, qui ressemble à <code>__init__()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"34\" /><option startIndex=\"34\" endIndex=\"35\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>__init__</code> suivi de <code>(</code> et enfin <code>)</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89357,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Tout comme avec les méthodes de classe régulières, nous devons ajouter <code>self</code> comme premier paramètre à la méthode constructeur.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"34\" endIndex=\"38\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>self</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89362,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ensuite, nous ajoutons les paramètres pour les valeurs personnalisées que nous voulons définir lorsque nous créons l'instance, comme avec <code>color</code> ici.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"45\" /><option correct=\"false\"><content><text value=\"self\" /></content></option><option startIndex=\"34\" endIndex=\"39\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>self,</code> suivi de <code>color</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89363,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ensuite, nous définissons la valeur en codant <code>self</code>, un <code>.</code>, le nom du paramètre, puis en l'égalant à nouveau au nom du paramètre. Cela définit la valeur.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"52\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"62\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>self</code> suivi de <code>.</code> et enfin <code>color</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89041,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lorsque nous créons une instance à partir de la définition de la classe, nous ajoutons les valeurs que nous voulons définir entre parenthèses, comme ici avec <code>\"red\"</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"92\" endIndex=\"97\" /></interactions><output><content><text value=\"red\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>\"red\"</code>.</p></body></html>"
          },
          {
            "title": "Constructor",
            "id": 89358,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La méthode constructeur nous aide à construire les instances de notre classe comme nous le souhaitons. Nous pouvons ajouter autant de paramètres que nous le voulons.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, legs)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.legs = legs\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(rocky.legs)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"46\" /><option startIndex=\"47\" endIndex=\"51\" /></options></interaction></interactions><output><content><text value=\"red\" /><text type=\"break\" /><text value=\"4\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>color,</code> suivi de <code>legs</code>.</p></body></html>"
          },
          {
            "title": "Outside of constructors",
            "id": 88770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons accéder aux paramètres depuis d'autres endroits dans la définition de la classe en utilisant <code>self</code>, comme <code>self.color</code> ici.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Flower\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, kind, color)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   self.kind = kind\" /><text type=\"break\" /><text value=\"   self.color = color\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_color\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(self.color)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rose_flower = Flower(\" /><text value=\"&quot;rose&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(rose_flower.kind)\" /><text type=\"break\" /><text value=\"rose_flower.display_color()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"129\" endIndex=\"139\" /></interactions><output><content><text value=\"rose\" /><text type=\"break\" /><text value=\"red\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>self.color</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 88786,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le but d'un constructeur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Pour construire une instance d'un objet de classe avec des variables de classe uniques</item><item value=\"2\" correct=\"false\">Pour créer une méthode pour un objet de classe</item></selection><p visible-if=\"wrong\">Pour construire une instance d'un objet de classe avec des variables de classe uniques.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 88789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment définissons-nous la méthode constructeur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>def __init__(self):</code></item><item value=\"4\" correct=\"false\"><code>def init(self):</code></item></selection><p visible-if=\"wrong\"><code>def __init__(self):</code>.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 88791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quand utilisons-nous le mot-clé <code>self</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Quand nous avons besoin d'accéder aux variables ou méthodes de classe à l'intérieur de la définition de la classe</item><item value=\"2\" correct=\"false\">Nous n'utilisons pas le mot-clé <code>self</code></item></selection><p visible-if=\"wrong\">Quand nous avons besoin d'accéder aux variables ou méthodes de classe à l'intérieur de la définition de la classe.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 89483,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pouvons-nous utiliser des paramètres lors de la définition de la méthode constructeur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Oui, nous définissons des valeurs pour les paramètres lors de la création d'une instance</item><item value=\"2\" correct=\"false\">Nous ne pouvons pas utiliser de paramètres dans la fonction init</item></selection><p visible-if=\"wrong\">Oui, nous définissons des valeurs pour les paramètres lors de la création d'une instance.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 89484,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute la méthode constructeur à la définition de classe suivante.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"29\" /><option startIndex=\"29\" endIndex=\"30\" /><option startIndex=\"30\" endIndex=\"34\" /><option startIndex=\"34\" endIndex=\"35\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>def</code> suivi de <code>__init__</code> puis <code>(</code>, <code>self</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 89485,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute deux paramètres à la méthode constructeur, <code>color</code> et <code>name</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"47\" /><option startIndex=\"36\" endIndex=\"42\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>color,</code> suivi de <code>name</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 89486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Définis les variables de classe pour qu'elles soient les paramètres de la méthode constructeur en utilisant le mot-clé <code>self</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"54\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"67\" endIndex=\"72\" /><option startIndex=\"87\" endIndex=\"88\" /><option startIndex=\"89\" endIndex=\"93\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>self</code> suivi de <code>.</code> puis <code>color</code>, <code>=</code>, <code>name</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 89487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En utilisant le constructeur, crée une instance de Pokemon qui a la couleur <code>\"orange\"</code> et le nom <code>\"charizard\"</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Pokemon\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text type=\"break\" /><text value=\"charizard = Pokemon(\" /><text value=\"&quot;orange&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;charizard&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(charizard.color)\" /><text type=\"break\" /><text value=\"print(charizard.name)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"107\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"123\" /><option startIndex=\"123\" endIndex=\"124\" /><option startIndex=\"125\" endIndex=\"136\" /><option startIndex=\"136\" endIndex=\"137\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions><output><content><text value=\"orange\" /><text type=\"break\" /><text value=\"charizard\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>Pokemon</code> suivi de <code>(</code> puis <code>\"orange\"</code>, <code>,</code>, <code>\"charizard\"</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}