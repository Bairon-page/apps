{
  "tutorial": {
    "id": 2943,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Introduction au routeur Express",
    "descriptionContent": "Apprends ce qu'est le routeur Express et comment l'utiliser",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15060,
        "title": "Introduction à Express Router",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro I",
            "id": 122347,
            "contentType": "interactive",
            "images": [
              {
                "id": "8b89f984-1613-4186-8386-fb9bb6c81533"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le routeur Express aide à organiser les routes de l'application web en morceaux séparés et gérables.</p><p>Le routeur Express garde les routes organisées, ce qui les rend plus faciles à trouver et à utiliser, tout comme mettre des jouets dans des boîtes séparées !</p><img src=\"8b89f984-1613-4186-8386-fb9bb6c81533\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour utiliser le routeur Express, nous devons d'abord exiger le module Express, puis accéder au routeur.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"67\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>express</code> suivi de <code>.Router()</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132772,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous définissons les routes sur le routeur de la même manière que nous le faisons sur l'application express.</p><p>La seule différence est que nous les appelons sur la variable router et non sur la variable app.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"80\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.get</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132773,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le routeur nous permet de regrouper des routes similaires et de les utiliser dans l'application principale. Nous utilisons un routeur comme nous utilisons un middleware avec <code>app.use</code>.</p><p>Nous pouvons maintenant appeler <code>http://localhost:3000/greet</code> comme nous le ferions lorsque nous définissons directement des routes sur l'application principale.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"195\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"202\" /><option startIndex=\"203\" endIndex=\"209\" /></options></interaction></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>.</code> puis <code>use</code>, <code>router</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le routeur agit comme une mini-application, nous permettant de le déplacer dans son propre fichier pour une meilleure organisation et une lisibilité améliorée.</p><p>Dans <code>app.js</code>, nous importons le router pour l'intégrer dans notre application principale.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"78\" endIndex=\"85\" /><option startIndex=\"65\" endIndex=\"75\" /><option startIndex=\"112\" endIndex=\"122\" /><option startIndex=\"86\" endIndex=\"100\" /></options></interaction></interactions></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>userRoutes</code> suivi de <code>require</code> puis <code>\"./userRoutes\"</code>, <code>userRoutes</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132778,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bien sûr, pour permettre l'importation du <code>router</code> en tant que module, nous devons exporter un module.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"172\" endIndex=\"178\" /><option startIndex=\"178\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"186\" /><option startIndex=\"189\" endIndex=\"195\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>module</code> suivi de <code>.</code> puis <code>exports</code>, <code>router</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajouter <code>\"/user\"</code> lors de l'intégration du routeur dans l'application principale préfixe toutes les routes dans le routeur.</p><p>La route définie comme <code>\"/greet\"</code> dans le routeur peut maintenant être accédée via <code>\"/user/greet\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/user&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"195\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"202\" /></options></interaction></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>.</code> et enfin <code>use</code>.</p></body></html>"
          },
          {
            "title": "Router in Files",
            "id": 122359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Accède au routeur Express.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"67\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>express</code> suivi de <code>.</code> puis <code>Router</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle est la bonne façon d'importer un router dans ton fichier principal de l'application ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>const router = require(\"./routerFile\");</code></item><item value=\"2\" correct=\"false\"><code>import router from \"./routerFile\";</code></item></selection><p visible-if=\"wrong\"><code>const router = require(\"./routerFile\");</code>.</p></body></html>"
          },
          {
            "title": "GET Endpoint",
            "id": 122349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée un endpoint <code>GET</code> en utilisant le routeur.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"app\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.</code> et enfin <code>get</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 132791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel type de requête <code>router.get()</code> gère-t-il ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>GET</code> requêtes</item><item value=\"2\" correct=\"false\">Toutes les demandes possibles</item></selection><p visible-if=\"wrong\"><code>GET</code> requêtes.</p></body></html>"
          },
          {
            "title": "app.use()",
            "id": 122362,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Utilise les routes importées.</p><code version=\"2\" codelang=\"javascript\" name=\"index.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" usersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./users.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", usersRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"76\" /><option startIndex=\"103\" endIndex=\"106\" /><option startIndex=\"106\" endIndex=\"107\" /><option startIndex=\"107\" endIndex=\"110\" /><option startIndex=\"121\" endIndex=\"132\" /><option correct=\"false\"><content><text value=\"router\" /></content></option></options></interaction></interactions><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"users.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>usersRouter</code> suivi de <code>app</code> puis <code>.</code>, <code>use</code>, <code>usersRouter</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132792,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que se passe-t-il si tu préfixes les routes dans le routeur comme dans cet exemple avec <code>\"/user\"</code> ?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"app.use(\" /><text value=\"&quot;/user&quot;\" class=\"string\" /><text value=\", router);\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Toutes les routes dans le routeur seront accessibles sous le chemin <code>\"/user\"</code>, comme <code>\"/user/greet\"</code></item><item value=\"2\" correct=\"false\">Le routeur n'acceptera que les requêtes qui correspondent exactement au chemin <code>\"/user\"</code></item></selection><p visible-if=\"wrong\">Toutes les routes dans le routeur seront accessibles sous le chemin <code>\"/user\"</code>, comme <code>\"/user/greet\"</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 15065,
        "title": "L'objet Router",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro I",
            "id": 122363,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Maintenant que nous avons couvert les bases de l'objet routeur d'Express, explorons certaines de ses méthodes.</p><p>Le Express Router nous permet de diviser notre application en petites sections maintenables, chacune avec son propre routage. Mais il y a plus !</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132808,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Faisons en sorte que l'application Express utilise notre routeur <code>userRoutes</code>.</p><p>Le routeur fonctionne lui-même comme un middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"107\" /><option startIndex=\"107\" endIndex=\"111\" /><option startIndex=\"112\" endIndex=\"122\" /></options></interaction></interactions></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>.use</code> et enfin <code>userRoutes</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132798,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bien sûr, nous pouvons utiliser <code>GET</code>, <code>POST</code>, <code>PATCH</code>, <code>DELETE</code>, et plus encore.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Returned!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.post(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Posted!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.patch(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Patched!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.delete(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Deleted!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"139\" endIndex=\"143\" /><option startIndex=\"263\" endIndex=\"269\" /><option startIndex=\"200\" endIndex=\"205\" /><option startIndex=\"77\" endIndex=\"80\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>get</code> suivi de <code>post</code> puis <code>patch</code>, <code>delete</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy - Copy",
            "id": 132809,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le routeur lui-même peut également héberger des middleware. Par exemple, nous pouvons utiliser le middleware JSON intégré pour analyser les objets de corps entrants.</p><p>Nous faisons cela en appelant <code>use</code> sur le routeur au lieu de l'application.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.post(\" /><text value=\"&quot;/new&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" body = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(body);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"172\" endIndex=\"178\" /><option startIndex=\"178\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"182\" /><option startIndex=\"183\" endIndex=\"197\" /><option correct=\"false\"><content><text value=\"app\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.</code> puis <code>use</code>, <code>express.json()</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4  - Copy - Copy",
            "id": 132810,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Similaire au middleware intégré, le routeur peut également utiliser un middleware personnalisé. Faisons en sorte que notre routeur utilise le middleware personnalisé <code>logRequest</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logRequest = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Incoming request type: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(logRequest);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"189\" endIndex=\"199\" /><option startIndex=\"76\" endIndex=\"86\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>logRequest</code> suivi de <code>logRequest</code>.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 132800,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Une astuce pratique consiste à passer la fonction middleware directement à <code>router.use</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time: &quot;\" class=\"string\" /><text value=\", \" /><text value=\"Date\" class=\"built_in\" /><text value=\".now());\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"10\" /><option startIndex=\"11\" endIndex=\"27\" /><option startIndex=\"28\" endIndex=\"30\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router.use</code> suivi de <code>(req, res, next)</code> et enfin <code>=&gt;</code>.</p></body></html>"
          },
          {
            "title": "Example: router.use()",
            "id": 122377,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code la fonction Express correcte à la fin de la première fonction middleware au niveau de la route pour permettre l'exécution du middleware suivant.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;First middleware for /team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;First middleware for /team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Second middleware for /team&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"221\" endIndex=\"225\" /><option startIndex=\"225\" endIndex=\"226\" /><option startIndex=\"226\" endIndex=\"227\" /><option startIndex=\"227\" endIndex=\"228\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"First middleware for /team\" /><text type=\"break\" /><text value=\"Second middleware for /team\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>next</code> suivi de <code>(</code> puis <code>)</code>, <code>;</code>.</p></body></html>"
          },
          {
            "title": "Example: use()",
            "id": 122382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Voyons un exemple qui montre comment plusieurs routeurs peuvent donner une belle structure aux applications Express.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" studentsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./students.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" teachersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./teachers.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" subjectsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./subjects.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(studentsRouter);\" /><text type=\"break\" /><text value=\"app.use(teachersRouter);\" /><text type=\"break\" /><text value=\"app.use(subjectsRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"215\" endIndex=\"229\" /><option startIndex=\"236\" endIndex=\"239\" /><option startIndex=\"257\" endIndex=\"260\" /><option correct=\"false\"><content><text value=\"express\" /></content></option><option correct=\"false\"><content><text value=\"teacherRouter\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"students.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/students&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get students&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"teachers.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/teachers&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get teachers&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"subjects.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/subjects&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get subjects&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>studentsRouter</code> suivi de <code>use</code> et enfin <code>app</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132837,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pouvons-nous gérer plusieurs requêtes HTTP dans un seul routeur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Oui, tu peux gérer autant de types de requêtes que tu veux</item><item value=\"2\" correct=\"false\">Non, nous avons besoin de plusieurs routeurs pour cela</item></selection><p visible-if=\"wrong\">Oui, tu peux gérer autant de types de requêtes que tu veux.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 132831,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée une route <code>GET</code> pour le point de terminaison <code>\"/\"</code> en utilisant le routeur.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"app\" /></content></option><option correct=\"false\"><content><text value=\"put\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.</code> et enfin <code>get</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132803,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour que le routeur utilise les deux fonctions middleware personnalisées définies.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"timeLog\" class=\"title\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time: &quot;\" class=\"string\" /><text value=\", \" /><text value=\"Date\" class=\"built_in\" /><text value=\".now());\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(req.method, \" /><text value=\"&quot;Request: &quot;\" class=\"string\" /><text value=\", req.path, req.body);\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"66\" endIndex=\"72\" /><option startIndex=\"73\" endIndex=\"76\" /><option startIndex=\"163\" endIndex=\"169\" /><option startIndex=\"170\" endIndex=\"173\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>use</code> puis <code>router</code>, <code>use</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132835,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment peux-tu gérer une requête <code>DELETE</code> dans un routeur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">En utilisant <code>router.delete(\"/path\", handler)</code></item><item value=\"2\" correct=\"false\">En utilisant <code>router.remove(\"/path\", handler)</code></item></selection><p visible-if=\"wrong\">En utilisant <code>router.delete(\"/path\", handler)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4  - Copy - Copy - Copy",
            "id": 132833,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour que le routeur utilise notre middleware personnalisé.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" logRequest = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Incoming request type: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(logRequest);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"178\" endIndex=\"184\" /><option startIndex=\"184\" endIndex=\"185\" /><option startIndex=\"185\" endIndex=\"188\" /><option correct=\"false\"><content><text value=\"app\" /></content></option><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.</code> et enfin <code>use</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}