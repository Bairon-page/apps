{
  "tutorial": {
    "id": 1825,
    "version": 14,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Animal du mois : Vote",
    "descriptionContent": "Utiliser JavaScript pour créer des boutons de vote positif et négatif",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1825-icon-banner.svg",
    "chapters": [
      {
        "id": 12108,
        "title": "Animal du mois : Vote",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 110536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Le Zoo t'a engagé pour créer une page permettant aux utilisateurs de voter pour ou contre l'\"Animal du Mois\".\n\nTout d'abord, familiarisons-nous avec les fichiers fournis : `index.html`, `style.css` et `script.js`.\n\nLe fichier `index.html` contient actuellement une photo d'un Panda et une légende correspondante. Le fichier `style.css` contient quelques styles de base pour notre page. Le fichier `script.js` est vide pour l'instant, nous travaillerons sur la logique JavaScript dans les étapes suivantes.\n\nComme mentionné, nous devrons développer cette page pour permettre aux utilisateurs de \"voter pour\" ou \"voter contre\" l'\"Animal du Mois\". Nous commencerons par ajouter un élément texte à l'écran pour afficher le nombre actuel de votes.\n\n1. Ajoute un élément paragraphe avec un `id` de `\"votes\"` juste après la légende ( `\"nom nom nom\"` ). À des fins de démonstration, définis le texte de cet élément paragraphe à \"3 Votes\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 110542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons maintenant les boutons que les utilisateurs utiliseront pour soit `Upvote` soit `Downvote` sur l'`Animal du Mois`. Tout d'abord, concentrons-nous sur l'ajout du bouton `Upvote` à l'écran, qui finira par incrémenter le nombre de votes de 1 à chaque clic.\n\n1. Crée un élément `button` avec un `id` de `\"upvote\"` immédiatement après le nouvel élément `<p>` \"votes\" créé.\n2. Ensuite, définis le contenu textuel de l'élément `button` à `Upvote`.\n3. Enfin, dans `style.css`, cible le bouton upvote en utilisant son `id` dans un ensemble de règles pour la propriété appropriée afin de changer sa couleur de fond en `green`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}",
                  "solvedContent": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can access an element in CSS by its `id` using `#id`. For example, to access a button element with the `id` of `example`, use `#example`."
                }
              ]
            }
          },
          {
            "title": "Step 3",
            "id": 110543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons un bouton de vote positif, attaquons-nous au bouton de vote négatif. Lorsqu'on clique dessus, ce bouton diminuera le nombre de votes de 1, mais nous implémenterons cette fonctionnalité plus tard. Pour l'instant, concentre-toi sur l'ajout de l'élément à la page et sur la configuration correcte des propriétés fournies.\n\n1. Crée un élément bouton avec un `id` de `\"downvote\"` juste après le bouton de vote positif nouvellement créé.\n2. Ensuite, définis le contenu textuel de l'élément bouton à `Downvote`.\n3. Dans `style.css`, cible le bouton de vote négatif en utilisant son `id` et définis la propriété appropriée pour changer sa couleur de fond en `red`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}",
                  "solvedContent": "body {\n text-align: center;\n font-family: sans-serif;\n}\n\nimg {\n border-radius: 10px;\n}\n\nbutton {\n margin: 5px;\n border-radius: 10px;\n border: none;\n color: white;\n padding: 10px;\n font-size: 16px;\n}\n\n#votes {\n font-weight: bold;\n font-size: 25px;\n}\n\n#upvote {\n background-color: green;\n}\n\n#downvote {\n background-color: red;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `Upvote` button."
                }
              ]
            }
          },
          {
            "title": "Step 4",
            "id": 110544,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons créé tous nos éléments à l'écran, commençons à ajouter la fonctionnalité de vote en JavaScript. Pour ce faire, nous allons d'abord importer le fichier `script.js` en bas du fichier `index.html`. Nous créerons une variable pour stocker le nombre de votes (à des fins de démonstration, nous commencerons à 3) et nous l'afficherons dans la console pour vérifier que notre fichier est correctement lié.\n\n1. Importe le fichier `script.js` dans l'élément `body` du fichier `index.html` en utilisant une balise `<script>`.\n2. Dans `script.js`, initialise une variable `counter` avec une valeur de `3`.\n3. Enfin, affiche la variable `counter` dans la console et exécute ton code pour vérifier que le fichier `script.js` est correctement lié.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "let counter = 3;\nconsole.log(counter);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Be careful in using `let` instead of `const` for the counter variable. This is because the counter variable will change its value whenever `Upvote` or `Downvote` button is clicked."
                }
              ]
            }
          },
          {
            "title": "Step 5",
            "id": 110547,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, implémentons les fonctions `upvote()` et `downvote()`, qui augmenteront et diminueront respectivement le nombre de votes de 1. Commençons par aborder la fonction `upvote()`: déclare la fonction et implémente le corps de la fonction de manière à ce que la variable `counter` soit incrémentée de 1 lorsqu'elle est appelée.\n\n1. Tout d'abord, supprime l'instruction `console.log` écrite à l'étape précédente.\n2. Ensuite, déclare une fonction nommée `upvote()`, qui ne doit prendre aucun paramètre.\n3. Enfin, implémente le corps de la fonction de sorte qu'appeler la fonction augmente la variable `counter` de `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\nconsole.log(counter);",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax of a function without parameters looks like this:\n```javascript\nfunction functionName(){\n    //statements\n}\n```"
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 110550,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La fonction `upvote` incrémente la variable `counter` de 1, mais nous devons également implémenter la fonctionnalité pour mettre à jour le contenu de la page. Nous allons cibler l'élément `<p>` `votes` que nous avons créé précédemment et définir son texte pour refléter la variable `counter` mise à jour.\n\n1. Tout d'abord, cible l'élément `p` `votes` par son ID et choisis la propriété de contenu correcte à mettre à jour. Nous voulons mettre à jour le texte de l'élément.\n2. Ensuite, définis la propriété de contenu à la concaténation de la variable `counter` et de la chaîne de caractères `\" Votes\"`. N'oublie pas l'espace et la bonne capitalisation !",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to update an `html` element's text content, you can use either the `innerHTML`, `innerText`, or `textContent` content properties. "
                }
              ]
            }
          },
          {
            "title": "Step 7",
            "id": 110551,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, abordons d'abord la fonction `downvote()`. Déclare une nouvelle fonction nommée `downvote()` et implémente son corps de fonction de sorte qu'en l'appelant, elle diminue la variable `counter` de `1`.\n\n1. Tout d'abord, déclare une fonction nommée `downvote()`, qui ne doit prendre aucun paramètre.\n2. Ensuite, implémente le corps de la fonction de sorte qu'en appelant la fonction, elle diminue la variable `counter` de `1`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To decrease a variable by 1, you can use `-` or `--` or `-=`. For example, `a--` or `a-=1` or `a=a-1`."
                }
              ]
            }
          },
          {
            "title": "Step 8",
            "id": 110552,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, de la même manière que la fonction `upvote()`, nous devons implémenter la fonctionnalité `downvote()` pour mettre à jour le contenu de la page. Comme précédemment, nous allons cibler l'élément `<p>` `votes` et définir son texte pour refléter la variable `counter` mise à jour.\n\n1. Dans la fonction `downvote()`, cible l'élément `<p>` `votes` par son ID et choisis la propriété de contenu correcte à mettre à jour.\n2. Ensuite, définis le texte de l'élément comme la concaténation de la variable `counter` et de la chaîne de caractères `\" Votes\"`. N'oublie pas l'espace !",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n}",
                  "solvedContent": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the code of the `upvote()` function."
                }
              ]
            }
          },
          {
            "title": "Step 9",
            "id": 110553,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons terminé notre fonctionnalité JavaScript, ajoutons les appels de fonction de bouton appropriés pour compléter le projet. Attache des écouteurs d'événements `onclick` à chaque bouton pour appeler correctement les fonctions `upvote()` et `downvote()`. Assure-toi de tester les boutons pour vérifier ton travail.\n\n1. Ajoute un écouteur d'événement `onclick` au bouton de vote positif qui appelle la fonction `upvote()`.\n2. Ajoute un écouteur d'événement `onclick` au bouton de vote négatif qui appelle la fonction `downvote()`.\n3. Essaie de cliquer sur les boutons de vote positif et négatif pour confirmer que tu as correctement implémenté la fonctionnalité de vote.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\">Upvote</button>\n    <button id=\"downvote\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Zoo Animal of the Month</h1>\n    <img src=\"/img/panda.png\">\n    <p><em>\"Nom nom nom\"</em></p>\n    <p id=\"votes\">3 Votes</p>\n    <button id=\"upvote\" onclick=\"upvote()\">Upvote</button>\n    <button id=\"downvote\" onclick=\"downvote()\">Downvote</button>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n  text-align: center;\n  font-family: sans-serif;\n}\n\nimg {\n  border-radius: 10px;\n}\n\nbutton {\n  margin: 5px;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 10px;\n  font-size: 16px;\n}\n\n#votes {\n  font-weight: bold;\n  font-size: 25px;\n}\n\n#upvote {\n  background-color: green;\n}\n\n#downvote {\n  background-color: red;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let counter = 3;\n\nfunction upvote() {\n  counter++;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}\n\nfunction downvote() {\n  counter--;\n  document.getElementById(\"votes\").innerText = counter + \" Votes\";\n}",
                  "solvedContent": null
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can add an onclick listener to any element using the `onclick` attribute. For example, `<button onclick=\"func()\"></button>`"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}