{
  "tutorial": {
    "id": 1623,
    "version": 11,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Requêtes POST",
    "descriptionContent": "Apprends à utiliser une requête POST pour envoyer des données à un serveur",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 11127,
        "title": "POST",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 103320,
            "contentType": "interactive",
            "images": [
              {
                "id": "5d5e1f86-5b01-497f-8ee6-04ace8d2921f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En ce qui concerne les méthodes HTTP, nous pouvons les regrouper grossièrement en deux catégories.</p><p>Il existe des méthodes qui <em>demandent</em> une donnée ou un comportement du serveur, comme <code>GET</code>, et celles qui <em>envoient</em> des données au serveur.</p><img src=\"5d5e1f86-5b01-497f-8ee6-04ace8d2921f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "POST",
            "id": 103321,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>POST</code> est une méthode de requête que nous utilisons pour <em>envoyer</em> de nouvelles données au serveur, comme un nouveau cours que Mimo veut proposer.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>POST</code>.</p></body></html>"
          },
          {
            "title": "POST URL",
            "id": 103325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>`POST repose sur une URL contenant l'adresse du serveur, ainsi que le type de ressource auquel les nouvelles données sont <em>liées</em>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"21\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>mimo.org</code>.</p></body></html>"
          },
          {
            "title": "POST URL 2",
            "id": 103332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Cette URL de requête <code>POST</code> nous indique que cette nouvelle donnée doit être enregistrée sous <code>courses</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"22\" endIndex=\"29\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>/</code> suivi de <code>courses</code>.</p></body></html>"
          },
          {
            "title": "POST URL Query Parameters",
            "id": 103333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Contrairement aux requêtes <code>GET</code>, les requêtes <code>POST</code> utilisent rarement des paramètres de requête dans leur URL, et s'appuient plutôt sur le corps de la requête.</p><p>Le corps de la requête contient les données envoyées au serveur, généralement dans des formats comme JSON.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;languages&quot;\" class=\"string\" /><text value=\": [\" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"32\" /><option startIndex=\"86\" endIndex=\"87\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>{</code> suivi de <code>}</code>.</p></body></html>"
          },
          {
            "title": "Question: POST",
            "id": 103338,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>À quoi utilisons-nous les requêtes <code>POST</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Pour envoyer de nouvelles données au serveur</item><item value=\"2\" correct=\"false\">Pour récupérer des données du serveur</item></selection><p visible-if=\"wrong\">Pour envoyer de nouvelles données au serveur.</p></body></html>"
          },
          {
            "title": "Question: POST URL",
            "id": 103339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment le navigateur sait-il où envoyer les données dans la requête <code>POST</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Par l'adresse du serveur dans l'URL de la requête</item><item value=\"2\" correct=\"false\">En lisant les données que la requête envoie</item></selection><p visible-if=\"wrong\">Par l'adresse du serveur dans l'URL de la requête.</p></body></html>"
          },
          {
            "title": "Question: POST URL 2",
            "id": 103340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En regardant cette URL, à quoi les données que nous envoyons pourraient-elles être liées ?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un nouvel article soumis par quelqu'un</item><item value=\"2\" correct=\"false\">Un nouvel utilisateur qui s'est inscrit</item></selection><p visible-if=\"wrong\">Un nouvel article soumis par quelqu'un.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 103342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code une méthode de requête HTTP qui envoie de nouvelles données à un serveur.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>POST</code>.</p></body></html>"
          },
          {
            "title": "Example: POST URL",
            "id": 103344,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Envoie une requête <code>POST</code> à un serveur à <code>fakenews.com</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>POST</code>.</p></body></html>"
          },
          {
            "title": "Example: POST URL 2",
            "id": 103345,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>À travers l'URL de la requête <code>POST</code>, fais savoir au serveur que les données que tu envoies sont un nouvel article.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>/</code> suivi de <code>article</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 11128,
        "title": "Requête et Réponse",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "POST Body",
            "id": 103326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>  Les requêtes <code>POST</code> ressemblent beaucoup aux requêtes <code>GET</code> dans Express.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"8\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>post</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2",
            "id": 103327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comme avec les requêtes <code>GET</code>, nous définissons également le point de terminaison pour les requêtes <code>POST</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"9\" endIndex=\"17\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>\"/users\"</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy",
            "id": 132314,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Contrairement aux requêtes <code>GET</code> qui ont un corps vide, les requêtes <code>POST</code><em>contiennent</em> des données dans leur corps de requête.</p><p>Nous pouvons accéder au corps de l'objet de requête via <code>req.body</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"64\" /></options></interaction></interactions><output><content><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin24&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req</code> suivi de <code>.body</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy",
            "id": 132315,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour permettre l'accès au corps, nous devons dire à notre application express d'utiliser <code>express.json</code>, un middleware intégré.</p><p>Nous aborderons bientôt le middleware. Pour l'instant, sache que cela nous aide à analyser les données JSON entrantes, nous permettant de travailler avec le corps des requêtes.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"101\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin24&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>express.json()</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy",
            "id": 132316,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rappelle-toi que JSON représente un objet JavaScript. Une fois que nous l'avons analysé, nous pouvons accéder aux données dans le corps de la requête et travailler avec elles.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(username);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(email);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"96\" endIndex=\"104\" /><option startIndex=\"133\" endIndex=\"138\" /></options></interaction></interactions><output><content><text value=\"_crazyPumpkin24\" /><text type=\"break\" /><text value=\"mia@mimo.org\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>username</code> suivi de <code>email</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - Copy",
            "id": 132317,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Envoyons une réponse au client, tout comme nous le faisons dans les requêtes <code>GET</code>, en livrant des données telles que HTML, texte ou JSON.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"75\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.</code> et enfin <code>send</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - ",
            "id": 132319,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le statut par défaut si tout se passe comme prévu et qu'un nouvel élément est créé ou ajouté à la base de données est <code>201 Created</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"87\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>.</code> suivi de <code>status(201)</code> puis <code>.</code>, <code>send</code>.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - Copy",
            "id": 132320,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pour créer un nouvel utilisateur, nous pourrions avoir besoin de certains paramètres, tels qu'un email, à envoyer avec la requête.</p><p>Si nous avons toutes les données et pouvons ajouter l'utilisateur, nous envoyons <code>201 Created</code>. Si des données manquent, nous envoyons <code>400 Bad Request</code> avec un message d'erreur.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"224\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"Email is required\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>400</code> suivi de <code>201</code>.</p></body></html>"
          },
          {
            "title": "POST Headers",
            "id": 103330,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Une requête <code>POST</code> a des en-têtes fournissant un contexte supplémentaire, comme <code>Content-Type</code>, qui nous indique le format du corps de la requête.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin24&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>Content-Type:</code> suivi de <code>application/json</code>.</p></body></html>"
          },
          {
            "title": "POST Headers 2",
            "id": 103329,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Tu peux voir que le corps de cette requête <code>POST</code> a un <code>Content-Type</code> de <code>application/json</code>.</p><p>C'est le cas pour la plupart des requêtes API. D'autres formats sont utilisés pour des choses comme les données de formulaire ou les téléchargements de fichiers.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin24&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"57\" endIndex=\"68\" /><option startIndex=\"68\" endIndex=\"69\" /><option startIndex=\"69\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>application</code> suivi de <code>/</code> et enfin <code>json</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Body",
            "id": 103347,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Où les requêtes <code>POST</code> stockent-elles les données qu'elles envoient au serveur ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Dans le corps de la requête</item><item value=\"2\" correct=\"false\">Uniquement dans l'URL, en tant que valeurs de paramètres de requête</item></selection><p visible-if=\"wrong\">Dans le corps de la requête.</p></body></html>"
          },
          {
            "title": "Example: POST Body JSON",
            "id": 103354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée un endpoint <code>POST</code> pour <code>/users</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hello from the endpoint!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"3\" endIndex=\"4\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"9\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"/users\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>.</code> puis <code>post</code>, <code>\"/users\"</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Body 2",
            "id": 103348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que pourrait envoyer cette requête `POST au serveur ?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy &gt;:(&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un commentaire sur un article, contenant le texte du commentaire et l'auteur</item><item value=\"2\" correct=\"false\">Les données d'un utilisateur, y compris le nom d'utilisateur et la description</item></selection><p visible-if=\"wrong\">Un commentaire sur un article, contenant le texte du commentaire et l'auteur.</p></body></html>"
          },
          {
            "title": "Question: POST Body JSON",
            "id": 103349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle est une option populaire pour formater les données d'une requête <code>POST</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JSON</item><item value=\"2\" correct=\"false\">HTTP</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir JSON.</p></body></html>"
          },
          {
            "title": "Question: POST Headers",
            "id": 103350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel sera le code de statut si toutes les données requises sont fournies et que la requête est réussie ?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>201 Created</code></item><item value=\"2\" correct=\"false\"><code>400 Bad Request</code></item></selection><p visible-if=\"wrong\"><code>201 Created</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Body 2",
            "id": 103353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Définis les codes corrects.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"224\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>400</code> suivi de <code>201</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Headers",
            "id": 103355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Renvoyer une réponse avec le code d'état correct.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"87\" /><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>res</code> suivi de <code>.</code> puis <code>status</code>, <code>(</code>, <code>201</code>, <code>)</code>, <code>.</code>, <code>send</code>.</p></body></html>"
          },
          {
            "title": "Question: POST Headers 2",
            "id": 103351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que nous indique l'en-tête <code>Content-Type</code> d'une requête <code>POST</code> ?<br /></p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment\" /><text type=\"break\" /><text value=\"Host: fakenews.com\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy &gt;:(&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Le format des données que nous envoyons au serveur</item><item value=\"2\" correct=\"false\">Le format des données dans la base de données du serveur</item></selection><p visible-if=\"wrong\">Le format des données que nous envoyons au serveur.</p></body></html>"
          }
        ]
      }
    ]
  }
}