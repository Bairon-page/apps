{
  "tutorial": {
    "id": 2226,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Conditionnelles",
    "descriptionContent": "Conditionnelles",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 7740,
        "title": "Prendre des décisions",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 67812,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` statement avec la condition `true`. À l'intérieur du bloc de code, code une chaîne de caractères qui s'affiche dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "if (true) {\n console.log(\"Learn to code!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 67821,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `isRainy` et assigne-lui une valeur booléenne. Ensuite, code une instruction if qui utilise `isRainy` comme condition. Affiche quelque chose dans la console si `isRainy` est `true`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const isRainy = true;\nif (isRainy) {\n console.log(\"Take an umbrella\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 67823,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable constante appelée `onVacation`, et assigne-lui la valeur `true`. Utilise la variable comme condition de l'instruction if.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\nif (  ) {\n  console.log(\"Send out-of-office email\");\n}",
                  "solvedContent": "const onVacation = true;\nif (onVacation) {\n  console.log(\"Send out-of-office email\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 67836,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `cancel`. Assigne-lui une valeur booléenne de ton choix, et utilise-la comme condition pour l'instruction if.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\nif (  ) {\n  console.log(\"Are you sure you want to cancel your appointment?\")\n}",
                  "solvedContent": "const cancel = false;\nif (cancel) {\n  console.log(\"Are you sure you want to cancel your appointment?\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 6",
            "id": 67835,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Définis `gotMushroom` à `true`. Ensuite, code une instruction if autour de l'instruction d'affichage et utilise `gotMushroom` comme condition.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const gotMushroom;\n\nconsole.log(\"Use speed boost\");\n",
                  "solvedContent": "const gotMushroom = true;\nif (gotMushroom) {\n  console.log(\"Use speed boost\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 7",
            "id": 67834,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code une instruction if avec `true` comme condition. Ensuite, à l'intérieur du bloc de code, écris une instruction d'affichage de **string**.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "if (true) {\n  console.log(\"Get student discount\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 8",
            "id": 67822,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoute deux ou plusieurs `console.log` non vides au bloc de code de l'instruction `if`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const doChores = true;\nif (doChores) {\n \n \n}",
                  "solvedContent": "const doChores = true;\nif (doChores) {\n console.log(10);\n console.log(\"Wash dishes\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 67811,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code une instruction if avec la condition `true` autour de l'instruction d'affichage.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\nconsole.log(\"Jill is online\");",
                  "solvedContent": "if (true) {\n\tconsole.log(\"Jill is online\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 9",
            "id": 67813,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` appelée `levelCompleted`. Assigne-lui une valeur booléenne de ton choix. Ensuite, utilise-la comme condition pour l'instruction if.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\nif (  ) {\n\tconsole.log(\"Continue to level 3\");\n}",
                  "solvedContent": "const levelCompleted = true;\nif (levelCompleted) {\n\tconsole.log(\"Continue to level 3\");\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8082,
        "title": "Utilisation des conditions",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Condition",
            "id": 70705,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mets à jour la variable `subscribed` afin que la comparaison retourne `true` et que le texte s'affiche dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let subscribed = false;\nif (subscribed === true) {\n console.log(\"Thank you for subscribing\");\n}",
                  "solvedContent": "let subscribed = false;\nsubscribed = true;\nif (subscribed === true) {\n console.log(\"Thank you for subscribing\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Different comparisons",
            "id": 70702,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` statement qui évalue si `score` est supérieur à `50`. À l'intérieur du bloc de code, affiche une chaîne de caractères de plus de `10` caractères dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let score = 100;",
                  "solvedContent": "let score = 100;\nif (score > 50) {\n console.log(\"we have a new highest score\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Wrong answers",
            "id": 70699,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Dans la première condition, vérifie si `grade` n'est pas égal à `\"A\"`. Dans la deuxième condition, vérifie si `subject` est égal à `\"Math\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let subject = \"Math\";\nlet grade = \"A\";\nif () {\n console.log(\"Give \" + subject + \" a chance\");\n}\nif () {\n console.log(\"Today's a great day for solving equations!\");\n}",
                  "solvedContent": "let subject = \"Math\";\nlet grade = \"A\";\nif (grade !== \"A\") {\n console.log(\"Give \" + subject + \" a chance\");\n}\nif (subject === \"Math\") {\n console.log(\"Today's a great day for solving equations!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Correct answers",
            "id": 70697,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Coder une condition pour afficher le pouvoir spécial d'un personnage si le `character` du jeu est un `\"Wizard\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let character = \"Wizard\";\nif () {\n console.log(\"Special power: potions\");\n}",
                  "solvedContent": "let character = \"Wizard\";\nif (character == \"Wizard\") {\n console.log(\"Special power: potions\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Variables",
            "id": 70707,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `getTicket`. Sa valeur doit vérifier si la variable `directFlight` a une valeur booléenne de `true`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let directFlight = true;\nif (getTicket) {\n console.log(\"Direct flight found\");\n}",
                  "solvedContent": "let directFlight = true;\nconst getTicket = directFlight === true;\nif (getTicket) {\n console.log(\"Direct flight found\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Condition",
            "id": 70735,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` statement qui définit `isFreezing` à `true` si `degrees` est inférieur ou égal à `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let degrees = 0;\nlet isFreezing = false;\nconsole.log(\"Is freezing: \" + isFreezing);",
                  "solvedContent": "let degrees = 0;\nlet isFreezing = false;\nif (degrees <= 0) {\n isFreezing = true;\n}\nconsole.log(\"Is freezing: \" + isFreezing);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Correct answers",
            "id": 70727,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` statement qui vérifie si la variable `destination` est égale à `\"Venice\"`. Si la comparaison est `true`, utilise `console.log` pour afficher une chaîne de caractères de plus de `10` caractères.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let destination = \"Venice\";",
                  "solvedContent": "let destination = \"Venice\";\nif (destination === \"Venice\") {\n console.log(\"Get an Italian conversation book\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Different comparisons",
            "id": 70762,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` statement qui affiche un message de ton choix si `votes` est supérieur ou égal à `votesNeeded`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let votes = 270;\nlet votesNeeded = 400;",
                  "solvedContent": "let votes = 270;\nlet votesNeeded = 400;\nif (votes >= votesNeeded) {\n console.log(\"We have a winner\");\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8192,
        "title": "Coder les instructions Else",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Lights off",
            "id": 71618,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Définis une valeur pour `isInstalled` afin que `You already have SnapCat` s'affiche dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isInstalled;\nif (isInstalled) {\n console.log(\"You already have SnapCat\");\n} else {\n console.log(\"Installing SnapCat...\");\n}",
                  "solvedContent": "let isInstalled = true;\nif (isInstalled) {\n console.log(\"You already have SnapCat\");\n} else {\n console.log(\"Installing SnapCat...\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Else",
            "id": 71615,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` / `else` statement en utilisant `isWeekend` comme condition. Pour chaque bloc de code, code un console.log qui affiche une chaîne de caractères de ton choix.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isWeekend = false;\n\n\n\n\n",
                  "solvedContent": "let isWeekend = false;\nif (isWeekend) {\n\tconsole.log(\"stay in bed\");\n} else {\n\tconsole.log(\"rise and shine\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: No own condition",
            "id": 71624,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` / `else` statement dont les blocs de code affichent des messages différents dans la console. La condition de l'instruction `if` doit vérifier si `password` est égal à `correctPassword`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let password = \"00000001\";\nlet correctPassword = \"00000000\";\n\n\n\n\n",
                  "solvedContent": "let password = \"00000001\";\nlet correctPassword = \"00000000\";\nif (password === correctPassword) {\n console.log(\"Welcome\");\n} else {\n console.log(\"You shall not pass\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Position",
            "id": 71616,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code une instruction `else` qui met à jour `flourAdded` à `200` si l'utilisateur n'a pas tamisé suffisamment de farine dans la pâte à gâteau.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let flourAdded = 50;\nlet flourNeeded = 200;\nif (flourAdded === flourNeeded) {\n\tconsole.log(\"Add vanilla bean\");\n}\n\n",
                  "solvedContent": "let flourAdded = 50;\nlet flourNeeded = 200;\nif (flourAdded === flourNeeded) {\n\tconsole.log(\"Add vanilla bean\");\n} else {\n\tflourAdded = 200;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Lights on",
            "id": 71621,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Définis `memoryFull` de sorte que `takePicture` soit mis à jour à `true`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let memoryFull;\nlet takePicture = false;\nif (memoryFull) {\n console.log(\"Phone memory full\");\n} else {\n takePicture = true;\n}",
                  "solvedContent": "let memoryFull = false;\nlet takePicture = false;\nif (memoryFull) {\n console.log(\"Phone memory full\");\n} else {\n takePicture = true;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Catch all",
            "id": 71626,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoute une instruction `else` qui affiche `\"You have a new message\"` si `messages` est supérieur à `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let messages = 5;\nif (messages === 0) {\n console.log(\"Inbox empty\");\n}\n\n",
                  "solvedContent": "let messages = 5;\nif (messages === 0) {\n console.log(\"Inbox empty\");\n} else {\n console.log(\"You have a new message\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: No own condition",
            "id": 71654,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `if` / `else` statement qui définit `inboxFull` à `true` si `messages` est supérieur à `1000`. Ensuite, affiche un message si ce n'est pas le cas.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let messages = 1100;\nlet inboxFull = false;\n\n\n\n\n",
                  "solvedContent": "let messages = 1100;\nlet inboxFull = false;\nif (messages > 1000) {\n inboxFull = true;\n} else {\n console.log(\"You have one new message\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Position",
            "id": 71646,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un bloc `if` / `else` dont les blocs de code affichent des messages dans la console. Définis la condition de l'instruction `if` pour vérifier si `commonFriends` est supérieur à 2.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let commonFriends = 3;\n\n\n\n\n",
                  "solvedContent": "let commonFriends = 3;\nif (commonFriends > 2) {\n console.log(\"Friend suggestions: Sue\");\n} else {\n console.log(\"No new friend suggestions\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Lights off",
            "id": 71648,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Définis une valeur booléenne pour `installed` afin que le bloc de code de l'instruction `if` s'exécute.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let installed;\nif (installed) {\n console.log(\"Homeflix already installed\");\n} else {\n console.log(\"Installing Homeflix...\");\n}",
                  "solvedContent": "let installed = true;\nif (installed) {\n console.log(\"Homeflix already installed\");\n} else {\n console.log(\"Installing Homeflix...\");\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8156,
        "title": "Incorporer Else If",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: else if keyword",
            "id": 71345,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code les mots-clés manquants.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let topping = \"pepperoni\";\nif (topping === \"pineapple\") {\n console.log(\"Request denied.\");\n}  (topping === \"pepperoni\") {\n console.log(\"Request accepted.\");\n} else {\n console.log(\"Can't process request.\");\n}",
                  "solvedContent": "let topping = \"pepperoni\";\nif (topping === \"pineapple\") {\n console.log(\"Request denied.\");\n} else if (topping === \"pepperoni\") {\n console.log(\"Request accepted.\");\n} else {\n console.log(\"Can't process request.\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Adding else if",
            "id": 71344,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `else if` statement qui vérifie si la variable `email` a une certaine valeur et affiche quelque chose dans la console si c'est le cas.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let email = \"lori@mail.com\";\nif (email === \"lori@mail.com\") {\n console.log(\"Welcome, Lori.\");\n}",
                  "solvedContent": "let email = \"lori@mail.com\";\nif (email === \"lori@mail.com\") {\n console.log(\"Welcome, Lori.\");\n} else if (email === \"radu@mail.com\") {\n console.log(\"Radu is the best!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: As many as we'd like",
            "id": 71380,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoute une troisième instruction `else if` qui vérifie un email comme le font les autres conditions. Affiche quelque chose dans la console si la condition est remplie.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let email = \"cindy@mail.com\";\nif (email === \"erin@mail.com\") {\n console.log(\"Welcome, Erin.\");\n} else if (email === \"colin@mail.com\") {\n console.log(\"Hello, Colin...\");\n} else if (email === \"cindy@mail.com\") {\n console.log(\"What's up, Cindy?\");\n} else {\n console.log(\"Invalid email.\");\n}",
                  "solvedContent": "let email = \"cindy@mail.com\";\nif (email === \"erin@mail.com\") {\n console.log(\"Welcome, Erin.\");\n} else if (email === \"colin@mail.com\") {\n console.log(\"Hello, Colin...\");\n} else if (email === \"cindy@mail.com\") {\n console.log(\"What's up, Cindy?\");\n} else if (email === \"ron@mail.com\") {\n console.log(\"Go Ron!\");\n} else {\n console.log(\"Invalid email.\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: else statement",
            "id": 71346,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Exécute le bloc de code de l'instruction `else` en créant une variable `let` nommée `userAnswer` et en lui assignant une valeur appropriée.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let correctAnswer = \"Python\";\nlet\nif (userAnswer === correctAnswer) {\n console.log(\"That's correct!\");\n} else if (userAnswer === \"Java\") {\n console.log(\"Java is not correct\");\n} else {\n console.log(\"The correct answer is Python!\");\n}",
                  "solvedContent": "let correctAnswer = \"Python\";\nlet userAnswer = \"banana\";\nif (userAnswer === correctAnswer) {\n console.log(\"That's correct!\");\n} else if (userAnswer === \"Java\") {\n console.log(\"Java is not correct\");\n} else {\n console.log(\"The correct answer is Python!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: else if keyword",
            "id": 71373,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code les mots-clés pour une instruction `else if` pour compléter le code.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let wifiOn = true;\nlet bluetoothOn = false;\nif (wifiOn === false) {\n console.log(\"Turn on Wifi\");\n}(bluetoothOn === false) {\n console.log(\"Turn on Bluetooth\");\n} else {\n console.log(\"Airplay is enabled\");\n}",
                  "solvedContent": "let wifiOn = true;\nlet bluetoothOn = false;\nif (wifiOn === false) {\n console.log(\"Turn on Wifi\");\n} else if (bluetoothOn === false) {\n console.log(\"Turn on Bluetooth\");\n} else {\n console.log(\"Airplay is enabled\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Adding else if",
            "id": 71374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un `else if` statement entre le `if` statement et le `else` statement. Il doit mettre à jour la variable `efficiency` à `\"high\"` lorsque `speed` est supérieur à `30` et inférieur à `90`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let speed = 45;\nlet efficiency = \"low\";\nif (speed <= 30) {\n efficiency = \"medium\";\n} \n\nelse {\n efficiency = \"low\";\n}\nconsole.log(\"Fuel efficiency: \" + efficiency);",
                  "solvedContent": "let speed = 45;\nlet efficiency = \"low\";\nif (speed <= 30) {\n efficiency = \"medium\";\n} else if (speed < 90) {\n efficiency = \"high\";\n} else {\n efficiency = \"low\";\n}\nconsole.log(\"Fuel efficiency: \" + efficiency);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: else statement",
            "id": 71379,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complète le code avec une instruction `else` pour afficher un message de **chaîne de caractères** dans la console lorsque `selected` n'est pas égal à `\"Mario\"` ou `\"Princess Peach\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let selected = \"Spiderman\";\nif (selected === \"Mario\") {\n console.log(\"Woohoo!\");\n} else if (selected === \"Princess Peach\") {\n console.log(\"Let's go!\");\n}",
                  "solvedContent": "let selected = \"Spiderman\";\nif (selected === \"Mario\") {\n console.log(\"Woohoo!\");\n} else if (selected === \"Princess Peach\") {\n console.log(\"Let's go!\");\n} else {\n console.log(\"Not a valid character!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: As many as we'd like",
            "id": 71349,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code un troisième `else if` qui vérifie la couleur \"orange\" dans sa condition. Incluez un console.log avec une sortie de **chaîne de caractères** dans son bloc de code.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let color = \"red\";\nif (color === \"blue\") {\n console.log(\"Blue is awesome!\");\n} else if (color === \"red\") {\n console.log(\"Red's a nice color.\");\n} else if (color === \"white\") {\n console.log(\"White is lovely.\");\n} else {\n console.log(\"That's an ok color.\");\n}",
                  "solvedContent": "let color = \"red\";\nif (color === \"blue\") {\n console.log(\"Blue is awesome!\");\n} else if (color === \"orange\") {\n console.log(\"Orange is the best!!\");\n} else if (color === \"red\") {\n console.log(\"Red's a nice color.\");\n} else if (color === \"white\") {\n console.log(\"White is lovely.\");\n} else {\n console.log(\"That's an ok color.\");\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}