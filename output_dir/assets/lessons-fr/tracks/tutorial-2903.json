{
  "tutorial": {
    "id": 2903,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Liste des tâches - Partie 1",
    "descriptionContent": "Trop de choses à faire ? Trop de choses à jongler en même temps ? Dans ce projet, nous allons créer un gestionnaire de tâches pour t'aider avec ça !",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2903-icon-banner.svg",
    "chapters": [
      {
        "id": 14994,
        "title": "Chapitre #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 132190,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bienvenue dans le projet **Liste de Tâches**. Nous allons créer un programme permettant aux utilisateurs de voir une liste et d'ajouter des tâches.\n\nLa première chose dont nous avons besoin est un tableau pour stocker nos tâches.\n\n1. Déclare une variable `items` et initialise-la comme un tableau vide.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const items = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 132191,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, créons une fonction qui peut afficher une liste donnée d'éléments.\n\n1. Déclare une fonction `displayList` qui prend un paramètre `items`.\n2. À l'intérieur de la fonction, boucle sur tous les éléments du tableau passé `items` et affiche chaque élément de la liste avec son index. Commence à compter à `1`, pas à `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];",
                  "solvedContent": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 132192,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous avons également besoin d'une fonction qui ajoute un nouvel élément à la liste.\n\n1. Déclare une fonction `addItem` qui prend deux paramètres `items` et `itemToAdd`.\n2. Ajoute `itemToAdd` au tableau `items` qui a été passé à la fonction.\n3. Si tu le souhaites, affiche que le nouvel élément a été ajouté avec succès à la liste des éléments.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}",
                  "solvedContent": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 132189,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous allons utiliser `@mimo-org/input` pour capturer l'entrée de l'utilisateur.\n\n1. En haut du fichier, déclare une variable `input` et importe le module `input`. Nous utilisons `@mimo-org/input` pour interagir avec l'utilisateur dans la console.\n   ```const input = require(\"@mimo-org/input\");```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 132193,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Avec les fonctions d'affichage et d'ajout de la liste terminées, nous pouvons maintenant configurer notre boucle principale et notre menu.\n\n1. Déclare une variable booléenne nommée `running` et définis-la sur `true`.\n2. Implémente une boucle `while` avec la condition de la variable `running`.\n3. À l'intérieur de la boucle, montre à l'utilisateur les choix possibles.\n   - Indique à l'utilisateur qu'écrire `1` affichera la liste.\n   - Explique que taper `2` ajoutera un nouvel élément.\n   - Montre à l'utilisateur que `3` terminera le programme.\n4. Demande à l'utilisateur une entrée et enregistre-la dans une variable appelée `choice`.\n5. Si le choix de l'utilisateur est `3`, définis `running` sur `false` pour sortir de la boucle `while`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 3) {\n    running = false;\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 132194,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, nous allons déterminer l'action à effectuer en fonction du choix de l'utilisateur.\n\n1. Pour le cas `1`, appelle la fonction `displayList` avec l'argument `items`.\n2. Le cas `2` ne doit rien faire pour le moment. Nous nous en occuperons ensuite.\n3. Si quelque chose d'autre que `1`, `2` ou `3` a été saisi, affiche un message d'erreur.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 3) {\n    running = false;\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Prenons soin d'ajouter de nouveaux éléments.\n\n1. Pour le cas `2`, avant d'appeler `addItem`, déclare la variable `newItem` et définis sa valeur en utilisant le prompt. Demande à l'utilisateur d'entrer une nouvelle tâche.\n2. Après avoir récupéré le nouvel élément de l'utilisateur dans `newItem`, appelle la fonction `addItem` avec les arguments `items` et `newItem` pour ajouter le nouvel élément.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}