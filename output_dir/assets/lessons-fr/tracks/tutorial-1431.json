{
  "tutorial": {
    "id": 1431,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Encapsulation des objets",
    "descriptionContent": "Apprends à identifier le code POO et à penser comme un développeur en créant des objets encapsulés",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10318,
        "title": "Introduction à la POO",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 92845,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Apprenons les différents styles de codage utilisés par les développeurs. Nous explorerons la <strong>programmation fonctionnelle</strong> et la <strong>programmation orientée objet</strong>.</p></body></html>"
          },
          {
            "title": "FP vs OOP",
            "id": 92841,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Les différents styles de codage sont également connus sous le nom de <strong>paradigmes</strong>. Un style courant est appelé <strong>programmation fonctionnelle</strong>, ou FP en abrégé.</p><p>En programmation fonctionnelle, nous utilisons beaucoup de fonctions et de variables.</p><code version=\"2\" codelang=\"python\" name=\"fp.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getTotal\" class=\"title\" /><text value=\"(a, b)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + b\" /><text type=\"break\" /><text type=\"break\" /><text value=\"num1 = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"num2 = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"total = getTotal(num1, num2)\" /><text type=\"break\" /><text value=\"print(total)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"12\" /></options></interaction></interactions><output><content><text value=\"5\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>def</code> suivi de <code>getTotal</code>.</p></body></html>"
          },
          {
            "title": "FP 1",
            "id": 92840,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dans le style FP, nous gardons les données et la fonctionnalité séparées. Nous passons des données dans les fonctions chaque fois que nous voulons quelque chose.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"distance = getDistance(mph, h)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"85\" /><option startIndex=\"88\" endIndex=\"89\" /><option startIndex=\"81\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>(</code> suivi de <code>mph</code> et enfin <code>)</code>.</p></body></html>"
          },
          {
            "title": "FP 2",
            "id": 92839,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En programmation fonctionnelle, les fonctions <strong>renvoient</strong> de nouvelles valeurs et utilisent ensuite ces valeurs ailleurs dans le code.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"distance = getDistance(mph, h)\" /><text type=\"break\" /><text value=\"print(distance)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"33\" /><option startIndex=\"96\" endIndex=\"104\" /></options></interaction></interactions><output><content><text value=\"120\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>return</code> suivi de <code>distance</code>.</p></body></html>"
          },
          {
            "title": "OOP 1",
            "id": 92838,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En <strong>programmation orientée objet (POO)</strong>, nous regroupons les données et les fonctionnalités sous forme de propriétés et de méthodes à l'intérieur des objets, comme <code>Virtual_Pet</code> ici.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Virtual_Pet\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"__init__\" class=\"title\" /><text value=\"(self, color, name)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.color = color\" /><text type=\"break\" /><text value=\"    self.name = name\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rocky = Virtual_Pet(\" /><text value=\"&quot;brown&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;rocky&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(rocky.color)\" /><text type=\"break\" /><text value=\"print(rocky.name)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"144\" endIndex=\"149\" /><option startIndex=\"169\" endIndex=\"173\" /></options></interaction></interactions><output><content><text value=\"brown\" /><text type=\"break\" /><text value=\"rocky\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>rocky</code> suivi de <code>name</code>.</p></body></html>"
          },
          {
            "title": "OOP 2",
            "id": 92833,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>La POO est utile pour modéliser des objets, qu'ils soient réels ou non. Les objets ont des propriétés et des méthodes que nous traitons comme une seule chose, comme <code>car</code> ici.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  mileage = \" /><text value=\"12000\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self, miles)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.mileage += miles\" /><text type=\"break\" /><text type=\"break\" /><text value=\"tesla = Car()\" /><text type=\"break\" /><text value=\"tesla.drive(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(tesla.mileage)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"9\" /></options></interaction></interactions><output><content><text value=\"12100\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>class</code> suivi de <code>Car</code>.</p></body></html>"
          },
          {
            "title": "OOP 3",
            "id": 92836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En POO, nous utilisons des méthodes pour <strong>mettre à jour</strong> les valeurs existantes d'un objet, comme ici où nous utilisons <code>eat()</code> pour mettre à jour la valeur de <code>hungry</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"62\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"65\" endIndex=\"70\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>self</code> suivi de <code>.</code> puis <code>hungry</code>, <code>=</code>, <code>False</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 92832,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce que la programmation orientée objet ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Un style de programmation où nous regroupons ensemble des données et des fonctionnalités liées</item><item value=\"2\" correct=\"false\">Un style de programmation où nous gardons les données et les fonctionnalités séparées</item></selection><p visible-if=\"wrong\">Un style de programmation où nous regroupons ensemble des données et des fonctionnalités liées.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 92831,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quand utilisons-nous la POO ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Lors de la regroupement des données et des fonctionnalités à l'intérieur d'un objet</item><item value=\"2\" correct=\"false\">Quand nous voulons que les fonctions renvoient de nouvelles valeurs au lieu de mettre à jour les propriétés</item></selection><p visible-if=\"wrong\">Lors de la regroupement des données et des fonctionnalités à l'intérieur d'un objet.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 92863,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quelle sera la valeur de la propriété <code>hungry</code> après avoir appelé la méthode <code>eat()</code> ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"dog = Dog()\" /><text type=\"break\" /><text value=\"dog.eat()\" /><text type=\"break\" /><text value=\"print(dog.hungry);\" /></content><output><content><text value=\"False\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Vrai</item><item value=\"2\" correct=\"true\">Faux</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Faux.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 92829,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Créons une tirelire virtuelle avec la POO. Tout d'abord, nous créons une nouvelle classe appelée <code>Piggy</code> avec une propriété <code>value</code> initialisée à 0.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"23\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>value</code> suivi de <code>=</code> et enfin <code>0</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 92828,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ensuite, ajoute une méthode appelée <code>addMoney()</code> qui accepte un paramètre appelé <code>amount</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"30\" /><option startIndex=\"31\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"45\" /><option startIndex=\"46\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"53\" /><option startIndex=\"53\" endIndex=\"54\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>def</code> suivi de <code>addMoney</code> puis <code>(</code>, <code>self,</code>, <code>amount</code>, <code>)</code>, <code>:</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 92834,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Maintenant, faisons en sorte que <code>addMoney()</code> mette à jour la valeur avec la somme de la valeur actuelle de <code>Piggy</code> et de <code>amount</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"85\" endIndex=\"91\" /><option startIndex=\"59\" endIndex=\"63\" /><option startIndex=\"63\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"69\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>self</code> suivi de <code>.</code> puis <code>value</code>, <code>amount</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 92844,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mettons 100 $ dans notre tirelire en appelant la méthode <code>addMoney()</code> de <code>Piggy</code> avec <code>100</code> comme argument.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"myPiggy = Piggy()\" /><text type=\"break\" /><text value=\"myPiggy.addMoney(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"115\" endIndex=\"136\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>myPiggy.addMoney(100)</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 92852,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Enfin, affichons la propriété <code>value</code> de <code>myPiggy</code> pour voir si elle a réellement été mise à jour.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Piggy\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  value = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"addMoney\" class=\"title\" /><text value=\"(self, amount)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.value = self.value + amount\" /><text type=\"break\" /><text value=\"    \" /><text type=\"break\" /><text value=\"myPiggy = Piggy()\" /><text type=\"break\" /><text value=\"myPiggy.addMoney(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(myPiggy.value)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"144\" endIndex=\"157\" /></interactions><output><content><text value=\"100\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>myPiggy.value</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 10320,
        "title": "Encapsulation",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Encapsulation",
            "id": 92859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En POO, nous regroupons ensemble des données et des fonctions liées dans le même objet. Nous appelons cela <strong>encapsulation</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Fido'\" class=\"string\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"True\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"9\" /><option startIndex=\"9\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>class</code> suivi de <code>Dog</code> et enfin <code>:</code>.</p></body></html>"
          },
          {
            "title": "Non-encapsulated example 1",
            "id": 92856,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En FP, le code n'est pas encapsulé. Peux-tu expliquer pourquoi ce code ne montre pas d'encapsulation ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getDistance\" class=\"title\" /><text value=\"(mph, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" mph * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"mph = \" /><text value=\"60\" class=\"number\" /><text type=\"break\" /><text value=\"h = \" /><text value=\"2\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Les données et la fonction ne sont pas regroupées ensemble dans un objet</item><item value=\"2\" correct=\"false\">Les données et la fonction ne sont pas liées</item></selection><p visible-if=\"wrong\">Les données et la fonction ne sont pas regroupées ensemble dans un objet.</p></body></html>"
          },
          {
            "title": "Non-encapsulated example 2",
            "id": 92857,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons repérer du code qui n'est pas bien encapsulé si des méthodes et propriétés liées se trouvent dans différents objets. Comment pouvons-nous encapsuler ce code ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"False\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Déplace <code>eat()</code> à l'intérieur de la classe <code>Dog</code></item><item value=\"2\" correct=\"false\">Fais de <code>Dog</code> et <code>eat</code> deux fonctions</item></selection><p visible-if=\"wrong\">Déplace <code>eat()</code> à l'intérieur de la classe <code>Dog</code>.</p></body></html>"
          },
          {
            "title": "Encapsulated example 1",
            "id": 92860,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En POO, nous identifions quelles méthodes et propriétés vont ensemble et devraient être ajoutées à nos objets.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Cat\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"'orange'\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"meow\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"'Meow'\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"&quot;gray&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"drive\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;accelerating...&quot;\" class=\"string\" /><text value=\")\" /></content></code></body></html>"
          },
          {
            "title": "Encapsulated example 2",
            "id": 92858,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Avec l'encapsulation, nous avons également des méthodes qui utilisent les autres propriétés appartenant à l'objet, comme dans cet exemple <code>eat</code> accède à <code>hungry</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Dog\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Fido'\" class=\"string\" /><text type=\"break\" /><text value=\"  hungry = \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"   \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"eat\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    self.hungry = \" /><text value=\"False\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"68\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"73\" /><option startIndex=\"73\" endIndex=\"79\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>self</code> suivi de <code>.</code> et enfin <code>hungry</code>.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 92855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce que l'encapsulation ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Regrouper des données et fonctions liées dans le même objet</item><item value=\"2\" correct=\"false\">Regrouper les données connexes dans un objet et leurs fonctions dans un autre</item></selection><p visible-if=\"wrong\">Regrouper des données et fonctions liées dans le même objet.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 92854,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ce code est-il encapsulé ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Car\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  color = \" /><text value=\"'red'\" class=\"string\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"start\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   self.on = \" /><text value=\"True\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Oui</item><item value=\"2\" correct=\"false\">Non, parce qu'il contient une fonction</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Oui.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 92853,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ce code est-il encapsulé ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Person\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  name = \" /><text value=\"'Mike'\" class=\"string\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"greet\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"'Hi there!'\" class=\"string\" /><text value=\")\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Oui</item><item value=\"2\" correct=\"false\">Non</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Oui.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 92851,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pourquoi ce code n'est-il pas encapsulé dans la classe <code>Laptop</code> ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Laptop\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"False\" class=\"literal\" /><text type=\"break\" /><text type=\"break\" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"turnOn\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  on = \" /><text value=\"True\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>turnOn()</code> n'est pas dans la classe <code>Laptop</code> donc la fonction ne fait pas partie de l'objet <code>Laptop</code></item><item value=\"2\" correct=\"false\"><code>turnOn</code> est une fonction et non une propriété</item></selection><p visible-if=\"wrong\"><code>turnOn()</code> n'est pas dans la classe <code>Laptop</code> donc la fonction ne fait pas partie de l'objet <code>Laptop</code>.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 92850,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Comment pouvons-nous encapsuler ce code ?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Mets <code>base</code>, <code>height</code>, et <code>getArea()</code> dans la même classe</item><item value=\"2\" correct=\"false\">Mets seulement <code>base</code> et <code>height</code> dans la même classe</item></selection><p visible-if=\"wrong\">Mets <code>base</code>, <code>height</code>, et <code>getArea()</code> dans la même classe.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 92849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Convertis ce code non encapsulé en code POO. Tout d'abord, crée une classe appelée <code>Rectangle</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>class</code> suivi de <code>Rectangle:</code>.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 92848,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous encapsulons les données et la fonction en donnant à <code>Rectangle</code> les propriétés <code>base</code> et <code>height</code> et une méthode <code>getArea()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"99\" endIndex=\"102\" /><option startIndex=\"103\" endIndex=\"110\" /><option startIndex=\"110\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option startIndex=\"86\" endIndex=\"92\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>height</code> suivi de <code>def</code> puis <code>getArea</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 92847,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ensuite, nous allons terminer la méthode <code>getArea()</code>. Ajoute <code>self.base</code>, <code>*</code>, puis <code>self.height</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(b, h)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" b * h\" /><text type=\"break\" /><text type=\"break\" /><text value=\"base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"128\" endIndex=\"151\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>self.base * self.height</code>.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 92846,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>À ce stade, nous pouvons supprimer l'ancien code FP. Appelons la méthode <code>getArea()</code> du rectangle afin de pouvoir stocker le résultat dans une variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rect = Rectangle()\" /><text type=\"break\" /><text value=\"area = rect.getArea()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"126\" endIndex=\"130\" /><option startIndex=\"130\" endIndex=\"131\" /><option startIndex=\"131\" endIndex=\"138\" /><option startIndex=\"138\" endIndex=\"139\" /><option startIndex=\"139\" endIndex=\"140\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>rect</code> suivi de <code>.</code> puis <code>getArea</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Example 5",
            "id": 92826,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Affichons le résultat dans la console pour voir si c'est ce que nous attendons.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rectangle\" class=\"title\" /><text value=\":\" /><text type=\"break\" /><text value=\"  base = \" /><text value=\"3\" class=\"number\" /><text type=\"break\" /><text value=\"  height = \" /><text value=\"4\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text type=\"break\" /><text value=\"  \" /><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"getArea\" class=\"title\" /><text value=\"(self)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"   \" /><text value=\"return\" class=\"keyword\" /><text value=\" self.base * self.height\" /><text type=\"break\" /><text type=\"break\" /><text value=\"rect = Rectangle()\" /><text type=\"break\" /><text value=\"area = rect.getArea()\" /><text type=\"break\" /><text value=\"print(area)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"141\" endIndex=\"146\" /><option startIndex=\"146\" endIndex=\"147\" /><option startIndex=\"147\" endIndex=\"151\" /><option startIndex=\"151\" endIndex=\"152\" /></options></interaction></interactions><output><content><text value=\"12\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>print</code> suivi de <code>(</code> puis <code>area</code>, <code>)</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}