{
  "tutorial": {
    "id": 1941,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Créateur de réunions",
    "descriptionContent": "Utilise tes connaissances des classes pour instancier et créer des fonctionnalités pour les réunions et les appels vidéo",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1941-icon-banner.svg",
    "chapters": [
      {
        "id": 12547,
        "title": "Créateur de réunions",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 113430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finley crée une application axée sur les réunions et les appels vidéo. Cette application pourrait être utile pour le travail à distance et les entreprises qui ont besoin de communiquer avec leurs employés. Appliquons nos nouvelles compétences et aidons Finley à créer la fonctionnalité pour les réunions et les appels vidéo !\n\nCommençons par créer notre première classe `Meeting`.\n\n1. Crée une classe `Meeting` et définis le bloc de code.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "class Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 113434,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons une classe `Meeting`, ajoutons le constructeur. Cela définit quelles propriétés un nouvel objet `Meeting` devrait avoir.\n\n1. Ajoute le constructeur à la classe et inclut `date`, `time`, et `name` comme propriétés.\n2. Assigne les valeurs de `date`, `time`, et `name` à leur paramètre respectif du constructeur.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 113436,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Pour compléter la classe `Meeting`, ajoutons une méthode qui envoie une notification à propos d'une réunion.\n\n1. Crée une méthode `sendNotification` qui affiche ce message dans la console :\n```\n \"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\"\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 113437,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La classe `Meeting` est complète, génial ! Finley a également besoin d'une classe pour les appels vidéo. Elle sera très similaire à la classe `Meeting` avec quelques ajouts.\n\n1. Crée une classe `VideoCall` qui étend la classe `Meeting`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 113438,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, ajoutons le constructeur pour `VideoCall`.\n\n1. Ajoute le constructeur et inclut les propriétés `date`, `time`, `name` et `link`.\n2. Inclut `super` pour `date`, `time` et `name` pour indiquer que nous héritons de ces propriétés de la classe `Meeting`.\n3. Donne à `link` la valeur du paramètre `link` du constructeur.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you can use the reserved word `super` to access the superclass' properties like this \n```\nsuper(date,time,name)\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #7",
            "id": 113439,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons configuré les propriétés pour `VideoCall`, codons une méthode.\n\n1. Crée une méthode `sendNotificationLink`.\n2. Fais un appel à la méthode *héritée* `sendNotification`.\n3. Affiche dans la console ce message :\n```\n\"Ceci est le lien vers votre réunion vidéo : \" + this.link;\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `super` to call the `Meeting` class' method `sendNotification`."
                }
              ]
            }
          },
          {
            "title": "Lesson #8",
            "id": 113440,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Concluons la classe `VideoCall` en ajoutant une méthode supplémentaire. Cette méthode appartient uniquement à `VideoCall`.\n\n1. Crée une méthode nommée `test`.\n2. Affiche dans la console ce message : `\"Testing audio and video...success!\"` à l'intérieur de la méthode test.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 113441,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "La classe `Meeting` et la classe `VideoCall` sont complètes, super ! Créons une instance de la classe `Meeting` et appelons sa méthode.\n\n1. Crée une instance de `Meeting` dans une variable `firstMeeting`.\n2. Fournis des valeurs *string* pour les arguments de la date de la réunion, l'heure, et le nom de la personne à rencontrer.\n3. Fais un appel à `sendNotification` en utilisant sa classe.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 113444,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, créons une instance de la classe `VideoCall`.\n\n1. Crée une instance de `VideoCall` dans une variable `firstVideo`. N'hésite pas à fournir n'importe quelle valeur de type *string* pour les arguments.\n2. Exécute la méthode `sendNotificationLink` de `firstVideo`.\n3. Exécute la méthode `test` de `firstVideo`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();\n\nconst firstVideo = new VideoCall(\"04/01/2022\", \"3:30PM\", \"Mauricio\", \"https://vid.eo/meetinglink/12345aBcDef\");\nfirstVideo.sendNotificationLink();\nfirstVideo.test();"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}