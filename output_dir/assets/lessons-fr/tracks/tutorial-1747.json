{
  "tutorial": {
    "id": 1747,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Vérificateur de taille de fichier",
    "descriptionContent": "Écrire du code qui utilise une fonction pour vérifier si la taille d'un fichier est dans les limites de téléchargement",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1747-icon-banner.svg",
    "chapters": [
      {
        "id": 11622,
        "title": "Vérificateur de taille de fichier",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Function",
            "id": 106853,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Écrivons du code qui utilise une fonction pour vérifier si la taille d'un fichier est dans les limites de téléchargement.\n\nNous devons créer une fonction qui vérifiera la taille du fichier.\n\n1. Crée une fonction appelée `checkSize()` avec le paramètre `fileSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function checkSize(fileSize) {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Max Size",
            "id": 106855,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Créons également une variable qui stockerait la taille maximale de fichier autorisée.\n\n1. Crée une constante appelée `maxSize` qui contient le nombre maximum de gigaoctets autorisés et définis-la à `5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Min Size",
            "id": 106864,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Puisque nous avons une variable pour la taille maximale de fichier, ayons également une pour la taille minimale de fichier.\n\n1. Crée une constante appelée `minSize` qui contient le nombre minimum de gigaoctets autorisés et définis-la à `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Upload",
            "id": 106859,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous afficherons si le téléchargement sera autorisé ou non en fonction de la taille du fichier.\n\n1. Utilise une instruction d'affichage pour afficher `\"Upload Permitted?\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Comparison of maximum size",
            "id": 106856,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Disons à l'utilisateur s'il a dépassé la taille maximale de fichier. Nous pouvons le faire en vérifiant si `fileSize` est supérieur à `maxSize`.\n\n1. Crée une constante `overMaxSize`, vérifie si `fileSize` est supérieur à `maxSize`, et stocke le résultat dans la constante.\n2. Ajoute une autre instruction d'affichage qui affiche `\"The file is too large: \" + overMaxSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `>` operator to check if a value is greater than another value."
                }
              ]
            }
          },
          {
            "title": "Comparison of minimum size",
            "id": 106858,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Disons aussi aux utilisateurs si leur fichier téléchargé est trop petit. Nous pouvons vérifier si `fileSize` est inférieur à `minSize`.\n\n1. Crée une constante `underMinSize`, vérifie si `fileSize` est inférieur à `minSize`, et stocke le résultat dans la constante.\n2. Ajoute une autre instruction d'affichage qui affiche `\"The file is too small: \"+ underMinSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `<` operator to check if a value is less than another value."
                }
              ]
            }
          },
          {
            "title": "Calling",
            "id": 106849,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que nous avons créé une fonction, utilisons-la. Pour utiliser une fonction, nous devons l'appeler.\n\n1. Crée une nouvelle constante qui contient une valeur numérique, puis passe cette constante à la fonction `checkSize()`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}\nconst movieSizeGB = 6;\ncheckSize(movieSizeGB);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to call a function is:\n```javascript\nfunctionName(value);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}