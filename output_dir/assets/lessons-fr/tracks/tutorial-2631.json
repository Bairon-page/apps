{
  "tutorial": {
    "id": 2631,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Comparaisons et boucles",
    "descriptionContent": "Les défis sont des exercices plus difficiles qui mettront tes compétences à l'épreuve.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14508,
        "title": "Vérification de mot de passe",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Password Check",
            "id": 129168,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Crée une variable `const` nommée `isPasswordCorrect` pour vérifier si le mot de passe introduit par l'utilisateur est le même que celui que le système a enregistré auparavant.\n\n1. Initialise une variable `const` `isPasswordCorrect` pour vérifier si `userPassword` est exactement le même que `savedPassword`.\n\nOutput:\n```javascript\nAccess granted: true\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userPassword = \"283746\";\r\nconst savedPassword = \"283746\";\r\n\r\nconsole.log(\"Access granted: \" + isPasswordCorrect);",
                  "solvedContent": "const userPassword = \"283746\";\nconst savedPassword = \"283746\";\nconst isPasswordCorrect = userPassword === savedPassword;\nconsole.log(\"Access granted: \" + isPasswordCorrect);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14509,
        "title": "Vérification de l'âge",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Age Check",
            "id": 129169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complète le code pour déterminer si un client âgé de 23 ans est en âge légal de boire.\n\n1. Sur la première ligne, initialise une variable `const` `age`. Donne-lui la valeur numérique de `23`.\n2. Ensuite, crée une autre variable `ageCheck` qui vérifie si la variable `age` est supérieure ou égale à l'âge légal pour boire. L'âge légal pour boire est `21`.\n3. Enfin, modifie le `console.log` de sorte qu'il affiche `Of Legal Drinking Age: true` si le client est en âge légal de boire et `Of Legal Drinking Age: false` si le client est mineur. Utilise la variable `ageCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nconsole.log(\"Of Legal Drinking Age: \");",
                  "solvedContent": "const age = 23;\nconst ageCheck = age >= 21;\nconsole.log(\"Of Legal Drinking Age: \" + ageCheck);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14510,
        "title": "Vérification du budget",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Budget Check",
            "id": 129170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Tu veux vérifier si tu as assez d'argent pour acheter de nouveaux écouteurs.\n\n1. Complète la variable `hasEnoughMoney` afin qu'elle stocke le résultat booléen de savoir si `price` est inférieur *ou* égal à `budget`.\n\nSortie :\n```javascript\nI have enough money:\nfalse\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 23;\r\nconst price = 80;\r\nconst hasEnoughMoney = price  budget;\r\nconsole.log(\"I have enough money:\");\r\nconsole.log(hasEnoughMoney);",
                  "solvedContent": "const budget = 23;\nconst price = 80;\nconst hasEnoughMoney = price <= budget;\nconsole.log(\"I have enough money:\");\nconsole.log(hasEnoughMoney);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14511,
        "title": "Boucle While",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "While Loop",
            "id": 129171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complète le corps de la boucle while de sorte que chaque itération augmente `count` de 1, puis utilise `console.log()` pour afficher le `count` actuel.\n\nExécute le code pour vérifier ta réponse. Une fois terminé, ta console devrait afficher les nombres de 1 à 10.\n\n1. D'abord, fais en sorte que la boucle while incrémente `count` de 1.\n2. Ensuite, fais en sorte que la boucle utilise `console.log()` pour afficher le `count` actuel.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let count = 0;\r\nwhile (count < 10) {}",
                  "solvedContent": "let count = 0;\nwhile (count < 10) {\n  count = count + 1;\n  console.log(count);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14512,
        "title": "Boucle For",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "For Loop",
            "id": 129172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Recrée le compteur du dernier défi (compte de 1 à 10), mais cette fois en utilisant une boucle for. La structure de la boucle est déjà fournie. Tu dois remplir les paramètres manquants de la boucle.\n\nExécute le test pour vérifier ta réponse. Une fois terminé, ta console devrait afficher les nombres de 1 à 10.\n\n1. Tout d'abord, complète le premier paramètre de la boucle for : l'initialisation de la variable compteur `i`. C'est la valeur à laquelle la boucle doit commencer.\n2. Ensuite, complète le deuxième paramètre de la boucle for : la condition de la boucle. C'est la condition sous laquelle la boucle doit s'arrêter.\n3. Enfin, implémente l'itération du compteur de sorte qu'elle incrémente la variable compteur `i` de 1 à chaque étape.\n\n```javascript\n1\n2\n...\n9\n10\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "for (let i = ; i <= ; i) {\n  console.log(i);\n}",
                  "solvedContent": "for (let i = 1; i <= 10; i++) {\n  console.log(i);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14513,
        "title": "Boucle de compte à rebours",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Countdown Loop",
            "id": 129173,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complète la condition de la boucle et le corps de la boucle de sorte que chaque itération affiche dans la console le `count` actuel, puis diminue le `count` actuel de 1. La boucle doit compter à rebours à partir de 15.\n\nExécute le test pour vérifier ta réponse. Une fois terminé, ta console devrait lister les nombres de 1 à 15 dans l'ordre décroissant.\n\n1. Tout d'abord, implémente la condition de la boucle : la boucle doit s'exécuter tant que le `count` est supérieur à `0`.\n2. Ensuite, implémente le corps du code de la boucle : il doit d'abord `console.log` le count actuel, puis diminuer le `count` de 1.\n\n```\n15\n14\n13\n12\n...\n3\n2\n1\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let count = 15;\r\nwhile (count ) {}",
                  "solvedContent": "let count = 15;\nwhile (count > 0) {\n  console.log(count);\n  count--;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11550,
        "title": "Concaténer les noms",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Concatenate Name",
            "id": 106220,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilise une boucle `for` pour concaténer les chaînes des tableaux `firstName` et `lastName`. Assure-toi de concaténer un espace unique entre le prénom et le nom de famille. Ajoute les résultats dans le tableau `fullName`.\n\nRésultat :\n[ 'Axe Rod', 'Miles Rhoades', 'Maya Wagner' ]",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstName = ['Axe', 'Miles', 'Maya'];\nconst lastName = ['Rod', 'Rhoades', 'Wagner'];\nconst fullName = [];\n\n\n\nconsole.log(fullName);",
                  "solvedContent": "const firstName = ['Axe', 'Miles', 'Maya'];\nconst lastName = ['Rod', 'Rhoades', 'Wagner'];\nconst fullName = [];\nfor (let i = 0; i < lastName.length; i++) {\n  fullName.push(firstName[i] + ' ' + lastName[i]);\n}\nconsole.log(fullName);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11435,
        "title": "Compléter une boucle",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Complete a Loop",
            "id": 105740,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complète la boucle for, en augmentant `i` de `2` après chaque itération.\n\nExécute le test pour vérifier ta réponse. Une fois terminé, la console devrait contenir tous les deuxièmes nombres de 0 à 20.\n\n1. Complète les conditions de la boucle for en ajoutant la variable `i` deux fois à chaque fois.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "for (let i = 0; i <= 20; ) {\n  console.log(i);\n}",
                  "solvedContent": "for (let i = 0; i <= 20; i = i + 2) {\n  console.log(i);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11432,
        "title": "Boucle For Imbriquée",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Nested For Loop",
            "id": 105747,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Complète les paramètres de la boucle for imbriquée pour parcourir les données de température et `console.log` la température moyenne de chaque semaine.\n\n1. Fais en sorte que la boucle externe parcoure `temperature_data` en utilisant une variable de compteur que tu appelles `i`.\n2. Fais en sorte que la boucle interne parcoure chaque sous-tableau de `temperature_data` en utilisant une variable de compteur que tu appelles `j`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let temperature_data = [\n  [60.2, 61.2, 63.4, 64.8, 65.1, 63.2, 62.9],\n  [62.5, 63.8, 63.4, 64.6, 65.8, 64.9, 65.0],\n  [63.4, 64.5, 65.2, 64.8, 65.1, 64.9, 66.2],\n  [66.3, 66.8, 66.4, 66.8, 67.8, 67.9, 68.2]\n];\nfor () {\n  let length = temperature_data[i].length;\n  let weeklySum = 0;\n  for () {\n    weeklySum += temperature_data[i][j];\n  }\n  console.log(\"Week \" + i + \" Average Temperature: \" + (weeklySum / 7));\n}",
                  "solvedContent": "let temperature_data = [\n  [60.2, 61.2, 63.4, 64.8, 65.1, 63.2, 62.9],\n  [62.5, 63.8, 63.4, 64.6, 65.8, 64.9, 65.0],\n  [63.4, 64.5, 65.2, 64.8, 65.1, 64.9, 66.2],\n  [66.3, 66.8, 66.4, 66.8, 67.8, 67.9, 68.2]\n];\nfor (let i = 0; i < temperature_data.length; i++) {\n  let length = temperature_data[i].length;\n  let weeklySum = 0;\n  for (let j = 0; j < length; j++) {\n    weeklySum += temperature_data[i][j];\n  }\n  console.log(\"Week \" + i + \" Average Temperature: \" + (weeklySum / 7));\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11433,
        "title": "Itérer à travers une liste",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Iterate Through a List",
            "id": 105742,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Supposons que tu aies extrait les données des participants à partir d'une invitation de calendrier. Cependant, tu as besoin d'une liste propre de noms sans aucun titre de poste. Note l'organisation des données : les noms sont suivis des postes, avec tous les noms présents à des indices pairs.\n\nÉcris une boucle `for` qui parcourt la liste et enregistre uniquement les noms des participants dans la console.\n\n1. D'abord, implémente une boucle `for` qui parcourt tous les nombres pairs de 0 jusqu'à la fin de la liste `meetingAttendees`.\n2. Ensuite, implémente le corps de la boucle `for` pour enregistrer chaque participant à la réunion dans la console.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let meetingAttendees = [\"Diane Moll\", \"CEO\", \"Stanley Winstead\", \"CFO\",\r\n  \"Herta Pickett\", \"CFO\", \"Lynn Hanby\", \"COO\"\r\n];\r\n\r\nfor() {\r\n   console.log();\r\n}",
                  "solvedContent": "let meetingAttendees = [\"Diane Moll\", \"CEO\", \"Stanley Winstead\", \"CFO\",\r\n  \"Herta Pickett\", \"CFO\", \"Lynn Hanby\", \"COO\"\r\n];\r\n\r\nfor (let i = 0; i < meetingAttendees.length; i += 2) {\r\n  console.log(meetingAttendees[i]);\r\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}