{
  "tutorial": {
    "id": 2793,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Tableaux",
    "descriptionContent": "Apprends-en plus sur les tableaux en TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14815,
        "title": "Tableaux",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 130745,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En TypeScript, nous pouvons également déclarer des tableaux. Comme pour les types primitifs, nous commençons par le type après un deux-points.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numArray: \" /><text value=\"number\" class=\"built_in\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option startIndex=\"12\" endIndex=\"13\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>:</code> suivi de <code>number</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 130761,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous ajoutons un crochet ouvrant et fermant juste après le type pour indiquer que cette variable contiendra un tableau du type donné.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numArray: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[]\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"21\" /><option startIndex=\"21\" endIndex=\"22\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>[</code> suivi de <code>]</code>.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy",
            "id": 130762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Enfin, nous pouvons attribuer une valeur à la variable.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numArray: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(numArray);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"24\" /><option startIndex=\"25\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"34\" /></options></interaction></interactions><output><content><text value=\"[1, 2, 3]\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>=</code> suivi de <code>[</code> puis <code>1, 2, 3</code>, <code>]</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130746,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Tu peux aussi déclarer un tableau avec d'autres types. Créons un tableau de chaînes de caractères.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" strArray: \" /><text value=\"string\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"&quot;Hello&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(strArray);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;Hello&quot;, &quot;TypeScript&quot;]\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>string</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>En TypeScript, nous pouvons utiliser des tableaux comme nous le ferions en JavaScript. Par exemple, nous pouvons modifier un tableau existant en référant l'index.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" list: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"list[\" /><text value=\"0\" class=\"number\" /><text value=\"] = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(list);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"41\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"(\" /></content></option><option correct=\"false\"><content><text value=\")\" /></content></option></options></interaction></interactions><output><content><text value=\"[0, 2, 3, 4]\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>list</code> suivi de <code>[</code> puis <code>0</code>, <code>]</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130796,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bien sûr, nous pouvons également utiliser toutes les autres méthodes de tableau que nous connaissons en JavaScript. Ajoutons un nombre à la fin de la liste.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" list: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"list.push(\" /><text value=\"5\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(list);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"45\" /><option startIndex=\"45\" endIndex=\"46\" /><option startIndex=\"46\" endIndex=\"47\" /><option correct=\"false\"><content><text value=\"&quot;Me?&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"[1, 2, 3, 4, 5]\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>list</code> suivi de <code>.push(</code> puis <code>5</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nous pouvons utiliser des types union pour créer un tableau qui contient des valeurs de différents types. Nous commençons par des parenthèses.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" example: ()[];\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"14\" /><option startIndex=\"14\" endIndex=\"15\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>(</code> suivi de <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 130795,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>À l'intérieur des parenthèses, ajoute <code>string | number</code> comme un type union pour s'assurer que le tableau peut contenir des valeurs de type <code>string</code> et <code>number</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" stuff: (\" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"number\" class=\"built_in\" /><text value=\")[];\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"27\" /><option correct=\"false\"><content><text value=\"boolean\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>string</code> suivi de <code>|</code> et enfin <code>number</code>.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 130794,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute un nombre au tableau <code>example</code>.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" stuff: (\" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"number\" class=\"built_in\" /><text value=\")[];\" /><text type=\"break\" /><text value=\"stuff = [\" /><text value=\"&quot;Coding&quot;\" class=\"string\" /><text value=\", \" /><text value=\"101\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(stuff);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"54\" /><option correct=\"false\"><content><text value=\"&quot;Programming&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;Coding&quot;, 101]\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>101</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130786,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quels types pouvons-nous utiliser pour créer un tableau mixte en TypeScript ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Tous les types</item><item value=\"2\" correct=\"false\">Seulement jusqu'à deux différents</item></selection><p visible-if=\"wrong\">Tous les types.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130788,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute un élément à notre tableau avec le type correct.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" words: \" /><text value=\"string\" class=\"built_in\" /><text value=\"[] = [];\" /><text type=\"break\" /><text value=\"words.push(\" /><text value=\"&quot;World&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(words);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"44\" /><option correct=\"false\"><content><text value=\"9\" /></content></option><option correct=\"false\"><content><text value=\"false\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;World&quot;]\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>\"World\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 130790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Pouvons-nous utiliser la méthode <code>push</code> sur les tableaux en TypeScript ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Oui, cela fonctionne comme JavaScript</item><item value=\"2\" correct=\"false\">Non, c'est une fonction uniquement JavaScript</item></selection><p visible-if=\"wrong\">Oui, cela fonctionne comme JavaScript.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 130791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Peux-tu ajouter un booléen à ce tableau que nous avons défini ci-dessus ?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myArray: (\" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"number\" class=\"built_in\" /><text value=\")[];\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Oui</item><item value=\"2\" correct=\"true\">Non</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Non.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quels types d'éléments peux-tu stocker dans un tableau ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Tous les types qui correspondent à la définition de type du tableau, y compris les nombres, les chaînes de caractères, les booléens, et plus encore</item><item value=\"2\" correct=\"false\">Seulement des chaînes et des nombres</item><item value=\"3\" correct=\"false\">Rien du tout</item></selection><p visible-if=\"wrong\">Tous les types qui correspondent à la définition de type du tableau, y compris les nombres, les chaînes de caractères, les booléens, et plus encore.</p></body></html>"
          }
        ]
      }
    ]
  }
}