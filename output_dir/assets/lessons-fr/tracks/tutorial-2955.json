{
  "tutorial": {
    "id": 2955,
    "version": 5,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Approfondissement d'Express",
    "descriptionContent": "Approfondissement d'Express",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15084,
        "title": "Pratique Optionnelle Express #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Example: use()",
            "id": 120481,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Remplis les espaces pour utiliser <code>app.use</code> correctement.</p><code version=\"2\" codelang=\"javascript\" name=\"index.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" studentsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./students.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" teachersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./teachers.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" subjectsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./subjects.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(studentsRouter);\" /><text type=\"break\" /><text value=\"app.use(teachersRouter);\" /><text type=\"break\" /><text value=\"app.use(subjectsRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"258\" endIndex=\"265\" /></interactions><output><content><text value=\"Server running on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"students.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/students&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get students&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"teachers.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/teachers&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get teachers&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><code version=\"2\" codelang=\"javascript\" name=\"subjects.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/subjects&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get subjects&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>app.use</code>.</p></body></html>"
          },
          {
            "title": "Router in Files - Copy",
            "id": 132838,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée une nouvelle instance du routeur Express.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"router\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>express</code> suivi de <code>.</code> puis <code>Router</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Question: Custom Middleware",
            "id": 122340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce qui manque dans le code pour que cette fonction middleware personnalisée s'exécute ?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"logMethod\" class=\"title\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Method: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"  next(); \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Method: GET\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il manque <code>app.use(logMethod)</code></item><item value=\"2\" correct=\"false\">Il manque <code>const useMiddleware = require(logMethod)</code></item><item value=\"3\" correct=\"false\">Il manque <code>app.set(logMethod)</code></item></selection><p visible-if=\"wrong\">Il manque <code>app.use(logMethod)</code>.</p></body></html>"
          },
          {
            "title": "Question: App Level",
            "id": 122334,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lequel des énoncés suivants est vrai à propos du middleware au niveau de l'application ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Les fonctions middleware au niveau de l'application s'exécutent chaque fois qu'une requête est envoyée à l'application</item><item value=\"2\" correct=\"false\">Le middleware au niveau de l'application n'est pas couramment utilisé dans Express</item><item value=\"3\" correct=\"false\"><code>router.use()</code> est un exemple de middleware au niveau de l'application</item></selection><p visible-if=\"wrong\">Les fonctions middleware au niveau de l'application s'exécutent chaque fois qu'une requête est envoyée à l'application.</p></body></html>"
          },
          {
            "title": "Question: next()",
            "id": 122335,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce qui ne va pas avec ce code qui empêchera le <code>app.get</code> de s'exécuter ?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request type: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/lessons&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'List of lessons sent'\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Request type: GET\" /><text type=\"break\" /><text value=\"List of lessons sent\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nous n'appelons pas <code>next</code> à l'intérieur de la fonction de rappel <code>app.use</code></item><item value=\"2\" correct=\"false\">Nous n'appelons pas <code>next</code> à l'intérieur de la fonction de rappel <code>app.get</code></item><item value=\"3\" correct=\"false\">Il n'y a rien de mal avec le code</item><item value=\"4\" correct=\"false\">Nous ne passons pas <code>next</code> comme paramètre à la fonction de rappel <code>app.use</code></item></selection><p visible-if=\"wrong\">Nous n'appelons pas <code>next</code> à l'intérieur de la fonction de rappel <code>app.use</code>.</p></body></html>"
          },
          {
            "title": "Exercise: next()",
            "id": 122339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Appelle la fonction correcte pour passer à la fonction middleware suivante.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!req.body.password) { \" /><text type=\"break\" /><text value=\"    res.send(\" /><text value=\"&quot;Password is required&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" { \" /><text type=\"break\" /><text value=\"    next(); \" /><text type=\"break\" /><text value=\"  } \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.post(\" /><text value=\"&quot;/login&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Post successful...&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"206\" endIndex=\"212\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Post successful...\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>next()</code>.</p></body></html>"
          },
          {
            "title": "Exercise: Built-in Middleware",
            "id": 122336,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour exécuter le middleware intégré <code>express.json</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request body username: \" /><text value=\"${req.body.username}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000.&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"63\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"67\" /><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"71\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"85\" /><option correct=\"false\"><content><text value=\"require\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\":\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Request type: GET\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>.</code> puis <code>use</code>, <code>express.json</code>, <code>()</code>.</p></body></html>"
          },
          {
            "title": "Example: router.METHOD()",
            "id": 122373,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour la méthode <code>GET</code> sur l'objet router, pas sur l'objet app.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/:id&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Team member Id: \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Team member Id: \" /><text value=\"${req.params.id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/team&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"93\" endIndex=\"103\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Team member Id: 31\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>router.get</code>.</p></body></html>"
          },
          {
            "title": "Question: router.param()",
            "id": 122374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que correspond la méthode <code>router.param</code> ?<br /></p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Toute route qui utilise le paramètre spécifié</item><item value=\"2\" correct=\"false\">Toute route qui n'utilise pas le paramètre spécifié</item><item value=\"3\" correct=\"false\">Toutes les requêtes <code>GET</code> avec le paramètre spécifié</item></selection><p visible-if=\"wrong\">Toute route qui utilise le paramètre spécifié.</p></body></html>"
          },
          {
            "title": "router.route()",
            "id": 122365,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assure-toi de valider l'authentification pour toutes les routes que le routeur gère en utilisant le middleware personnalisé <code>validateAuth</code> pour toutes les routes.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" validateAuth = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (req.params.userId) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;User Identified&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/user/:userId&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".all(validateAuth)\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" res.send(\" /><text value=\"&quot;Getting&quot;\" class=\"string\" /><text value=\"))\" /><text type=\"break\" /><text value=\".post(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" res.send(\" /><text value=\"&quot;Posting&quot;\" class=\"string\" /><text value=\"))\" /><text type=\"break\" /><text value=\".put(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" res.send(\" /><text value=\"&quot;Updating&quot;\" class=\"string\" /><text value=\"))\" /><text type=\"break\" /><text value=\".delete(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" res.send(\" /><text value=\"&quot;Deleting&quot;\" class=\"string\" /><text value=\"));\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/main&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"244\" endIndex=\"247\" /><option startIndex=\"248\" endIndex=\"260\" /><option correct=\"false\"><content><text value=\"use\" /></content></option><option correct=\"false\"><content><text value=\"validate\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"User Identified\" /><text type=\"break\" /><text value=\"Updating\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>all</code> suivi de <code>validateAuth</code>.</p></body></html>"
          },
          {
            "title": "Question: router.param()",
            "id": 122372,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le but principal de la méthode <code>router.param</code> dans Express Router ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Pour définir des fonctions middleware qui seront exécutées lorsqu'une requête est faite vers un chemin avec un paramètre spécifié</item><item value=\"2\" correct=\"false\">Pour ignorer les requêtes entrantes avec certains paramètres</item></selection><p visible-if=\"wrong\">Pour définir des fonctions middleware qui seront exécutées lorsqu'une requête est faite vers un chemin avec un paramètre spécifié.</p></body></html>"
          },
          {
            "title": "Example: router.param()",
            "id": 122366,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète les paramètres de <code>router.param</code> pour afficher le pays chaque fois qu'un paramètre avec le nom <code>country</code> est utilisé.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.param(\" /><text value=\"&quot;country&quot;\" class=\"string\" /><text value=\", (req, res, next, country) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;This is a flag from: &quot;\" class=\"string\" /><text value=\" + country);\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/flag/:country&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  es.send(\" /><text value=\"&quot;Processing the GET request&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"134\" endIndex=\"141\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"This is a flag from: Peru\" /><text type=\"break\" /><text value=\"Processing the GET request\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>country</code>.</p></body></html>"
          },
          {
            "title": "Question: Custom Middleware",
            "id": 120448,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce qui manque dans le code pour que cette fonction middleware personnalisée s'exécute ?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"logMethod\" class=\"title\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{ \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Method: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"  next(); \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'The server is listening on port 3000.'\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"The server is listening on port 3000\" /><text type=\"break\" /><text value=\"Method: GET\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il manque <code>app.use(logMethod)</code></item><item value=\"2\" correct=\"false\">Il manque <code>const useMiddleware = require(logMethod)</code></item><item value=\"3\" correct=\"false\">Il manque <code>app.do(logMethod)</code></item></selection><p visible-if=\"wrong\">Il manque <code>app.use(logMethod)</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 15085,
        "title": "Express Pratique Optionnelle #2",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Example: use()",
            "id": 122354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ajoute la méthode qui monte la fonction middleware sur le chemin <code>\"/students\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" studentsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./students.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/students&quot;\" class=\"string\" /><text value=\", studentsRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"113\" endIndex=\"116\" /></interactions><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"students.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/students&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><output><content><text value=\"internal/modules/cjs/loader.js:818\" /><text type=\"break\" /><text value=\"  throw err;\" /><text type=\"break\" /><text value=\"  ^\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"Error: Cannot find module 'express'\" /><text type=\"break\" /><text value=\"Require stack:\" /><text type=\"break\" /><text value=\"- /home/default/code/file.js\" /><text type=\"break\" /><text value=\"    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:815:15)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:667:27)\" /><text type=\"break\" /><text value=\"    at Module.require (internal/modules/cjs/loader.js:887:19)\" /><text type=\"break\" /><text value=\"    at require (internal/modules/cjs/helpers.js:74:18)\" /><text type=\"break\" /><text value=\"    at Object.&lt;anonymous&gt; (/home/default/code/file.js:1:17)\" /><text type=\"break\" /><text value=\"    at Module._compile (internal/modules/cjs/loader.js:999:30)\" /><text type=\"break\" /><text value=\"    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\" /><text type=\"break\" /><text value=\"    at Module.load (internal/modules/cjs/loader.js:863:32)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\" /><text type=\"break\" /><text value=\"    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:60:12) {\" /><text type=\"break\" /><text value=\"  code: 'MODULE_NOT_FOUND',\" /><text type=\"break\" /><text value=\"  requireStack: [ '/home/default/code/file.js' ]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>use</code>.</p></body></html>"
          },
          {
            "title": "Question: app.use()",
            "id": 122356,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Quel est le but de la méthode <code>app.use</code> ?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" pagesRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./pages.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/pages&quot;\" class=\"string\" /><text value=\", pagesRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"pages.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il monte le middleware <code>pagesRouter</code> sur le chemin <code>/pages</code></item><item value=\"2\" correct=\"false\">Il monte le middleware <code>pagesRouter</code> sur l'ensemble de l'application</item><item value=\"3\" correct=\"false\">Il monte le middleware <code>pagesRouter</code> sur le chemin <code>/</code></item></selection><p visible-if=\"wrong\">Il monte le middleware <code>pagesRouter</code> sur le chemin <code>/pages</code>.</p></body></html>"
          },
          {
            "title": "router.use() - 2",
            "id": 122567,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Fais en sorte que l'application utilise le routeur pour la route <code>\"/library\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/books&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /books&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/library&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"189\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"193\" /><option startIndex=\"193\" endIndex=\"196\" /><option startIndex=\"209\" endIndex=\"215\" /><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Router use for /books\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>app</code> suivi de <code>.</code> puis <code>use</code>, <code>router</code>.</p></body></html>"
          },
          {
            "title": "Example: Initial setup",
            "id": 122358,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Importe <code>blogs.js</code> en utilisant la fonction <code>require</code> et stocke-le dans une variable significative.</p><code version=\"2\" codelang=\"javascript\" name=\"index.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" studentsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./students.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" blogsRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./blogs.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(studentsRouter);\" /><text type=\"break\" /><text value=\"app.use(blogsRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"114\" endIndex=\"125\" /><option startIndex=\"128\" endIndex=\"135\" /><option startIndex=\"136\" endIndex=\"148\" /><option correct=\"false\"><content><text value=\"students\" /></content></option><option correct=\"false\"><content><text value=\"express\" /></content></option></options></interaction></interactions><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"students.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/students&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><output><content><text value=\"internal/modules/cjs/loader.js:818\" /><text type=\"break\" /><text value=\"  throw err;\" /><text type=\"break\" /><text value=\"  ^\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"Error: Cannot find module 'express'\" /><text type=\"break\" /><text value=\"Require stack:\" /><text type=\"break\" /><text value=\"- /home/default/code/file.js\" /><text type=\"break\" /><text value=\"    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:815:15)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:667:27)\" /><text type=\"break\" /><text value=\"    at Module.require (internal/modules/cjs/loader.js:887:19)\" /><text type=\"break\" /><text value=\"    at require (internal/modules/cjs/helpers.js:74:18)\" /><text type=\"break\" /><text value=\"    at Object.&lt;anonymous&gt; (/home/default/code/file.js:1:17)\" /><text type=\"break\" /><text value=\"    at Module._compile (internal/modules/cjs/loader.js:999:30)\" /><text type=\"break\" /><text value=\"    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\" /><text type=\"break\" /><text value=\"    at Module.load (internal/modules/cjs/loader.js:863:32)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\" /><text type=\"break\" /><text value=\"    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:60:12) {\" /><text type=\"break\" /><text value=\"  code: 'MODULE_NOT_FOUND',\" /><text type=\"break\" /><text value=\"  requireStack: [ '/home/default/code/file.js' ]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"blogs.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/blogs&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><output><content><text value=\"internal/modules/cjs/loader.js:818\" /><text type=\"break\" /><text value=\"  throw err;\" /><text type=\"break\" /><text value=\"  ^\" /><text type=\"break\" /><text value=\"\" /><text type=\"break\" /><text value=\"Error: Cannot find module 'express'\" /><text type=\"break\" /><text value=\"Require stack:\" /><text type=\"break\" /><text value=\"- /home/default/code/file.js\" /><text type=\"break\" /><text value=\"    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:815:15)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:667:27)\" /><text type=\"break\" /><text value=\"    at Module.require (internal/modules/cjs/loader.js:887:19)\" /><text type=\"break\" /><text value=\"    at require (internal/modules/cjs/helpers.js:74:18)\" /><text type=\"break\" /><text value=\"    at Object.&lt;anonymous&gt; (/home/default/code/file.js:1:17)\" /><text type=\"break\" /><text value=\"    at Module._compile (internal/modules/cjs/loader.js:999:30)\" /><text type=\"break\" /><text value=\"    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\" /><text type=\"break\" /><text value=\"    at Module.load (internal/modules/cjs/loader.js:863:32)\" /><text type=\"break\" /><text value=\"    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\" /><text type=\"break\" /><text value=\"    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:60:12) {\" /><text type=\"break\" /><text value=\"  code: 'MODULE_NOT_FOUND',\" /><text type=\"break\" /><text value=\"  requireStack: [ '/home/default/code/file.js' ]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>blogsRouter</code> suivi de <code>require</code> et enfin <code>\"./blogs.js\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy - Copy - Copy",
            "id": 132845,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour capturer les paramètres de route avec le routeur.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;id&quot;\" class=\"string\" /><text value=\", (req, res, next, id) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Capturing ID: \" /><text value=\"${id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"7\" endIndex=\"12\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>param</code>.</p></body></html>"
          },
          {
            "title": "next()",
            "id": 122371,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assure-toi que la fonction middleware ne stoppe pas le parcours de la requête.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/clothing&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /clothing&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/clothing&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Router is getting all clothing info&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/products&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"182\" endIndex=\"186\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Router use for /clothing\" /><text type=\"break\" /><text value=\"Router is getting all clothing info\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>next</code>.</p></body></html>"
          },
          {
            "title": "Lesson #16",
            "id": 132918,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lequel des codes de statut suivants indique une redirection permanente ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">301</item><item value=\"2\" correct=\"false\">302</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir 301.</p></body></html>"
          },
          {
            "title": "Question: router.use()",
            "id": 122376,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Qu'est-ce qui est nécessaire pour exécuter les fonctions middleware montées sur le chemin par <code>router.use</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Que le chemin de base demandé correspond au chemin</item><item value=\"2\" correct=\"false\">Qu'il n'y a qu'une seule fonction middleware utilisée par l'objet <code>router</code></item><item value=\"3\" correct=\"false\">Qu'il y a plus d'une fonction middleware utilisée par l'objet <code>router</code></item></selection><p visible-if=\"wrong\">Que le chemin de base demandé correspond au chemin.</p></body></html>"
          },
          {
            "title": "Import Modules",
            "id": 122361,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Importe le routeur depuis le fichier <code>router.js</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" usersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./router.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"79\" endIndex=\"86\" /><option startIndex=\"87\" endIndex=\"100\" /><option correct=\"false\"><content><text value=\"import\" /></content></option><option correct=\"false\"><content><text value=\"&quot;express&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>require</code> suivi de <code>\"./router.js\"</code>.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 132836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que fait <code>router.use(express.json())</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il configure le middleware pour le routeur</item><item value=\"2\" correct=\"false\">Il configure le middleware pour l'application</item></selection><p visible-if=\"wrong\">Il configure le middleware pour le routeur.</p></body></html>"
          },
          {
            "title": "Question: router.route()",
            "id": 122367,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que nous permet de faire la méthode <code>router.route</code> ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il nous permet de gérer toutes les méthodes HTTP pour une seule route avec une fonction</item><item value=\"2\" correct=\"false\">Il renvoie une instance de l'objet router</item></selection><p visible-if=\"wrong\">Il nous permet de gérer toutes les méthodes HTTP pour une seule route avec une fonction.</p></body></html>"
          },
          {
            "title": "daf - Copy - Copy - Copy",
            "id": 132863,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Passe les fonctions middleware personnalisées dans un tableau au routeur et assure-toi qu'elles sont exécutées lorsque la route <code>\"/game\"</code> est capturée.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" loggingMiddleware = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Incoming request to \" /><text value=\"${req.url}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" authMiddleware = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" token = req.headers[\" /><text value=\"&quot;authorization&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (token) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Authorized&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"403\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Forbidden&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/game&quot;\" class=\"string\" /><text value=\", [loggingMiddleware, authMiddleware]);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"306\" endIndex=\"316\" /><option startIndex=\"317\" endIndex=\"324\" /><option startIndex=\"326\" endIndex=\"327\" /><option startIndex=\"344\" endIndex=\"345\" /><option startIndex=\"360\" endIndex=\"361\" /><option correct=\"false\"><content><text value=\"app.use\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router.use</code> suivi de <code>\"/game\"</code> puis <code>[</code>, <code>,</code>, <code>]</code>.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy - Copy - Copy",
            "id": 132856,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assure-toi que le routeur exécute le middleware pour chaque route qu'il correspond.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" logging = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Incoming request!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".all(logging)\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"115\" endIndex=\"118\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>all</code>.</p></body></html>"
          }
        ]
      },
      {
        "id": 13601,
        "title": "Pratique Optionnelle Express #3",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Export Modules",
            "id": 122360,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Exporte <code>router</code> du fichier <code>users.js</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"124\" endIndex=\"130\" /><option startIndex=\"130\" endIndex=\"138\" /><option startIndex=\"141\" endIndex=\"147\" /><option correct=\"false\"><content><text value=\"express\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>module</code> suivi de <code>.exports</code> et enfin <code>router</code>.</p></body></html>"
          },
          {
            "title": "Example: router.use()",
            "id": 122370,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code avec les paramètres pour <code>router.use</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Router is being used&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"105\" endIndex=\"109\" /><option startIndex=\"110\" endIndex=\"114\" /><option startIndex=\"115\" endIndex=\"119\" /><option correct=\"false\"><content><text value=\"router\" /></content></option><option correct=\"false\"><content><text value=\"express\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Router is being used\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>req,</code> suivi de <code>res,</code> et enfin <code>next</code>.</p></body></html>"
          },
          {
            "title": "Exercise: Built-in Middleware",
            "id": 122326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Inclure la fonction middleware intégrée qui analyse la charge utile JSON du corps de la requête.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(express.json()); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request body username: \" /><text value=\"${req.body.username}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"79\" /><option startIndex=\"79\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"84\" /><option startIndex=\"84\" endIndex=\"85\" /></options></interaction></interactions><output><content><text value=\"Server runs on port 3000\" /><text type=\"break\" /><text value=\"Request body username: UserOne\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>express</code> suivi de <code>.</code> puis <code>json</code>, <code>(</code>, <code>)</code>.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 132834,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Assure-toi que la requête continue de se propager.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"function\" class=\"keyword\" /><text value=\" \" /><text value=\"timeLog\" class=\"title\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Time: &quot;\" class=\"string\" /><text value=\", \" /><text value=\"Date\" class=\"built_in\" /><text value=\".now());\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"150\" endIndex=\"154\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>next</code>.</p></body></html>"
          },
          {
            "title": "App Level Middleware",
            "id": 122315,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Utilise le middleware de journalisation personnalisé globalement.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express(); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Requesting server: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\"); \" /><text type=\"break\" /><text value=\"}); \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; { \" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\"); \" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"63\" endIndex=\"70\" /></interactions><output><content><text value=\"The server is listening on port 3000\" /><text type=\"break\" /><text value=\"Requesting server: localhost\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>app.use</code>.</p></body></html>"
          },
          {
            "title": "Lesson #14 - Copy",
            "id": 132841,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Monte le routeur de sorte que toutes ses routes soient préfixées par un chemin spécifique, permettant ainsi un regroupement organisé des points de terminaison connexes.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"app.use(\" /><text value=\"&quot;/user&quot;\" class=\"string\" /><text value=\", router);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"8\" endIndex=\"15\" /><option startIndex=\"17\" endIndex=\"23\" /><option startIndex=\"15\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"use\" /></content></option><option correct=\"false\"><content><text value=\".\" /></content></option><option correct=\"false\"><content><text value=\"app\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>\"/user\"</code> suivi de <code>,</code> et enfin <code>router</code>.</p></body></html>"
          },
          {
            "title": "GET Endpoint - Copy",
            "id": 132839,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Crée un endpoint <code>PATCH</code> en utilisant le routeur.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.patch(\" /><text value=\"&quot;/company/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Patching company!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"app\" /></content></option><option correct=\"false\"><content><text value=\"put\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.</code> et enfin <code>patch</code>.</p></body></html>"
          },
          {
            "title": "Question: router.use()",
            "id": 122369,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Le principal objectif de la méthode <code>router.use</code> est de monter des fonctions middleware sur un chemin spécifique.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Vrai</item><item value=\"2\" correct=\"false\">Faux</item></selection><p visible-if=\"wrong\">Assurez-vous de choisir Vrai.</p></body></html>"
          },
          {
            "title": "app.use() - Copy",
            "id": 132840,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Complète le code pour utiliser les routes importées de <code>users.js</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"index.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" usersRouter = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./users.js&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", usersRouter);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server runs on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"76\" /><option startIndex=\"103\" endIndex=\"106\" /><option startIndex=\"106\" endIndex=\"107\" /><option startIndex=\"107\" endIndex=\"110\" /><option startIndex=\"121\" endIndex=\"132\" /><option correct=\"false\"><content><text value=\"router\" /></content></option><option startIndex=\"87\" endIndex=\"99\" /></options></interaction></interactions><output><content><text value=\"Server runs on port 3000\" /></content></output></code><code version=\"2\" codelang=\"javascript\" name=\"users.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>usersRouter</code> suivi de <code>\"./users.js\"</code> puis <code>app</code>, <code>.</code>, <code>use</code>, <code>usersRouter</code>.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy - Copy",
            "id": 132830,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Fais en sorte que l'application utilise le routeur <code>userRoutes</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" userRoutes = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;./userRoutes&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(userRoutes);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"104\" endIndex=\"111\" /></interactions></code><code version=\"2\" codelang=\"javascript\" name=\"userRoutes.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" user = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${user}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>app.use</code>.</p></body></html>"
          },
          {
            "title": "router.param()",
            "id": 122364,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lier le middleware à un paramètre spécifié <code>clothingId</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.param(\" /><text value=\"&quot;clothingId&quot;\" class=\"string\" /><text value=\", (req, res, next, clothingId) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (clothingId) {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;This is a request for the Clothing ID: &quot;\" class=\"string\" /><text value=\" + clothingId);\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/clothing/:clothingId&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"&quot;Router is getting the requested info&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(\" /><text value=\"&quot;/products&quot;\" class=\"string\" /><text value=\", router);\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(\" /><text value=\"3000\" class=\"number\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Server is running on port 3000&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"93\" endIndex=\"99\" /><option startIndex=\"99\" endIndex=\"100\" /><option startIndex=\"100\" endIndex=\"105\" /><option correct=\"false\"><content><text value=\"express\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"This is a request for the Clothing ID: 1\" /><text type=\"break\" /><text value=\"Router is getting the requested info\" /></content></output></code><p visible-if=\"wrong\">Assurez-vous de choisir <code>router</code> suivi de <code>.</code> et enfin <code>param</code>.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy - Copy",
            "id": 132848,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Capture le paramètre de route <code>car</code> en utilisant le routeur.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;car&quot;\" class=\"string\" /><text value=\", (req, res, next, car) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Found a car: \" /><text value=\"${car}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"13\" endIndex=\"18\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>\"car\"</code>.</p></body></html>"
          },
          {
            "title": "Question: Express Router",
            "id": 122416,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Que fait le routeur Express ?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Il t'aide à organiser et gérer les routes de manière modulaire dans ton application Express</item><item value=\"2\" correct=\"false\">Il connecte ton application directement à la base de données pour les opérations de données</item></selection><p visible-if=\"wrong\">Il t'aide à organiser et gérer les routes de manière modulaire dans ton application Express.</p></body></html>"
          },
          {
            "title": "Question: Router in Files",
            "id": 122353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Utilise la méthode Express appropriée pour générer un objet routeur, et assigne-le à la variable <code>router</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"51\" endIndex=\"67\" /></interactions></code><p visible-if=\"wrong\">Assurez-vous de rentrer <code>express.Router()</code>.</p></body></html>"
          }
        ]
      }
    ]
  }
}