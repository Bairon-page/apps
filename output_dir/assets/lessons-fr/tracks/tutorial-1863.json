{
  "tutorial": {
    "id": 1863,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Critiques Dynamiques",
    "descriptionContent": "Apprends à utiliser React pour créer une page de témoignages qui génère du contenu dynamiquement",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1863-icon-banner.svg",
    "chapters": [
      {
        "id": 12305,
        "title": "Critiques Dynamiques",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 111594,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Explorons les composants React réutilisables ! Dans ce projet, tu vas créer un composant React pour afficher des témoignages de clients pour un restaurant local. En alimentant et affichant les données de manière dynamique via les `props`, nous pourrons réutiliser le composant pour afficher autant de témoignages que nous le souhaitons.\n\nTout d'abord, explorons le code fourni : la structure typique de React, une définition de composant fonctionnel `Testimonial`, et un appel à la fonction `render()` de React. Comme nous voudrons afficher plusieurs composants, nous en avons déjà rassemblé quelques-uns à l'intérieur d'un composant `App`.\n\nNous allons commencer par ajouter un élément `<div>` englobant au composant Testimonial. Une fois terminé, tu devrais voir apparaître deux cartes `Testimonial`.\n\n1. Ajoute un élément `<div>` avec la classe CSS `card` à l'instruction `return` du composant fonctionnel `Testimonial`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\treturn (\n\t\t\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\treturn (\n\t\t<div className=\"card\"></div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 111596,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, ajoutons quelques éléments au composant `Testimonial`. Nous commencerons par le titre. Une fois terminé, tu devrais voir les titres apparaître sur les deux cartes `Testimonial`.\n\n1. Tout d'abord, stocke la prop `title` dans une `const` nommée `title`.\n2. Ensuite, à l'intérieur de l'élément `<div>` dans `return()`, ajoute un élément `<h2>` contenant la constante `title`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\tconst title = props.title;\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h2>{title}</h2>\n\t\t</div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 111597,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Passons maintenant à l'incorporation de l'auteur du composant `Testimonial`, en suivant un processus similaire à celui du titre de la carte.\n\n1. Stocke la prop `author` dans une constante nommée `author`.\n2. Ensuite, ajoute un élément `<h5>` contenant l'`author` immédiatement après le titre. Le format du texte devrait être similaire à :\n```javascript\nSubmitted by Tom J.\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>Submitted by {author}</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 111841,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous devrions également afficher la date de l'évaluation. Incluons-la dans le même élément `<h5>` que l'auteur.\n\n1. Stocke les props `date` dans une constante nommée `date`.\n2. Ensuite, ajoute la `date` immédiatement après l'auteur. Le format du texte devrait être similaire à :\n```javascript\nSubmitted by Tom J. on 10/20/2020\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>Submitted by {author}</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 111598,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Un `Testimonial` doit également afficher la note de 5 étoiles de l'auteur, qui, si tu examines le code fourni, est passée en tant qu'entier.\n\n1. Stocke la prop `stars` dans une `const` et intègre-la dans la structure HTML dans une balise `<h5>`. Le format du texte doit être similaire à :\n```javascript\n5 / 5 Stars\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6",
            "id": 111599,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, le `Testimonial` doit afficher le contenu réel de l'avis dans une balise `<p>`.\n\n1. Stocke la prop `content` dans une `const`. Ensuite, intègre la prop `content` en tant qu'élément `<p>`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 111601,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ajoutons une autre carte à notre site web.\n\n1. Ajoute un autre élément `Testimonial` sous le deuxième `Testimonial` dans le composant `App`.\n2. Ensuite, passe les props `author` et `date` dans l'élément `Testimonial`. Tu peux choisir les valeurs que tu veux -- fais-en ton propre témoignage !\n3. Enfin, passe les props 'stars' et 'content' dans l'élément `Testimonial`. Tu peux choisir les valeurs que tu veux.\n4. Tu devrais voir un troisième `Testimonial` avec les données que tu as ajoutées !",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n      <Testimonial\n        title=\"Wow!\"\n        author=\"Sally T.\"\n        date=\"12/30/21\"\n        stars={5}\n        content=\"The ambiance was luxurious and the food was high scale.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Result",
            "id": 122313,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bon travail ! Dans ce projet, tu as construit un composant Fonctionnel réutilisable. Tu les as ensuite réutilisés et ajouté les props nécessaires pour créer une page de Témoignages pour un restaurant local ! C'est l'occasion de bricoler avec le code -- tu peux ajouter des champs supplémentaires aux cartes de Témoignages ou créer de nouvelles cartes de Témoignages entièrement. Essaie et vois ce que tu peux créer !",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n      <Testimonial\n        title=\"WOW!\"\n        author=\"Sally T.\"\n        date=\"12/30/21\"\n        stars={5}\n        content={\"The ambiance was luxurious and the food was high scale.\"}\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}