{
  "tutorial": {
    "id": 1953,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Application de réservation de vol",
    "descriptionContent": "Créer une application de réservation de vol simple en utilisant Types et Comparaisons",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1953-icon-banner.svg",
    "chapters": [
      {
        "id": 12588,
        "title": "Application de réservation de vol",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 113811,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Utilisons nos connaissances sur les Types et les Comparaisons pour créer une application de réservation de vol simple.\n\nNous avons fourni un code de départ. Jette un œil à la description ci-dessous pour voir ce qui est déjà là.\n\n1. Dans `index.html`, il y a un élément `h1`, suivi d'un élément `div`. À l'intérieur de l'élément `div`, il y a quelques éléments `p` qui affichent des informations concernant la réservation de vol.\n2. Dans `style.css`, nous avons attribué des propriétés de style pour tous les éléments.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n background: mintcream;\r\n font-family: Poppins;\r\n text-align: center;\r\n}\r\n\r\nh1 {\r\n background: turquoise;\r\n padding: 10px;\r\n color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n border-style: dashed;\r\n}\r\n\r\np {\r\n font-weight: bold;\r\n}\r\n\r\nspan {\r\n font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logging Name",
            "id": 113812,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Il y a quelques éléments à garder à l'esprit lorsque nous réservons un vol, comme les informations d'identité nécessaires, le type de bagage inclus, etc.\n\nDans cette application, nous allons commencer par quelques informations requises pour réserver un vol.\n\nTout d'abord, nous allons obtenir le nom du passager.\n\n1. Crée une constante nommée `nameOnPass` et stocke le nom de ton choix dans la constante.\n2. Imprime `\"Passenger Name: \" + nameOnPass` dans la console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to print anything in the console.\n\nUse `const <constantName> = <constantValue>` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Checking ID",
            "id": 113813,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ensuite, l'ID doit être vérifié. Pour être confirmé, le nom sur l'ID doit être le même que celui fourni par le passager.\n\n1. Crée une constante nommée `nameOnId`. Stocke un nom de ton choix dedans. Le nom peut être le même que le nom précédent ou un différent. Le résultat sera `true` si le nom correspond et `false` si le nom ne correspond pas.\n2. Vérifie si `nameOnPass` est égal à `nameOnId` et stocke la comparaison dans une constante nommée `nameMatch`.\n3. Imprime `\"ID confirmé ? \" + nameMatch` dans la console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `===` operator to check if one value equals another value."
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Length",
            "id": 113814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant que l'identité du passager est confirmée, nous devons vérifier si le bagage à main est éligible pour le vol en vérifiant la longueur et la hauteur du bagage.\n\nCommençons par la longueur. La longueur doit être inférieure à 30 cm pour être acceptée.\n\n1. Crée une constante nommée `length` et stocke le nombre de ton choix dedans.\n2. Vérifie si `length` est inférieur à 30, et stocke la comparaison dans une constante nommée `doesLengthPass`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `<` operator to check if a value is greater than another value. "
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Height",
            "id": 113815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nous allons faire la même vérification avec la hauteur. La hauteur doit être inférieure à 55 cm pour réussir.\n\n1. Crée une variable `const` nommée `height` et stocke le nombre de ton choix dedans.\n2. Vérifie si `height` est inférieur à 55, et stocke la comparaison dans une constante nommée `doesHeightPass`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the previous code. "
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Eligibility",
            "id": 113816,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Enfin, après avoir vérifié la longueur et la hauteur, nous pouvons vérifier si le bagage à main est éligible ou non.\n\nMais voici une chose délicate. Nous avons deux conditions : `doesLengthPass` qui vérifie si `length` est inférieur à 30 et `doesHeightPass` qui vérifie si `height` est inférieur à 55.\n\nNous avons besoin que *les deux* conditions soient `true` pour que le bagage à main soit éligible. Comment pouvons-nous vérifier les deux conditions ensemble ? Nous utiliserons un opérateur logique appelé **AND** (utilisé comme `&&`). `AND` renvoie `true` uniquement si les deux conditions sont `true`.\n\n1. Pour vérifier les deux conditions ensemble avec `&&`, il suffit de mettre `&&` entre les conditions. Dans ce cas, écris `doesLengthPass && doesHeightPass` et stocke-le dans une constante nommée `isHandBaggageEligible`. Consulte l'indice pour un exemple.\n2. Imprime `\"Is Hand Baggage Eligible? \" + isHandBaggageEligible` dans la console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Here's an example to explain the outcome. Say, the length is 23 and the height is 60. Here, `isLengthExcess` will store `true` since the length is less than 30 and `isHeightExcess` will store `false` since the height is less than 55. Since one condition is `false`, `isLengthExcess && isHeightExcess` will return `false`. "
                }
              ]
            }
          },
          {
            "title": "Round Trip Check",
            "id": 113817,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Parfait ! Maintenant, nous allons vérifier si le vol est un aller-retour ou non.\n\nSur cette application, un utilisateur peut réserver plus d'un type de vol, à la fois aller-retour ou aller simple. Nous voulons identifier les vols aller-retour.\n\nComment allons-nous confirmer qu'il s'agit d'un aller-retour plutôt que de 2 vols aller simple ? Nous voulons créer une vérification pour confirmer s'il s'agit d'un aller-retour en vérifiant si la destination du vol actuel et l'origine du vol de retour sont les mêmes.\n\n1. Crée une constante nommée `flightDes` et stocke une ville de ton choix dedans. Cette constante représentera la destination du vol actuel.\n2. Crée une autre constante nommée `returnFrom` et stocke une ville de ton choix dedans. La ville peut être la même que `flightDes`. Cette constante représentera le lieu d'où le passager revient.\n3. Vérifie si `flightDes` est égal à `returnFrom` et stocke la comparaison dans une constante nommée `isRoundTrip`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logging Round Trip Check",
            "id": 113823,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Après vérification, nous voulons afficher le résultat.\n\n1. Imprime `\"Round Trip Check? \"` suivi de `isRoundTrip` dans la console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Flight Capacity Check",
            "id": 113818,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "ID ? Vérifié. Bagage à main ? Vérifié. Aller-retour ? Vérifié.\n\nMais attends ! Le vol est-il même disponible ? Vérifions à nouveau pour être sûrs !\n\n1. Crée une constante nommée `bookings` et stocke le nombre de ton choix dedans. Cette constante représente le nombre actuel de réservations pour le vol, c'est-à-dire combien de sièges ont été remplis.\n2. Crée une autre constante nommée `totalCapacity` et stocke le nombre de ton choix dedans. Cette constante représente le nombre total de sièges dans le vol.\n3. Vérifie si le nombre de sièges remplis est inférieur au nombre total de sièges dans le vol et stocke la comparaison dans une constante nommée `isFlightAvailable`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Check if `bookings` is less than `totalCapacity`.\n2. Use `<` operator to check if a value is less than another value. "
                }
              ]
            }
          },
          {
            "title": "Logging Flight Capacity Check",
            "id": 113824,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Maintenant, nous voulons afficher si le vol est disponible ou non.\n\n1. Imprime `\"Are seats available? \"` suivi de `isFlightAvailable` dans la console.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to print anything in the console."
                }
              ]
            }
          },
          {
            "title": "Displaying Information",
            "id": 113819,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bon travail ! Nous avons réussi à vérifier et afficher les informations de réservation de vol de l'utilisateur !\n\nPassons à l'étape suivante en affichant le résultat sur la page HTML que nous avons déjà.\n\nEn faisant cela, nous pourrons voir comment notre sortie console s'affiche sur la page HTML qui sera vue par l'utilisateur.\n\n1. Copie et colle le code donné *sous le code existant*. Cela mettra à jour la page HTML avec les valeurs de résultat que nous avons imprimées dans la console auparavant. Ne t'inquiète pas de comprendre entièrement le code pour l'instant, car nous en apprendrons plus à ce sujet dans les leçons suivantes. Mais si tu souhaites en savoir un peu plus, consulte la section des indices.\n```javascript\ndocument.querySelector(\"#name\").innerHTML = nameOnPass;\ndocument.querySelector(\"#id\").innerHTML = nameMatch;\ndocument.querySelector(\"#bag\").innerHTML = isHandBaggageEligible;\ndocument.querySelector(\"#des\").innerHTML = isRoundTrip;\ndocument.querySelector(\"#seat\").innerHTML = isFlightAvailable;\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);\r\ndocument.querySelector(\"#name\").innerHTML = nameOnPass;\r\ndocument.querySelector(\"#id\").innerHTML = nameMatch;\r\ndocument.querySelector(\"#bag\").innerHTML = isHandBaggageEligible;\r\ndocument.querySelector(\"#des\").innerHTML = isRoundTrip;\r\ndocument.querySelector(\"#seat\").innerHTML = isFlightAvailable;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "`document.querySelector` returns the HTML element that matches a CSS selector.\nFor example, `document.querySelector(\"h1\")` will return the `h1` element in this code. \nSimilarly, `document.querySelector(\"#name\"`) will return the `span` element whose `id` attribute is set to `name`. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}