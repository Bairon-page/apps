{
  "tutorial": {
    "id": 1957,
    "version": 11,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Textanalysator",
    "descriptionContent": "Verwende dein Wissen über JavaScript-Funktionen, um einen Textanalysator zu programmieren.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1957-icon-banner.svg",
    "chapters": [
      {
        "id": 12606,
        "title": "Textanalysator",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Creating the function",
            "id": 114261,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns ein Programm erstellen, das JavaScript-Funktionen verwendet, um Textstücke zu analysieren und Daten wie die Wortanzahl oder das längste Wort zusammenzufassen.\n\nZuerst müssen wir unsere Textanalysefunktion erstellen. Wir beginnen mit einer leeren Funktion.\n\n1. Schreibe eine leere Funktion namens `textAnalyzer` mit einem Parameter namens `text`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function textAnalyzer(text) {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Checking Validity of Input",
            "id": 114262,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Da wir Text analysieren werden, müssen wir sicherstellen, dass der Input, den wir für die Funktion erhalten, tatsächlich ein `string` ist. Um dies zu tun, müssen wir einen Fehler zurückgeben, wenn etwas anderes als ein String übergeben wird.\n\n1. Schreibe eine `if`-Anweisung, die überprüft, ob der Input kein `string` ist. Verwende dazu den `typeof` Operator. Wenn du nicht weißt, wie das geht, sieh dir den Hinweisbereich an.\n2. Wenn der übergebene Input kein String ist, gib eine Fehlermeldung in der Konsole aus und füge ein `return` hinzu, um die Funktion zu beenden. Kopiere und füge Folgendes ein:\n```js\n{\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return \"An error occurred\";\n  }\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return \"An error occurred\";\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. To use the `typeof` operator to check if the input is not a string, write the following conditional statement:\n```js\n if (typeof text !== 'string') {\n   ...\n }\n```"
                }
              ]
            }
          },
          {
            "title": "Dealing with Empty Strings",
            "id": 114263,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nun wissen wir, dass wir nur mit Strings fortfahren werden, aber was ist mit leeren Strings wie `\" \"` oder `\"         \"`? Glücklicherweise bietet uns JavaScript eine Methode, die wir hier verwenden können.\n\n1. Schreibe innerhalb der Funktion `textAnalyzer` eine Bedingungsanweisung, um zu überprüfen, ob ein leerer String übergeben wird. Verwende die eingebaute Methode `trim()`, um alle Leerzeichen vor und nach einem gegebenen String zu entfernen. Du kannst den Hinweis für weitere Informationen überprüfen.\n2. Wenn der übergebene Input ein leerer String ist (keine Zeichen enthält), gib eine Fehlermeldung in der Konsole aus und füge ein `return` hinzu, um die Funktion zu beenden. Kopiere und füge Folgendes ein:\n```js\n{\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return \"An error occurred\";\n  }\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return \"An error occurred\";\n  }\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "`trim()` removes whitespace before and after a given string of characters. If we apply `trim()` to a string with only white space such as `\"       \"`, the result will be an empty string, `\"\"`, which has a length of `0`. \n\nTo check if a string is empty (has only whitespaces), we can write the following condition.\n\n```js\n  if (text.trim().length < 1) {\n   ...\n  }\n```"
                }
              ]
            }
          },
          {
            "title": "Storing the Analyzed Text Data",
            "id": 114264,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jetzt müssen wir einige Variablen erstellen, um die Daten zu speichern, die wir extrahieren werden.\n\nFühre innerhalb der Funktion `textAnalyzer` die folgenden Schritte aus:\n1. Erstelle eine Variable `shortestWord` und gib ihr den Wert eines leeren Strings.\n2. Erstelle eine Variable `longestWord` und gib ihr den Wert eines leeren Strings.\n3. Gib `longestWord+shortestWord` zurück.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  return longestWord + shortestWord;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Literal object notation is just creating a variable and assigning it an object that has key-value pairs surrounded in curly braces. For this example, you only need to add the following.\n```js\n let <variable name> = {};\n```"
                }
              ]
            }
          },
          {
            "title": "Creating an Array from Given Input",
            "id": 114265,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns fortfahren, indem wir eine Funktion programmieren, die einen gegebenen Satzparameter in ein Array von Wörtern zerlegt. Wir haben die Funktion bereits im Texteditor bereitgestellt. Innerhalb dieser Funktion werden wir auch eine nützliche eingebaute JavaScript-Funktion namens `split()` verwenden.\n\n```js\nfunction convertTextToWords(text) {\n  // Da JavaScript case-sensitive ist, müssen wir sicherstellen, dass alle Eingaben, die wir erhalten, in Kleinbuchstaben sind.\n  const lowerCaseText = text.toLowerCase();\n  // schreibe deinen Code hier.\n}\n```\n1. Kopiere die Funktion `convertTextToWords` und füge sie in den Editor ein. Stelle sicher, dass sie außerhalb der Funktion `textAnalyzer` ist.\n2. Erstelle in der Funktion `convertTextToWords` eine Konstante namens `words`.\n3. Zerlege den bereitgestellten String `lowerCaseText` in Wörter, indem du die eingebaute JavaScript-Methode `split()` verwendest. Weise der Konstante `words` den Wert der Zerlegung zu. Sieh dir den Hinweis für weitere Informationen an.\n4. Gib die Konstante `words` zurück.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n}\n\nfunction convertTextToWords(text) {\n  // As JavaScript is case-sensitive., we need to ensure that all the input we receive is lowercase. \n  const lowerCaseText = text.toLowerCase();\n  // write your code here.\n  const words = lowerCaseText.split(' ');\n  return words;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can create constants using the `const` keyword.\n\n`split()` breaks a given string into an array of strings, based on the parameter provided. If we passed a sentence to split with `split(' ')`, it will break the string at each whitespace, hence creating an array of words from that string. Note the space between the two quotes in the `split` parameter.\n\nFor example:\n\n```js\nHello World\".split(' ') // will output ['Hello', 'World'];\nHello World\".split('') // will output ['H', 'e', 'l' ,'l ','o' ,'' , 'w' ,'o', 'r', 'l', 'd'];\n/* Note the difference in the space between the two quote marks\npassed in the split function */\n\n```\n\n\n"
                }
              ]
            }
          },
          {
            "title": "Finding the Longest Word",
            "id": 115246,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns versuchen, die längsten und die kürzesten Wörter in diesem Array zu finden.\n\nWir haben den Code, um das längste Wort zu finden, bereits für dich bereitgestellt.\n```js\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n```\n1. Kopiere die Funktion `findLongestWord` in deinen Code.\n2. Erstelle in der Funktion `textAnalyzer` eine Konstante namens `wordsArray` und setze sie gleich dem Wert, der durch den Aufruf von `convertTextToWords()` mit `text` als Argument zurückgegeben wird.\n3. Aktualisiere in der Funktion `textAnalyzer` die Variable `longestWord`, um den Wert zu halten, der von der Funktion `findLongestWord` zurückgegeben wird. Um die Funktion zum Laufen zu bringen, musst du `wordsArray` als Argument übergeben.\n4. Gib `\"Longest Word: \"+ longestWord` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "You can print using `console.log(\"example\")` "
                }
              ]
            }
          },
          {
            "title": "Finding the Shortest Word",
            "id": 114266,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns das kürzeste Wort finden.\n\nDie Teilcodes für die Funktion, um das kürzeste Wort zu finden, wurden dir bereitgestellt. Du musst einige Dinge tun, um den Code nutzbar zu machen.\n```js\nfunction findShortestWord() {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n\n}\n```\n\n1. Kopiere die `findShortestWord` Funktion und füge sie in deinen Code ein.\n2. Gib der bereitgestellten Funktion den Namen `findShortestWord` mit zwei Parametern `words` und `longestWord`.\n3. Gib die Variable `shortestWord` zurück. Stelle sicher, dass du die `return` Anweisung außerhalb der `for` Schleife hinzufügst.\n4. Aktualisiere innerhalb der `textAnalyzer` Funktion die Variable `shortestWord`, um den Wert zu halten, der von der `findShortestWord` Funktion zurückgegeben wird. Sieh dir den Hinweisbereich an, wenn du feststeckst.\n5. Gib `\"Shortest Word: \"+ shortestWord` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n\nfunction findShortestWord(words, longestWord) {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n  return shortestWord;\n}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n  shortestWord = findShortestWord(wordsArray, longestWord);\n  console.log(\"Shortest Word: \" + shortestWord);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n\nfunction findShortestWord(words, longestWord) {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n  return shortestWord;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to pass `wordsArray` and `longestWord` as parameters when calling the `findShortestWord` function."
                }
              ]
            }
          },
          {
            "title": "Find Words starting with a Vowel",
            "id": 114267,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nur noch ein paar Schritte. Wir müssen alle Wörter finden, die mit einem Vokal beginnen. Vokale im Englischen sind die Buchstaben \"a\", \"e\", \"i\", \"o\" und \"u\".\n\nWir werden dies erneut mit einer völlig anderen Funktion tun, die wir mit der Hauptfunktion verknüpfen. Wir haben die Teilcodes für die Funktion bereitgestellt, um die Wörter zu finden, die mit einem Vokal beginnen. Du musst einige Dinge tun, um den Code nutzbar zu machen.\n```js\nfunction findVowelWords() {\n  const vowels = ['a', 'i', 'e', 'o', 'u'];\n  let vowelWords = [];\n  for (let i = 0; i < words.length; i++) {\n    let word = words[i];\n    for (let j = 0; j < vowels.length; j++) {\n      let vowel = vowels[j];\n      if (word.startsWith(vowel)) {\n        vowelWords.push(word);\n      }\n    }\n  }\n}\n```\n\n1. Kopiere und füge die bereitgestellte Funktion `findVowelWords` ein und füge einen Parameter namens `words` hinzu.\n2. Gib die Variable `vowelWords` zurück. Stelle sicher, dass du die `return`-Anweisung außerhalb der `for`-Schleife hinzufügst.\n3. Erstelle in der Funktion `textAnalyzer` ein leeres Array namens `vowelWords`.\n4. Rufe dann die Funktion `findVowelWords` auf, indem du das `wordsArray` als Parameter übergibst und speichere das Ergebnis im Array `vowelWords`.\n5. Schließlich, console log `\"Vowel Words: \"+ vowelWords`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n  shortestWord = findShortestWord(wordsArray, longestWord);\n  console.log(\"Shortest Word: \" + shortestWord);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n\nfunction findShortestWord(words, longestWord) {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n  return shortestWord;\n}",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n  shortestWord = findShortestWord(wordsArray, longestWord);\n  console.log(\"Shortest Word: \" + shortestWord);\n  let vowelWords = [];\n  vowelWords = findVowelWords(wordsArray);\n  console.log(\"Vowel Words: \" + vowelWords);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n\nfunction findShortestWord(words, longestWord) {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n  return shortestWord;\n}\n\nfunction findVowelWords(words) {\n  const vowels = ['a', 'i', 'e', 'o', 'u'];\n  let vowelWords = [];\n  for (let i = 0; i < words.length; i++) {\n    let word = words[i];\n    for (let j = 0; j < vowels.length; j++) {\n      let vowel = vowels[j];\n      if (word.startsWith(vowel)) {\n        vowelWords.push(word);\n      }\n    }\n  }\n  return vowelWords;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Wrapping Everything Up!",
            "id": 114268,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Zuletzt lass uns noch einige Informationen ausgeben und die Funktion ausprobieren.\n\n1. Füge in der Funktion `textAnalyzer` ein `console.log` hinzu, um `\"Words List: \" + wordsArray` auszugeben.\n2. Gib `\"Total Words Count: \" + wordsArray.length` in der Funktion `textAnalyzer` aus.\n3. Rufe am Ende der Skriptdatei die Funktion `textAnalyzer` mit diesem Parameter auf: `\"You are an awesome developer\"`",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n  shortestWord = findShortestWord(wordsArray, longestWord);\n  console.log(\"Shortest Word: \" + shortestWord);\n  let vowelWords = [];\n  vowelWords = findVowelWords(wordsArray);\n  console.log(\"Vowel Words: \" + vowelWords);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n\nfunction findShortestWord(words, longestWord) {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n  return shortestWord;\n}\n\nfunction findVowelWords(words) {\n  const vowels = ['a', 'i', 'e', 'o', 'u'];\n  let vowelWords = [];\n  for (let i = 0; i < words.length; i++) {\n    let word = words[i];\n    for (let j = 0; j < vowels.length; j++) {\n      let vowel = vowels[j];\n      if (word.startsWith(vowel)) {\n        vowelWords.push(word);\n      }\n    }\n  }\n  return vowelWords;\n}\ntextAnalyzer(\"You are an awesome developer\");",
                  "solvedContent": "function textAnalyzer(text) {\n  if (typeof text !== 'string') {\n    console.log(\n      \"Cannot analyze text. Provided input is not valid. Please pass a string.\"\n      );\n    return;\n  }\n  if (text.trim().length < 1) {\n    console.log(\n      \"Cannot analyze text. Your text must include at least one character.\");\n    return;\n  }\n  let shortestWord = '';\n  let longestWord = '';\n  const wordsArray = convertTextToWords(text);\n  longestWord = findLongestWord(wordsArray);\n  console.log(\"Longest Word: \" + longestWord);\n  shortestWord = findShortestWord(wordsArray, longestWord);\n  console.log(\"Shortest Word: \" + shortestWord);\n  let vowelWords = [];\n  vowelWords = findVowelWords(wordsArray);\n  console.log(\"Vowel Words: \" + vowelWords);\n  console.log(\"Words List: \" + wordsArray);\n  console.log(\"Total Words Count: \" + wordsArray.length);\n}\n\nfunction convertTextToWords(text) {\n  const lowerCaseText = text.toLowerCase();\n  const words = lowerCaseText.split(' ');\n  return words;\n}\n\nfunction findLongestWord(words) {\n  let longestWord = '';\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length >= longestWord.length) {\n      longestWord = currentWord;\n    }\n  }\n  return longestWord;\n}\n\nfunction findShortestWord(words, longestWord) {\n  let shortestWord = longestWord;\n  for (let i = 0; i < words.length; i++) {\n    let currentWord = words[i];\n    if (currentWord.length < shortestWord.length) {\n      shortestWord = currentWord;\n    }\n  }\n  return shortestWord;\n}\n\nfunction findVowelWords(words) {\n  const vowels = ['a', 'i', 'e', 'o', 'u'];\n  let vowelWords = [];\n  for (let i = 0; i < words.length; i++) {\n    let word = words[i];\n    for (let j = 0; j < vowels.length; j++) {\n      let vowel = vowels[j];\n      if (word.startsWith(vowel)) {\n        vowelWords.push(word);\n      }\n    }\n  }\n  return vowelWords;\n}\ntextAnalyzer(\"You are an awesome developer\");"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}