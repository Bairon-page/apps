{
  "tutorial": {
    "id": 1733,
    "version": 7,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Systemadministrator-Zugriff",
    "descriptionContent": "Verwende JavaScript, um zu überprüfen, ob ein Benutzer ein Systemadministrator ist",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1733-icon-banner.svg",
    "chapters": [
      {
        "id": 11585,
        "title": "Systemadministrator-Zugriff",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Variables",
            "id": 106536,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns einen Login-Prozess für das Dashboard eines Administrators erstellen.\n\nZuerst richten wir einige der benötigten Variablen ein.\n\n1. Erstelle eine `const` Variable mit dem Namen `account` und speichere `\"admin\"` darin.\n2. Erstelle eine `let` Variable mit dem Namen `accountStatus` und speichere `\"active\"` darin.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Admin",
            "id": 106538,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir werden einen Vergleich verwenden, um zu überprüfen, ob das Konto ein Administrator ist, und das Ergebnis in einer Variable speichern.\n\n1. Erstelle eine `const` Variable namens `isAdmin`.\n2. Speichere in der `isAdmin` Variable das Ergebnis des folgenden Vergleichs: Überprüfe, ob `account` gleich `\"admin\"` ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to use the correct operator:\n```javascript\n===\n```"
                }
              ]
            }
          },
          {
            "title": "Valid",
            "id": 106537,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir werden eine weitere Variable verwenden, um das Ergebnis der Überprüfung zu speichern, ob das Konto in einem gültigen Zustand ist.\n\n1. Erstelle eine `const` Variable namens `isValid`.\n2. Speichere in `isValid` das Ergebnis des folgenden Vergleichs: ob `accountStatus` **nicht** gleich `\"inactive\"` ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Make sure to use the correct operator:\n```javascript\n!==\n```"
                }
              ]
            }
          },
          {
            "title": "Is admin",
            "id": 106539,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die Variable zusammen mit einer Eingabeaufforderung anzeigen.\n\n1. Code die Syntax, um in der Konsole anzuzeigen.\n2. Innerhalb der Klammern, code den String `\"Admin: \"`, und füge dann die Variable `isAdmin` direkt danach hinzu. Die Konsole sollte folgendes anzeigen:\n```javascript\nAdmin: true  \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\n",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To display a string along with a variable, the code should look like this:\n```javascript\nconsole.log(\"<string value>\"  + <variable>);\n```"
                }
              ]
            }
          },
          {
            "title": "Is Valid",
            "id": 106541,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die Variable `isValid` zusammen mit einer Eingabeaufforderung anzeigen.\n\n1. Code die Syntax, um in der Konsole anzuzeigen.\n2. Innerhalb der Klammern, code den String `\"Valid: \"` und füge dann die Variable `isValid` direkt danach hinzu. Die Konsole sollte nun Folgendes anzeigen:\n``` javascript\nAdmin: true\nValid: true  \n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);",
                  "solvedContent": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);\nconsole.log(\"Valid: \" + isValid);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Regular",
            "id": 106540,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns sehen, was passiert, wenn ein Benutzer mit einem regulären Konto versucht, sich anzumelden.\n\n1. Ändere den Wert der Variable `account` in Zeile 1 des Codes zu `\"regular\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const account = \"admin\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);\nconsole.log(\"Valid: \" + isValid);",
                  "solvedContent": "const account = \"regular\";\nlet accountStatus = \"active\";\nconst isAdmin = account === \"admin\";\nconst isValid = accountStatus !== \"inactive\";\nconsole.log(\"Admin: \" + isAdmin);\nconsole.log(\"Valid: \" + isValid);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}