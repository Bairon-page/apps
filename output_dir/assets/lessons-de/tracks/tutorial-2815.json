{
  "tutorial": {
    "id": 2815,
    "version": 3,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Generics",
    "descriptionContent": "Übe, was du bisher gelernt hast",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14844,
        "title": "Generics",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #5",
            "id": 131029,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schreibe einen generischen Array-Typ in TypeScript, der numerische Werte hält.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numbers: \" /><text value=\"Array\" class=\"built_in\" /><text value=\"&lt;\" /><text value=\"number\" class=\"built_in\" /><text value=\"&gt; = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"18\" /><option startIndex=\"18\" endIndex=\"19\" /><option startIndex=\"19\" endIndex=\"25\" /><option startIndex=\"25\" endIndex=\"26\" /><option correct=\"false\"><content><text value=\"(\" /></content></option><option correct=\"false\"><content><text value=\")\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>Array</code>, gefolgt von <code>&lt;</code> und schließlich <code>number</code>, <code>&gt;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131032,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Hauptvorteil der Verwendung von Generics in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Generics ermöglichen es dir, wiederverwendbare Komponenten zu erstellen, die mit jedem Datentyp arbeiten können</item><item value=\"2\" correct=\"false\">Generics zwingen dich, nur vordefinierte Typen zu verwenden</item><item value=\"3\" correct=\"false\">Generics konvertieren automatisch alle Typen in Strings</item><item value=\"4\" correct=\"false\">Generics beseitigen die Notwendigkeit der Typüberprüfung</item></selection><p visible-if=\"wrong\">Generics ermöglichen es dir, wiederverwendbare Komponenten zu erstellen, die mit jedem Datentyp arbeiten können.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 131028,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wähle die richtige Syntax, damit der Code funktioniert.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" GenericNumber&lt;T&gt; {\" /><text type=\"break\" /><text value=\" value: T; \" /><text type=\"break\" /><text value=\" add: \" /><text value=\"(\" /><text value=\"x: T, y: T\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" T;\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"26\" endIndex=\"35\" /><option correct=\"false\"><content><text value=\"T: value;\" /></content></option><option correct=\"false\"><content><text value=\"value: &lt;T&gt;;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>value: T;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131098,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum ist es in Ordnung, <code>&lt;number&gt;</code> hier wegzulassen?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Wrapper &lt;T&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"public\" class=\"keyword\" /><text value=\" value: T\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" numberWrapper = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wrapper(\" /><text value=\"42\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(numberWrapper);\" /></content><output><content><text value=\"{value: 42}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Weil TypeScript den generischen Typ ableiten wird</item><item value=\"2\" correct=\"false\">Es ist nicht in Ordnung, da dies einen Fehler verursachen wird</item><item value=\"3\" correct=\"false\">Weil wir niemals <code>&lt;number&gt;</code> für Generics verwenden</item><item value=\"4\" correct=\"false\">Weil TypeScript sich bei der Verwendung von Generics nicht um Typen kümmert</item></selection><p visible-if=\"wrong\">Weil TypeScript den generischen Typ ableiten wird.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 131097,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Zweck eines generischen Interface in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um die Form eines Objekts mit flexiblen Typen zu definieren</item><item value=\"2\" correct=\"false\">Um beliebige Datentypen ohne Eigenschaften oder Methoden zu speichern</item><item value=\"3\" correct=\"false\">Um Typdefinitionen für externe Bibliotheken automatisch zu generieren</item><item value=\"4\" correct=\"false\">Um zu verhindern, dass die Schnittstelle mit mehreren Typen verwendet wird</item></selection><p visible-if=\"wrong\">Um die Form eines Objekts mit flexiblen Typen zu definieren.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 131034,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Fülle die Lücken aus, um den Code generisch zu machen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Container&lt;T&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"public\" class=\"keyword\" /><text value=\" value: T\" /><text value=\") { }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"16\" /><option startIndex=\"17\" endIndex=\"18\" /><option startIndex=\"16\" endIndex=\"17\" /><option startIndex=\"49\" endIndex=\"50\" /><option correct=\"false\"><content><text value=\"number\" /></content></option><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>&lt;</code>, gefolgt von <code>T</code> und schließlich <code>&gt;</code>, <code>T</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 131033,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wofür steht das <code>T</code> in <code>&lt;T&gt;</code> im Kontext von TypeScript-Generics?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es ist ein Platzhalter für jeden Typ</item><item value=\"2\" correct=\"false\">Es steht für \"TypeScript\"</item><item value=\"3\" correct=\"false\">Es steht für \"template\"</item><item value=\"4\" correct=\"false\">Es steht für \"Transformation\"</item></selection><p visible-if=\"wrong\">Es ist ein Platzhalter für jeden Typ.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 131035,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sieh dir den folgenden Code an. Bestimme den Typ des Generics korrekt.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" list: \" /><text value=\"Array\" class=\"built_in\" /><text value=\"&lt;\" /><text value=\"number\" class=\"built_in\" /><text value=\"&gt; = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\"];\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"16\" endIndex=\"22\" /></interactions></code><p visible-if=\"wrong\">Gib <code>number</code> ein.</p></body></html>"
          }
        ]
      }
    ]
  }
}