{
  "tutorial": {
    "id": 1732,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Budgetierungs-App",
    "descriptionContent": "Übe deine Zeichenketten- und Zahlenvergleiche, indem du eine Budgetierungs-App programmierst",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1732-icon-banner.svg",
    "chapters": [
      {
        "id": 11582,
        "title": "Budgetierungs-App",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Save budget",
            "id": 106471,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In diesem Projekt werden wir einen Entwurf des JavaScript-Codes schreiben, der für diese Budgetierungs-App geplant ist.\n\nUm Berechnungen durchzuführen, müssen wir zuerst das Budget des Benutzers in einer Variable speichern.\n\n1. Erstelle die `const` Variable `budget` und speichere den Wert `3200` darin.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const budget = 3200;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Set savings priority",
            "id": 106467,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Der Benutzer kann entscheiden, wie wichtig Ersparnisse für den Monat sind.\n\n1. Erstelle die `const` Variable `savingPriority` und setze die Variable auf den String-Wert `\"high\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Fixed expenses",
            "id": 106465,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Die App erfasst auch die monatlichen Fixkosten des Nutzers.\n\n1. Erstelle die `const` Variable `rent` und setze sie auf den Wert `1100`.\n2. Erstelle die `const` Variable `utilities` und setze sie auf den Wert `370`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "New item",
            "id": 106458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes fügen wir auch eine Variable für einen Artikel hinzu, den der Benutzer kaufen möchte.\n\n1. Code die Variable `newLaptop` und gib ihr den Wert `1200`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Total spendings",
            "id": 106472,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die monatlichen Kosten berechnen.\n\n1. Um die monatlichen Kosten des Nutzers zu berechnen, erstelle die Variable `totalCosts`.\n1. Addiere dann `rent` zu `utilities` und weise diese Berechnung `totalCosts` zu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Budget left",
            "id": 106466,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns das verbleibende Budget berechnen.\n\n1. Erstelle die `const` Variable `budgetLeft`.\n2. Subtrahiere dann `totalCosts` von `budget` und weise die Berechnung `budgetLeft` zu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Buy Laptop",
            "id": 106464,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Next:\n\n1. Erstelle die `const` Variable `buyLaptop`.\n2. Überprüfe, ob `budgetLeft` *größer als oder gleich* `newLaptop` ist, und speichere den Vergleich in `buyLaptop`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Can afford?",
            "id": 106463,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns den Benutzer informieren, ob er sich den neuen Laptop leisten kann.\n\n1. Gib den Wert `\"New Laptop Within Budget:\"` in der Konsole aus.\n2. Gib in einer neuen Zeile den Wert der Variable `buyLaptop` in der Konsole aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Save instead",
            "id": 106462,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich, rate dem Benutzer, ob er stattdessen das Sparen priorisieren sollte.\n\n1. Zeige den Wert `\"Postpone Purchase and Save Instead:\"` in der Konsole an.\n2. In einer neuen Zeile, überprüfe, ob `savingPriority` gleich `\"high\"` ist und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);",
                  "solvedContent": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Change values",
            "id": 106469,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Später werden wir lernen, wie man Code wie diesen viel intelligenter macht. Aber für den Moment lass uns einige Werte ändern und sehen, wie sie das Ergebnis beeinflussen. Da wir `const` Variablen verwendet haben und deren Werte nicht neu zugewiesen werden können, musst du die Werte in den Variableninitialisierungen ändern.\n\n1. Setze `budget` auf `2500`.\n2. Setze `savingPriority` auf `\"low\"`.\n3. Setze `rent` auf `800`.\n4. Setze `utilities` auf `200`.\n5. Führe den Code aus, um zu sehen, wie sich das Ergebnis ändert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 3200;\nconst savingPriority = \"high\";\nconst rent = 1100;\nconst utilities = 370;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");",
                  "solvedContent": "const budget = 2500;\nconst savingPriority = \"low\";\nconst rent = 800;\nconst utilities = 200;\nconst newLaptop = 1200;\nconst totalCosts = rent + utilities;\nconst budgetLeft = budget - totalCosts;\nconst buyLaptop = budgetLeft >= newLaptop;\nconsole.log(\"New Laptop Within Budget:\");\nconsole.log(buyLaptop);\nconsole.log(\"Postpone Purchase and Save Instead:\");\nconsole.log(savingPriority === \"high\");"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}