{
  "tutorial": {
    "id": 1747,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Dateigrößenprüfer",
    "descriptionContent": "Schreibe Code, der eine Funktion verwendet, um zu überprüfen, ob die Dateigröße innerhalb der Upload-Grenzen liegt.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1747-icon-banner.svg",
    "chapters": [
      {
        "id": 11622,
        "title": "Dateigrößenprüfer",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Function",
            "id": 106853,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns Code schreiben, der eine Funktion verwendet, um zu überprüfen, ob die Dateigröße innerhalb der Upload-Grenzen liegt.\n\nWir müssen eine Funktion erstellen, die die Größe der Datei überprüft.\n\n1. Erstelle eine Funktion namens `checkSize()` mit dem Parameter `fileSize`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "function checkSize(fileSize) {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Max Size",
            "id": 106855,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns auch eine Variable erstellen, die die maximal zulässige Dateigröße speichert.\n\n1. Erstelle eine Konstante namens `maxSize`, die die maximal erlaubten Gigabytes speichert, und setze sie auf `5`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Min Size",
            "id": 106864,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Da wir eine Variable für die maximale Dateigröße haben, lass uns auch eine für die minimale Dateigröße haben.\n\n1. Erstelle eine Konstante namens `minSize`, die die minimal erlaubten Gigabyte speichert, und setze sie auf `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `const` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Upload",
            "id": 106859,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir werden anzeigen, ob der Upload basierend auf der Dateigröße erlaubt ist.\n\n1. Verwende eine Anzeigeanweisung, um `\"Upload Permitted?\"` anzuzeigen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to display anything in the console."
                }
              ]
            }
          },
          {
            "title": "Comparison of maximum size",
            "id": 106856,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns dem Benutzer mitteilen, ob er die maximale Dateigröße überschritten hat. Wir können dies tun, indem wir überprüfen, ob `fileSize` größer als `maxSize` ist.\n\n1. Erstelle eine Konstante `overMaxSize`, überprüfe, ob `fileSize` größer als `maxSize` ist, und speichere das Ergebnis in der Konstante.\n2. Füge eine weitere Anzeigeanweisung hinzu, die `\"The file is too large: \" + overMaxSize` anzeigt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `>` operator to check if a value is greater than another value."
                }
              ]
            }
          },
          {
            "title": "Comparison of minimum size",
            "id": 106858,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns den Nutzern auch mitteilen, wenn ihr Datei-Upload zu klein ist. Wir können überprüfen, ob `fileSize` kleiner als `minSize` ist.\n\n1. Erstelle eine Konstante `underMinSize`, überprüfe, ob `fileSize` kleiner als `minSize` ist, und speichere das Ergebnis in der Konstante.\n2. Füge eine weitere Anzeigeanweisung hinzu, die `\"The file is too small: \"+ underMinSize` anzeigt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use the `<` operator to check if a value is less than another value."
                }
              ]
            }
          },
          {
            "title": "Calling",
            "id": 106849,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jetzt, da wir eine Funktion erstellt haben, lass sie uns verwenden. Um eine Funktion zu nutzen, müssen wir sie aufrufen.\n\n1. Erstelle eine neue Konstante, die einen Zahlenwert hält, und übergib diese Konstante dann an die `checkSize()` Funktion.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}",
                  "solvedContent": "function checkSize(fileSize) {\n  const maxSize = 5;\n  const minSize = 1;\n  console.log(\"Upload Permitted?\");\n  const overMaxSize = fileSize > maxSize;\n  console.log(\"The file is too large: \" + overMaxSize);\n  const underMinSize = fileSize < minSize;\n  console.log(\"The file is too small: \" + underMinSize);\n}\nconst movieSizeGB = 6;\ncheckSize(movieSizeGB);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The syntax to call a function is:\n```javascript\nfunctionName(value);\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}