{
  "tutorial": {
    "id": 2649,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Einführung in Requests",
    "descriptionContent": "Einführung in Requests",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14620,
        "title": "Anfragegrundlagen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 129349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In der Softwareentwicklung ist die Interaktion mit Webdiensten eine häufige Aufgabe, die oft das Senden von Anfragen an Server beinhaltet.</p><p>Die Python-Bibliothek <code>requests</code> vereinfacht den Prozess der Anfragenstellung.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"7\" endIndex=\"15\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>import</code>, gefolgt von <code>requests</code> aus.</p></body></html>"
          },
          {
            "title": "Intro - Copy",
            "id": 129555,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die <code>requests</code>-Bibliothek in Python wird verwendet, um HTTP-Anfragen an eine angegebene URL zu stellen.</p><p>Die requests-Bibliothek macht es einfach, egal ob du versuchst, auf die Daten einer Website zuzugreifen oder mit einem Webdienst zu interagieren.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text value=\"character_data = response.json()\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Name: \" /><text value=\"{character_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Status: \" /><text value=\"{character_data[\" /><text value=\"'status'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"90\" /><option startIndex=\"91\" endIndex=\"94\" /><option startIndex=\"95\" endIndex=\"98\" /><option correct=\"false\"><content><text value=\"load\" /></content></option></options></interaction></interactions><output><content><text value=\"Name: Rick Sanchez\" /><text type=\"break\" /><text value=\"Status: Alive\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>requests</code>, gefolgt von <code>get</code> und schließlich <code>url</code> aus.</p></body></html>"
          },
          {
            "title": "Import",
            "id": 129351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um requests zu verwenden, müssen wir es mit dem Schlüsselwort <code>import</code> importieren, gefolgt vom Paketnamen <code>requests</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"http\" /></content></option><option correct=\"false\"><content><text value=\"python\" /></content></option><option startIndex=\"7\" endIndex=\"15\" /><option startIndex=\"0\" endIndex=\"6\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>import</code>, gefolgt von <code>requests</code> aus.</p></body></html>"
          },
          {
            "title": "NumPy usage",
            "id": 129350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können dann <code>requests.get()</code> aufrufen und ihm eine URL übergeben, um eine HTTP-GET-Anfrage zu stellen.</p><p>HTTP GET-Anfragen sind die am häufigsten verwendete Art von Anfragen im Web, die hauptsächlich dazu entwickelt wurden, Daten von einer bestimmten Ressource abzurufen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"22\" /><option startIndex=\"98\" endIndex=\"101\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>url</code>, gefolgt von <code>url</code> aus.</p></body></html>"
          },
          {
            "title": "NumPy usage - Copy",
            "id": 129556,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die <code>get()</code>-Funktion gibt eine Antwort zurück, die wir in einer Variable speichern können.</p><p>Das Response-Objekt hat einen Statuscode und Daten oder einen Fehler angehängt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(response)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"112\" endIndex=\"120\" /></options></interaction></interactions><output><content><text value=\"&lt;Response [200]&gt;\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>response</code>, gefolgt von <code>response</code> aus.</p></body></html>"
          },
          {
            "title": "Arrays",
            "id": 129353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um an die Daten zu gelangen, müssen wir das Antwortobjekt parsen. Das machen wir mit <code>.json()</code>.</p><p>Die geparsten Daten sind ein Dictionary von Schlüsseln und Werten.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"74\" endIndex=\"82\" /><option startIndex=\"111\" endIndex=\"119\" /><option startIndex=\"119\" endIndex=\"126\" /></options></interaction></interactions><output><content><text value=\"{'id': 1, 'name': 'Rick Sanchez', 'status': 'Alive', 'species': 'Human', 'type': '', 'gender': 'Male', ...}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>response</code>, gefolgt von <code>response</code> und schließlich <code>.json()</code> aus.</p></body></html>"
          },
          {
            "title": "Arrays - Copy",
            "id": 129557,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auf die Werte zugreifen wie bei jedem anderen Dictionary, mit dem wir arbeiten.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\"]) \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;status&quot;\" class=\"string\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"108\" /><option startIndex=\"136\" endIndex=\"140\" /><option startIndex=\"140\" endIndex=\"148\" /><option startIndex=\"157\" endIndex=\"161\" /></options></interaction></interactions><output><content><text value=\"Rick Sanchez\" /><text type=\"break\" /><text value=\"Alive\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>data</code>, gefolgt von <code>data</code> und schließlich <code>[\"name\"]</code>, <code>data</code> aus.</p></body></html>"
          },
          {
            "title": "Question: NumPy usage",
            "id": 129354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wann solltest du die Python requests Bibliothek verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Wenn du HTTP-Anfragen einfach und effizient senden musst</item><item value=\"2\" correct=\"false\">Wenn du offline, rechenintensive Aufgaben ausführst</item></selection><p visible-if=\"wrong\">Wenn du HTTP-Anfragen einfach und effizient senden musst.</p></body></html>"
          },
          {
            "title": "Question: Import",
            "id": 129355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie heißt die Bibliothek, die wir verwenden, um HTTP-Anfragen in Python auszuführen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>requests</code></item><item value=\"2\" correct=\"false\"><code>http_requests</code></item></selection><p visible-if=\"wrong\">Wähle <code>requests</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Import as np",
            "id": 129356,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie parsen wir das Response-Objekt, um an die Daten zu gelangen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>response.json()</code></item><item value=\"2\" correct=\"false\"><code>response.parse()</code></item></selection><p visible-if=\"wrong\">Wähle <code>response.json()</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Import",
            "id": 129358,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schreibe den notwendigen Code, um die <code>requests</code>-Bibliothek in Python zu importieren.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"15\" /></interactions></code><p visible-if=\"wrong\">Gib <code>import requests</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Import as np",
            "id": 129359,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mache eine GET-Anfrage mit der requests-Bibliothek.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"90\" /><option startIndex=\"90\" endIndex=\"91\" /><option startIndex=\"91\" endIndex=\"94\" /><option startIndex=\"94\" endIndex=\"95\" /><option startIndex=\"95\" endIndex=\"98\" /><option startIndex=\"98\" endIndex=\"99\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"run\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>requests</code>, gefolgt von <code>.</code> und schließlich <code>get</code>, <code>(</code>, <code>url</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Arrays - Copy - Copy",
            "id": 129558,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Drucke den Wert für den Schlüssel <code>\"status\"</code> im geparsten Antwortobjekt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://rickandmorty.mimo.dev/api/character/1&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\"]) \" /><text type=\"break\" /><text value=\"print(data[\" /><text value=\"&quot;status&quot;\" class=\"string\" /><text value=\"])\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"157\" endIndex=\"171\" /></interactions><output><content><text value=\"Rick Sanchez\" /><text type=\"break\" /><text value=\"Alive\" /></content></output></code><p visible-if=\"wrong\">Gib <code>data[\"status\"]</code> ein.</p></body></html>"
          }
        ]
      },
      {
        "id": 14622,
        "title": "Verwendung von requests",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Array method",
            "id": 129371,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Arbeit mit Web-APIs beinhaltet das Senden und Empfangen von Daten über das Internet.</p><p>Beim Arbeiten mit der Antwort müssen wir die Integrität der Daten sicherstellen. Dafür wird der Statuscode verwendet.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"128\" /><option correct=\"false\"><content><text value=\"success_code\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>status_code</code> aus.</p></body></html>"
          },
          {
            "title": "Array method - Copy",
            "id": 129559,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das Response-Objekt hat einen <code>status_code</code> angehängt.</p><p>Wir sollten überprüfen, ob es gleich <code>200</code> ist, um sicherzustellen, dass die Daten erfolgreich abgerufen wurden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(url) \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"128\" /><option startIndex=\"129\" endIndex=\"131\" /><option startIndex=\"132\" endIndex=\"135\" /><option correct=\"false\"><content><text value=\"=\" /></content></option><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>status_code</code>, gefolgt von <code>==</code> und schließlich <code>200</code> aus.</p></body></html>"
          },
          {
            "title": "Array method 2",
            "id": 129372,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nachdem sichergestellt wurde, dass die Daten erfolgreich abgerufen wurden, können wir sie entpacken.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"78\" /><option startIndex=\"103\" endIndex=\"111\" /><option startIndex=\"189\" endIndex=\"197\" /><option correct=\"false\"><content><text value=\"status_code\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>response</code>, gefolgt von <code>response</code> und schließlich <code>response</code> aus.</p></body></html>"
          },
          {
            "title": "Array cast",
            "id": 129373,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In einigen Fällen bekommen wir nicht das, was wir erwarten. Zum Beispiel gibt es kein Pokemon mit dem Namen <em>Mimo</em>.</p><p>Wir sollten immer den <code>status_code</code> überprüfen, und falls wir auf einen Fehler stoßen, die Daten nicht anfassen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" response.status_code == \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Failed to retrieve data&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"283\" endIndex=\"287\" /><option startIndex=\"287\" endIndex=\"288\" /><option startIndex=\"293\" endIndex=\"325\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"&quot;failure&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>else</code>, gefolgt von <code>:</code> und schließlich <code>print(\"Failed to retrieve data\")</code> aus.</p></body></html>"
          },
          {
            "title": "Indexing",
            "id": 129374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Statt den Statuscode direkt zu vergleichen, können wir den Request-Aufruf auch in einen <code>try</code>-Block setzen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"response.status_code == 200\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>try</code>, gefolgt von <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Indexing - Copy",
            "id": 129560,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir fügen dann einen <code>except</code>-Block hinzu, um potenzielle Fehler abzufangen. Hier nehmen wir den Fehler aus dem Fehlerobjekt und verwenden ihn als <code>error</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error: \" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"296\" endIndex=\"302\" /><option startIndex=\"303\" endIndex=\"330\" /><option correct=\"false\"><content><text value=\"else\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>except</code>, gefolgt von <code>requests.HTTPError as error</code> aus.</p></body></html>"
          },
          {
            "title": "Indexing - Copy - Copy",
            "id": 129561,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir sollten <code>raise_for_status</code> auf dem Response-Objekt aufrufen, um Fehler zu identifizieren, die wir dann über den <code>except</code>-Block abfangen können.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\": \" /><text type=\"break\" /><text value=\"  response = requests.get(url) \" /><text type=\"break\" /><text value=\"  response.raise_for_status() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"  pokemon_data = response.json() \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\") \" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error: \" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"113\" endIndex=\"121\" /><option startIndex=\"122\" endIndex=\"138\" /><option correct=\"false\"><content><text value=\"check_error\" /></content></option></options></interaction></interactions><output><content><text value=\"Data successfully retrieved\" /><text type=\"break\" /><text value=\"Name: pikachu\" /><text type=\"break\" /><text value=\"ID: 25\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>response</code>, gefolgt von <code>raise_for_status</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Array method",
            "id": 129377,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welcher Statuscode wird für einen erfolgreichen Aufruf verwendet?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">200</item><item value=\"2\" correct=\"false\">400</item></selection><p visible-if=\"wrong\">Wähle 200 aus.</p></body></html>"
          },
          {
            "title": "Question: Array method 2",
            "id": 129378,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Methode können wir aufrufen, um einen Fehler in der API-Anfrage zu überprüfen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"3\" correct=\"false\"><code>response.check_error()</code></item><item value=\"3\" correct=\"true\"><code>response.raise_for_status()</code></item></selection><p visible-if=\"wrong\">Wähle <code>response.raise_for_status()</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Array cast",
            "id": 129379,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn wir eine Anfrage mit der Python-Bibliothek requests senden, die eine ungültige URL ist?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Die requests-Bibliothek wirft einen Fehler</item><item value=\"2\" correct=\"false\">Nichts passiert</item></selection><p visible-if=\"wrong\">Die requests-Bibliothek wirft einen Fehler.</p></body></html>"
          },
          {
            "title": "Question 2: Array cast",
            "id": 129380,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Art von Antwort erhältst du, nachdem du eine GET-Anfrage an einen API-Endpunkt gesendet hast?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"print(response)\" /></content><output><content><text value=\"&lt;Response [200]&gt;\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Response-Objekt</item><item value=\"4\" correct=\"false\">Liste von Dictionaries</item></selection><p visible-if=\"wrong\">Wähle Response-Objekt aus.</p></body></html>"
          },
          {
            "title": "Question: Indexing",
            "id": 129381,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist die erwartete Ausgabe dieses Codes?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><output><content><text value=\"200\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>200</code></item><item value=\"2\" correct=\"false\"><code>Error</code></item></selection><p visible-if=\"wrong\">Wähle <code>200</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Size",
            "id": 129382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was wird der Antwortstatuscode nach der Ausführung dieses Codes sein, wenn es kein Pokémon namens \"Mimo\" gibt?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/mimo&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><output><content><text value=\"404\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">200</item><item value=\"2\" correct=\"true\">404</item></selection><p visible-if=\"wrong\">Wähle 404 aus.</p></body></html>"
          },
          {
            "title": "Example: Array method",
            "id": 129383,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Speichere in der Variable <code>response_json</code> das JSON-Objekt, das von der <code>requests.get()</code>-Funktion nach dem Aufrufen einer bestimmten URL zurückgegeben wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/pikachu&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"response = requests.get(url)\" /><text type=\"break\" /><text value=\"response_json = response.json()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"98\" endIndex=\"111\" /><option startIndex=\"114\" endIndex=\"122\" /><option startIndex=\"123\" endIndex=\"127\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>response_json</code>, gefolgt von <code>response</code> und schließlich <code>json</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Indexing",
            "id": 129385,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende <code>try</code> und dann <code>except</code>, um eine Anfrage zu stellen und einen eventuellen Fehler abzufangen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://pokedex.mimo.dev/api/pokemon/mimo&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"try\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"  response = requests.get(url)\" /><text type=\"break\" /><text value=\"  response.raise_for_status()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Data successfully retrieved&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  pokemon_data = response.json()\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Name: \" /><text value=\"{pokemon_data[\" /><text value=\"'name'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;ID: \" /><text value=\"{pokemon_data[\" /><text value=\"'id'\" class=\"string\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"except\" class=\"keyword\" /><text value=\" requests.HTTPError \" /><text value=\"as\" class=\"keyword\" /><text value=\" error:\" /><text type=\"break\" /><text value=\"  print(error)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"283\" endIndex=\"289\" /><option startIndex=\"290\" endIndex=\"308\" /><option startIndex=\"309\" endIndex=\"311\" /><option startIndex=\"312\" endIndex=\"317\" /><option correct=\"false\"><content><text value=\"if\" /></content></option><option correct=\"false\"><content><text value=\"else\" /></content></option></options></interaction></interactions><output><content><text value=\"404 Client Error: Not Found for url: https://pokedex.mimo.dev/api/pokemon/mimo\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>try</code>, gefolgt von <code>except</code> und schließlich <code>requests.HTTPError</code>, <code>as</code>, <code>error</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}