{
  "tutorial": {
    "id": 2370,
    "version": 3,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Funktionen",
    "descriptionContent": "Fordere dich selbst mit etwas Übung zu Funktionen heraus",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13841,
        "title": "Preis mit Steuer berechnen",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Price with Tax",
            "id": 123347,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du entwickelst eine Webanwendung für ein Restaurant, die den Gesamtpreis eines Artikels nach Steuern berechnet.\n\n1. Vervollständige die Funktion `calculate_tax`, die einen bestimmten Preis nimmt und ihn mit einer hinzugefügten Steuer von 10% aktualisiert.\n2. Stelle sicher, dass der aktualisierte `price` nach der Berechnung zurückgegeben wird.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_tax(price):\n    ",
                  "solvedContent": "def calculate_tax(price):\n    price += price * 0.1\n    return price"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13846,
        "title": "Kann schwimmen",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Can Swim",
            "id": 123359,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du gehst schnell im Pool schwimmen, aber du kannst kaltes Wasser nicht ausstehen. Lass uns sicherstellen, dass die Wassertemperatur zum Schwimmen geeignet ist!\n\n1. Schreibe innerhalb der Funktion eine `if else`-Anweisung, um die Wassertemperatur zu überprüfen. Wenn die Temperatur über 30 liegt, gib `True` zurück. Andernfalls gib `False` zurück.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def can_swim(temperature):",
                  "solvedContent": "def can_swim(temperature):\n if temperature > 30:\n  return True\n else:\n  return False"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13848,
        "title": "Gesamtbetrag",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Calculate Total",
            "id": 123348,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es ist dein Geburtstag und deine Freunde haben beschlossen, dir etwas Geld zu schenken. Sie haben das Geld in ein Glas gelegt und es dir gegeben.\n\n1. Aktualisiere die Funktion `calculate_total`, um über alle Geldbeträge im Glas zu **iterieren**, sie zusammenzuzählen und die gesamte `sum` zurückzugeben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def calculate_total(jar):\n sum = 0\n \n\n",
                  "solvedContent": "def calculate_total(jar):\n sum = 0\n for money in jar:\n  sum += money\n return sum"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13847,
        "title": "Das Zauberspiel",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "The Wizard Spells",
            "id": 123360,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du arbeitest an der Entwicklung eines Zauberspiels. Deine Aufgabe ist es, einen Schadensmodifikator für Zauber zu erstellen, die die Charaktere wirken können. Jeder Zauber kann eine unterschiedliche Menge an Schaden am `enemy_health` verursachen. Aktualisiere die Funktion `cast_spell`.\n\n1. Wenn der Zaubername `\"Incendio\"` ist, setze `damage` auf `30`\n2. Wenn der Zaubername `\"Avda Kedavra\"` ist, setze `damage` auf `100`\n3. Aktualisiere die `enemy_health`, indem du den `damage` von `enemy_health` subtrahierst.\n4. Gib `enemy_health` von der Funktion zurück.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n\n elif spell_name == 'Avada Kedavra':",
                  "solvedContent": "def cast_spell(spell_name, enemy_health):\n damage = 0\n if spell_name == 'Incendio':\n  damage = 30\n elif spell_name == 'Avada Kedavra':\n  damage = 100\n enemy_health = enemy_health - damage\n return enemy_health"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13849,
        "title": "Überprüfe die Verfügbarkeit auf Lager",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Check In Stock Availability",
            "id": 123374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du arbeitest in einem Optikergeschäft. Deine Aufgabe ist es, ein Programm zu schreiben, das überprüft, ob genügend Brillen im Lager sind. Die Funktion `check_stock` nimmt eine Liste `eyeglasses` als Parameter und hat eine Variable `in_stock`, die anfänglich auf `False` gesetzt ist.\n\n1. Wenn die Anzahl der Brillen größer oder gleich `5` ist, setze `in_stock` auf `True` und gib die Nachricht `\"Eyeglasses in stock\"` aus.\n2. Andernfalls gib die Nachricht `\"Out of stock\"` aus.\n3. Gib die Variable `in_stock` von der Funktion zurück.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "def check_stock(eyeglasses):\n in_stock = False\n",
                  "solvedContent": "def check_stock(eyeglasses):\n in_stock = False\n if (len(eyeglasses) >= 5):\n  in_stock = True\n  print(\"Eyeglasses in stock\")\n else:\n  print(\"Out of stock\")\n return in_stock\n"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}