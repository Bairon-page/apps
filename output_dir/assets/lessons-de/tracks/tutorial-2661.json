{
  "tutorial": {
    "id": 2661,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "ToDo-Liste - Teil 1",
    "descriptionContent": "Beginne mit dem Erstellen deiner To-Do-Listen-App. Dieser erste Schritt konzentriert sich auf das Erstellen der grundlegenden Struktur und das Hinzufügen von Aufgaben.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2661-icon-banner.svg",
    "chapters": [
      {
        "id": 14636,
        "title": "Kapitel #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129453,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zum **ToDo List** Projekt. Hier wirst du eine Liste für all deine Aufgaben erstellen.\n\nLass uns damit beginnen, eine leere Liste zu erstellen, die die Aufgaben für die ToDo-Liste halten wird.\n\n1. Erstelle eine Variable namens `todo_list` und setze sie gleich der leeren Liste `[]`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "todo_list = []"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129454,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir sollten dem Benutzer mitteilen, ob seine ToDo-Liste leer ist. Dies kann durch Überprüfung der Länge der `todo_list` innerhalb einer `if`-Anweisung erfolgen.\n\n1. Verwende eine `if`-Anweisung, die überprüft, ob `todo_list` leer ist.\n2. Falls ja, sollte der String `\"Your ToDo list is empty\"` ausgegeben werden.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []",
                  "solvedContent": "todo_list = []\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129455,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Leere Liste? Lass uns das beheben, indem wir einige Aufgaben hinzufügen und anzeigen.\n\n1. Aktualisiere die erste Zeile, indem du zwei Elemente zur `todo_list` hinzufügst, die wir anzeigen können;\n2. Füge eine `else`-Klausel zur `if`-Anweisung hinzu, die ausgeführt wird, wenn die Liste nicht leer ist.\n3. Erstelle innerhalb der `else`-Klausel eine Variable namens `index` und weise ihr den Wert `1` zu.\n4. Beginne innerhalb der `else`-Klausel eine `for`-Schleife, um über jede `task` in `todo_list` zu iterieren.\n5. Gib in der `for`-Schleife den `index`, gefolgt von einem `.` und dann der `task` aus. Verwende dafür ein f-String wie `f\"{index}. {task}\"`.\n6. Erhöhe nach dem Ausdrucken der Aufgabe den `index` um `1`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129456,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Unser Programm sollte den Benutzer bitten, eine neue Aufgabe einzugeben. Lass uns die `input`-Funktion verwenden, um Benutzereingaben zu erhalten.\n\n1. Füge eine `input`-Funktion mit der Aufforderung `\"Enter the task: \"` direkt unter der Zeile hinzu, in der du die `todo_list` definierst. Erstelle eine Variable namens `new_task`, um die Eingabe zu speichern, die von der `input`-Funktion empfangen wird.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129457,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die neue Aufgabe des Benutzers zur `todo_list` hinzufügen und bestätigen, dass die Aufgabe hinzugefügt wurde.\n\n1. Füge vor dem `if`-Block die Variable `new_task` zur `todo_list` hinzu.\n2. Gib `Task \"{new_task}\" added` aus, indem du ein f-String verwendest, um die vom Benutzer hinzugefügte Aufgabe einzuschließen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\ntodo_list.append(new_task)\nprint(f\"Task '{new_task}' added to the ToDo list\")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich lass uns eine Schleife laufen, bis der Benutzer entscheidet, aufzuhören. Für den Moment lassen wir sie für immer laufen. Wir werden das im zweiten Teil des Projekts ändern.\n\n1. Umschließe den gesamten Code in einer `while` Schleife, deren Bedingung auf `True` gesetzt ist, während du die allererste Zeile, in der du die Variable `todo_list` definierst, außerhalb lässt.\n\nNachdem du die `while` Schleife implementiert hast, füge ein paar Aufgaben hinzu und sieh zu, wie die Liste wächst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nnew_task = input(\"Enter the task: \")\ntodo_list.append(new_task)\nprint(f\"Task '{new_task}' added to the ToDo list\")\n\nif not todo_list:\n  print(\"Your ToDo list is empty\")\nelse:\n  index = 1\n  for task in todo_list:\n    print(f\"{index}. {task}\")\n    index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}