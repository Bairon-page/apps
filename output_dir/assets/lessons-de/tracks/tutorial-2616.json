{
  "tutorial": {
    "id": 2616,
    "version": 6,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "html",
    "title": "Rick und Morty - Teil 2",
    "descriptionContent": "Zeit, sich mit dem Kosmos zu verbinden! Jetzt wechseln wir von lokalem JSON zu Echtzeitdaten über eine API. Nutze die Kraft der Web-Konnektivität, um dynamische Details aus dem Rick and Morty-Universum abzurufen und darzustellen.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2616-icon-banner.svg",
    "chapters": [
      {
        "id": 14467,
        "title": "Lernen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 128998,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zurück zum **Rick and Morty**-Projekt. Im zweiten Teil werden wir die Daten von einem Server abrufen, anstatt sie selbst zu erstellen.\n\n1. Um den Übergang zum Abrufen von Daten von der API zu machen, lass uns damit beginnen, das statische Datenobjekt aus script.js zu entfernen.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n\n\t<script src=\"script.js\"></script>\n</body>\n\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const data = {\n  \"characters\": [\n    {\n      \"name\": \"Rick Sanchez\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n    },\n    {\n      \"name\": \"Morty Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\"\n    },\n    {\n      \"name\": \"Summer Smith\",\n      \"status\": \"Alive\",\n      \"species\": \"Human\",\n      \"image\": \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\"\n    }\n  ]\n};\n\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "\nconst charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 128999,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes verwenden wir die `fetch` Funktion, um Charakterdaten von der Rick and Morty API abzurufen. Fetch ist eine eingebaute Funktion, die es uns ermöglicht, Serverdaten zu laden.\n\n1. Unterhalb der Definition der Variable `charactersContainer`, rufe die Funktion `fetch` auf und übergebe ihr die URL `\"https://rickandmortyapi.com/api/character\"`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n\n\t<script src=\"script.js\"></script>\n</body>\n\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const charactersContainer = document.getElementById(\"characters-container\");\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129000,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Sobald du eine Anfrage mit `fetch` gesendet hast, wird eine Antwort zurückgegeben. Da wir ein JSON aus der Antwort erhalten möchten, verwenden wir `.json()`, das den Antwortkörper liest und ein Promise zurückgibt, das mit dem geparsten JSON-Inhalt aufgelöst wird.\n\n1. Füge `.then(response => response.json())` direkt nach der `fetch`-Funktion hinzu.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n\n\t<script src=\"script.js\"></script>\n</body>\n\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": [
                {
                  "title": "What am I supposed to do?",
                  "content": "This is how your code should look:\n\n```JavaScript\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #4",
            "id": 129001,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nachdem die `fetch`-Antwort in das `JSON`-Format konvertiert wurde, besteht der nächste Schritt darin, sich darauf vorzubereiten, diese Daten zu verarbeiten. Wir können mit den geparsten Daten direkt arbeiten, indem wir eine weitere `.then()`-Methode anhängen. Wir werden die Struktur einrichten, um diese Daten im nächsten Schritt zu verarbeiten.\n\n1. Füge `.then(data => { });` direkt nach der letzten Zeile des Codes hinzu, die du hinzugefügt hast.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n\n\t<script src=\"script.js\"></script>\n</body>\n\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n.then(data => {\n\n});\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});"
                }
              ],
              "hints": [
                {
                  "title": "What am I supposed to do?",
                  "content": "This is how your code should look:\n\n```JavaScript\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n.then(data => { });\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #5",
            "id": 129002,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mit den abgerufenen Daten in einem verwendbaren Format, durchlaufe die Ergebnisse. Aber wir müssen das nicht noch einmal programmieren. Wir haben den Code bereits; wir müssen ihn nur verschieben.\n\n1. Verschiebe den Code, in dem du über die `data` iterierst, in die zuletzt hinzugefügte Arrow-Funktion, um die geladenen Daten anzuzeigen.\n2. Nachdem du den Code verschoben hast, ändere `data.characters.forEach` zu `data.results.forEach`, da die vom Server zurückgegebenen Daten `results` anstelle von `characters` verwenden.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n\n<head>\n\t<title>Rick and Morty Character Compass</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n\n\t<h1>Rick and Morty Character Compass</h1>\n\t<div id=\"characters-container\"></div>\n\n\t<script src=\"script.js\"></script>\n</body>\n\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    padding: 20px;\n    text-align: center;\n}\n\n#characters-container {\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    margin: 12px;\n    border-radius: 4px;\n    background-color: white;\n    width: 240px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\nimg.character-image {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-bottom: 15px;\n}\n\n.attribute {\n    font-weight: bold;\n    margin-right: 5px;\n}\n\n.character-detail {\n    margin: 4px;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n.then(data => {\n\n});\n\ndata.characters.forEach(character => {\n  const card = document.createElement(\"div\");\n  card.className = \"card\";\n  card.innerHTML = `\n            <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n            <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n            <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n        `;\n  charactersContainer.appendChild(card);\n});",
                  "solvedContent": "const charactersContainer = document.getElementById(\"characters-container\");\n\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n.then(data => {\n        data.results.forEach(character => {\n            const card = document.createElement(\"div\");\n            card.className = \"card\";\n            card.innerHTML = `\n                <img src=\"${character.image}\" alt=\"${character.name}\" class=\"character-image\">\n                <p class=\"character-detail\"><span class=\"attribute\">Name:</span> ${character.name}</p>\n                <p class=\"character-detail\"><span class=\"attribute\">Status:</span> ${character.status}</p>\n                <p class=\"character-detail\"><span class=\"attribute\">Species:</span> ${character.species}</p>\n            `;\n            charactersContainer.appendChild(card);\n        })\n});"
                }
              ],
              "hints": [
                {
                  "title": "What am I supposed to do?",
                  "content": "This is how your code should look:\n\n```JavaScript\nfetch('https://rickandmortyapi.com/api/character')\n.then(response => response.json())\n.then(data => {\n  data.results.forEach(character => {\n    const card = document.createElement(\"div\");\n    card.innerHTML = `...`\n    charactersContainer.appendChild(card);\n  })\n});\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}