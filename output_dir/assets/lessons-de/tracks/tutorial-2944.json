{
  "tutorial": {
    "id": 2944,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Verwendung des Express Routers",
    "descriptionContent": "Tauche tiefer in den Express-Router ein, indem du verstehst, wie man ihn verwendet, um Parameter und Routen zu erfassen, sowie wie man ihn verwendet, um Routen zu verketten.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15066,
        "title": "Parametererfassung",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #6",
            "id": 132802,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Router hat noch ein paar weitere Tricks auf Lager. Schauen wir uns an, wie er mit Routenparametern umgeht.</p><p><code>router.param</code> wird verwendet, um benannte Parameter aus der URL zu erfassen, sie zu parsen und den resultierenden Wert an das req-Objekt anzuhängen.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router\" class=\"selector-tag\" /><text value=\".param\" class=\"selector-class\" /><text value=\"();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"12\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>.</code> und schließlich <code>param</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132812,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Als erstes Argument geben wir den Namen des Routenparameters an, den wir erfassen möchten. Zum Beispiel ein Routenparameter mit dem Namen <code>\"id\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;id&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"17\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"id\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy",
            "id": 132813,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das zweite Argument in der <code>router.param</code>-Methode ist eine Middleware-Funktion.</p><p>Die Middleware-Funktion nimmt vier Parameter entgegen: <code>req</code>, <code>res</code>, <code>next</code> und den erfassten Wert - in diesem Fall <code>id</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;id&quot;\" class=\"string\" /><text value=\", (req, res, next, id) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"17\" /><option startIndex=\"36\" endIndex=\"38\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"id\"</code>, gefolgt von <code>id</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy",
            "id": 132814,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können den erfassten Parameter in der Middleware verwenden, um Daten abzurufen, Eingaben zu validieren oder die Daten an das Request-Objekt für später anzuhängen.</p><p>Hier werden wir einfach den erfassten Parameter protokollieren.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;id&quot;\" class=\"string\" /><text value=\", (req, res, next, id) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Capturing ID: \" /><text value=\"${id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"75\" endIndex=\"77\" /><option startIndex=\"36\" endIndex=\"38\" /><option startIndex=\"13\" endIndex=\"17\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"id\"</code>, gefolgt von <code>id</code> und schließlich <code>id</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132811,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Natürlich dürfen wir nicht vergessen, <code>next</code> aufzurufen, um die Kontrolle an das nächste Middleware- oder Routen-Handler zu übergeben; andernfalls wird die Anfrage hängen bleiben.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;id&quot;\" class=\"string\" /><text value=\", (req, res, next, id) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Capturing ID: \" /><text value=\"${id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"83\" endIndex=\"87\" /><option startIndex=\"87\" endIndex=\"88\" /><option startIndex=\"88\" endIndex=\"89\" /><option startIndex=\"89\" endIndex=\"90\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>next</code>, gefolgt von <code>(</code> und schließlich <code>)</code>, <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132805,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, damit der Router den Routenparameter <code>name</code> erfasst.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"var\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" router = express.Router();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.param(\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next, name\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  req.item = {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"name\" class=\"attr\" /><text value=\": name,\" /><text type=\"break\" /><text value=\"   \" /><text value=\"description\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;This is a description of &quot;\" class=\"string\" /><text value=\" + name\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.get(\" /><text value=\"&quot;/item/:name&quot;\" class=\"string\" /><text value=\", \" /><text value=\"function\" class=\"keyword\" /><text value=\" (\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  res.json(req.item);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"module\" class=\"built_in\" /><text value=\".exports = router;\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"73\" endIndex=\"78\" /><option startIndex=\"66\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>param</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy",
            "id": 132842,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass den Router den Routenparameter <code>name</code> erfassen, sodass Aufrufe von Endpunkten wie <code>\"/greet/:name\"</code> die Middleware auslösen.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\", (req, res, next, name) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Capturing name: \" /><text value=\"${name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"19\" /><option startIndex=\"38\" endIndex=\"42\" /><option startIndex=\"81\" endIndex=\"85\" /><option correct=\"false\"><content><text value=\"/:name\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"name\"</code>, gefolgt von <code>name</code> und schließlich <code>name</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132847,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Methode ermöglicht es dir, Middleware auszuführen, wenn ein bestimmter Routenparameter übereinstimmt?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Verwendung von router.param(\"parameterName\", middlewareFunction)`</item><item value=\"2\" correct=\"false\">Verwendung von router.use(\"parameterName\", middlewareFunction)`</item></selection><p visible-if=\"wrong\">Verwendung von router.param(\"parameterName\", middlewareFunction)`.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy - Copy",
            "id": 132843,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was fehlt hier?</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\", (req, res, next, name) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Capturing name: \" /><text value=\"${name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>next</code> muss aufgerufen werden, um mit der Anfrage fortzufahren, nachdem die Middleware ihren Code ausgeführt hat</item><item value=\"2\" correct=\"false\">Der Router sollte hier Abfrageparameter anstelle von Routenparametern erfassen</item></selection><p visible-if=\"wrong\"><code>next</code> muss aufgerufen werden, um mit der Anfrage fortzufahren, nachdem die Middleware ihren Code ausgeführt hat.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 132846,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht <code>router.param(\"type\")</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es definiert Middleware, die ausgeführt wird, wenn eine Route mit dem angegebenen Parameter übereinstimmt</item><item value=\"2\" correct=\"false\">Es legt eine statische Route für den Parameter <code>id</code> fest</item></selection><p visible-if=\"wrong\">Es definiert Middleware, die ausgeführt wird, wenn eine Route mit dem angegebenen Parameter übereinstimmt.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy - Copy",
            "id": 132844,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erfasse den Parameter <code>id</code> mit dem Router.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.param(\" /><text value=\"&quot;id&quot;\" class=\"string\" /><text value=\", (req, res, next, id) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Capturing ID: \" /><text value=\"${id}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"app\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>.</code> und schließlich <code>param</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 15067,
        "title": "Routen verketten",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #7",
            "id": 132804,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Router können auch helfen, Redundanz zu reduzieren, indem sie uns erlauben, Endpunkte für mehrere HTTP-Methoden auf einer Route in einer verketteten Weise zu deklarieren.</p><p>Wir machen dies, indem wir die Route zuerst über <code>router.route</code> definieren.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"router.route(\" /><text value=\"&quot;/book&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"6\" endIndex=\"12\" /><option startIndex=\"13\" endIndex=\"20\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>.route</code> und schließlich <code>\"/book\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy",
            "id": 132817,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können dann einen <code>GET</code>-Endpunkt an die Route anhängen.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"router.route(\" /><text value=\"&quot;/book&quot;\" class=\"string\" /><text value=\").get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get a random book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"25\" /><option startIndex=\"26\" endIndex=\"36\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>get</code>, gefolgt von <code>(req, res)</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy",
            "id": 132816,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können weitere Endpunkte hinzufügen, wenn wir möchten. Lass uns einen für <code>POST</code> und einen für <code>PUT</code> hinzufügen.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"router.route(\" /><text value=\"&quot;/book&quot;\" class=\"string\" /><text value=\").get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get a random book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}).post(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Add a book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}).put(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Update the book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"77\" endIndex=\"81\" /><option startIndex=\"126\" endIndex=\"129\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>post</code>, gefolgt von <code>put</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132806,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Natürlich können wir auch komplexere Routen verwenden. Erstelle eine Route, die einen Routenparameter verwendet.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get a book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}).put(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Update a book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}).delete(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Delete a book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"15\" /><option startIndex=\"15\" endIndex=\"19\" /><option startIndex=\"19\" endIndex=\"20\" /><option startIndex=\"20\" endIndex=\"23\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>/</code>, gefolgt von <code>item</code> und schließlich <code>/</code>, <code>:id</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy",
            "id": 132825,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können Middleware-Funktionen innerhalb derselben Routen-Definition integrieren, um Vorverarbeitung oder Validierung zu ermöglichen.</p><p>Wir verwenden <code>all</code>, um die Middleware für alle passenden Routen auszuführen.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".all(\" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;I'm always executed!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"}).get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"30\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>all</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy - Copy",
            "id": 132849,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können die Middleware auch vorher definieren und eine Referenz auf die Funktion als Argument übergeben, anstatt die Callback-Funktion direkt zu verwenden.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" logging = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Incoming request!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".all(logging)\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"115\" endIndex=\"118\" /><option startIndex=\"119\" endIndex=\"126\" /><option startIndex=\"6\" endIndex=\"13\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>logging</code>, gefolgt von <code>all</code> und schließlich <code>logging</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy ",
            "id": 132850,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Und natürlich können wir mehrere Middleware-Funktionen übergeben. Wir können mehrere Parameter oder ein Array verwenden.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" logging = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Incoming request!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" validateId = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" { id } = req.params;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!id) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;ID is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".all([logging, validateId])\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"13\" /><option startIndex=\"261\" endIndex=\"264\" /><option startIndex=\"265\" endIndex=\"286\" /><option startIndex=\"94\" endIndex=\"104\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>logging</code>, gefolgt von <code>validateId</code> und schließlich <code>all</code>, <code>[logging, validateId]</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy - Copy - Copy",
            "id": 132855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zu guter Letzt können wir Middleware auch direkt in der Kette anwenden, wenn wir möchten, dass nur bestimmte Routen sie auslösen.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" logging = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Incoming request!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".get(logging, (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"13\" /><option startIndex=\"119\" endIndex=\"126\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>logging</code>, gefolgt von <code>logging</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 132853,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welchen Vorteil bietet das Verkettung von Methoden mit <code>router.route</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es ermöglicht dir, mehrere HTTP-Methoden für die gleiche Route auf eine saubere und organisierte Weise zu definieren</item><item value=\"2\" correct=\"false\">Es reduziert die Notwendigkeit von Middleware in der Anwendung</item></selection><p visible-if=\"wrong\">Es ermöglicht dir, mehrere HTTP-Methoden für die gleiche Route auf eine saubere und organisierte Weise zu definieren.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy",
            "id": 132818,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge die passenden Endpunkte hinzu.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"router.route(\" /><text value=\"&quot;/book&quot;\" class=\"string\" /><text value=\").get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Get a random book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}).post(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Add a book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}).put(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Update the book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"25\" /><option startIndex=\"77\" endIndex=\"81\" /><option startIndex=\"126\" endIndex=\"129\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>get</code>, gefolgt von <code>post</code> und schließlich <code>put</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 132854,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Kannst du Middleware in Verbindung mit verketteten Routen verwenden, die durch <code>router.route</code> definiert sind?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ja, du kannst Middleware mit <code>all</code> anwenden oder direkt in der Kette</item><item value=\"2\" correct=\"false\">Nein, Middleware kann nicht mit verketteten Routen verwendet werden</item></selection><p visible-if=\"wrong\">Ja, du kannst Middleware mit <code>all</code> anwenden oder direkt in der Kette.</p></body></html>"
          },
          {
            "title": "Lesson #7 - Copy - Copy  - Copy",
            "id": 132852,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Übergebe ein Array von Middleware-Funktionen, das der Router jedes Mal ausführen kann, wenn die <code>\"/item/:id\"</code>-Route übereinstimmt.</p><code version=\"2\" codelang=\"javascript\" name=\"route.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" logging = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Incoming request!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" validateId = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" { id } = req.params;\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!id) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;ID is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.route(\" /><text value=\"&quot;/item/:id&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\".all([logging, validateId])\" /><text type=\"break\" /><text value=\".get(\" /><text value=\"(\" /><text value=\"req, res\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hi!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"265\" endIndex=\"266\" /><option startIndex=\"273\" endIndex=\"274\" /><option startIndex=\"285\" endIndex=\"286\" /><option startIndex=\"261\" endIndex=\"264\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>all</code>, gefolgt von <code>[</code> und schließlich <code>,</code>, <code>]</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 15068,
        "title": "Routen erfassen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "router.use() - Copy",
            "id": 132820,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Routen können nicht nur Parameter erfassen, sondern auch Routen, um dann benutzerdefinierte Middleware auszuführen.</p><p>Um bestimmte Middleware auszuführen, wenn eine definierte Route aufgerufen wird, müssen wir dem Router sagen, dass er sie verwenden soll.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router\" class=\"selector-tag\" /><text value=\".use\" class=\"selector-class\" /><text value=\"();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"10\" /><option correct=\"false\"><content><text value=\"express\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>.</code> und schließlich <code>use</code> aus.</p></body></html>"
          },
          {
            "title": "router.use() - Copy - Copy",
            "id": 132822,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das erste Argument der Methode gibt den Pfad an, den die Middleware oder der Routen-Handler abgleichen soll.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/clothing&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"11\" endIndex=\"22\" /><option startIndex=\"0\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router.use</code>, gefolgt von <code>\"/clothing\"</code> aus.</p></body></html>"
          },
          {
            "title": "router.use() - Copy - Copy - Copy",
            "id": 132823,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Dann übergeben wir die Callback-Funktion, die die Middleware ausführt. Hier loggen wir, wenn eine Route, die mit <code>\"/clothing\"</code> beginnt, aufgerufen wird.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/clothing&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /clothing&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"24\" endIndex=\"40\" /><option startIndex=\"41\" endIndex=\"43\" /><option startIndex=\"47\" endIndex=\"87\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>(req, res, next)</code>, gefolgt von <code>=&gt;</code> und schließlich <code>console.log(\"Router use for /clothing\");</code> aus.</p></body></html>"
          },
          {
            "title": "daf",
            "id": 132824,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Natürlich dürfen wir <code>next</code> nicht vergessen, wenn wir weiter propagieren möchten.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/clothing&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /clothing&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"89\" endIndex=\"93\" /><option startIndex=\"93\" endIndex=\"94\" /><option startIndex=\"94\" endIndex=\"95\" /><option startIndex=\"95\" endIndex=\"96\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>next</code>, gefolgt von <code>(</code> und schließlich <code>)</code>, <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "daf - Copy",
            "id": 132827,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Pfad der Route muss mit der definierten Route beginnen, um sie zu erfassen. <code>http://localhost:3000/clothing/info</code> wird von unserem Router erfasst.</p><p><code>http://localhost:3000/info/clothing</code> wird nicht vom <code>\"/clothing\"</code> Handler erfasst, da es nicht mit <code>\"/clothing\"</code> beginnt.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/clothing&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /clothing&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"11\" endIndex=\"22\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"/clothing\"</code> aus.</p></body></html>"
          },
          {
            "title": "daf - Copy - Copy",
            "id": 132862,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch mehrere Middleware-Funktionen verwenden, wenn wir eine bestimmte Route erfassen.</p><p>Wir können sie entweder als einzelne Werte oder als ein Array übergeben.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" loggingMiddleware = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Incoming request to \" /><text value=\"${req.url}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" authMiddleware = \" /><text value=\"(\" /><text value=\"req, res, next\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" token = req.headers[\" /><text value=\"&quot;authorization&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (token) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Authorized&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  next();\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"403\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Forbidden&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"router.use(\" /><text value=\"&quot;/game&quot;\" class=\"string\" /><text value=\", loggingMiddleware, authMiddleware);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"326\" endIndex=\"343\" /><option startIndex=\"345\" endIndex=\"359\" /><option startIndex=\"115\" endIndex=\"129\" /><option startIndex=\"6\" endIndex=\"23\" /><option startIndex=\"306\" endIndex=\"316\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>loggingMiddleware</code>, gefolgt von <code>authMiddleware</code> und schließlich <code>router.use</code>, <code>loggingMiddleware</code>, <code>authMiddleware</code> aus.</p></body></html>"
          },
          {
            "title": "daf - Copy - Copy",
            "id": 132857,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Stelle sicher, dass der Router die folgende Route erfasst: <code>http://localhost:3000/movie/12</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/movie/:id&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /movie&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"11\" endIndex=\"23\" /><option correct=\"false\"><content><text value=\"&quot;/movies&quot;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"/movie/:id\"</code> aus.</p></body></html>"
          },
          {
            "title": "daf - Copy",
            "id": 132858,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass den Router alle Routen erfassen, die mit <code>\"/book\"</code> beginnen, und führe in diesem Fall benutzerdefiniertes Middleware aus.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/book&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"10\" /><option startIndex=\"11\" endIndex=\"18\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>.</code> und schließlich <code>use</code>, <code>\"/book\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 132860,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie kannst du alle eingehenden Anfragen an Routen, die mit <code>/song</code> beginnen, mit einem Router protokollieren?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Durch die Verwendung von <code>router.use(\"/song\", middlewareFunction)</code></item><item value=\"2\" correct=\"false\">Durch die Verwendung von <code>app.use(\"/song\", middlewareFunction)</code></item></selection><p visible-if=\"wrong\">Durch die Verwendung von <code>router.use(\"/song\", middlewareFunction)</code>.</p></body></html>"
          },
          {
            "title": "daf - Copy - Copy",
            "id": 132859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, damit der Router alle Routen erfasst, die mit <code>\"/book\"</code> beginnen.</p><code version=\"2\" codelang=\"javascript\" name=\"router.js\" visible-if=\"always\"><content><text value=\"router.use(\" /><text value=\"&quot;/book&quot;\" class=\"string\" /><text value=\", (req, res, next) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Router use for /book&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" next();\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"10\" /><option startIndex=\"11\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"app\" /></content></option><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>router</code>, gefolgt von <code>.</code> und schließlich <code>use</code>, <code>\"/book\"</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}