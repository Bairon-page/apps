{
  "tutorial": {
    "id": 2673,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Kommunikation mit einer API",
    "descriptionContent": "Kommunikation mit einer API",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14655,
        "title": "Was ist eine API?",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 129639,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Anwendungsprogrammierschnittstellen, auch bekannt als <code>API</code>, erleichtern die Kommunikation zwischen zwei Programmen.</p><p><code>APIs</code> senden <em>Anfragen</em> von einem Senderprogramm zu einem Empfängerprogramm. Dann senden sie <em>Antworten</em> vom Empfänger zum Senderprogramm.</p></body></html>"
          },
          {
            "title": "Intro: Similar real life example I",
            "id": 129640,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Viele Dinge in unserem täglichen Leben funktionieren wie eine <code>API</code>. Ein Beispiel ist ein Kellner und das Küchenpersonal.<br /></p><p>Ein Kellner, ähnlich wie ein Senderprogramm, schickt eine Bestellung in die Küche. Dann schickt die Küche, als Empfängerprogramm, das Essen als Antwort zurück.</p></body></html>"
          },
          {
            "title": "How to use API?*",
            "id": 129641,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nun zurück zu Programmen. Der folgende Code sendet eine <code>GET</code>-Anfrage an eine <code>API</code>. Kannst du erraten, was eine <code>GET</code>-Anfrage macht?</p><p>Wenn alles funktioniert, sollten wir die Daten zusammen mit einem Statuscode von <code>200</code> erhalten, der uns mitteilt, dass alles in Ordnung ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"GET https://mimo.org/courses HTTP/\" /><text value=\"1.1\" class=\"number\" /></content><output><content><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]}\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Fordere einige Daten an</item><item value=\"2\" correct=\"false\">Erstelle einen neuen Benutzer</item></selection><p visible-if=\"wrong\">Fordere einige Daten an.</p></body></html>"
          },
          {
            "title": "How did the API get the data?",
            "id": 129642,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Genau! Der Code war dafür da, um einige Daten anzufordern. <code>https://mimo.org/courses</code> ist die <code>API</code>, die uns dabei geholfen hat, sie zu bekommen!</p><p>Aber woher hat die <code>API</code> die Informationen bekommen? Denke daran, dass <code>API</code> die Kommunikation zwischen 2 Programmen ermöglicht.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Die <code>API</code> verbindet sich mit einem anderen Programm, um Informationen aus einer Datenbank abzurufen</item><item value=\"2\" correct=\"false\">Die <code>API</code> ist die Datenbank</item></selection><p visible-if=\"wrong\">Die <code>API</code> verbindet sich mit einem anderen Programm, um Informationen aus einer Datenbank abzurufen.</p></body></html>"
          },
          {
            "title": "API controls the request and response",
            "id": 129643,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um mit Datenbanken zu interagieren, müssen wir Code schreiben. Eine <code>API</code> ermöglicht es uns, dies auf eine einfachere Weise zu tun.</p><p>Aber du musst die richtige Methode verwenden, um Aktionen auszuführen. Um Daten abzurufen, verwenden wir <code>GET</code>. Was denkst du, verwenden wir, um Daten einzufügen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>POST</code></item><item value=\"2\" correct=\"false\"><code>DELETE</code></item></selection><p visible-if=\"wrong\">Wähle <code>POST</code> aus.</p></body></html>"
          },
          {
            "title": "Write a request*",
            "id": 129644,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das ist korrekt! Wir können Daten in eine Datenbank einfügen, indem wir <code>POST</code>-Anfragen verwenden.</p><p>Im Gegensatz zu <code>GET</code>-Anfragen müssen wir bei <code>POST</code>-Anfragen einen Body mit den Informationen senden. Vervollständige die folgende Anfrage.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_user&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"44\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"DELETE\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 201 Created\" /><text type=\"break\" /><text value=\"{ &quot;success&quot;: true, &quot;message&quot;: &quot;User created successfully&quot;, &quot;data&quot;: { &quot;id&quot;: 123, &quot;username&quot;: &quot;test_user&quot;, &quot;name&quot;: &quot;tester&quot; } }\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>POST</code>, gefolgt von <code>\"username\": \"test_user\"</code> aus.</p></body></html>"
          },
          {
            "title": "Write a request* - Copy",
            "id": 129681,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir mit Python arbeiten, verwenden wir die <code>requests</code>-Bibliothek, um Anfragen zu erstellen.</p><p>Erstelle eine GET-Anfrage, um die auf Mimo verfügbaren Kurse zu erhalten.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.get(\" /><text value=\"&quot;https://mimo.org/courses&quot;\" class=\"string\" /><text value=\") \" /><text type=\"break\" /><text value=\"data = response.json() \" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"39\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"{ &quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>get</code> aus.</p></body></html>"
          },
          {
            "title": "Write a request* - Copy - Copy",
            "id": 129682,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch POST-Anfragen mit der requests-Bibliothek machen.</p><p>Sende eine POST-Anfrage, um einen neuen Benutzer zu erstellen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://mimo.org/users&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"data = { \" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_user&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\"  \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.post(url, json=data) \" /><text type=\"break\" /><text value=\"print(response.json())\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"88\" /><option startIndex=\"136\" endIndex=\"140\" /><option correct=\"false\"><content><text value=\"delete\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"{ &quot;success&quot;: true, &quot;message&quot;: &quot;User created successfully&quot;, &quot;data&quot;: { &quot;id&quot;: 123, &quot;username&quot;: &quot;test_user&quot;, &quot;name&quot;: &quot;tester&quot; } }\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>\"username\": \"test_user\"</code>, gefolgt von <code>post</code> aus.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 129646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wofür steht <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Application Programming Interface</item><item value=\"2\" correct=\"false\">Unterstützende Programmieroberfläche</item></selection><p visible-if=\"wrong\">Application Programming Interface.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 129647,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Hier ist ein weiteres Beispiel aus dem echten Leben. Du schreibst ein Script, um Daten an einen Webserver zu senden. Welche Rolle hat jede beteiligte Partei korrekt?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Dein Skript ist der Sender, der Endpunkt des Servers ist die <code>API</code>, der Server ist der Empfänger</item><item value=\"2\" correct=\"false\">Dein Skript ist die <code>API</code>, der Endpunkt des Servers ist der Absender, der Server ist der Empfänger</item><item value=\"3\" correct=\"false\">Dein Skript ist der Sender, der Endpunkt des Servers ist der Empfänger, der Server ist die <code>API</code></item></selection><p visible-if=\"wrong\">Dein Skript ist der Sender, der Endpunkt des Servers ist die <code>API</code>, der Server ist der Empfänger.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 129648,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie funktioniert eine <code>API</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es sendet die Anfrage des Absenders an den Empfänger und die Antwort des Empfängers an den Absender</item><item value=\"2\" correct=\"false\">Es verbindet einfach den Sender und den Empfänger und lässt sie ihre Sache machen</item><item value=\"3\" correct=\"false\">Es überwacht nur, um sicherzustellen, dass Sender und Empfänger Nachrichten aneinander senden</item></selection><p visible-if=\"wrong\">Es sendet die Anfrage des Absenders an den Empfänger und die Antwort des Empfängers an den Absender.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 129649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn wir etwas Unerwartetes an die <code>API</code> senden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Die <code>API</code> kann es ignorieren und nur das senden, was vom Body an den Empfänger erwartet wird</item><item value=\"2\" correct=\"false\">Die <code>API</code> muss den unerwarteten Body an den Empfänger senden</item></selection><p visible-if=\"wrong\">Die <code>API</code> kann es ignorieren und nur das senden, was vom Body an den Empfänger erwartet wird.</p></body></html>"
          },
          {
            "title": "Question 5",
            "id": 129650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Benötigen wir eine <code>API</code> für eine Aktion?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nein, wir können verschiedene Aktionen mit unterschiedlichen Methoden ausführen</item><item value=\"2\" correct=\"false\">Ja, eine <code>API</code> kann nur eine Aktion ausführen</item></selection><p visible-if=\"wrong\">Nein, wir können verschiedene Aktionen mit unterschiedlichen Methoden ausführen.</p></body></html>"
          }
        ]
      },
      {
        "id": 14656,
        "title": "Warum eine API verwenden?",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Why API? 1",
            "id": 129653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Jetzt, da du weißt, was eine <code>API</code> ist, warum sollten wir sie verwenden? Ein Grund ist, dass <code>APIs</code> uns helfen können, ein System schneller zu entwickeln.</p></body></html>"
          },
          {
            "title": "Why API? 2",
            "id": 129654,
            "contentType": "interactive",
            "images": [
              {
                "id": "62f8f11e-7605-4590-bb91-6ee2236fc19f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Back-End-Entwickler müssen nicht warten, bis die Front-End-Entwicklung abgeschlossen ist, um ihr Programm zu testen.</p><p>Sie können ihr Programm testen, indem sie einfach Anfragen an die <code>API</code> senden und überprüfen, ob die Antworten korrekt sind.</p><img src=\"62f8f11e-7605-4590-bb91-6ee2236fc19f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "How to use API-DELETE*",
            "id": 129655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir haben <code>GET</code>- und <code>POST</code>-Anfragen durchgenommen, aber es gibt noch <code>DELETE</code>-, <code>PUT</code>- und <code>PATCH</code>-Anfragen, über die wir lernen müssen.</p><p><code>DELETE</code>-Anfragen <em>müssen</em> einen Bezeichner haben, um der <code>API</code> mitzuteilen, was gelöscht werden soll. Wie der Bezeichner <code>6</code> hier.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"DELETE http://mimo.org/api/courses/\" /><text value=\"6\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"6\" /><option startIndex=\"35\" endIndex=\"36\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option><option correct=\"false\"><content><text value=\"POST\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 200 Deleted\" /><text type=\"break\" /><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>DELETE</code>, gefolgt von <code>6</code> aus.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy",
            "id": 129683,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden die <code>delete</code>-Methode, um einen Delete-Endpunkt mit Requests aufzurufen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;http://mimo.org/api/courses/1&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.delete(url)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"75\" /><option startIndex=\"76\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"remove\" /></content></option><option correct=\"false\"><content><text value=\"del\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 200 Deleted\" /><text type=\"break\" /><text value=\"{&quot;courses&quot;: [{ &quot;id&quot;: 1, &quot;title&quot;: &quot;Python&quot; }, { &quot;id&quot;: 2, &quot;title&quot;: &quot;HTML&quot; }, ...]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>requests</code>, gefolgt von <code>delete</code> aus.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 1",
            "id": 129656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code>-Anfragen sind ähnlich wie <code>POST</code>-Anfragen, aber sie werden verwendet, um ein zuvor erstelltes Objekt zu <strong>ersetzen</strong>.</p><p>Da <code>PUT</code>-Anfragen verwendet werden, um bestehende Objekte zu ersetzen, benötigen sie eine Identifikation, um zu wissen, welches Objekt ersetzt werden soll.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"27\" endIndex=\"28\" /><option correct=\"false\"><content><text value=\"DELETE\" /></content></option><option correct=\"false\"><content><text value=\"POST\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;,\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;tester&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>PUT</code>, gefolgt von <code>1</code> aus.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 2",
            "id": 129657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn eine ungültige Identifikation oder keine Identifikation in einer <code>PUT</code>-Anfrage bereitgestellt wird, wird ein neues Objekt erstellt.</p><p>Der Statuscode der Antwort wird <code>201</code> für ein erstelltes Objekt und <code>204</code> für ein ersetztes Objekt sein. Code eine <code>PUT</code>-Anfrage ohne Identifikation.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;tester&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"26\" /></options></interaction></interactions><output><content><text value=\"HTTP/1.1 201 Created\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;,\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;tester&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>/users</code> aus.</p></body></html>"
          },
          {
            "title": "How to use API-PUT 3",
            "id": 129658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bei der Verwendung einer <code>PUT</code>-Anfrage werden alle vorhandenen Daten entfernt und die Daten basierend auf dem Inhalt der Anfrage eingefügt.</p><p>Vervollständige die <code>PUT</code>-Anfrage <strong>ohne</strong> das <code>name</code>-Feld. Der Benutzer mit <code>1</code> als <code>id</code> wird keinen Wert mehr für <code>name</code> haben, es wird leer.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;test_User&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\",\" /></content></option><option correct=\"false\"><content><text value=\"&quot;name&quot;: &quot;test&quot;\" /></content></option><option startIndex=\"42\" endIndex=\"65\" /></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;test_User&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>PUT</code>, gefolgt von <code>\"username\": \"test_User\"</code> aus.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy - Copy",
            "id": 129684,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden die <code>put</code>-Methode, um einen Put-Endpunkt mit Requests aufzurufen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"'http://blog.com/api/posts/1'\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"data = {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"'username'\" class=\"string\" /><text value=\": \" /><text value=\"'New name'\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\"    \" /><text value=\"'userId'\" class=\"string\" /><text value=\": \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.put(url, json=data)\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"130\" endIndex=\"133\" /><option correct=\"false\"><content><text value=\"patch\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Replaced\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;New name&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>put</code> aus.</p></body></html>"
          },
          {
            "title": "How to use API-PATCH",
            "id": 129659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PATCH</code>-Anfragen werden verwendet, um einige Felder eines Objekts zu aktualisieren, daher ist eine Identifizierung erforderlich, um zu bestimmen, welches Objekt aktualisiert werden soll.</p><p>Werte aller nicht erwähnten Felder bleiben unverändert. Verwende <code>1</code> als Identifikation für die untenstehende Anfrage.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PATCH https://mimo.org/users/\" /><text value=\"1\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Barry&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"29\" endIndex=\"30\" /><option correct=\"false\"><content><text value=\"PUT\" /></content></option><option correct=\"false\"><content><text value=\"DELETE\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;name&quot;: &quot;Barry&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>PATCH</code>, gefolgt von <code>1</code> aus.</p></body></html>"
          },
          {
            "title": "How to use API-PATCH 2",
            "id": 129660,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Versuche nun, den <code>username</code> für den Benutzer mit der <code>id</code>, die <code>4</code> entspricht, in <code>the_bat</code> zu ändern.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"PATCH https://mimo.org/users/\" /><text value=\"4\" class=\"number\" /><text value=\" HTTP/\" /><text value=\"1.1\" class=\"number\" /><text value=\" \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;the_bat&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"30\" /><option startIndex=\"47\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"59\" endIndex=\"68\" /><option correct=\"false\"><content><text value=\"1\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;the_bat&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>4</code>, gefolgt von <code>\"username\"</code> und schließlich <code>:</code>, <code>\"the_bat\"</code> aus.</p></body></html>"
          },
          {
            "title": "Example 1 - Copy - Copy - Copy",
            "id": 129685,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden die <code>patch</code>-Methode, um einen Patch-Endpunkt mit Requests aufzurufen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;http://example.com/api/tasks/123&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"data = {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;completed&quot;\" class=\"string\" /><text value=\": \" /><text value=\"True\" class=\"literal\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.patch(url, json=data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"113\" endIndex=\"118\" /><option correct=\"false\"><content><text value=\"put\" /></content></option></options></interaction></interactions><output><content><text value=\"HTTP/1.1 204 Updated\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;completed&quot;: true\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>patch</code> aus.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 129661,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Worauf müssen wir achten, wenn wir in einer Python-Webanwendung Ressourcen mit Methoden wie <code>POST</code>, <code>PUT</code> oder <code>PATCH</code> erstellen oder aktualisieren?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Datenvalidierung</item><item value=\"2\" correct=\"false\">Zugangsgebühren</item></selection><p visible-if=\"wrong\">Wähle Datenvalidierung aus.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 129662,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir nur ein Attribut eines Dictionaries ändern wollen, welche Funktion sollten wir verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>requests.patch()</code></item><item value=\"2\" correct=\"false\"><code>requests.replace()</code></item><item value=\"3\" correct=\"false\"><code>requests.remove()</code></item></selection><p visible-if=\"wrong\">Wähle <code>requests.patch()</code> aus.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 129663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie sollten wir ein Objekt ersetzen, das wir bereits erstellt haben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Eine <code>PUT</code>-Anfrage stellen</item><item value=\"2\" correct=\"false\">Einen <code>DELETE</code>-Request senden, um das Objekt zu löschen, und dann einen <code>POST</code>-Request senden</item></selection><p visible-if=\"wrong\">Eine <code>PUT</code>-Anfrage stellen.</p></body></html>"
          },
          {
            "title": "Question 6",
            "id": 129666,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn wir keine Identifikation angeben, wenn wir eine <code>PUT</code>-Anfrage stellen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nichts wird ersetzt, ein neues Objekt wird erstellt</item><item value=\"2\" correct=\"false\">Alle Objekte werden ersetzt</item><item value=\"3\" correct=\"false\">Nichts passiert</item></selection><p visible-if=\"wrong\">Nichts wird ersetzt, ein neues Objekt wird erstellt.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 129667,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schreibe den Python-Code, um eine <code>DELETE</code>-Anfrage an <code>https://mimo.org/lessons</code> zu senden, um die Lektion mit der Identifikation <code>1001</code> zu entfernen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests\" /><text type=\"break\" /><text type=\"break\" /><text value=\"response = requests.delete(\" /><text value=\"&quot;https://mimo.org/lessons/1001&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"43\" /><option startIndex=\"44\" endIndex=\"75\" /><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions><output><content><text value=\"200\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>delete</code>, gefolgt von <code>\"https://mimo.org/lessons/1001\"</code> aus.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 129668,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schreibe den Code, um eine <code>PUT</code>-Anfrage mit Python an <code>https://mimo.org/users</code> zu senden, um den Benutzer mit der Identifikation <code>17</code> zu ersetzen.</p><p>Der Name des Benutzers sollte in <code>Bob</code> geändert werden und der Benutzername sollte in <code>bobbyman</code> geändert werden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" requests \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"url = \" /><text value=\"&quot;https://mimo.org/users/17&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"data = { \" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;bobbyman&quot;\" class=\"string\" /><text value=\", \" /><text type=\"break\" /><text value=\"    \" /><text value=\"&quot;name&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Bob&quot;\" class=\"string\" /><text value=\" \" /><text type=\"break\" /><text value=\"} \" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"response = requests.put(url, json=data) \" /><text type=\"break\" /><text value=\"print(response.status_code)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"140\" /><option correct=\"false\"><content><text value=\"post\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option><option correct=\"false\"><content><text value=\"delete\" /></content></option></options></interaction></interactions><output><content><text value=\"204\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>put</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}