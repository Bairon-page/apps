{
  "tutorial": {
    "id": 2110,
    "version": 14,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Request- und Response-Objekte",
    "descriptionContent": "Lerne die Grundlagen von Express JS",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 13544,
        "title": "Das Request-Objekt",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "app.get()",
            "id": 121523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die <code>get</code>-Methode von Express definiert eine spezifische Route, die eingehende <code>GET</code>-Anfragen mit einem angegebenen Pfad abgleicht und eine Callback-Funktion auslöst.</p><p>Wir können Endpunkte für alle HTTP-Anfragen erstellen. Beginnen wir mit <code>/</code>, dem sogenannten Root-Endpunkt.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"79\" endIndex=\"82\" /><option startIndex=\"83\" endIndex=\"86\" /><option startIndex=\"87\" endIndex=\"90\" /></options></interaction></interactions><output><content><text value=\"The server is listening on port 3000\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>app</code>, gefolgt von <code>get</code> und schließlich <code>\"/\"</code> aus.</p></body></html>"
          },
          {
            "title": "Req and Res",
            "id": 122150,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Callback-Funktion akzeptiert zwei Argumente: ein <strong>request object</strong> und ein <strong>response object</strong>. Diese werden oft als <code>req</code> und <code>res</code> geschrieben.</p><p>Alle Endpunkte erfordern einen Pfad und verwenden die <code>req</code> und <code>res</code> Objekte als Parameter in ihrer Callback-Funktion.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(req);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"93\" endIndex=\"96\" /><option startIndex=\"98\" endIndex=\"101\" /><option correct=\"false\"><content><text value=\"route\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\"  method: &quot;GET&quot;,\" /><text type=\"break\" /><text value=\"  url: &quot;/&quot;,\" /><text type=\"break\" /><text value=\"  headers: {\" /><text type=\"break\" /><text value=\"    host: &quot;localhost:3000&quot;,\" /><text type=\"break\" /><text value=\"    ...\" /><text type=\"break\" /><text value=\"  },\" /><text type=\"break\" /><text value=\"  ...\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>res</code> aus.</p></body></html>"
          },
          {
            "title": " req object/req.method",
            "id": 121782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das <code>req</code>-Objekt hat Eigenschaften mit nützlichen Informationen, die verwendet werden können, um Anfragen zu verwalten und darauf zu reagieren.</p><p>Die Eigenschaft <code>req.method</code> enthält zum Beispiel Informationen über den Typ der gesendeten HTTP-Anfrage.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"142\" endIndex=\"145\" /><option startIndex=\"145\" endIndex=\"146\" /><option startIndex=\"146\" endIndex=\"152\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.</code> und schließlich <code>method</code> aus.</p></body></html>"
          },
          {
            "title": " req.hostname",
            "id": 121780,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der <strong>Hostname</strong> identifiziert das Gerät oder den Server, der die Anfrage stellt. Dies kann nützlich sein, um zu entscheiden, ob eine Anfrage genehmigt oder abgelehnt wird.</p><p>Lass uns auf den <code>hostname</code> zugreifen, um das Konsolenprotokoll zu vervollständigen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Hostname: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"183\" endIndex=\"186\" /><option startIndex=\"186\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"195\" /><option correct=\"false\"><content><text value=\"path\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Hostname: localhost:3000\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.</code> und schließlich <code>hostname</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132290,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das Entpacken der Methode und des Hostnamens der Anfrage ist meistens von begrenztem Nutzen. Allerdings kann die Anfrage nützlichere Inhalte enthalten.</p></body></html>"
          },
          {
            "title": " req.params.name - Copy",
            "id": 132291,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Parameterwerte können in einer Vielzahl von Situationen nützlich sein, da sie es ermöglichen, dass die Antwort dynamischer auf die Anfrage reagiert.</p><p>Wir können auf einen Parameterwert aus einer Route mit Parametern wie <code>/flag/:type</code> mit <code>req.params.type</code> zugreifen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu/:type&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Menu endpoint called&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Type parameter: \" /><text value=\"${req.params.type}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"188\" endIndex=\"191\" /><option startIndex=\"191\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"198\" /><option startIndex=\"198\" endIndex=\"199\" /><option startIndex=\"199\" endIndex=\"203\" /><option correct=\"false\"><content><text value=\"state\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Menu endpoint called\" /><text type=\"break\" /><text value=\"Type parameter: breakfast\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.</code> und schließlich <code>params</code>, <code>.</code>, <code>type</code> aus.</p></body></html>"
          },
          {
            "title": " req.params.name",
            "id": 121783,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können Parameter in einer Route angeben, indem wir Platzhalter mit einem vorangestellten Doppelpunkt im Routenpfad hinzufügen, wie <code>/:type</code>.</p><p>Wenn wir eine Route mit einem Parameter wie <code>/menu/dinner</code> aufrufen, erfasst das <code>:type</code> in <code>/menu/:type</code> den Wert <code>\"dinner\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu/:type&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Menu endpoint called&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Type parameter: \" /><text value=\"${req.params.type}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"94\" endIndex=\"99\" /><option correct=\"false\"><content><text value=\"type\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Menu endpoint called\" /><text type=\"break\" /><text value=\"Type parameter: dinner\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:type</code> aus.</p></body></html>"
          },
          {
            "title": "Question: app.get()",
            "id": 121527,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was erhält die Callback-Funktion von <code>app.get</code> als Argumente?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Request- und ein Response-Objekt</item><item value=\"2\" correct=\"false\">Die Remote-IP-Adresse der Anfrage</item></selection><p visible-if=\"wrong\">Ein Request- und ein Response-Objekt.</p></body></html>"
          },
          {
            "title": "Question: req.hostname",
            "id": 121784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was enthält das <code>req.hostname</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es enthält den Hostnamen des anfragenden Geräts oder Servers</item><item value=\"2\" correct=\"false\">Es enthält den Hostnamen der Website</item></selection><p visible-if=\"wrong\">Es enthält den Hostnamen des anfragenden Geräts oder Servers.</p></body></html>"
          },
          {
            "title": "Question: req.params.name",
            "id": 121790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir auf <code>/user/Tabatha</code> zugreifen, was enthält <code>req.params.name</code>?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/user/:name&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Name parameter: \" /><text value=\"${req.params.name}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name parameter: Tabatha\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Tabatha</code></item><item value=\"2\" correct=\"false\"><code>user</code></item></selection><p visible-if=\"wrong\">Wähle <code>Tabatha</code> aus.</p></body></html>"
          },
          {
            "title": "Example: app.get()",
            "id": 121530,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, um eingehende Anfragen auf der Root-Route zu akzeptieren.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"88\" endIndex=\"89\" /><option correct=\"false\"><content><text value=\"root\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>/</code> aus.</p></body></html>"
          },
          {
            "title": "Example: req.method",
            "id": 121789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, damit die HTTP-Anfrage <code>method</code> in der Konsole angezeigt wird.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"142\" endIndex=\"152\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Gib <code>req.method</code> ein.</p></body></html>"
          },
          {
            "title": "Example: req.hostname",
            "id": 121787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zeige den Hostnamen des anfragenden Servers in der Konsole an.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Hostname: \" /><text value=\"${req.hostname}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (req.hostname === \" /><text value=\"'localhost'\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Request Accepted'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"'Request Denied'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"183\" endIndex=\"186\" /><option startIndex=\"186\" endIndex=\"187\" /><option startIndex=\"187\" endIndex=\"195\" /><option correct=\"false\"><content><text value=\"host\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Hostname: localhost\" /><text type=\"break\" /><text value=\"Request Accepted\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.</code> und schließlich <code>hostname</code> aus.</p></body></html>"
          },
          {
            "title": "Example: req.params.name",
            "id": 121793,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, damit der dynamische Parameterwert des Namens des Haustiers in der Konsole angezeigt wird.</p><p>Keine Sorge, wenn du noch keine dynamischen Parameter gesehen hast. Wir werden bald darauf eingehen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/pets/:petName&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Thet pet's name is: \" /><text value=\"${req.params.petName}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"217\" endIndex=\"224\" /><option correct=\"false\"><content><text value=\"name\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /><text type=\"break\" /><text value=\"Name parameter: lulo\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>petName</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 13545,
        "title": "Das Response-Objekt",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 121794,
            "contentType": "interactive",
            "images": [
              {
                "id": "32ea475c-ef5f-4e9e-8bdd-674ad98fd220"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ähnlich wie das request-Objekt bietet das response-Objekt auch Eigenschaften und Methoden, auf die wir zugreifen können.</p><p>Das <code>res</code>-Objekt repräsentiert die HTTP-Antwort, die unsere Express-Anwendung an das Front-End sendet, nachdem sie eine Anfrage erhalten hat.</p><img src=\"32ea475c-ef5f-4e9e-8bdd-674ad98fd220\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "res.send()",
            "id": 121795,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Methoden auf dem <code>res</code>-Objekt ermöglichen es uns, die Serverantwort auf eingehende Anfragen anzupassen.</p><p>Die Methode <code>res.send</code> sendet die HTTP-Antwort zurück an das Front-End. Lass uns einen einfachen Text senden.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Welcome!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"162\" endIndex=\"166\" /><option startIndex=\"167\" endIndex=\"177\" /><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>send</code>, gefolgt von <code>\"Welcome!\"</code> aus.</p></body></html>"
          },
          {
            "title": "The Request and Response Cycle",
            "id": 121524,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Interaktion zwischen dem Frontend und dem Webserver ist ein Zyklus. Eine Anfrage wird gesendet, verarbeitet und schließlich wird eine Antwort zurückgegeben.</p><p>Lass uns den Zyklus abschließen, indem wir die <code>res</code>-Objekt-Methode <code>.send</code> verwenden, um die Antwort an das Frontend zu senden.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Request method: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;This is the response&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"156\" endIndex=\"164\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Gib <code>res.send</code> ein.</p></body></html>"
          },
          {
            "title": "res.status()",
            "id": 121796,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Standardmäßig setzt <code>res.send</code> automatisch den Statuscode auf <code>200 OK</code>, es sei denn, du gibst einen anderen Statuscode mit <code>res.status</code> an.</p><p>Es ist eine gute Praxis, den Statuscode explizit auf <code>200</code> zu setzen, um eine erfolgreiche Anfrage anzuzeigen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Successful Request&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"163\" endIndex=\"166\" /><option startIndex=\"166\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"173\" /><option startIndex=\"174\" endIndex=\"177\" /><option correct=\"false\"><content><text value=\"404\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>status</code>, <code>200</code> aus.</p></body></html>"
          },
          {
            "title": "res.send() - Copy",
            "id": 132293,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können uns auch dafür entscheiden, mit HTML zu antworten.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;&lt;p&gt;Welcome&lt;/p&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"167\" endIndex=\"183\" /><option correct=\"false\"><content><text value=\"&quot;Welcome&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>\"&lt;p&gt;Welcome&lt;/p&gt;\"</code> aus.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy",
            "id": 132294,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>res.send</code> kann vollständig ausgearbeitete HTML-Seiten zurücksenden. Dies ist jedoch nicht sehr üblich.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.send(\" /><text value=\"`\" /><text type=\"break\" /><text value=\"    &lt;html&gt;\" /><text type=\"break\" /><text value=\"      &lt;head&gt;&lt;title&gt;My Page&lt;/title&gt;&lt;/head&gt;\" /><text type=\"break\" /><text value=\"      &lt;body&gt;\" /><text type=\"break\" /><text value=\"        &lt;h1&gt;Welcome to the Homepage!&lt;/h1&gt;\" /><text type=\"break\" /><text value=\"        &lt;p&gt;This is a working HTML page.&lt;/p&gt;\" /><text type=\"break\" /><text value=\"      &lt;/body&gt;\" /><text type=\"break\" /><text value=\"    &lt;/html&gt;\" /><text type=\"break\" /><text value=\"  `\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"160\" endIndex=\"163\" /><option startIndex=\"163\" endIndex=\"164\" /><option startIndex=\"164\" endIndex=\"168\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy - Copy",
            "id": 132295,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Meistens möchten wir JSON mit den angeforderten Daten zurücksenden. Das können wir mit <code>res.json</code> tun.</p><p>Wir können ein JavaScript-Objekt erstellen und <code>res.json</code> verwenden, um es automatisch in das richtige JSON-Format zu konvertieren, bevor es an den Client gesendet wird.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"168\" /><option startIndex=\"168\" endIndex=\"172\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>json</code> aus.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy 1",
            "id": 132296,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Natürlich können und sollten wir den Status auch explizit festlegen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"184\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.status(200)</code> und schließlich <code>.json</code> aus.</p></body></html>"
          },
          {
            "title": "Question: res.send()",
            "id": 121801,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht die <code>send</code>-Methode des <code>res</code>-Objekts?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es sendet die HTTP-Antwort an das Frontend</item><item value=\"2\" correct=\"false\">Es sendet die HTTP-Anfrage an den Webserver</item></selection><p visible-if=\"wrong\">Es sendet die HTTP-Antwort an das Frontend.</p></body></html>"
          },
          {
            "title": "Question: res.status()",
            "id": 121800,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Setzt die <code>status</code>-Methode einen spezifischen Statuscode für die HTTP-Antwort?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/about&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;&lt;p&gt;Successful Request&lt;/p&gt;&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ja</item><item value=\"2\" correct=\"false\">Nein</item></selection><p visible-if=\"wrong\">Wähle Ja aus.</p></body></html>"
          },
          {
            "title": "Example: res.send()",
            "id": 121804,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Anforderungs- und Antwortzyklus zwischen dem Frontend und dem Webserver, indem du die HTTP-Antwort mit der richtigen Methode sendest.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;Hello from the server!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"162\" endIndex=\"166\" /></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Gib <code>send</code> ein.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132299,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie kannst du eine HTML-Antwort mit Express senden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.send(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item><item value=\"2\" correct=\"false\"><code>res.html(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item><item value=\"3\" correct=\"false\"><code>res.json(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code></item></selection><p visible-if=\"wrong\">Wähle <code>res.send(\"&lt;h1&gt;Hello&lt;/h1&gt;\");</code> aus.</p></body></html>"
          },
          {
            "title": "Example: res.status()",
            "id": 121803,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Setze <code>200</code> als Statuscode der Antwort.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Request succeeded&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"158\" endIndex=\"161\" /><option startIndex=\"161\" endIndex=\"162\" /><option startIndex=\"162\" endIndex=\"168\" /><option startIndex=\"168\" endIndex=\"169\" /><option startIndex=\"169\" endIndex=\"172\" /><option startIndex=\"172\" endIndex=\"173\" /><option correct=\"false\"><content><text value=\"send\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "res.send() - Copy - Copy 1 - Copy",
            "id": 132298,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Setze den Statuscode und antworte mit JSON.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;express&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.get(\" /><text value=\"&quot;/menu&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`New request made: \" /><text value=\"${req.method}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"  res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").json({\" /><text type=\"break\" /><text value=\"    \" /><text value=\"items\" class=\"attr\" /><text value=\": [\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Pancakes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"5.99\" class=\"number\" /><text value=\" },\" /><text type=\"break\" /><text value=\"      { \" /><text value=\"name\" class=\"attr\" /><text value=\": \" /><text value=\"&quot;Omelette&quot;\" class=\"string\" /><text value=\", \" /><text value=\"price\" class=\"attr\" /><text value=\": \" /><text value=\"6.99\" class=\"number\" /><text value=\" }\" /><text type=\"break\" /><text value=\"    ]\" /><text type=\"break\" /><text value=\"  });\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"164\" endIndex=\"167\" /><option startIndex=\"167\" endIndex=\"179\" /><option startIndex=\"179\" endIndex=\"184\" /><option correct=\"false\"><content><text value=\".send\" /></content></option></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"New request made: GET\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.status(200)</code> und schließlich <code>.json</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 132300,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Methode wird verwendet, um einen benutzerdefinierten Statuscode zusammen mit einer JSON-Antwort in Express zu senden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>res.status().json()</code></item><item value=\"2\" correct=\"false\"><code>res.json()</code></item><item value=\"3\" correct=\"false\"><code>res.status().send()</code></item></selection><p visible-if=\"wrong\">Wähle <code>res.status().json()</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}