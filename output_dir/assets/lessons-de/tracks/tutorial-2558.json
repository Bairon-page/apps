{
  "tutorial": {
    "id": 2558,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "swift",
    "title": "Verstehen von Funktionen",
    "descriptionContent": "Verstehen von Funktionen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14303,
        "title": "Benennung von Funktionen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Clear and descriptive",
            "id": 127172,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Funktionsnamen sollten beschreibend sein und den Hauptzweck der Funktion angeben. Diese Funktion druckt etwas in der Konsole aus.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"display\" class=\"title\" /><text value=\"(word: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(word)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display(word: \" /><text value=\"&quot;Hi&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"display(word: \" /><text value=\"&quot;Bye&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"hide\" /></content></option></options></interaction></interactions><output><content><text value=\"Hi\" /><text type=\"break\" /><text value=\"Bye\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>display</code> aus.</p></body></html>"
          },
          {
            "title": "Prefix",
            "id": 127173,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Funktionen sind Aktionen, daher sollten ihre Namen mindestens ein Verb enthalten. Bei der Verwendung mehrerer Wörter ist das Verb ein <strong>Präfix</strong>, wie <code>sumTotal</code>.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"sumTotal\" class=\"title\" /><text value=\"(price: Double, tax: Double)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(price + tax)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"sumTotal(price: \" /><text value=\"1000\" class=\"number\" /><text value=\", tax: \" /><text value=\"250\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"8\" /><option startIndex=\"8\" endIndex=\"13\" /></options></interaction></interactions><output><content><text value=\"1250\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>sum</code>, gefolgt von <code>Total</code> aus.</p></body></html>"
          },
          {
            "title": "Get",
            "id": 127174,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Funktionen, die hauptsächlich einen Wert zurückgeben, ohne ihn in irgendeiner Weise zu ändern, beginnen mit Verben wie <code>get</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getName\" class=\"title\" /><text value=\"(fullName: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" fullName[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fullName = [\" /><text value=\"&quot;Don&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Juan&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" firstName = getName(fullName: fullName)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"createName\" /></content></option><option correct=\"false\"><content><text value=\"showFirstName\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>getName</code> aus.</p></body></html>"
          },
          {
            "title": "Booleans",
            "id": 127175,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Als Sonderfall beginnen Funktionen, die boolesche Werte zurückgeben, oft mit <code>is</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isFreezing\" class=\"title\" /><text value=\"(temperature: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" temperature &lt; \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" freezing = isFreezing(temperature: -\" /><text value=\"3\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(freezing)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"15\" /><option correct=\"false\"><content><text value=\"getFreezing\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>isFreezing</code> aus.</p></body></html>"
          },
          {
            "title": "Stay consistent",
            "id": 127176,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Funktionsnamen sollten konsistent sein. Wenn eine Funktion <code>calculateDifference</code> genannt wird, sollte eine ähnliche Funktion das gleiche Verbpräfix haben.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"calculateSum\" class=\"title\" /><text value=\"(a: Int, b: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Int\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" a + b\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"calculateDifference\" class=\"title\" /><text value=\"(a: Int, b: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Int\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" a - b\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sum = calculateSum(a: \" /><text value=\"30\" class=\"number\" /><text value=\", b: \" /><text value=\"11\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" difference = calculateDifference(a: \" /><text value=\"30\" class=\"number\" /><text value=\", b:\" /><text value=\"11\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(sum)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(difference)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"getSum\" /></content></option></options></interaction></interactions><output><content><text value=\"41\" /><text type=\"break\" /><text value=\"19\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>calculateSum</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Booleans",
            "id": 127183,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Als Sonderfall beginnen Funktionen, die boolesche Werte zurückgeben, oft mit <code>is</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isEqual\" class=\"title\" /><text value=\"(number: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" number == \" /><text value=\"10\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" number = \" /><text value=\"10\" class=\"number\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(isEqual(number: number))\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"12\" /><option correct=\"false\"><content><text value=\"getFreezing\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>isEqual</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Clear and descriptive",
            "id": 127177,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum geben wir Funktionen beschreibende Namen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">So können wir allein anhand des Namens herausfinden, was sie tun</item><item value=\"2\" correct=\"false\">Also läuft unser Code auf einem Computer</item></selection><p visible-if=\"wrong\">So können wir allein anhand des Namens herausfinden, was sie tun.</p></body></html>"
          },
          {
            "title": "Question: Prefix verb",
            "id": 127178,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was muss ein Funktionsname haben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Verb</item><item value=\"2\" correct=\"false\">Ein Substantiv</item></selection><p visible-if=\"wrong\">Ein Verb.</p></body></html>"
          },
          {
            "title": "Question: Prefix",
            "id": 127179,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wo fügen wir das Verb in einen Funktionsnamen ein?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Am Anfang, als Präfix</item><item value=\"2\" correct=\"false\">Am Ende, als Suffix</item></selection><p visible-if=\"wrong\">Am Anfang, als Präfix.</p></body></html>"
          },
          {
            "title": "Question: Stay consistent",
            "id": 127180,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie benennen wir ähnliche Funktionen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Wir bleiben konsistent und verwenden dasselbe Verb</item><item value=\"2\" correct=\"false\">Wir geben allen Funktionen genau denselben Namen</item></selection><p visible-if=\"wrong\">Wir bleiben konsistent und verwenden dasselbe Verb.</p></body></html>"
          },
          {
            "title": "Example: Clear and descriptive",
            "id": 127181,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code den korrekten Namen und Funktionsaufruf, um den Benutzernamen anzuzeigen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayUserName\" class=\"title\" /><text value=\"(user: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(user)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" user = \" /><text value=\"&quot;Don Quixote&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"displayUserName(user: user)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"20\" /><option startIndex=\"78\" endIndex=\"93\" /><option correct=\"false\"><content><text value=\"createID\" /></content></option><option correct=\"false\"><content><text value=\"getUser\" /></content></option></options></interaction></interactions><output><content><text value=\"Don Quixote\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>displayUserName</code>, gefolgt von <code>displayUserName</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Prefix",
            "id": 127182,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code einen passenden Funktionsnamen für eine Funktion, die einen Wert zurückgibt.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getTotal\" class=\"title\" /><text value=\"(price: Double, tax: Double)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Double\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" price + tax\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"13\" /><option correct=\"false\"><content><text value=\"show.Total\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>getTotal</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Stay consistent",
            "id": 127184,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code das korrekte Verbpräfix für diese Funktion.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayName\" class=\"title\" /><text value=\"(name: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(name[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayAlias\" class=\"title\" /><text value=\"(name: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(name[\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fullName = [\" /><text value=\"&quot;Clark Kent&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Superman&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayName(name: fullName)\" /><text type=\"break\" /><text value=\"displayAlias(name: fullName)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"59\" endIndex=\"66\" /></interactions><output><content><text value=\"Clark Kent\" /><text type=\"break\" /><text value=\"Superman\" /></content></output></code><p visible-if=\"wrong\">Gib <code>display</code> ein.</p></body></html>"
          }
        ]
      },
      {
        "id": 14304,
        "title": "Funktionen als Black Boxes",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 127185,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine Funktion ist wie eine <strong>Black Box</strong>, denn mit einem großartigen Namen können wir eine Funktion aufrufen, ohne den darin definierten Code zu lesen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;J.D. Salinger&quot;\" class=\"string\" /><text type=\"break\" /><text type=\"break\" /><text value=\"displayAuthor(author: author)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"59\" /></options></interaction></interactions><output><content><text value=\"J.D. Salinger\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>displayAuthor(author: author)</code> aus.</p></body></html>"
          },
          {
            "title": "Multiple calls",
            "id": 127186,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zum Beispiel, ohne den Code zu lesen, der innerhalb der Funktionen definiert ist, kannst du erraten, was passiert, wenn dieser Code ausgeführt wird?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"displayTitle()\" /><text type=\"break\" /><text value=\"displayAuthor()\" /><text type=\"break\" /><text value=\"displayYear()\" /></content><output><content><text value=\"Title: Tortilla Flat\" /><text type=\"break\" /><text value=\"Author: John Steinbeck\" /><text type=\"break\" /><text value=\"Published in: 1934\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Titel, ein Autor und ein Datum werden in der Konsole angezeigt</item><item value=\"2\" correct=\"false\"><code>Hello, world</code> wird in der Konsole angezeigt</item></selection><p visible-if=\"wrong\">Ein Titel, ein Autor und ein Datum werden in der Konsole angezeigt.</p></body></html>"
          },
          {
            "title": "Input and Output",
            "id": 127187,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Auch wenn wir uns nicht den Code jeder Funktion in einem Programm merken müssen, müssen wir die richtigen <strong>Eingaben</strong> übergeben, um die richtigen <strong>Ausgaben</strong> zu erhalten.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" title = \" /><text value=\"&quot;Tortilla Flat&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" date = \" /><text value=\"1935\" class=\"number\" /><text type=\"break\" /><text value=\"displayAuthor(author: author)\" /><text type=\"break\" /><text value=\"displayTitle(title: title)\" /><text type=\"break\" /><text value=\"displayYear(date: date)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"124\" endIndex=\"129\" /><option startIndex=\"149\" endIndex=\"153\" /></options></interaction></interactions><output><content><text value=\"Author: John Steinbeck\" /><text type=\"break\" /><text value=\"Title: Tortilla Flat\" /><text type=\"break\" /><text value=\"Published in: 1935\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>title</code>, gefolgt von <code>date</code> aus.</p></body></html>"
          },
          {
            "title": "Strings and numbers",
            "id": 127188,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die richtige Eingabe hängt davon ab, welche Arten von Werten wir an eine Funktion übergeben. Übergib zuerst den String, gefolgt von der Zahl.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayScore\" class=\"title\" /><text value=\"(name: String, points: Int)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;\\(name): \\(points)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"displayScore(name: \" /><text value=\"&quot;John&quot;\" class=\"string\" /><text value=\", points: \" /><text value=\"350\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"99\" endIndex=\"105\" /><option startIndex=\"115\" endIndex=\"118\" /></options></interaction></interactions><output><content><text value=\"John: 350\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>\"John\"</code>, gefolgt von <code>350</code> aus.</p></body></html>"
          },
          {
            "title": "Adding numbers",
            "id": 127189,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Werttypen sind wichtig, wenn Funktionen Operationen ausführen. Zum Beispiel, wenn zwei Zahlen addiert werden, müssen die übergebenen Werte Zahlen sein.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"sumScore\" class=\"title\" /><text value=\"(score: Int, bonus: Int)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(score + bonus)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"sumScore(score: \" /><text value=\"100\" class=\"number\" /><text value=\", bonus: \" /><text value=\"50\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"95\" /><option correct=\"false\"><content><text value=\"&quot;100&quot;\" /></content></option><option correct=\"false\"><content><text value=\"&quot;50&quot;\" /></content></option><option correct=\"false\"><content><text value=\"&quot;100, 50&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"150\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>100, bonus: 50</code> aus.</p></body></html>"
          },
          {
            "title": "Other values",
            "id": 127190,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Ausgabe einer Funktion muss nicht vom gleichen Typ sein wie die Eingabe. Diese Funktion hat eine Zahl als Eingabe und ein Boolean als Ausgabe.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isRentingAge\" class=\"title\" /><text value=\"(age: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" age &gt;= \" /><text value=\"25\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"isRentingAge(age: \" /><text value=\"25\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"77\" endIndex=\"79\" /><option correct=\"false\"><content><text value=\"&quot;25&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>25</code> aus.</p></body></html>"
          },
          {
            "title": "Display vs return",
            "id": 127191,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir über die Ausgabe einer Funktion nachdenken, können wir darüber nachdenken, was sie <strong>anzeigt</strong> oder was sie <strong>zurückgibt</strong>, um an anderer Stelle im Code verwendet zu werden.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isRentingAge\" class=\"title\" /><text value=\"(age: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" age &gt;= \" /><text value=\"25\" class=\"number\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" canRent = isRentingAge(age: \" /><text value=\"25\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(canRent)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"39\" endIndex=\"45\" /><option correct=\"false\"><content><text value=\"()\" /></content></option><option correct=\"false\"><content><text value=\"print()\" /></content></option></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>return</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 127192,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum sind Funktionen wie Black Boxes?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Weil wir sie verwenden können, ohne den Code darin zu kennen</item><item value=\"2\" correct=\"false\">Weil wir nie ihre Eingabe oder Ausgabe kennen</item></selection><p visible-if=\"wrong\">Weil wir sie verwenden können, ohne den Code darin zu kennen.</p></body></html>"
          },
          {
            "title": "Question: Multiple calls",
            "id": 127193,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was zeigt dieser Code in der Konsole an?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"displayCurrentDate()\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es zeigt das aktuelle Datum an</item><item value=\"2\" correct=\"false\">Es zeigt das aktuelle Jahr an</item></selection><p visible-if=\"wrong\">Es zeigt das aktuelle Datum an.</p></body></html>"
          },
          {
            "title": "Question: Input for conditionals",
            "id": 127194,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie entscheiden wir über die Eingabe einer Funktion?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Basierend auf der Ausgabe, die wir wollen</item><item value=\"2\" correct=\"false\">Basierend darauf, wie viele Werte wir zur Verfügung haben</item></selection><p visible-if=\"wrong\">Basierend auf der Ausgabe, die wir wollen.</p></body></html>"
          },
          {
            "title": "Question: Strings and numbers",
            "id": 127195,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn wir einer Funktion den falschen Wertetyp übergeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Das Programm wird nicht kompiliert</item><item value=\"2\" correct=\"false\">Es spielt keine Rolle, die Funktion funktioniert trotzdem</item></selection><p visible-if=\"wrong\">Das Programm wird nicht kompiliert.</p></body></html>"
          },
          {
            "title": "Question: Other values",
            "id": 127197,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn der Eingabetyp einer Funktion ein anderer ist als der Ausgabetyp?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isSameWord\" class=\"title\" /><text value=\"(word: String)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Bool\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" word == \" /><text value=\"&quot;bombastic&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isBombastic = isSameWord(word: \" /><text value=\"&quot;bombastic&quot;\" class=\"string\" /><text value=\")\" /></content><output><content><text value=\"true\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Die Funktion funktioniert, der Input kann ein anderer Typ sein als der Output</item><item value=\"2\" correct=\"false\">Es wird nicht funktionieren, Eingabe und Ausgabe müssen vom gleichen Typ sein</item></selection><p visible-if=\"wrong\">Die Funktion funktioniert, der Input kann ein anderer Typ sein als der Output.</p></body></html>"
          },
          {
            "title": "Question: Display vs return",
            "id": 127198,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche dieser Optionen kann als Ausgabe betrachtet werden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Was eine Funktion zurückgibt</item><item value=\"2\" correct=\"false\">Die Operationen, die eine Funktion ausführt</item></selection><p visible-if=\"wrong\">Was eine Funktion zurückgibt.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 127199,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code den richtigen Funktionsnamen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;J.D. Salinger&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"displayAuthor(name: author)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"display()\" /></content></option></options></interaction></interactions><output><content><text value=\"J.D Salinger\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>displayAuthor</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Input and Output",
            "id": 127200,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib die richtige <strong>Eingabe</strong> ein, um die richtige <strong>Ausgabe</strong> zu erhalten.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" author = \" /><text value=\"&quot;John Steinbeck&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" title = \" /><text value=\"&quot;East of Eden&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"displayFirstName(fullName: author)\" /><text type=\"break\" /><text value=\"displayLastName(fullName: author)\" /><text type=\"break\" /><text value=\"displayTitle(title: title)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"84\" endIndex=\"90\" /><option startIndex=\"118\" endIndex=\"124\" /><option startIndex=\"146\" endIndex=\"151\" /></options></interaction></interactions><output><content><text value=\"First name: John\" /><text type=\"break\" /><text value=\"Last name: Steinbeck\" /><text type=\"break\" /><text value=\"Title: East of Eden\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>author</code>, gefolgt von <code>author</code> und schließlich <code>title</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Strings and numbers",
            "id": 127201,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Kodiere die Parameter so, dass ihre Namen der Reihenfolge der übergebenen Werte entsprechen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayScore\" class=\"title\" /><text value=\"(points: Int, name: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;\\(name): \\(points)&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"displayScore(points: \" /><text value=\"350\" class=\"number\" /><text value=\", name: \" /><text value=\"&quot;John&quot;\" class=\"string\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"24\" /><option startIndex=\"31\" endIndex=\"35\" /></options></interaction></interactions><output><content><text value=\"John: 350\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>points</code>, gefolgt von <code>name</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Adding numbers",
            "id": 127202,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code die richtigen Werte, um eine Zahl als Ausgabe zu erhalten.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"snooze\" class=\"title\" /><text value=\"(time: Int, snooze: Int)\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"Int\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" time + snooze\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" newAlarmTime = snooze(time: \" /><text value=\"1300\" class=\"number\" /><text value=\", snooze: \" /><text value=\"15\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(newAlarmTime)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"102\" endIndex=\"118\" /><option correct=\"false\"><content><text value=\"&quot;1300&quot;,&quot;15&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"1315\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>1300, snooze: 15</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Other values",
            "id": 127203,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib den booleschen Wert <code>false</code> in der Konsole aus.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"isSameWord\" class=\"title\" /><text value=\"(word: String)\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(word == \" /><text value=\"&quot;dexterous&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"isSameWord(word: \" /><text value=\"&quot;dexter&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"89\" /><option correct=\"false\"><content><text value=\"&quot;dexterous&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>\"dexter\"</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 14305,
        "title": "Funktionen mit Arrays",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 127204,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns über Funktionen mit Arrays als Parameter lernen. Übergebe das <code>students</code>-Array an die <code>displayNames()</code>-Funktion, um zu beginnen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNames(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"90\" endIndex=\"102\" /><option startIndex=\"102\" endIndex=\"109\" /><option startIndex=\"110\" endIndex=\"118\" /><option startIndex=\"118\" endIndex=\"119\" /></options></interaction></interactions><output><content><text value=\"[&quot;Laurel&quot;, &quot;Yanni&quot;]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>displayNames</code>, gefolgt von <code>(names:</code> und schließlich <code>students</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Entire array",
            "id": 127205,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir Arrays an Funktionen übergeben, können wir basierend auf dem Array aus einer Reihe von Ergebnissen wählen. Zum Beispiel können wir das gesamte Array anzeigen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNames(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"50\" /></options></interaction></interactions><output><content><text value=\"&quot;[Laurel, Yanni]&quot;\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>names</code> aus.</p></body></html>"
          },
          {
            "title": "Array length",
            "id": 127206,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir könnten auch die Länge des Arrays anzeigen. In diesem Beispiel mit <code>names.count</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNumberOfNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names.\" /><text value=\"count\" class=\"built_in\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNumberOfNames(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"64\" /><option correct=\"false\"><content><text value=\"length\" /></content></option></options></interaction></interactions><output><content><text value=\"2\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>names</code>, gefolgt von <code>.</code> und schließlich <code>count</code> aus.</p></body></html>"
          },
          {
            "title": "First value",
            "id": 127207,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ein drittes Beispiel ist die Verwendung eines einzelnen Elements des Arrays, zum Beispiel durch das Codieren von <code>names[0]</code>.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayFirstName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayFirstName(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"48\" endIndex=\"53\" /><option startIndex=\"53\" endIndex=\"54\" /><option startIndex=\"54\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /></options></interaction></interactions><output><content><text value=\"Laurel\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>names</code>, gefolgt von <code>[</code> und schließlich <code>0</code>, <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "Return value",
            "id": 127208,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Oftmals übergeben wir ein Array an eine Funktion, weil wir einen Teil davon <strong>zurückgeben</strong> möchten.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getFirstName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" names[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" firstMember = getFirstName(names: students)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"55\" /><option startIndex=\"56\" endIndex=\"64\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>names[0]</code> aus.</p></body></html>"
          },
          {
            "title": "Return processed value",
            "id": 127209,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können mehrere Elemente aus einem Array verwenden, um eine bestimmte Art von Ausgabe zu erhalten, die wir für den nächsten Schritt in unserem Code benötigen.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getListOfNames\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" names[\" /><text value=\"0\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot;, &quot;\" class=\"string\" /><text value=\" + names[\" /><text value=\"1\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" students = [\" /><text value=\"&quot;Vera&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rubin&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" list = getListOfNames(names: students)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(list)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"57\" /><option startIndex=\"58\" endIndex=\"84\" /></options></interaction></interactions><output><content><text value=\"Vera, Rubin\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>names[0] + \", \" + names[1]</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Entire array",
            "id": 127210,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was zeigt dieser Code in der Konsole an?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayGroup\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Daniel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jim&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayGroup(names: names)\" /></content><output><content><text value=\"[&quot;Daniel&quot;, &quot;Jim&quot;]\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Das gesamte <code>names</code> Array</item><item value=\"2\" correct=\"false\">Der erste Wert des <code>names</code>-Arrays</item></selection><p visible-if=\"wrong\">Das gesamte <code>names</code> Array.</p></body></html>"
          },
          {
            "title": "Question: Array length",
            "id": 127211,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was zeigt dieser Code in der Konsole an?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayGroupInfo\" class=\"title\" /><text value=\"(array: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(array.\" /><text value=\"count\" class=\"built_in\" /><text value=\")\" /><text type=\"break\" /><text value=\" \" /><text value=\"print\" class=\"built_in\" /><text value=\"(array[\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" group = [\" /><text value=\"&quot;Lorenzo&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayGroupInfo(array: group)\" /></content><output><content><text value=\"2\" /><text type=\"break\" /><text value=\"Yanni\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Die Anzahl der Elemente im Array gefolgt vom Wert <code>Yanni</code></item><item value=\"2\" correct=\"false\">Die Anzahl der Elemente im Array gefolgt vom Wert <code>Lorenzo</code></item></selection><p visible-if=\"wrong\">Die Anzahl der Elemente im Array gefolgt vom Wert <code>Yanni</code>.</p></body></html>"
          },
          {
            "title": "Question: First value",
            "id": 127212,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Ausgabe hat das?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displaySecondMember\" class=\"title\" /><text value=\"(group: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(group[\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" group = [\" /><text value=\"&quot;Laurel&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Yanni&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displaySecondMember(group: group)\" /></content><output><content><text value=\"Yanni\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der zweite Wert des Arrays</item><item value=\"2\" correct=\"false\">Der erste Wert des Arrays</item></selection><p visible-if=\"wrong\">Der zweite Wert des Arrays.</p></body></html>"
          },
          {
            "title": "Question: Return processed value",
            "id": 127213,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was zeigt dieser Code in der Konsole an?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getFullName\" class=\"title\" /><text value=\"(group: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" group[\" /><text value=\"1\" class=\"number\" /><text value=\"] + \" /><text value=\"&quot; &quot;\" class=\"string\" /><text value=\" + group[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" scientist = [\" /><text value=\"&quot;Vera&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Rubin&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" fullname = getFullName(group: scientist)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(fullname)\" /></content><output><content><text value=\"Rubin Vera\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Rubin Vera</code></item><item value=\"2\" correct=\"false\"><code>Vera Rubin</code></item></selection><p visible-if=\"wrong\"><code>Rubin Vera</code>.</p></body></html>"
          },
          {
            "title": "Example: Entire array",
            "id": 127214,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code den Wert, der das gesamte Array anzeigt.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names)\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Ada&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Lovelace&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayName(names: names)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"49\" /><option correct=\"false\"><content><text value=\"names.count\" /></content></option><option correct=\"false\"><content><text value=\"names[0]\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;Ada&quot;, &quot;Lovelace&quot;]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>names</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Array length",
            "id": 127215,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zeige die Anzahl des <code>names</code>-Arrays an.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayNameCount\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(names.\" /><text value=\"count\" class=\"built_in\" /><text value=\")\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Salvador&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Felipe&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jacinto&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Dalí&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;y&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Domenech&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayNameCount(names: names)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"54\" /><option startIndex=\"54\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"60\" /><option correct=\"false\"><content><text value=\"size\" /></content></option><option correct=\"false\"><content><text value=\"[0]\" /></content></option><option correct=\"false\"><content><text value=\"[5]\" /></content></option></options></interaction></interactions><output><content><text value=\"6\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>names</code>, gefolgt von <code>.</code> und schließlich <code>count</code> aus.</p></body></html>"
          },
          {
            "title": "Example: First value",
            "id": 127216,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zeige das erste Array-Element an.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"displayFirstValue\" class=\"title\" /><text value=\"(values: [String])\" class=\"params\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"print\" class=\"built_in\" /><text value=\"(values[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" temperatures = [\" /><text value=\"&quot;60F&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;83F&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"displayFirstValue(values: temperatures)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"51\" endIndex=\"60\" /></interactions><output><content><text value=\"60F\" /></content></output></code><p visible-if=\"wrong\">Gib <code>values[0]</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Return",
            "id": 127217,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib das zweite Element des Arrays zurück.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"func\" class=\"keyword\" /><text value=\" \" /><text value=\"getSecondName\" class=\"title\" /><text value=\"(names: [String])\" class=\"params\" /><text value=\" -&gt; \" /><text value=\"String\" class=\"type\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" names[\" /><text value=\"1\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"&quot;Flossie&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Wong-Staal&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"var\" class=\"keyword\" /><text value=\" secName = getSecondName(names: names)\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(secName)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"50\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"65\" /><option correct=\"false\"><content><text value=\".count\" /></content></option></options></interaction></interactions><output><content><text value=\"Wong-Staal\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>names[1]</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}