{
  "tutorial": {
    "id": 2598,
    "version": 16,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Galerie - Teil 1",
    "descriptionContent": "Bereit, eine Online-Galerie zu erstellen? In diesem Abschnitt legen wir das Fundament und richten eine Leinwand ein, um fesselnde Bilder in einem harmonischen Layout zu präsentieren.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2598-icon-banner.svg",
    "chapters": [
      {
        "id": 14385,
        "title": "Galerie",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Start",
            "id": 128015,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zum **Gallery**-Projekt. Du wirst eine optisch ansprechende Galerie von Bildern erstellen.\n\nAber das ist noch nicht alles! Ein Klick auf das Bild jeder Katze wird eine größere Version des Bildes in einem Modal (einem Pop-up-Fenster) anzeigen. Dies ist ein häufiges Feature auf vielen Websites, insbesondere auf E-Commerce-Plattformen, Nachrichtenseiten und Portfolios.\n\n1. Beginne mit der grundlegenden HTML-Struktur, einschließlich `<!doctype html>`, `html`, `head` und `body` Tag.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Linking",
            "id": 128016,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns einen Titel hinzufügen. Wir müssen auch auf unsere JS- und CSS-Dateien verlinken.\n\n1. Füge einen Titel zur Webseite innerhalb des `head`-Tags hinzu.\n2. Füge einen `title`-Tag mit etwas Text hinzu.\n3. Füge einen Link zur CSS-Datei hinzu, indem du `<link rel=\"stylesheet\" href=\"style.css\">` einfügst.\n4. Füge einen Link zur JS-Datei hinzu, indem du `<script src=\"script.js\"></script>` einfügst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"script.js\"></script>\n  </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Header and container",
            "id": 128017,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jede Webseite profitiert von einem klaren Header, der den Nutzern das Thema der Seite vermittelt. Wir müssen auch einen Container für unsere Bilder erstellen.\n\n1. Füge innerhalb der `<body>`-Tags ein `<h1>`-Tag mit einem Text deiner Wahl hinzu.\n2. Erstelle nach dem `<h1>` ein `div` mit einer Klasse `\"gallery\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Adding an item",
            "id": 128018,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In unserer Galerie werden wir Einträge für jedes Element haben. Wir werden Katzen als Beispiel verwenden, aber du kannst gerne verwenden, was du möchtest. Lass uns damit beginnen, einen Titel und ein Bild für die erste Katze hinzuzufügen.\n\n1. Erstelle innerhalb unseres Containers (dem `div` mit der Klasse `\"gallery\"`) ein `div` mit der Klasse `\"item\"`.\n2. Füge innerhalb des Items ein Bild deiner Wahl hinzu. (Oder verwende `https://mimo.app/i/whispurr.png`.)\n3. Füge unter dem Bild ein `<h2>`-Element hinzu und gib ihm einen Titel. (Oder verwende `Whispurr`, wenn du das Katzenbeispiel verwenden möchtest.)\n4. Wenn du möchtest, kannst du auch einen Absatz für eine Beschreibung des Bildes hinzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n       <img src=\"https://mimo.app/i/whispurr.png\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Image attributes",
            "id": 128019,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns dem Bild-Element mehr Informationen hinzufügen.\n\n1. Füge die Klasse `\"thumbnail\"` zum Bild hinzu, um es in unserem CSS-Code zu referenzieren.\n3. Füge dem Bild ein `alt`-Attribut hinzu, das das Bild beschreibt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n       <img src=\"https://mimo.app/i/whispurr.png\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": [
                {
                  "title": "Why use alt?",
                  "content": "Using the alt attribute for images in HTML is best practice because it:\n1. Improves accessibility by providing a textual description for visually impaired users using screen readers.\n2. Enhances SEO by helping search engines understand the image content.\n3. Ensures usability by displaying the alt text in case the image fails to load.\n\nIn essence, the alt attribute makes web content more inclusive, searchable, and user-friendly."
                }
              ]
            }
          },
          {
            "title": "More items",
            "id": 128020,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns mehr Elemente zur Galerie hinzufügen.\n\nWenn du mit dem Katzenbeispiel fortfahren möchtest, kannst du gerne die folgenden Einträge verwenden:\n- Babaganoosh: `https://mimo.app/i/babaganoosh.png`\n- Nacho: `https://mimo.app/i/nacho.png`\n\n1. Füge so viele Elemente hinzu, wie du möchtest.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Styling the body",
            "id": 128021,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Zeit, etwas CSS hinzuzufügen.\n\n1. Lass uns die `font-family` des `body` und all seiner Kinder auf `Arial, sans-serif` setzen.\n2. Setze `padding` und `margin` für den `body` auf `0`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0px;\n    padding: 0;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Styling the header",
            "id": 128022,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Headers sind wichtig, um Aufmerksamkeit zu erregen. Lass uns unsere stylen.\n\n1. Füge Styling hinzu, um das `h1`-Element mit `text-align: center` zu zentrieren.\n2. Sorge für etwas Abstand darunter. `40px` klingt gut, aber du entscheidest.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Flexbox",
            "id": 128023,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Flexbox ist ein modernes Layout-Modell, das es ermöglicht, Elemente innerhalb eines Containers dynamisch anzuordnen. Lass uns es für unsere Galerie verwenden.\n\n1. Style die `.gallery`-Klasse, um ihre Kinder in einem Flex-Layout anzuzeigen, indem du `display: flex;` verwendest.\n2. Zentriere die Elemente horizontal, indem du `justify-content` verwendest.\n3. Erlaube den Elementen, in die nächste Zeile zu wechseln, wenn nicht genug Platz vorhanden ist, indem du `flex-wrap` auf `wrap` setzt.\n4. Definiere schließlich einen `gap` von `20px`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}\n\n.gallery {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Animation",
            "id": 128024,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bilder ziehen die Aufmerksamkeit auf sich! Lass uns ihnen etwas Stil verleihen und unsere Thumbnails beim Hovern leicht vergrößern.\n\n1. Erstelle eine `.thumbnail`-Regel und setze `transition: transform 0.3s;`, um CSS mitzuteilen, dass Änderungen animiert werden sollen.\n2. Erstelle eine `.thumbnail:hover`-Regel und füge eine Transform-Eigenschaft hinzu, indem du `transform: scale(1.1);` codierst.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <title>Modal Gallery</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n  </head>\n  <body>\n    <h1>Welcome to my gallery!</h1>\n    <div class=\"gallery\">\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/whispurr.png\" alt=\"Whispurr\" class=\"thumbnail\">\n        <h2>Whispurr</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/babaganoosh.png\" alt=\"Babaganoosh\" class=\"thumbnail\">\n        <h2>Babaganoosh</h2>\n      </div>\n      <div class=\"item\">\n        <img src=\"https://mimo.app/i/nacho.png\" alt=\"Nacho\" class=\"thumbnail\">\n        <h2>Nacho</h2>\n      </div>\n    </div>\n  </body>\n  <script src=\"script.js\"></script>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}\n\n.gallery {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n}",
                  "solvedContent": "body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    text-align: center;\n    margin-bottom: 30px;\n}\n\n.gallery {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.thumbnail {\n    transition: transform 0.3s;\n}\n\n.thumbnail:hover {\n    transform: scale(1.1);\n}"
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": ""
                }
              ],
              "hints": [
                {
                  "title": "What am I supposed to do?",
                  "content": "You want to add two rules that both target the `.thumbnail` class. The first one sets the `transition` and the second the `transform` attribute for the `hover` state.\n\nThis is how your code should look like:\n\n```CSS\n.thumbnail {\n    transition: transform 0.3s;\n}\n.thumbnail:hover {\n    transform: scale(1.1);\n}\n```"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}