{
  "tutorial": {
    "id": 1316,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Entscheiden mit Funktionen",
    "descriptionContent": "mit Funktionen entscheiden",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9803,
        "title": "Verschachtelte Bedingungen in Funktionen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 87211,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was wäre, wenn wir wollten, dass unsere Funktion eine Entscheidung trifft, wie zum Beispiel die Versandkosten hinzuzufügen oder nicht, basierend darauf, ob der Warenkorb einen bestimmten Wert hat oder nicht?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"add_shipping(\" /><text value=\"45\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"add_shipping(\" /><text value=\"200\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"Total: 55\" /><text type=\"break\" /><text value=\"Total: 200\" /></content></output></code></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 87221,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns einen Blick darauf werfen, wie man Bedingungen mit Funktionen wiederverwenden kann.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"add_shipping(\" /><text value=\"45\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"add_shipping(\" /><text value=\"200\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"Total: 55\" /><text type=\"break\" /><text value=\"Total: 200\" /></content></output></code></body></html>"
          },
          {
            "title": "Nesting",
            "id": 87212,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn du eine Bedingung innerhalb des Codeblocks einer Funktion wie <code>add_shipping</code> codierst, sagen wir, dass wir sie innerhalb der Funktion <strong>verschachteln</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"16\" /><option startIndex=\"26\" endIndex=\"28\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>add_shipping</code>, gefolgt von <code>if</code> aus.</p></body></html>"
          },
          {
            "title": "The function's code block",
            "id": 87213,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine Bedingung wie <code>if cart &lt; 100:</code> zu verschachteln, rücken wir sie zwei Leerzeichen vom Anfang der Funktion ein.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"26\" endIndex=\"28\" /><option startIndex=\"29\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>if</code>, gefolgt von <code>cart &lt; 100</code> und schließlich <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "The conditional's code block",
            "id": 87214,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Als nächstes rücken wir den Codeblock der Bedingung mit zwei Leerzeichen ein, wie hier mit <code>print()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"50\" /><option startIndex=\"50\" endIndex=\"51\" /><option startIndex=\"51\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>(</code> und schließlich <code>f\"Total: {cart + 10}\"</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Parameter",
            "id": 87215,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine Bedingung flexibler zu gestalten, können wir den Parameter der Funktion, wie <code>cart</code>, als Teil der Bedingung verwenden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"add_shipping(\" /><text value=\"80\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"21\" /><option startIndex=\"29\" endIndex=\"33\" /></options></interaction></interactions><output><content><text value=\"Total: 90\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>cart</code>, gefolgt von <code>cart</code> aus.</p></body></html>"
          },
          {
            "title": "The parameter's value",
            "id": 87216,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir den Parameter in der Bedingung verwenden, nutzen wir den Wert, den wir beim Aufrufen der Funktion übergeben, wie hier <code>80</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"add_shipping\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" cart &lt; \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Total: \" /><text value=\"{cart + \" /><text value=\"10\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"add_shipping(\" /><text value=\"80\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"87\" endIndex=\"89\" /></interactions><output><content><text value=\"Total: 90\" /></content></output></code><p visible-if=\"wrong\">Gib <code>80</code> ein.</p></body></html>"
          },
          {
            "title": "Question: Nesting",
            "id": 87222,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was bedeutet es, eine Bedingung innerhalb einer Funktion zu verschachteln?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Einrücken der Bedingung, sodass sie Teil des Codeblocks der Funktion ist</item><item value=\"2\" correct=\"false\">Das Schreiben der Bedingung mit derselben Einrückung wie die Funktion</item></selection><p visible-if=\"wrong\">Einrücken der Bedingung, sodass sie Teil des Codeblocks der Funktion ist.</p></body></html>"
          },
          {
            "title": "Question: The function's code block",
            "id": 87223,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie rücken wir die Bedingung ein, um sie im Codeblock der Funktion zu verschachteln?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Zwei Leerzeichen vom Anfang der Funktion entfernt</item><item value=\"2\" correct=\"false\">Wir können es nicht einrücken</item></selection><p visible-if=\"wrong\">Zwei Leerzeichen vom Anfang der Funktion entfernt.</p></body></html>"
          },
          {
            "title": "Question: Parameter",
            "id": 87225,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn wir einen Parameter einer Funktion als Teil der Bedingung verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Unser Code kann eine Entscheidung basierend auf verschiedenen Eingabewerten treffen</item><item value=\"2\" correct=\"false\">Wir können den Parameter der Funktion nicht als Teil der Bedingung verwenden</item></selection><p visible-if=\"wrong\">Unser Code kann eine Entscheidung basierend auf verschiedenen Eingabewerten treffen.</p></body></html>"
          },
          {
            "title": "Question: The parameter's value",
            "id": 87226,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Werte vergleicht die Bedingung der <code>if</code>-Anweisung im folgenden Beispiel?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"can_drive\" class=\"title\" /><text value=\"(age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" age &gt;= \" /><text value=\"18\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Yes they can!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"can_drive(\" /><text value=\"19\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"Yes they can!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es vergleicht <code>19</code> für <code>age</code> mit <code>18</code></item><item value=\"2\" correct=\"false\">Es vergleicht einen zufälligen <code>age</code>-Wert mit <code>18</code></item></selection><p visible-if=\"wrong\">Es vergleicht <code>19</code> für <code>age</code> mit <code>18</code>.</p></body></html>"
          },
          {
            "title": "Example: Nesting",
            "id": 87227,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verschachtle diese if-Anweisung, die überprüft, ob eine Person fahren kann, innerhalb der <code>can_drive()</code>-Funktion.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"can_drive\" class=\"title\" /><text value=\"(age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" age &gt;= \" /><text value=\"18\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Yes they can!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"can_drive(\" /><text value=\"20\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"24\" /><option startIndex=\"25\" endIndex=\"28\" /><option startIndex=\"29\" endIndex=\"31\" /><option startIndex=\"32\" endIndex=\"34\" /><option startIndex=\"34\" endIndex=\"35\" /></options></interaction></interactions><output><content><text value=\"Yes they can!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>if</code>, gefolgt von <code>age</code> und schließlich <code>&gt;=</code>, <code>18</code>, <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Example: The function's code block",
            "id": 87228,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine <code>if</code>-Anweisung, die überprüft, ob <code>level &lt;= 20</code> zwei Leerzeichen vom Anfang der Funktion entfernt ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"has_low_battery\" class=\"title\" /><text value=\"(level)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" level &lt;= \" /><text value=\"20\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Low battery!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"has_low_battery(\" /><text value=\"15\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"30\" endIndex=\"44\" /></interactions><output><content><text value=\"Low battery!\" /></content></output></code><p visible-if=\"wrong\">Gib <code>if level &lt;= 20</code> ein.</p></body></html>"
          },
          {
            "title": "Example: The conditional's code block",
            "id": 87230,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zeige eine Nachricht innerhalb der <code>if</code>-Anweisung an, indem du die <code>print()</code>-Anweisung zwei Leerzeichen davon einrückst.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"has_low_battery\" class=\"title\" /><text value=\"(level)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" level &lt;= \" /><text value=\"20\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Low battery!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"has_low_battery(\" /><text value=\"15\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"50\" endIndex=\"55\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /></options></interaction></interactions><output><content><text value=\"Low battery!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>(</code> und schließlich <code>\"Low battery!\"</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Parameter",
            "id": 87231,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine Bedingung, die <code>&gt;</code> verwendet, um zu überprüfen, ob der Parameter <code>signups</code> mehr als <code>200</code> ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_waiting_list\" class=\"title\" /><text value=\"(signups)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" signups &gt; \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Waiting list: \" /><text value=\"{signups - \" /><text value=\"200\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"get_waiting_list(\" /><text value=\"250\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"33\" endIndex=\"49\" /></interactions><output><content><text value=\"Waiting list: 50\" /></content></output></code><p visible-if=\"wrong\">Gib <code>if signups &gt; 200</code> ein.</p></body></html>"
          },
          {
            "title": "Example: The parameter's value",
            "id": 87232,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die Funktion mit einem Wert auf, sodass der Code der <code>if</code>-Anweisung nicht ausgeführt wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_waiting_list\" class=\"title\" /><text value=\"(signups)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" signups &gt; \" /><text value=\"200\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Waiting list: \" /><text value=\"{signups - \" /><text value=\"200\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"get_waiting_list(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"112\" endIndex=\"115\" /><option correct=\"false\"><content><text value=\"220\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>100</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 9804,
        "title": "Einbindung von elif und else",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Nesting else",
            "id": 87218,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können alle Arten von Bedingungsanweisungen in Funktionen verschachteln, wie diese <code>else</code>-Anweisung.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(operator, x, y)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" operator == \" /><text value=\"&quot;+&quot;\" class=\"string\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(x + y)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;unknown: \" /><text value=\"{operator}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"calculate(\" /><text value=\"&quot;-&quot;\" class=\"string\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"10\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"72\" endIndex=\"76\" /></interactions><output><content><text value=\"unknown: -\" /></content></output></code><p visible-if=\"wrong\">Gib <code>else</code> ein.</p></body></html>"
          },
          {
            "title": "Nesting elif",
            "id": 87219,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch <code>elif</code>-Anweisungen verschachteln, wie diese, die überprüft, ob der <code>operator</code> gleich <code>\"-\"</code> ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"calculate\" class=\"title\" /><text value=\"(operator, x, y)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" operator == \" /><text value=\"&quot;+&quot;\" class=\"string\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(x + y)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"elif\" class=\"keyword\" /><text value=\" operator == \" /><text value=\"&quot;-&quot;\" class=\"string\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(x - y)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;unknown: \" /><text value=\"{operator}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"calculate(\" /><text value=\"&quot;-&quot;\" class=\"string\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"10\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"72\" endIndex=\"76\" /><option startIndex=\"77\" endIndex=\"92\" /><option startIndex=\"92\" endIndex=\"93\" /></options></interaction></interactions><output><content><text value=\"20\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>elif</code>, gefolgt von <code>operator == \"-\"</code> und schließlich <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Skipping conditionals",
            "id": 87220,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Selbst wenn die Bedingung übersprungen wird, wird der restliche Code im Codeblock der Funktion ausgeführt, wie das letzte <code>print()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_progress\" class=\"title\" /><text value=\"(points)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" points &gt; \" /><text value=\"1000\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;New highest score!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Ready for the next level?&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"show_progress(\" /><text value=\"900\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"86\" /><option startIndex=\"86\" endIndex=\"87\" /><option startIndex=\"87\" endIndex=\"114\" /><option startIndex=\"114\" endIndex=\"115\" /></options></interaction></interactions><output><content><text value=\"Ready for the next level?\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>(</code> und schließlich <code>\"Ready for the next level?\"</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Nesting else",
            "id": 87233,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie rücken wir eine else-Anweisung ein, wenn wir sie in eine Funktion verschachteln?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Genauso wie die if-Anweisung, um zwei Leerzeichen</item><item value=\"2\" correct=\"false\">Das gleiche wie die Funktion, ohne Leerzeichen</item></selection><p visible-if=\"wrong\">Genauso wie die if-Anweisung, um zwei Leerzeichen.</p></body></html>"
          },
          {
            "title": "Question: Nesting elif",
            "id": 87234,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Arten von Bedingungen können wir in eine Funktion verschachteln?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>if</code>-, <code>elif</code>- und <code>else</code>-Anweisungen</item><item value=\"2\" correct=\"false\">Nur <code>if</code> und <code>else</code> Anweisungen</item></selection><p visible-if=\"wrong\"><code>if</code>-, <code>elif</code>- und <code>else</code>-Anweisungen.</p></body></html>"
          },
          {
            "title": "Question: Skipping conditionals",
            "id": 87235,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was wird in der Konsole angezeigt?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_status\" class=\"title\" /><text value=\"(inbox)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" inbox &gt; \" /><text value=\"1000\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Inbox full!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;You have new messages!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"show_status(\" /><text value=\"900\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"You have new messages!\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Du hast neue Nachrichten!</code></item><item value=\"2\" correct=\"false\"><code>Inbox full!</code></item></selection><p visible-if=\"wrong\"><code>Du hast neue Nachrichten!</code>.</p></body></html>"
          },
          {
            "title": "Example: Nesting else",
            "id": 87236,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine <code>else:</code>-Anweisung innerhalb der Funktion.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_notifications\" class=\"title\" /><text value=\"(score)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" score &lt; \" /><text value=\"30\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Score too low&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;On to the next level!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"show_notifications(\" /><text value=\"40\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"77\" endIndex=\"82\" /></interactions><output><content><text value=\"Onto the next level!\" /></content></output></code><p visible-if=\"wrong\">Gib <code>else:</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Nesting elif",
            "id": 87237,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine <code>elif</code>-Anweisung, die ausgeführt wird, wenn der <code>score</code>-Parameter den Wert <code>100</code> hat.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_score\" class=\"title\" /><text value=\"(score)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" score &lt; \" /><text value=\"30\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Score too low&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"elif\" class=\"keyword\" /><text value=\" score == \" /><text value=\"100\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Top score!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  \" /><text value=\"else\" class=\"keyword\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;On to the next level!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"show_score(\" /><text value=\"100\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"69\" endIndex=\"73\" /><option startIndex=\"74\" endIndex=\"79\" /><option startIndex=\"80\" endIndex=\"82\" /><option startIndex=\"83\" endIndex=\"86\" /><option startIndex=\"86\" endIndex=\"87\" /></options></interaction></interactions><output><content><text value=\"Top score!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>elif</code>, gefolgt von <code>score</code> und schließlich <code>==</code>, <code>100</code>, <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Skipping conditionals",
            "id": 87238,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die Funktion mit einem Wert auf, sodass nur die letzte <code>print()</code>-Anweisung ausgeführt wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_status\" class=\"title\" /><text value=\"(inbox)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" inbox &gt; \" /><text value=\"1000\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Inbox full!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;You have new messages!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"show_status(\" /><text value=\"750\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"114\" endIndex=\"117\" /><option correct=\"false\"><content><text value=\"1300\" /></content></option></options></interaction></interactions><output><content><text value=\"You have new messages!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>750</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}