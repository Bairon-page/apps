{
  "tutorial": {
    "id": 2654,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Strings & Listenoperationen",
    "descriptionContent": "Herausforderungen basierend auf String- und Listenoperationen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14682,
        "title": "Studentenlisten",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Students Lists",
            "id": 129710,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ein Lehrer möchte eine Liste mit den Namen aller Schüler in seiner Klasse erstellen. Er hat einen langen String erhalten, der alle Namen enthält, wobei jeder Name durch ein Komma `,` getrennt ist.\n\nHilf ihm, eine `names_list` Liste zu erstellen, die die einzelnen Namen speichert, getrennt durch ein Komma. Dann drucke die Liste.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "student_names = \"Samantha,Mcgrath,Peyton,Kerim,Nadia,Sandra,Sarah,Alex\"",
                  "solvedContent": "student_names = \"Samantha,Mcgrath,Peyton,Kerim,Nadia,Sandra,Sarah,Alex\"\nnames_list = student_names.split(\",\");\nprint(names_list)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14683,
        "title": "Tech-Stack-Änderung",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Tech Stack Change",
            "id": 129711,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du arbeitest als Softwareentwickler und hast dich entschieden, für deine nächste Anwendung einen bestimmten Satz von Programmiertechnologien zu verwenden. Auf eine kurzfristige Anfrage des Kunden hin hast du zugestimmt, React anstelle von Angular zu verwenden.\n\n1. Weise `tech_stack` neu zu und verwende eine String-Operation, um \"Angular\" durch \"React\" zu ersetzen.\n2. Erstelle eine Variable `tech_stack_list`, die die Namen aus `tech_stack` als Liste speichert.\n3. Gib `tech_stack_list` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "tech_stack = \"Angular Node Mongo Express\"",
                  "solvedContent": "tech_stack = \"Angular Node Mongo Express\"\ntech_stack = tech_stack.replace(\"Angular\", \"React\")\ntech_stack_list = tech_stack.split()\nprint(tech_stack_list)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14684,
        "title": "Meistverkaufte DVDs",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Top Selling DVDs",
            "id": 129712,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ein DVD-Verleih möchte seine Website mit einem Header aktualisieren, der ihre meistverkauften Filme auflistet.\n\n1. Erstelle eine neue Variable `new_top_movies`, die den Wert `\"Trapped\"` aus `old_top_movies` mit `\"Moonfall\"` ersetzt. Beachte, dass diese Titel case-sensitiv sind.\n2. Gib die neue Liste aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "old_top_movies = \"The Power of the Dog - Trapped - Tenet\"\n",
                  "solvedContent": "old_top_movies = \"The Power of the Dog - Trapped - Tenet\"\nnew_top_movies = old_top_movies.replace(\"Trapped\", \"Moonfall\")\nprint(new_top_movies)\n"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14685,
        "title": "Empfohlene Liste von Filmen",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Recommended List of Movies",
            "id": 129713,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Filmseiten empfehlen Filme basierend auf Bewertungen, Beliebtheit, personalisierten Optionen usw. Lass uns List Comprehensions verwenden, um Filme mit einer Bewertung von mehr als 4 zu empfehlen.\n\n1. Code eine List Comprehension und weise sie der Variablen `recommended` zu.\n2. Die List Comprehension sollte durch jedes Element in der Liste `ratings` iterieren.\n3. Code den Ausdruck innerhalb der List Comprehension, um zu überprüfen, ob die Bewertung größer als 4 ist. Das Ergebnis sollte eine Liste von booleschen Werten sein.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "ratings = [4.3, 3.1, 5, 1.1]\r\n\r\nrecommended =\r\n\r\nprint(recommended)",
                  "solvedContent": "ratings = [4.3, 3.1, 5, 1.1]\r\n\r\nrecommended = [rating > 4 for rating in ratings]\r\nprint(recommended)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14686,
        "title": "Https:// vor Websites hinzufügen",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Adding https:// Before Sites",
            "id": 129714,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schon einmal bemerkt, wie Browser automatisch `\"https://\"` zu einer Website-URL hinzufügen? Lass uns List Comprehension verwenden, um `\"https://\"` zur Liste der Seiten in `websites` hinzuzufügen.\n\n1. Erstelle eine Funktion `add_https`, die `site` als Parameter nimmt. Die Funktion sollte `\"https://\"` zum `site`-Parameter hinzufügen und zurückgeben.\n2. Nach der Funktion erstelle eine Variable `auto_add`, die eine List Comprehension speichert.\n3. Die List Comprehension sollte durch jedes Element in der Liste `websites` iterieren.\n3. Code den Ausdruck innerhalb der List Comprehension, der die Funktion `add_https` auf die Listenelemente anwendet.\n4. Gib `auto_add` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "websites = [\"mimo.com\", \"coding.com\", \"food.org\"]",
                  "solvedContent": "websites = [\"mimo.com\", \"coding.com\", \"food.org\"]\r\n\r\ndef add_https(site):\r\n    return \"https://\" + site\r\n\r\nauto_add = [add_https(site) for site in websites]\r\n    \r\nprint(auto_add)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14687,
        "title": "Löschen unnötiger Informationen",
        "type": "challengeLevel0",
        "lessons": [
          {
            "title": "Deleting Unnecessary Information",
            "id": 129715,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Manchmal speichern wir Informationen in Datenbanken, die wir nicht benötigen. Zum Beispiel brauchen wir im gegebenen `product` Dictionary den `color` Schlüssel und Wert nicht.\n\n1. Lösche den `color` Schlüssel mit seinem Wert aus dem `product` Dictionary, indem du das richtige Schlüsselwort verwendest.\n2. Gib `product` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "product = {\r\n 'name': 'pencil',\r\n 'type': 'stationery',\r\n 'price': 1.99,\r\n 'color': 'blue',\r\n 'availability': False\r\n}",
                  "solvedContent": "product = {\r\n 'name': 'pencil',\r\n 'type': 'stationery',\r\n 'price': 1.99,\r\n 'color': 'blue',\r\n 'availability': False\r\n}\r\n\r\ndel product['color']\r\n\r\nprint(product)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13973,
        "title": "Juliettes Blumenladen",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Juliette's Flower Shop",
            "id": 124075,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Juliette besitzt einen Blumenladen. Der Laden bietet bereits einen 5% Rabatt für alle Kunden an, um das 3-jährige Jubiläum des Geschäfts zu feiern.\n\nKürzlich hat Juliette am 15. Juli ein neues Baby bekommen. Aus diesem Anlass beschließt sie, einen noch größeren 10% Rabatt für alle Kunden zu geben, die am selben Datum geboren sind. Sie hat einen String, der diese Geburtstage im DD-MM-Format enthält und durch `|` getrennt ist.\n\n1. Erstelle eine Variable `birthdays_list` und speichere darin die Geburtstage als Elemente einer Liste aus `birthdays_string`.\n2. Durchlaufe `birthdays_list` und überprüfe, ob das Datum `\"15-07\"` ist. Wenn ja, weise `special_discount` neu zu, um `5%` durch `10%` zu **ersetzen**.\n3. Gib `special_discount` am Ende außerhalb der for-Schleife aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "birthdays_string = \"23-09|25-04|05-09|15-07|01-06\"\nspecial_discount = \"You are eligible for a 5% discount\"\n",
                  "solvedContent": "birthdays_string = \"23-09|25-04|05-09|15-07|01-06\"\nspecial_discount = \"You are eligible for a 5% discount\"\nbirthdays_list = birthdays_string.split(\"|\")\n\nfor birthday in birthdays_list:\n if (birthday == \"15-07\"):\n  special_discount = special_discount.replace(\"5%\", \"10%\")\n\nprint(special_discount)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13976,
        "title": "Notenüberprüfung",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Grade Check",
            "id": 124079,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ein Kursleiter hat die Noten eines Schülers in einem String-Format erhalten. Die Noten sind durch ein `-` getrennt. Sie möchte die Summe all dieser Noten berechnen und überprüfen, ob der Schüler bestanden hat.\n\n1. Erstelle eine Variable `grades_list` und speichere darin die Noten, die du aus `grades_string` extrahierst, als Liste von Elementen.\n2. Durchlaufe `grades_list`, konvertiere jedes Element in einen Integer und addiere es dann zu `total_grade`.\n\nStelle sicher, dass du diese Operationen **vor** der print-Anweisung ausführst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "grades_string = \"88-77-59-63\"\ntotal_grade = 0\n\nprint(total_grade)",
                  "solvedContent": "grades_string = \"88-77-59-63\"\ntotal_grade = 0\ngrades_list = grades_string.split(\"-\")\n\nfor grade in grades_list:\n grade = int(grade)\n total_grade += grade\n\nprint(total_grade)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13837,
        "title": "Filtern von Suchergebnissen",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Filtering search results",
            "id": 123319,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Suchmaschinen, Streaming-Seiten usw. filtern Suchergebnisse nach Schlüsselwörtern. Lass uns List Comprehension verwenden, um eine Liste so zu filtern, dass das Ergebnis nur die Listenelemente mit dem Schlüsselwort anzeigt.\n\n1. Speichere eine List Comprehension in der Variable `results`.\n2. Iteriere durch jedes Listenelement in der List Comprehension. Der Ausdruck wird keine Operationen haben.\n3. Füge eine `if`-Anweisung zur List Comprehension hinzu, die überprüft, ob ein Listenelement `\"cats\"` enthält.\n4. Gib `results` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "archive = [\"Amazing cats\", \"Top 10 Dances\", \"Breaking news\", \"How to: Tips\", \"cats dance\"]\r\n\r\nresults =",
                  "solvedContent": "archive = [\"Amazing cats\", \"Top 10 Dances\", \"Breaking news\", \"How to: Tips\", \"cats dance\"]\r\n\r\nresults = [result for result in archive if result.count(\"cats\") > 0]\r\n\r\nprint(results)"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13839,
        "title": "Aufgabenliste leeren",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Clear a task list",
            "id": 123321,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die Slice-Notation verwenden, um eine einfache Aufgabenliste zu leeren.\n\n1. Lösche `grocery` und `laundry` aus der Liste `daily_tasks` mit dem `del` Schlüsselwort und der Slice-Notation.\n2. Gib `daily_tasks` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "daily_tasks = ['grocery', 'laundry', 'dusting']",
                  "solvedContent": "daily_tasks = ['grocery', 'laundry', 'dusting']\r\ndel daily_tasks[1::-1]\r\nprint(daily_tasks)"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}