{
  "tutorial": {
    "id": 3093,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "useState",
    "descriptionContent": "useState",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15384,
        "title": "useState",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 135388,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns erkunden, wie man den Zustand mit dem <code>useState</code> Hook verwaltet, wobei wir uns auf fortgeschrittene Konzepte wie funktionale Updates und das Batchen von Zustandsaktualisierungen konzentrieren.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 135393,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der einfachste Weg, den Zustand zu aktualisieren, besteht darin, direkt auf seinen aktuellen Wert zu verweisen.</p><p>Zum Beispiel können wir die bestehende Zustandsvariable verwenden, um den neuen Wert zu berechnen und ihn an die Aktualisierungsfunktion zu übergeben.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" SmashCounter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./SmashCounter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"SmashCounter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"SmashCounter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" SmashCounter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [smashPoints, setSmashPoints] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" addSmash = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setSmashPoints(smashPoints + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Hulk Smash Points: {smashPoints}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{addSmash}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Add Smash Point!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" SmashCounter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"156\" endIndex=\"170\" /><option startIndex=\"171\" endIndex=\"182\" /><option startIndex=\"183\" endIndex=\"186\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>setSmashPoints</code>, gefolgt von <code>smashPoints</code> und schließlich <code>+ 1</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 135389,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Funktionale Updates stellen sicher, dass React immer den neuesten Zustand verwendet, selbst bei schnellen Aktualisierungen.</p><p>Statt sich auf die aktuelle Zustandsvariable zu verlassen, übergeben wir eine Funktion an den Updater, die den vorherigen Zustand als Argument erhält.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" SmashCounter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./SmashCounter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"SmashCounter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"SmashCounter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" SmashCounter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [smashPoints, setSmashPoints] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" addSmash = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setSmashPoints(\" /><text value=\"(\" /><text value=\"prevPoints\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevPoints + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Hulk Smash Points: {smashPoints}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{addSmash}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Add Smash Point!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" SmashCounter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"171\" endIndex=\"183\" /><option startIndex=\"184\" endIndex=\"186\" /><option startIndex=\"187\" endIndex=\"201\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>(prevPoints)</code>, gefolgt von <code>=&gt;</code> und schließlich <code>prevPoints + 1</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 135390,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mehrere <code>setState</code>-Aufrufe innerhalb desselben Ereignishandlers werden zu einem einzigen erneuten Rendern zusammengefasst.<br /><br /></p><p>Das Bündeln von Statusaktualisierungen hilft React, für Effizienz eine einzige Neudarstellung zu optimieren.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" BasketballScore \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./BasketballScore&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"BasketballScore\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"BasketballScore.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" BasketballScore = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [score, setScore] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" increaseScore = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setScore(\" /><text value=\"(\" /><text value=\"prevScore\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevScore + \" /><text value=\"2\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"    setScore(\" /><text value=\"(\" /><text value=\"prevScore\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevScore + \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Basketball Score: {score}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{increaseScore}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Score Basket + Free Throw!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" BasketballScore;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"152\" endIndex=\"160\" /><option startIndex=\"124\" endIndex=\"137\" /><option startIndex=\"196\" endIndex=\"204\" /><option startIndex=\"327\" endIndex=\"340\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>increaseScore</code>, gefolgt von <code>setScore</code> und schließlich <code>setScore</code>, <code>increaseScore</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 135391,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Du möchtest möglicherweise einen State-Wert als Getter verwenden und den Setter umgehen. Wir können den Setter weglassen, wenn wir eine State-Variable niemals aktualisieren wollen.</p><p>Setze ein <code>_</code> anstelle des Setters.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Admin \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Admin&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Admin\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Admin.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" UserRole = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [role, _] = useState(\" /><text value=\"&quot;Admin&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"User Role: {role}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" UserRole;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"83\" /><option correct=\"false\"><content><text value=\"setRole\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>_</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 135394,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Auch wenn dies ein gültiger Ansatz ist, solltest du, wenn du weißt, dass sich der Wert nicht ändern wird, in Betracht ziehen, stattdessen eine einfache Konstante anstelle einer Zustandsvariablen zu verwenden.</p><p>Setze ein <code>_</code> anstelle des Setters.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" Admin \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./Admin&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"Admin\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"Admin.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" UserRole = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" role = \" /><text value=\"&quot;Admin&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"User Role: {role}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" UserRole;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"60\" /><option startIndex=\"61\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"67\" /><option startIndex=\"68\" endIndex=\"75\" /><option startIndex=\"75\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>const</code>, gefolgt von <code>role</code> und schließlich <code>=</code>, <code>\"Admin\"</code>, <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 135392,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch eine Funktion verwenden, um den Anfangszustand mit <code>useState</code> festzulegen. Dies ist praktisch, wenn der Anfangszustandswert berechnet wird.</p><p>In diesem Fall wählen wir ein zufälliges Zeichen aus der Liste der durch die Props übergebenen Zeichen aus.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" CharacterSelector \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./CharacterSelector&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" characters = [\" /><text value=\"&quot;Thor&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Loki&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Hela&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Odin&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"CharacterSelector\" class=\"name\" /><text value=\" \" /><text value=\"characters\" class=\"attr\" /><text value=\"=\" /><text value=\"{characters}\" class=\"string\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"CharacterSelector.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" CharacterSelector = \" /><text value=\"(\" /><text value=\"{ characters }\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [character, _] = useState(\" /><text type=\"break\" /><text value=\"    \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" characters[\" /><text value=\"Math\" class=\"built_in\" /><text value=\".floor(\" /><text value=\"Math\" class=\"built_in\" /><text value=\".random() * characters.length)],\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Today's hero is: {character}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" CharacterSelector;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"115\" endIndex=\"123\" /><option startIndex=\"123\" endIndex=\"124\" /><option startIndex=\"196\" endIndex=\"197\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>useState</code>, gefolgt von <code>(</code> und schließlich <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 135652,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende funktionale Updates im State, um sicherzustellen, dass du immer den neuesten State-Wert verwendest.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\" \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" ClickCounter \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./ClickCounter&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"ClickCounter\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"ClickCounter.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" ClickCounter = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [count, setCount] = useState(\" /><text value=\"0\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" increment = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setCount(\" /><text value=\"(\" /><text value=\"prevCount\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevCount + \" /><text value=\"2\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Times clicked: {count}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{increment}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Click me!\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" ClickCounter;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"155\" endIndex=\"164\" /><option startIndex=\"169\" endIndex=\"178\" /><option correct=\"false\"><content><text value=\"count\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>prevCount</code>, gefolgt von <code>prevCount</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 135653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche der folgenden Aussagen trifft zu, wenn funktionale Updates im <code>useState</code> Hook verwendet werden?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sie stellen sicher, dass der neueste Zustand verwendet wird</item><item value=\"2\" correct=\"false\">Sie verursachen immer mehrere Re-Renderings</item><item value=\"3\" correct=\"false\">Sie erlauben keinen Zugriff auf den vorherigen Zustand</item><item value=\"4\" correct=\"false\">Sie sind weniger effizient als direkte Updates</item></selection><p visible-if=\"wrong\">Sie stellen sicher, dass der neueste Zustand verwendet wird.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 135654,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die Funktion auf, um mehrere Statusaktualisierungen zu bündeln und so ein effizientes Neurendern sicherzustellen.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" StockTracker \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./StockTracker&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"StockTracker\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"StockTracker.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" StockTracker = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [stock, setStock] = useState(\" /><text value=\"10\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" updateStock = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    setStock(\" /><text value=\"(\" /><text value=\"prevStock\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevStock - \" /><text value=\"1\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"    setStock(\" /><text value=\"(\" /><text value=\"prevStock\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" prevStock - \" /><text value=\"3\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"  };\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" (\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Stock Remaining: {stock}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"      \" /><text value=\"&lt;\" /><text value=\"button\" class=\"name\" /><text value=\" \" /><text value=\"onClick\" class=\"attr\" /><text value=\"=\" /><text value=\"{updateStock}\" class=\"string\" /><text value=\"&gt;\" /><text value=\"Sell multiple items\" /><text value=\"&lt;/\" /><text value=\"button\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  );\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" StockTracker;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"322\" endIndex=\"333\" /></interactions></code><p visible-if=\"wrong\">Gib <code>updateStock</code> ein.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 135655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Vorteil der Stapelverarbeitung von Statusaktualisierungen im selben Ereignishandler?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es minimiert die Anzahl der erneuten Renderings</item><item value=\"2\" correct=\"false\">Es erzeugt mehrere Renderphasen</item><item value=\"3\" correct=\"false\">Es führt immer zu Leistungsproblemen</item><item value=\"4\" correct=\"false\">Es protokolliert automatisch Statusaktualisierungen in der Konsole</item></selection><p visible-if=\"wrong\">Es minimiert die Anzahl der erneuten Renderings.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 135656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende <code>useState</code> mit einer Funktion, um anfängliche Zustandswerte effizient zu berechnen.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" NumberSelector \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./NumberSelector&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"NumberSelector\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"NumberSelector.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" NumberSelector = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [selectedNumber, _] = useState(\" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" \" /><text value=\"Math\" class=\"built_in\" /><text value=\".round(\" /><text value=\"Math\" class=\"built_in\" /><text value=\".random() * \" /><text value=\"100\" class=\"number\" /><text value=\"));\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Random Number: {selectedNumber}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" NumberSelector;\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"112\" endIndex=\"113\" /><option startIndex=\"113\" endIndex=\"114\" /><option startIndex=\"115\" endIndex=\"117\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>(</code>, gefolgt von <code>)</code> und schließlich <code>=&gt;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 135657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie kannst du den Anfangszustand mit <code>useState</code> unter Verwendung einer Funktion festlegen?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Übergebe eine Funktion an <code>useState</code>, die den Anfangswert berechnet</item><item value=\"2\" correct=\"false\">Weise direkt einen konstanten Wert innerhalb der Komponente zu</item><item value=\"3\" correct=\"false\">Verwende die <code>setState</code> Funktion</item><item value=\"4\" correct=\"false\">Verwende einen <code>useMemo</code> Hook</item></selection><p visible-if=\"wrong\">Übergebe eine Funktion an <code>useState</code>, die den Anfangswert berechnet.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 135658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Umgehe den State-Setter, wenn sich der Wert nicht ändern wird, indem du stattdessen eine Konstante verwendest.</p><code version=\"2\" codelang=\"html\" name=\"index.html\" visible-if=\"always\"><content><text value=\"&lt;\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"script\" class=\"name\" /><text value=\" \" /><text value=\"type\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;module&quot;\" class=\"string\" /><text value=\" \" /><text value=\"src\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;./index.js&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"\" class=\"undefined\" /><text value=\"&lt;/\" /><text value=\"script\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"head\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"&lt;\" /><text value=\"div\" class=\"name\" /><text value=\" \" /><text value=\"id\" class=\"attr\" /><text value=\"=\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\"&gt;\" /><text value=\"loading\" /><text value=\"&lt;/\" /><text value=\"div\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"&lt;/\" /><text value=\"body\" class=\"name\" /><text value=\"&gt;\" /><text type=\"break\" /><text value=\"&lt;/\" /><text value=\"html\" class=\"name\" /><text value=\"&gt;\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"index.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" { createRoot } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react-dom/client&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"import\" class=\"keyword\" /><text value=\" PlanetInfo \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;./PlanetInfo&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" rootElement = \" /><text value=\"document\" class=\"built_in\" /><text value=\".getElementById(\" /><text value=\"&quot;root&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" root = createRoot(rootElement);\" /><text type=\"break\" /><text value=\"root.render(\" /><text value=\"&lt;\" /><text value=\"PlanetInfo\" class=\"name\" /><text value=\" /&gt;\" /><text value=\");\" /><text type=\"break\" /></content></code><code version=\"2\" codelang=\"jsx\" name=\"PlanetInfo.jsx\" visible-if=\"always\"><content><text value=\"import\" class=\"keyword\" /><text value=\" React, { useState } \" /><text value=\"from\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;react&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" PlanetInfo = \" /><text value=\"()\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" [planet, _] = useState(\" /><text value=\"&quot;Earth&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"&lt;\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\"Home Planet: {planet}\" /><text value=\"&lt;/\" /><text value=\"h2\" class=\"name\" /><text value=\"&gt;\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"export\" class=\"keyword\" /><text value=\" \" /><text value=\"default\" class=\"keyword\" /><text value=\" PlanetInfo;\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"86\" endIndex=\"87\" /></interactions></code><p visible-if=\"wrong\">Gib <code>_</code> ein.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 135659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum würdest du die Verwendung der State-Setter-Funktion vollständig umgehen?</p><selection multiple=\"multiple\"><item value=\"1\" correct=\"true\">Wenn eine Zustandsvariable konstant ist und sich nicht ändert</item><item value=\"2\" correct=\"false\">Die Rendergeschwindigkeit erhöhen, indem der Zustand entfernt wird</item><item value=\"3\" correct=\"false\">State-Variablen können in funktionalen Komponenten nicht verwendet werden</item><item value=\"4\" correct=\"false\">Es ist ein Fehler und sollte vermieden werden</item></selection><p visible-if=\"wrong\">Wenn eine Zustandsvariable konstant ist und sich nicht ändert.</p></body></html>"
          }
        ]
      }
    ]
  }
}