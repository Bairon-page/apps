{
  "tutorial": {
    "id": 2252,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Objekte",
    "descriptionContent": "Objekte",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9620,
        "title": "Gruppierung von Werten in Objekte",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Creating Objects",
            "id": 85284,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Beende die Zeile, um ein Objekt namens `pet` ohne Eigenschaften zu erstellen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const pet =",
                  "solvedContent": "const pet = {};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grouping values into an object",
            "id": 85285,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lösche die Zeilen, die Eigenschaften enthalten, die nicht mit dem Objekt `pet` in Zusammenhang stehen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const pet = {\n outsideTemperature: 52,\n animal: \"dog\",\n ingredients: [\"banana\", \"oatmeal\"],\n name: \"Sunny\"\n};",
                  "solvedContent": "const pet = {\n animal: \"dog\",\n name: \"Sunny\"\n};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple Properties",
            "id": 85255,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gib dem `pet` Objekt 3 weitere Eigenschaften deiner Wahl. Lösche die `animal` Eigenschaft nicht.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const pet = {\n animal: \"dog\"\n};",
                  "solvedContent": "const pet = {\n animal: \"dog\",\n name: \"Bo\",\n owner: \"Barack\",\n test: \"T\"\n};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Property Types",
            "id": 85253,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ändere die Eigenschaft `rescue` zu einem Boolean und ändere die Eigenschaft `age` zu einem Zahlenwert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const pet = {\n animal: \"dog\",\n name: \"Sunny\",\n rescue: \"true\",\n age: \"7\",\n litterMates: [\"Bo\", \"Blue\", \"Clifford\"]\n};",
                  "solvedContent": "const pet = {\n animal: \"dog\",\n name: \"Sunny\",\n rescue: true,\n age: 7,\n litterMates: [\"Bo\", \"Blue\", \"Clifford\"]\n};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Wiring Up An Object Method",
            "id": 85272,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gib den Wert der Eigenschaft `available` in der Konsole aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const order = {\n itemName: \"Candy\",\n itemPrice: 2,\n itemQuantity: 10,\n available: true\n};\n",
                  "solvedContent": "const order = {\n itemName: \"Candy\",\n itemPrice: 2,\n itemQuantity: 10,\n available: true\n};\nconsole.log(order.available);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Displaying Objects",
            "id": 85278,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schreibe Code, um das Objekt `car` auszugeben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const car = {\n make: \"Toyota\",\n model: \"Camry\"\n};",
                  "solvedContent": "const car = {\n make: \"Toyota\",\n model: \"Camry\"\n};\nconsole.log(car);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Updating Properties",
            "id": 85252,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bevor du in die Konsole druckst, füge eine Codezeile hinzu, um den Wert der `price`-Eigenschaft des Kaffees auf `3.99` zu aktualisieren. Mach das, ohne den ursprünglichen Wert im Objekt zu bearbeiten.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const coffee = {\n origin: \"Nicaragua\",\n bean: \"Arabica\",\n roast: \"Dark\",\n price: 2.99\n};\nconsole.log(\"Coffee Price: \" + coffee.price);",
                  "solvedContent": "const coffee = {\n origin: \"Nicaragua\",\n bean: \"Arabica\",\n roast: \"Dark\",\n price: 2.99\n};\ncoffee.price = 3.99;\nconsole.log(\"Coffee Price: \" + coffee.price);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 9643,
        "title": "Verwendung von Objektmethoden",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Creating Methods",
            "id": 85601,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge Code hinzu, um eine Methode namens `display` zu erstellen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const apartment = {\n number: 404,\n location: \"unknown\",\n display:\n};",
                  "solvedContent": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {}\n};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Creating Methods",
            "id": 85317,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Definiere `sellPaper` als eine Methode, indem du das Schlüsselwort `function` gefolgt von einem Paar Klammern `()` und einem Paar geschweifter Klammern `{}` hinzufügst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n sellPaper:\n};",
                  "solvedContent": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n sellPaper: function() {}\n};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Calling Methods",
            "id": 85502,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge eine Zeile hinzu, um die Methode `heat` des Objekts `microwave` aufzurufen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const microwave = {\n brand: \"Samsung\",\n heat: function() {\n  console.log(\"Now heating your food.\");\n }\n};",
                  "solvedContent": "const microwave = {\n brand: \"Samsung\",\n heat: function() {\n  console.log(\"Now heating your food.\");\n }\n};\nmicrowave.heat();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Similar to Functions",
            "id": 85321,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ändere die Methode, um die Nachricht `\"Would you like to buy some paper?\"` zurückzugeben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n sellPaper: function() {\n  console.log(\"Would you like to buy some paper?\");\n }\n};",
                  "solvedContent": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n sellPaper: function() {\n  return \"Would you like to buy some paper?\";\n }\n};"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Calling Methods",
            "id": 85313,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge eine Zeile hinzu, um die Methode `sellPaper` des Objekts `employee` aufzurufen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n sellPaper: function() {\n  console.log(\"Would you like to buy some paper?\");\n }\n};",
                  "solvedContent": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n sellPaper: function() {\n  console.log(\"Would you like to buy some paper?\");\n }\n};\nemployee.sellPaper();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Getting Properties",
            "id": 85564,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bearbeite die Methode `displayName`, um die Eigenschaft `name` des Objekts `employee` anzuzeigen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n displayName: function() {}\n};\nemployee.displayName();",
                  "solvedContent": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n displayName: function() {\n  console.log(this.name);\n }\n};\nemployee.displayName();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: When to use \"this\"",
            "id": 85495,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Beende die Methode `displayTitle`, sodass sie den `title` des `employee` Objekts ausgibt, wenn sie aufgerufen wird.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n displayTitle: function() {\n  \n }\n};\nemployee.displayTitle();",
                  "solvedContent": "const employee = {\n name: \"Jim Halpert\",\n title: \"Salesman\",\n displayTitle: function() {\n  console.log(this.title);\n }\n};\nemployee.displayTitle();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: \"this\" Keyword",
            "id": 85494,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Beende die Methode `ageUp`, indem du Code schreibst, um `\"Ralph\"` älter zu machen und ihn 8 Jahre alt zu machen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const dog = {\n name: \"Ralph\",\n age: 7,\n breed: \"Golden Retriever\",\n ageUp: function() {\n    \n    console.log(this.age);\n }\n};\ndog.ageUp(); // Should print 8",
                  "solvedContent": "const dog = {\n name: \"Ralph\",\n age: 7,\n breed: \"Golden Retriever\",\n ageUp: function() {\n  this.age++;\n  console.log(this.age);\n }\n};\ndog.ageUp(); // Should print 8"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Calling Methods",
            "id": 85605,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge Code hinzu, um die Methode `display` des Objekts `apartment` aufzurufen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  console.log(\"Display\");\n }\n};",
                  "solvedContent": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  console.log(\"Display\");\n }\n};\napartment.display();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: When to Use \"this\"",
            "id": 85594,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Korrigiere den Code, damit die Nachricht korrekt in der Konsole ausgegeben wird.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  this.number = 200;\n  console.log(this.number);\n }\n};\napartment.display();\nconsole.log(\"apartment location: \" + this.location);",
                  "solvedContent": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  this.number = 200;\n  console.log(this.number);\n }\n};\napartment.display();\nconsole.log(\"apartment location: \" + apartment.location);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Getting properties",
            "id": 85584,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ändere die `console.log()` Anweisung, um nur die `number` des `apartment` Objekts anzuzeigen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  console.log(this);\n }\n};\napartment.display();",
                  "solvedContent": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  console.log(this.number);\n }\n};\napartment.display();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Updating Properties",
            "id": 85582,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ändere den Code innerhalb der `display`-Methode, um die Wohnungsnummer `number` auf `200` zu aktualisieren, indem du `this` verwendest, bevor du sie anzeigst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  console.log(this.number);\n }\n};\napartment.display();",
                  "solvedContent": "const apartment = {\n number: 404,\n location: \"unknown\",\n display: function() {\n  this.number = 200;\n  console.log(this.number);\n }\n};\napartment.display();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13410,
        "title": "Was ist JSON?",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: JSON.parse",
            "id": 120542,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Konvertiere `jsonString` in ein JS-Objekt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const jsonString = '{\"sport\": \"basketball\", \"players\": 5, \"duration\": 48}';\nconst obj = ;\nconsole.log(obj.sport.toUpperCase());",
                  "solvedContent": "const jsonString = '{\"sport\": \"basketball\", \"players\": 5, \"duration\": 48}';\nconst obj = JSON.parse(jsonString);\nconsole.log(obj.sport.toUpperCase());"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: JSON.stringify",
            "id": 120543,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `stringBook` Konstante, die die in einen String umgewandelte Version von `book` speichert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book = {\n title: \"Wild Life\",\n author: \"Vera Storm\",\n pages: 289\n};",
                  "solvedContent": "const book = {\n title: \"Wild Life\",\n author: \"Vera Storm\",\n pages: 289\n};\nconst stringBook = JSON.stringify(book);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: JSON.parse",
            "id": 120544,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Stelle sicher, dass du das `foodJSON` JSON in ein Objekt umwandelst, damit du auf seine Eigenschaften korrekt zugreifen kannst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let foodJSON = '{\"name\": \"Pizza\", \"ingredients\": [\"dough\", \"tomato sauce\", \"cheese\"]}';\nlet food = ;\nconsole.log(food.name);\nconsole.log(food.ingredients);",
                  "solvedContent": "let foodJSON = '{\"name\": \"Pizza\", \"ingredients\": [\"dough\", \"tomato sauce\", \"cheese\"]}';\nlet food = JSON.parse(foodJSON);\nconsole.log(food.name);\nconsole.log(food.ingredients);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "JSON.stringify",
            "id": 121217,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du möchtest die Informationen von zwei Spielzeugen ausdrucken, um sie besser vergleichen zu können. Kannst du diese Objekte in JSON umwandeln?",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let toy1 = {\n name: \"Blocks\",\n price: 19.99,\n age_range: \"6-12\"\n};\nlet toy2 = {\n name: \"Stuffed Bear\",\n price: 29.99,\n age_range: \"0-3\",\n};\nlet stringToy1 = JSON.(toy1);\nlet stringToy2 = JSON.(toy2);",
                  "solvedContent": "let toy1 = {\n name: \"Blocks\",\n price: 19.99,\n age_range: \"6-12\"\n};\nlet toy2 = {\n name: \"Stuffed Bear\",\n price: 29.99,\n age_range: \"0-3\",\n};\nlet stringToy1 = JSON.stringify(toy1);\nlet stringToy2 = JSON.stringify(toy2);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "JSON.stringify AND parse",
            "id": 121218,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Der Blumenladen hat uns gebeten, einen Fehler in ihrer Datenbank zu beheben. Sie haben fälschlicherweise angegeben, dass sie blaue Rosen haben, aber sie haben nur rote. Die Daten liegen im JSON-Format vor und wir können nicht viel tun. Ändere das Format in ein JS-Objekt, nimm die Änderung vor und konvertiere es dann zurück in JSON.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const flower = '{\"name\": \"Rose\", \"color\": \"blue\", \"price\": 2.5, \"season\": \"spring\"}';\nlet flowerObject = ;\nflowerObject.color = \"red\";\nconsole.log(flower);\nlet fixedFlowerJson = ;\nconsole.log(\"fixed!\");",
                  "solvedContent": "const flower = '{\"name\": \"Rose\", \"color\": \"blue\", \"price\": 2.5, \"season\": \"spring\"}';\nlet flowerObject = JSON.parse(flower);\nflowerObject.color = \"red\";\nconsole.log(flower);\nlet fixedFlowerJson = JSON.stringify(flowerObject);\nconsole.log(\"fixed!\");"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}