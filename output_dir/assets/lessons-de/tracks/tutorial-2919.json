{
  "tutorial": {
    "id": 2919,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Einführung in SQLite",
    "descriptionContent": "Lerne, wie man eine SQLite-Datenbank einrichtet und Abfragen darauf ausführt",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15023,
        "title": "Verbindung zu einer Datenbank herstellen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132483,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns das, was wir bisher über Datenbanken und Backends gelernt haben, verbinden. Jetzt werden wir mit einer SQLite-Datenbank innerhalb von Node arbeiten.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132484,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden ein NPM-Paket namens <code>better-sqlite3</code>, um mit unserer Datenbank zu interagieren.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 132490,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zuerst müssen wir es mit der <code>require</code>-Funktion in unsere Anwendung importieren.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"7\" /><option startIndex=\"8\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>require</code>, gefolgt von <code>\"better-sqlite3\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132485,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Als nächstes speichern wir das importierte Modul in einer Variable <code>Database</code>, sodass wir während der gesamten Anwendung mit der SQLite-Datenbank interagieren können.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"14\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>Database</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132491,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der nächste Schritt besteht darin, die Datenbank zu initiieren, indem du eine neue Instanz einer SQLite-Datenbank erstellst.</p><p>Wir erstellen eine neue Instanz mit dem Schlüsselwort <code>new</code>, gefolgt vom Namen unserer Variable. Wir geben auch den Namen der Datenbankdatei an.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"47\" /><option startIndex=\"48\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>new</code>, gefolgt von <code>Database</code> und schließlich <code>\"./database.db\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir definieren den Speicherort der Datenbankdatei, wenn wir eine neue erstellen. <code>./</code> bezieht sich auf das aktuelle Verzeichnis.</p><p>Dieser Code lädt entweder eine vorhandene Datenbank vom angegebenen Speicherort oder erstellt eine neue, falls sie noch nicht existiert.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"58\" endIndex=\"60\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>./</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132512,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir speichern auch die neue Instanz der SQLite-Datenbank in einer neuen Variable, um später leichter darauf zugreifen zu können.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"49\" /><option startIndex=\"50\" endIndex=\"52\" /><option startIndex=\"53\" endIndex=\"54\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>const</code>, gefolgt von <code>db</code> und schließlich <code>=</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 132487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Jetzt ist es an der Zeit, alles in die Praxis umzusetzen! Mit <code>db.exec</code> können wir SQL-Anweisungen ausführen, wie zum Beispiel das Erstellen von Tabellen oder das Einfügen von Daten.</p><p>Es gibt jedoch keine Rückgabe. Aber das brauchen wir nicht, wenn wir eine neue Tabelle erstellen wollen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" CREATE TABLE pets (name TEXT, species TEXT)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"89\" /><option startIndex=\"89\" endIndex=\"94\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>db</code>, gefolgt von <code>.exec</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 132488,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende die <code>exec</code>-Methode erneut, um die Datenbank, die du hier siehst, nachzubilden.</p><database visible-if=\"always\" bootstrapScript=\"CREATE TABLE Pets (&#xA;    name TEXT,&#xA;    species TEXT&#xA;);&#xA;&#xA;INSERT INTO Pets (name, species)&#xA;VALUES ('Tom', 'Cat');&#xA;\"><tables><table name=\"Pets\"><row><header content=\"name\" /><header content=\"species\" /></row><row><data content=\"Tom\" /><data content=\"Cat\" /></row></table></tables></database><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" CREATE TABLE pets (name TEXT, species TEXT)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" INSERT INTO pets (name, species)\" /><text type=\"break\" /><text value=\" VALUES (&quot;Tom&quot;, &quot;Cat&quot;)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"147\" endIndex=\"149\" /><option startIndex=\"149\" endIndex=\"154\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>db</code>, gefolgt von <code>.exec</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132493,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mit <code>db.exec</code> kannst du auch mehrere Werte hinzufügen.</p><database visible-if=\"always\" bootstrapScript=\"CREATE TABLE Pets (&#xA;    name TEXT,&#xA;    species TEXT&#xA;);&#xA;&#xA;INSERT INTO Pets (name, species)&#xA;VALUES &#xA;    ('Tom', 'Cat'),&#xA;    ('Jerry', 'Mouse'),&#xA;    ('Spike', 'Dog'),&#xA;    ('Tweety', 'Bird');\"><tables><table name=\"Pets\"><row><header content=\"name\" /><header content=\"species\" /></row><row><data content=\"Tom\" /><data content=\"Cat\" /></row><row><data content=\"Jerry\" /><data content=\"Mouse\" /></row><row><data content=\"Spike\" /><data content=\"Dog\" /></row><row><data content=\"Tweety\" /><data content=\"Bird\" /></row></table></tables></database><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" CREATE TABLE pets (name TEXT, species TEXT)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" INSERT INTO pets (name, species)\" /><text type=\"break\" /><text value=\" VALUES\" /><text type=\"break\" /><text value=\"  (&quot;Tom&quot;, &quot;Cat&quot;),\" /><text type=\"break\" /><text value=\"  (&quot;Jerry&quot;, &quot;Mouse&quot;),\" /><text type=\"break\" /><text value=\"  (&quot;Spike&quot;, &quot;Dog&quot;),\" /><text type=\"break\" /><text value=\"  (&quot;Tweety&quot;, &quot;Bird&quot;)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"147\" endIndex=\"154\" /></interactions></code><p visible-if=\"wrong\">Gib <code>db.exec</code> ein.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132494,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erfordere <code>better-sqlite3</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"24\" /><option startIndex=\"24\" endIndex=\"25\" /><option startIndex=\"25\" endIndex=\"41\" /><option startIndex=\"41\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"use\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>require</code>, gefolgt von <code>(</code> und schließlich <code>\"better-sqlite3\"</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132498,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Zweck von <code>db.exec</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"> Es führt einen SQL-Befehl aus, wie das Erstellen von Tabellen oder das Einfügen von Daten, ohne ein Ergebnis zurückzugeben</item><item value=\"2\" correct=\"false\">Es ruft Daten aus der Datenbank ab und gibt das Ergebnis zurück</item></selection><p visible-if=\"wrong\"> Es führt einen SQL-Befehl aus, wie das Erstellen von Tabellen oder das Einfügen von Daten, ohne ein Ergebnis zurückzugeben.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132495,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle eine neue Datenbank namens database.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"68\" endIndex=\"83\" /><option correct=\"false\"><content><text value=\"&quot;database&quot;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"./database.db\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 132499,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht <code>require(\"better-sqlite3\")</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es importiert das <code>better-sqlite3</code>-Modul für SQLite-Datenbankoperationen</item><item value=\"2\" correct=\"false\">Es öffnet eine bestehende SQLite-Datenbankdatei</item></selection><p visible-if=\"wrong\">Es importiert das <code>better-sqlite3</code>-Modul für SQLite-Datenbankoperationen.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132496,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, damit wir eine neue Datenbank erstellen und einen ersten Wert hinzufügen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" Database = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;better-sqlite3&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" db = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Database(\" /><text value=\"&quot;./database.db&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" CREATE TABLE pets (name TEXT, species TEXT)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text type=\"break\" /><text value=\"db.exec(\" /><text value=\"`\" /><text type=\"break\" /><text value=\" INSERT INTO pets (name, species)\" /><text type=\"break\" /><text value=\" VALUES (&quot;Tom&quot;, &quot;Cat&quot;)\" /><text type=\"break\" /><text value=\"`\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"89\" /><option startIndex=\"89\" endIndex=\"90\" /><option startIndex=\"90\" endIndex=\"94\" /><option startIndex=\"147\" endIndex=\"149\" /><option startIndex=\"149\" endIndex=\"150\" /><option startIndex=\"150\" endIndex=\"154\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>db</code>, gefolgt von <code>.</code> und schließlich <code>exec</code>, <code>db</code>, <code>.</code>, <code>exec</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 15024,
        "title": "Abfragen einer Datenbank",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #4 - Copy",
            "id": 132510,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir werden uns nun Abfragen ansehen, die Daten zurückgeben, wie zum Beispiel das Auswählen von Daten aus einer Tabelle.</p><p>Beim Abfragen einer Datenbank verwenden wir die <code>prepare</code>-Methode. Diese bereitet die SQL-Anweisung vor, damit sie später ausgeführt werden kann.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"db\" class=\"selector-tag\" /><text value=\".prepare\" class=\"selector-class\" /><text value=\"();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"2\" /><option startIndex=\"2\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>db</code>, gefolgt von <code>.prepare</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132513,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir übergeben die SQL-Abfrage als String als Argument an die <code>prepare</code>-Methode.</p><p>Erstelle eine <code>SELECT</code>-Abfrage und gib sie als Argument an.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"db.prepare(\" /><text value=\"&quot;SELECT * FROM users&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"25\" /><option startIndex=\"26\" endIndex=\"31\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>SELECT</code>, gefolgt von <code>*</code> und schließlich <code>FROM</code>, <code>users</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132503,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können die vorbereitete Abfrage in einer Variable speichern.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getUsersQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM users&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option startIndex=\"6\" endIndex=\"19\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>const</code>, gefolgt von <code>getUsersQuery</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 132504,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um die Abfrage auszuführen, rufe die <code>all</code>-Methode auf der vorbereiteten Anweisung auf.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getUsersQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM users&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" users = getUsersQuery.all();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(users);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"84\" /><option startIndex=\"84\" endIndex=\"90\" /></options></interaction></interactions><output><content><text value=\"[\" /><text type=\"break\" /><text value=\"  { id: 1, name: &quot;John Smith&quot; },\" /><text type=\"break\" /><text value=\"  { id: 2, name: &quot;Jane Smith&quot; },\" /><text type=\"break\" /><text value=\"  ...\" /><text type=\"break\" /><text value=\"]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>getUsersQuery</code>, gefolgt von <code>.all()</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 132505,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die <code>get</code>-Methode wird verwendet, um eine einzelne Zeile aus dem Ergebnismenge abzurufen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getUserByIdQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM users WHERE id = 1&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" user = getUserByIdQuery.get();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(user);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"103\" endIndex=\"106\" /></options></interaction></interactions><output><content><text value=\"{ id: 1, name: &quot;John Smith&quot; }\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>get</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132515,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch eine <code>SELECT</code>-Anweisung mit Parametern unter Verwendung von Fragezeichen <code>?</code> vorbereiten. Zum Beispiel, um einen Benutzer anhand seiner <code>id</code> auszuwählen.</p><p>Wenn wir beim Ausführen der Abfrage einen Wert übergeben, wird er das Fragezeichen ersetzen, sodass wir die Ergebnisse dynamisch filtern können.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getUserByIdQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM users WHERE id = ?&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" user = getUserByIdQuery.get(\" /><text value=\"50\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(user);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"107\" endIndex=\"109\" /><option startIndex=\"68\" endIndex=\"69\" /></options></interaction></interactions><output><content><text value=\"{ id: 50, name: &quot;Pope Benedict XVI&quot; }\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>?</code>, gefolgt von <code>50</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy",
            "id": 132519,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir versuchen, einen Eintrag abzurufen, der nicht existiert, erhalten wir <code>undefined</code>.</p><p>Versuche, einen Benutzer mit der ID <code>500</code> abzufragen, der keinen Wert zurückgibt.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getUserByIdQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM users WHERE id = ?&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" user = getUserByIdQuery.get(\" /><text value=\"500\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(user);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"68\" endIndex=\"69\" /><option startIndex=\"107\" endIndex=\"110\" /></options></interaction></interactions><output><content><text value=\"undefined\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>?</code>, gefolgt von <code>500</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #11",
            "id": 132520,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht die <code>get</code>-Methode?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"> Es ruft eine einzelne Zeile aus dem Resultatset ab</item><item value=\"2\" correct=\"false\">Es ruft alle Zeilen aus dem Ergebnismenge ab</item></selection><p visible-if=\"wrong\"> Es ruft eine einzelne Zeile aus dem Resultatset ab.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132521,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Zweck des Fragezeichens <code>?</code> in einer vorbereiteten SQL-Abfrage?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"> Es fungiert als Platzhalter für Werte, die beim Ausführen der Abfrage übergeben werden</item><item value=\"2\" correct=\"false\">Es zeigt an, dass die Abfrage optional ist</item></selection><p visible-if=\"wrong\"> Es fungiert als Platzhalter für Werte, die beim Ausführen der Abfrage übergeben werden.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 132517,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bereite eine Abfrage vor und führe sie aus, um alle Einträge aus der pets-Tabelle zu erhalten.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getPetsQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM pets&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" users = getPetsQuery.all();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(users);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"69\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"87\" /><option startIndex=\"6\" endIndex=\"18\" /><option startIndex=\"21\" endIndex=\"23\" /><option startIndex=\"23\" endIndex=\"24\" /><option startIndex=\"24\" endIndex=\"31\" /></options></interaction></interactions><output><content><text value=\"[\" /><text type=\"break\" /><text value=\"  { id: 1, name: &quot;Simba&quot;, species: &quot;Lion&quot; },\" /><text type=\"break\" /><text value=\"  { id: 2, name: &quot;Dory&quot;, species: &quot;Fish&quot; },\" /><text type=\"break\" /><text value=\"  { id: 3, name: &quot;Hedwig&quot;, species: &quot;Owl&quot; }\" /><text type=\"break\" /><text value=\"]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>getPetsQuery</code>, gefolgt von <code>db</code> und schließlich <code>.</code>, <code>prepare</code>, <code>getPetsQuery</code>, <code>.all()</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 132522,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was gibt die <code>all</code>-Methode zurück?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es gibt ein Array aller Zeilen aus dem Ergebnisset zurück</item><item value=\"2\" correct=\"false\">Es gibt nur die erste Zeile aus dem Ergebnismenge zurück</item></selection><p visible-if=\"wrong\">Es gibt ein Array aller Zeilen aus dem Ergebnisset zurück.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy - Copy",
            "id": 132518,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bereite eine dynamische <code>SELECT</code>-Anweisung vor.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" getUserByIdQuery = db.prepare(\" /><text value=\"&quot;SELECT * FROM pets WHERE id = ?&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" user = getUserByIdQuery.get(\" /><text value=\"50\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(user);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"64\" /><option startIndex=\"65\" endIndex=\"66\" /><option startIndex=\"67\" endIndex=\"68\" /><option correct=\"false\"><content><text value=\"50\" /></content></option></options></interaction></interactions><output><content><text value=\"{ id: 50, name: &quot;Bugs&quot;, species: &quot;Bunny&quot; }\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>WHERE</code>, gefolgt von <code>id</code> und schließlich <code>=</code>, <code>?</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #14",
            "id": 132523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht <code>db.prepare</code> hier?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"db.prepare(\" /><text value=\"&quot;SELECT * FROM things WHERE id = ?&quot;\" class=\"string\" /><text value=\");\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es bereitet eine SQL-Abfrage zur Ausführung vor</item><item value=\"2\" correct=\"false\"> Es führt eine vorbereitete SQL-Abfrage aus</item></selection><p visible-if=\"wrong\">Es bereitet eine SQL-Abfrage zur Ausführung vor.</p></body></html>"
          }
        ]
      }
    ]
  }
}