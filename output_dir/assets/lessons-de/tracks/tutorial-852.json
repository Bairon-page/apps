{
  "tutorial": {
    "id": 852,
    "version": 17,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Klassen mit Methoden",
    "descriptionContent": "Erstelle interaktive Objekte, indem du Methoden zu Klassenvorlagen hinzufügst.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6452,
        "title": "Methoden",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 56032,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bis jetzt können die Objekte, die wir aus Klassen erstellt haben, keine Aktionen ausführen.</p><p>Indem wir <strong>Methoden</strong> zu Klassen hinzufügen, können wir interaktive Objekte erstellen, indem wir die Klassen als Vorlagen verwenden.</p></body></html>"
          },
          {
            "title": "Methods",
            "id": 56043,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine Methode in einer Klasse hinzuzufügen ist wie das Erstellen einer normalen Funktion, außer dass das <code>function</code>-Schlüsselwort nicht benötigt wird.</p><p>Diese <code>VirtualPet</code>-Klasse kann noch nicht viel. Lass uns ihr die Fähigkeit geben, mit einer Methode zu essen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat() {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"64\" endIndex=\"67\" /><option startIndex=\"67\" endIndex=\"69\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"72\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>eat</code>, gefolgt von <code>()</code> und schließlich <code>{</code>, <code>}</code> aus.</p></body></html>"
          },
          {
            "title": "Methods",
            "id": 56045,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Innerhalb der geschweiften Klammern funktionieren Methoden wie normale Funktionen.</p><p>Lass uns <code>console.log</code> verwenden, um eine Nachricht in der Konsole anzuzeigen, wenn <code>eat()</code> aufgerufen wird.</p><code version=\"2\" name=\"script.js\" visible-if=\"always\" codelang=\"javascript\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"76\" endIndex=\"87\" /></interactions></code><p visible-if=\"wrong\">Gib <code>console.log</code> ein.</p></body></html>"
          },
          {
            "title": "Create the object",
            "id": 56048,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bevor wir die <code>eat()</code>-Methode verwenden können, müssen wir ein neues Objekt aus der Klasse erstellen.</p><code version=\"2\" name=\"script.js\" visible-if=\"always\" codelang=\"javascript\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" pet = \" /><text value=\"new\" class=\"keyword\" /><text value=\" VirtualPet(\" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"106\" endIndex=\"111\" /><option startIndex=\"112\" endIndex=\"115\" /><option startIndex=\"116\" endIndex=\"117\" /><option startIndex=\"118\" endIndex=\"121\" /><option startIndex=\"122\" endIndex=\"132\" /><option startIndex=\"132\" endIndex=\"133\" /><option startIndex=\"133\" endIndex=\"138\" /><option startIndex=\"138\" endIndex=\"139\" /><option startIndex=\"139\" endIndex=\"140\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>const</code>, gefolgt von <code>pet</code> und schließlich <code>=</code>, <code>new</code>, <code>VirtualPet</code>, <code>(</code>, <code>\"Tom\"</code>, <code>)</code>, <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "Methods",
            "id": 56049,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um die <code>eat()</code>-Methode zu verwenden, benötigen wir den Namen des Objekts, einen Punkt, den Namen der Methode und Klammern.</p><code version=\"2\" name=\"script.js\" visible-if=\"always\" codelang=\"javascript\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{ \" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" eat() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" pet = \" /><text value=\"new\" class=\"keyword\" /><text value=\" VirtualPet(\" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"pet.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"141\" endIndex=\"151\" /><option correct=\"false\"><content><text value=\"Tom.eat()\" /></content></option><option correct=\"false\"><content><text value=\"pet.eat\" /></content></option></options></interaction></interactions><output><content><text value=\"nom nom\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>pet.eat();</code> aus.</p></body></html>"
          },
          {
            "title": "Parameters",
            "id": 56051,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Parameter ermöglichen es Klassenmethoden, interaktiver zu sein, indem sie auf Dinge reagieren, die wir ihnen geben.</p><p>Füge dem <code>eat()</code>-Methode einen Parameter namens <code>food</code> hinzu.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" pet = \" /><text value=\"new\" class=\"keyword\" /><text value=\" VirtualPet(\" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"68\" endIndex=\"72\" /></interactions></code><p visible-if=\"wrong\">Gib <code>food</code> ein.</p></body></html>"
          },
          {
            "title": "Reactive",
            "id": 56053,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mit einer Bedingungsanweisung können die Objekte, die wir erstellen, auf die Art von Nahrung reagieren, die wir an <code>eat()</code> übergeben.</p><p>Beende das Hinzufügen der Anweisung, die überprüft, ob <code>food</code> einen bestimmten Wert hat.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (food === \" /><text value=\"&quot;treats&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;discard&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" pet = \" /><text value=\"new\" class=\"keyword\" /><text value=\" VirtualPet(\" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"pet.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"78\" endIndex=\"100\" /><option startIndex=\"134\" endIndex=\"138\" /><option startIndex=\"144\" endIndex=\"167\" /></options></interaction></interactions><output><content><text value=\"discard\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>if (food === \"treats\")</code>, gefolgt von <code>else</code> und schließlich <code>console.log(\"discard\");</code> aus.</p></body></html>"
          },
          {
            "title": "Feed it",
            "id": 56054,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Jedes neue Objekt der <code>VirtualPet</code>-Klasse, das wir erstellen, wird die <code>eat()</code>-Methode verwenden können.</p><p>Rufe <code>eat()</code> erneut auf, aber übergebe dieses Mal <code>\"treats\"</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"VirtualPet\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(name) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" eat(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (food === \" /><text value=\"&quot;treats&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  } \" /><text value=\"else\" class=\"keyword\" /><text value=\" {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;discard&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" pet = \" /><text value=\"new\" class=\"keyword\" /><text value=\" VirtualPet(\" /><text value=\"&quot;Tom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"pet.eat(\" /><text value=\"&quot;treats&quot;\" class=\"string\" /><text value=\");\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"220\" endIndex=\"228\" /></interactions><output><content><text value=\"nom nom\" /></content></output></code><p visible-if=\"wrong\">Gib <code>\"treats\"</code> ein.</p></body></html>"
          },
          {
            "title": "Question: method",
            "id": 56034,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche dieser Möglichkeiten ist der richtige Weg, um mit der Erstellung einer Methode namens <code>update</code> innerhalb einer Klasse zu beginnen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>update()</code></item><item value=\"2\" correct=\"false\"><code>function update()</code></item></selection><p visible-if=\"wrong\">Wähle <code>update()</code> aus.</p></body></html>"
          },
          {
            "title": "Question: method 2",
            "id": 56035,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Kann das Aufrufen einer Klassenmethode einen Wert zurückgeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ja</item><item value=\"2\" correct=\"false\">Nein</item></selection><p visible-if=\"wrong\">Wähle Ja aus.</p></body></html>"
          },
          {
            "title": "Question: method 3",
            "id": 56036,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche dieser Aussagen über Klassen und Methoden ist wahr?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Objekte, die aus einer Klasse erstellt wurden, haben Zugriff auf deren Methoden</item><item value=\"2\" correct=\"false\">Objekte haben keinen Zugriff auf die Methoden in einer Klasse</item></selection><p visible-if=\"wrong\">Objekte, die aus einer Klasse erstellt wurden, haben Zugriff auf deren Methoden.</p></body></html>"
          },
          {
            "title": "Example: method",
            "id": 56115,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge die korrekte Version einer Methode hinzu, die den Batteriestand überprüft.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Device\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(type) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".type = type;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" batteryLevel() {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"60\" endIndex=\"74\" /><option correct=\"false\"><content><text value=\"batteryLevel:\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>batteryLevel()</code> aus.</p></body></html>"
          },
          {
            "title": "Example: method 2",
            "id": 108270,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code den korrekten Weg, um die Klassenmethode von <code>Device</code> zu verwenden.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Device\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(type) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".type = type;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" batteryLevel() {}\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" bag = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Device(\" /><text value=\"&quot;flashlight&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"bag.batteryLevel();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"118\" endIndex=\"121\" /><option startIndex=\"121\" endIndex=\"122\" /><option startIndex=\"122\" endIndex=\"134\" /><option startIndex=\"134\" endIndex=\"135\" /><option startIndex=\"135\" endIndex=\"136\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>bag</code>, gefolgt von <code>.</code> und schließlich <code>batteryLevel</code>, <code>(</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example: method 3",
            "id": 108271,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Beende das Codieren der Methode, die die Inventargröße erhöht.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Inventory\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(size) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".size = size;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" increase() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".size = size + \" /><text value=\"1\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"63\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>increase</code>, gefolgt von <code>(</code> und schließlich <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example: method 4",
            "id": 56037,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die <code>increase</code>-Methode mit dem Argument <code>5</code> auf.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Inventory\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(size) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".size = size;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" increase(unit) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".size += unit;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" bag = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Inventory(\" /><text value=\"10\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"bag.increase(\" /><text value=\"5\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(bag);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"153\" /><option correct=\"false\"><content><text value=\"bag.increase = 5;\" /></content></option></options></interaction></interactions><output><content><text value=\"Inventory { size: 15 }\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>bag.increase(5);</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}