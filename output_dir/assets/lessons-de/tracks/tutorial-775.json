{
  "tutorial": {
    "id": 775,
    "version": 20,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Entscheidungen mit Arrays treffen",
    "descriptionContent": "Lerne, wie man die Elemente eines Arrays zählt und Entscheidungen auf der Grundlage der Länge von Arrays trifft.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6065,
        "title": "Längen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Counting and decision-making",
            "id": 52855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns herausfinden, wie wir die Elemente in Arrays zählen können und diese Informationen auf clevere Weise nutzen.</p></body></html>"
          },
          {
            "title": "Array length",
            "id": 52858,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden das Wort <code>length</code> nach dem Array-Namen und einem Punkt <code>.</code>, um die Anzahl der Elemente in einem Array zu erhalten.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><output><content><text value=\"3\" /></content></output></code></body></html>"
          },
          {
            "title": "Length 2",
            "id": 52859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Probiere es selbst aus: Beginne mit dem Array-Namen und füge einen Punkt <code>.</code> und dann <code>length</code> hinzu.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"71\" /><option correct=\"false\"><content><text value=\"items\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>tasks</code>, gefolgt von <code>.</code> und schließlich <code>length</code> aus.</p></body></html>"
          },
          {
            "title": "Printing",
            "id": 52864,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge <code>console.log()</code> um <code>tasks.length</code> hinzu, um die Länge des <code>tasks</code>-Arrays in der Konsole anzuzeigen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"47\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"71\" endIndex=\"72\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>console.log</code>, gefolgt von <code>(</code> und schließlich <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Assigning 1",
            "id": 52860,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch die Länge eines Arrays in einer Variable speichern.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" length = tasks.length;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(length);\" /></content><output><content><text value=\"3\" /></content></output></code></body></html>"
          },
          {
            "title": "Assigning 2",
            "id": 52861,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle eine <code>length</code>-Variable und speichere die Länge des Arrays darin.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" length = tasks.length;\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"59\" /><option startIndex=\"60\" endIndex=\"61\" /><option startIndex=\"62\" endIndex=\"74\" /><option correct=\"false\"><content><text value=\"items\" /></content></option></options></interaction></interactions><output><content><text value=\"3\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>length</code>, gefolgt von <code>=</code> und schließlich <code>tasks.length</code> aus.</p></body></html>"
          },
          {
            "title": "Array length",
            "id": 52867,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Egal wie viele Elemente sich in einem Array befinden, <code>length</code> wird sie für uns zählen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dusting&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;laundry&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><output><content><text value=\"5\" /></content></output></code></body></html>"
          },
          {
            "title": "Multiple values 2",
            "id": 53486,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Probiere es selbst aus: Zähle die Elemente im <code>tasks</code>-Array.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;dusting&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;laundry&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"86\" /><option startIndex=\"86\" endIndex=\"87\" /><option startIndex=\"87\" endIndex=\"93\" /><option correct=\"false\"><content><text value=\"howMany\" /></content></option></options></interaction></interactions><output><content><text value=\"5\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>tasks</code>, gefolgt von <code>.</code> und schließlich <code>length</code> aus.</p></body></html>"
          },
          {
            "title": "No values 1",
            "id": 52870,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Selbst wenn das <code>tasks</code>-Array leer ist, gibt uns <code>tasks.length</code> die Anzahl der Elemente darin.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><output><content><text value=\"0\" /></content></output></code></body></html>"
          },
          {
            "title": "No values 2",
            "id": 53487,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Speichere ein leeres Array in <code>tasks</code>, um zu sehen, dass seine Länge <code>0</code> ist.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(tasks.length);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"15\" /><option startIndex=\"15\" endIndex=\"16\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option></options></interaction></interactions><output><content><text value=\"0\" /></content></output></code><p /><p visible-if=\"wrong\">Wähle <code>[</code>, gefolgt von <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "If 1",
            "id": 52871,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können die Länge eines Arrays verwenden, um <strong>Bedingungsanweisungen</strong> zu erstellen, die von der Anzahl seiner Elemente abhängen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (tasks.length &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Ugh, more work!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /></content><output><content><text value=\"Ugh, more work!\" /></content></output></code></body></html>"
          },
          {
            "title": "If 2",
            "id": 52872,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Probier es aus: Zeige die Nachricht nur an, wenn <code>tasks.length</code> größer als <code>0</code> ist.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" tasks = [\" /><text value=\"&quot;dishes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;windows&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vacuum&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" (tasks.length &gt; \" /><text value=\"0\" class=\"number\" /><text value=\") {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Ugh, more work!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"63\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"66\" endIndex=\"67\" /><option correct=\"false\"><content><text value=\"&lt;\" /></content></option></options></interaction></interactions><output><content><text value=\"Ugh, more work!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>tasks.length</code>, gefolgt von <code>&gt;</code> und schließlich <code>0</code> aus.</p></body></html>"
          },
          {
            "title": "For loop",
            "id": 52873,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch die Länge eines Arrays verwenden, um <strong>for-Schleifen</strong> zu erstellen, die alle seine Elemente durchlaufen.</p><p>Dafür wiederholen wir eine Schleife so oft, wie es Elemente im Array gibt, unter Verwendung der <code>length</code>-Eigenschaft.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Ana&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><output><content><text value=\"Ana\" /><text type=\"break\" /><text value=\"Eve\" /><text type=\"break\" /><text value=\"Sam\" /></content></output></code></body></html>"
          },
          {
            "title": "Two executions",
            "id": 52874,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wiederhole die for-Schleife zweimal, indem du angibst, dass <code>i</code> kleiner als die <code>length</code> des Arrays sein muss.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"52\" /><option correct=\"false\"><content><text value=\"i &gt;\" /></content></option></options></interaction></interactions><output><content><text value=\"Anna\" /><text type=\"break\" /><text value=\"Tim\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>i &lt;</code> aus.</p></body></html>"
          },
          {
            "title": "Using length",
            "id": 53209,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Führe die <code>for</code>-Schleife dreimal aus, indem du angibst, dass <code>i</code> kleiner als <code>friends.length</code> sein muss.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"57\" /><option startIndex=\"58\" endIndex=\"59\" /><option startIndex=\"60\" endIndex=\"74\" /></options></interaction></interactions><output><content><text value=\"Anna\" /><text type=\"break\" /><text value=\"Tim\" /><text type=\"break\" /><text value=\"Eve\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>i</code>, gefolgt von <code>&lt;</code> und schließlich <code>friends.length</code> aus.</p></body></html>"
          },
          {
            "title": "Indices",
            "id": 53190,
            "contentType": "interactive",
            "images": [
              {
                "id": "0debb578-789e-4916-a546-1dffe569a0c5"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><img src=\"0debb578-789e-4916-a546-1dffe569a0c5\" visible-if=\"always\" /><p>Die Zählervariable, <code>i</code>, speichert die Werte <code>0</code>, <code>1</code> und <code>2</code>, während die Schleife wiederholt wird. Aber <code>0</code>, <code>1</code> und <code>2</code> sind auch die <strong>Indizes</strong> der Elemente in <code>friends</code>.</p></body></html>"
          },
          {
            "title": "Counter variable",
            "id": 52875,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Also speichert <code>i</code> jedes Mal, wenn die Schleife wiederholt wird, einen <strong>Index</strong> eines Elements im <code>friends</code>-Array. Und wir können den Index verwenden, um auf das Element zuzugreifen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><output><content><text value=\"Anna\" /><text type=\"break\" /><text value=\"Tim\" /><text type=\"break\" /><text value=\"Eve\" /></content></output></code></body></html>"
          },
          {
            "title": "Looping through",
            "id": 52876,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nimm die Schleife für eine Runde: Verwende die Zählvariable <code>i</code> als Index, um alle Elemente in <code>friends</code> anzuzeigen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" friends = [\" /><text value=\"&quot;Tim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ana&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sam&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eve&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"let\" class=\"keyword\" /><text value=\" i = \" /><text value=\"0\" class=\"number\" /><text value=\"; i &lt; friends.length; i++) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(friends[i]);\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"102\" endIndex=\"109\" /><option startIndex=\"109\" endIndex=\"110\" /><option startIndex=\"110\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option correct=\"false\"><content><text value=\"x\" /></content></option></options></interaction></interactions><output><content><text value=\"Tim\" /><text type=\"break\" /><text value=\"Ana\" /><text type=\"break\" /><text value=\"Sam\" /><text type=\"break\" /><text value=\"Eve\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>friends</code>, gefolgt von <code>[</code> und schließlich <code>i</code>, <code>]</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}