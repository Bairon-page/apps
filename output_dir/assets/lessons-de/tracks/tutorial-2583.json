{
  "tutorial": {
    "id": 2583,
    "version": 3,
    "type": "course",
    "isNew": false,
    "codeLanguage": "swift",
    "title": "Verwendung von True und False",
    "descriptionContent": "Verwendung von True und False",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14345,
        "title": "Booleans",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "True",
            "id": 127639,
            "contentType": "interactive",
            "images": [
              {
                "id": "26682a0e-d638-46f2-b617-09a49f8c4fac"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><img src=\"26682a0e-d638-46f2-b617-09a49f8c4fac\" visible-if=\"always\" /><p>Es gibt einen speziellen Wert, der <em>weder</em> ein String <em>noch</em> eine Zahl ist: <code>true</code>.</p><p>Es gibt keine Anführungszeichen darum, und es ist kein numerischer Wert.</p></body></html>"
          },
          {
            "title": "Displaying true",
            "id": 127640,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>true</code> ist großartig für Situationen wie das Überprüfen, ob ein Schalter eingeschaltet ist oder ob ein Feature aktiviert ist.</p><p>Gib <code>true</code> in der Konsole aus.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Allow updates&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"29\" endIndex=\"33\" /></interactions><output><content><text value=\"Allow updates\" /><text type=\"break\" /><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Gib <code>true</code> ein.</p></body></html>"
          },
          {
            "title": "Saving true ",
            "id": 127641,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können <code>true</code> in einer Variable speichern, genau wie einen String oder eine Zahl.</p><p>Speichere <code>true</code> in einer Variable und zeige sie in der Konsole an.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" correct = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(correct)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"18\" /><option startIndex=\"25\" endIndex=\"32\" /></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>true</code>, gefolgt von <code>correct</code> aus.</p></body></html>"
          },
          {
            "title": "False",
            "id": 127642,
            "contentType": "interactive",
            "images": [
              {
                "id": "8261bf24-5eaa-4c32-91bb-0008c4dce8bc"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>false</code> ist ein weiterer spezieller Wert und das Gegenteil von <code>true</code>. Wir können es wie <code>true</code> verwenden.</p><img src=\"8261bf24-5eaa-4c32-91bb-0008c4dce8bc\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "Displaying false",
            "id": 127643,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Speichere den Wert <code>false</code> in der Variable <code>status</code> und zeige <code>status</code> in der Konsole an.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Device charged&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" status = \" /><text value=\"false\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(status)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"42\" /><option startIndex=\"49\" endIndex=\"55\" /><option correct=\"false\"><content><text value=\"let\" /></content></option></options></interaction></interactions><output><content><text value=\"Device charged\" /><text type=\"break\" /><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>false</code>, gefolgt von <code>status</code> aus.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 127644,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wofür sind die Werte <code>true</code> und <code>false</code> gut zu verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Anzeigen, ob eine Funktion ein- oder ausgeschaltet ist</item><item value=\"2\" correct=\"false\">Speichern von Werten von eins bis fünf</item></selection><p visible-if=\"wrong\">Anzeigen, ob eine Funktion ein- oder ausgeschaltet ist.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 127645,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum ist <code>false</code> kein String?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" autoPlay = \" /><text value=\"false\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es gibt keine Anführungszeichen darum</item><item value=\"2\" correct=\"false\">Es wird in einer Variable gespeichert</item></selection><p visible-if=\"wrong\">Es gibt keine Anführungszeichen darum.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 127646,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wähle diejenige aus, die am besten zeigt, dass ein Benutzer ein Abonnement für einen Dienst gekündigt hat.</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>var subscribed = false</code></item><item value=\"2\" correct=\"false\"><code>var subscribed = true</code></item></selection><p visible-if=\"wrong\"><code>var subscribed = false</code>.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 127647,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum ist <code>\"false\"</code> nicht dasselbe wie <code>false</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es gibt Anführungszeichen darum, also ist <code>\"false\"</code> ein String</item><item value=\"2\" correct=\"false\"><code>\"false\"</code> und <code>false</code> sind dasselbe</item></selection><p visible-if=\"wrong\">Es gibt Anführungszeichen darum, also ist <code>\"false\"</code> ein String.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 127648,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zeige den Status der Auto-Update-Einstellung, indem du <code>false</code> in der Konsole anzeigst.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"&quot;Auto update&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(\" /><text value=\"false\" class=\"literal\" /><text value=\")\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"27\" /><option startIndex=\"27\" endIndex=\"32\" /><option startIndex=\"32\" endIndex=\"33\" /></options></interaction></interactions><output><content><text value=\"Auto update\" /><text type=\"break\" /><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>(</code> und schließlich <code>false</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 127649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle die Konstante <code>autoSaveImage</code> und speichere <code>true</code> darin.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" autoSaveImage = \" /><text value=\"true\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"4\" endIndex=\"17\" /><option startIndex=\"20\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>let</code>, gefolgt von <code>autoSaveImage</code> und schließlich <code>true</code> aus.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 127650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verhindere Cookies, indem du die Variable erstellst und <code>false</code> darin speicherst.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" allowCookies = \" /><text value=\"false\" class=\"literal\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"&quot;false&quot;\" /></content></option><option startIndex=\"4\" endIndex=\"16\" /><option startIndex=\"19\" endIndex=\"24\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>allowCookies</code>, gefolgt von <code>false</code> aus.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 127651,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Stelle die Auto-Play-Einstellungen ein, indem du <code>true</code> codierst.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" autoPlay = \" /><text value=\"true\" class=\"literal\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"15\" endIndex=\"19\" /></interactions></code><p visible-if=\"wrong\">Gib <code>true</code> ein.</p></body></html>"
          }
        ]
      },
      {
        "id": 14346,
        "title": "Werte negieren",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "True to false",
            "id": 127652,
            "contentType": "interactive",
            "images": [
              {
                "id": "43fe9335-d3fc-495c-901c-9b0ab2bf6bc5"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><img src=\"43fe9335-d3fc-495c-901c-9b0ab2bf6bc5\" visible-if=\"always\" /><p>Ein <code>!</code>-Zeichen vor <code>true</code> führt dazu, dass der Ausdruck <code>false</code> ergibt. Wenn etwas nicht wahr ist, muss es falsch sein.</p><p>Das <code>!</code>-Zeichen ist der <strong>Negationsoperator</strong>. Es wandelt Werte in ihr <strong>Gegenteil</strong> um.</p></body></html>"
          },
          {
            "title": "Change true to false",
            "id": 127653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir einen Wert mit <code>!</code> in sein Gegenteil ändern, negieren wir ihn.</p><p>Setze ein <code>!</code>-Zeichen vor <code>true</code>, um seinen Wert zu ändern.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"11\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>!</code>, gefolgt von <code>true</code> aus.</p></body></html>"
          },
          {
            "title": "Change false to true",
            "id": 127654,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der <code>!</code> Operator vor <code>false</code> ändert ebenfalls seinen Wert. Wenn ein Wert nicht <code>false</code> ist, muss er <code>true</code> sein.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"false\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"6\" endIndex=\"7\" /><option startIndex=\"7\" endIndex=\"12\" /></options></interaction></interactions><output><content><text value=\"true\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>!</code>, gefolgt von <code>false</code> aus.</p></body></html>"
          },
          {
            "title": "Negate variables",
            "id": 127655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können den <code>!</code>-Operator mit Variablen verwenden, um die Werte, die sie speichern, zu negieren.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isMorning = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(!isMorning)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"27\" endIndex=\"28\" /><option startIndex=\"28\" endIndex=\"37\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>!</code>, gefolgt von <code>isMorning</code> aus.</p></body></html>"
          },
          {
            "title": "Saving negation",
            "id": 127656,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können eine ganze Negation auch in einer anderen Variable speichern.</p><p>Erstelle die Variable <code>isEvening</code> und verwende <code>!</code>, um <code>isMorning</code> in <code>false</code> zu ändern.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" isMorning = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isEvening = !isMorning\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(isEvening)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"34\" /><option startIndex=\"35\" endIndex=\"36\" /><option startIndex=\"37\" endIndex=\"38\" /><option startIndex=\"38\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>isEvening</code>, gefolgt von <code>=</code> und schließlich <code>!</code>, <code>isMorning</code> aus.</p></body></html>"
          },
          {
            "title": "Question 1",
            "id": 127657,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht der <code>!</code> Operator in Swift?</p><selection multiple=\"multiple\"><item correct=\"true\" value=\"1\">Es wandelt <code>true</code> oder <code>false</code> Boolean-Werte in ihr Gegenteil um</item><item correct=\"false\" value=\"2\">Es überprüft, ob Werte gleich sind</item></selection><p visible-if=\"wrong\">Es wandelt <code>true</code> oder <code>false</code> Boolean-Werte in ihr Gegenteil um.</p></body></html>"
          },
          {
            "title": "Question 2",
            "id": 127658,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum zeigt dieser Code <code>false</code> in der Konsole an?</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" latestVersion = !\" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"print\" class=\"built_in\" /><text value=\"(latestVersion)\" /></content><output><content><text value=\"false\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der <code>!</code>-Operator vor <code>true</code> ändert seinen Wert in false</item><item value=\"2\" correct=\"false\">Variablen werden in der Konsole immer als <code>false</code> angezeigt</item></selection><p visible-if=\"wrong\">Der <code>!</code>-Operator vor <code>true</code> ändert seinen Wert in false.</p></body></html>"
          },
          {
            "title": "Question 3",
            "id": 127659,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie nennen wir das <code>!</code>-Zeichen vor <code>true</code> oder <code>false</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Das <code>!</code>-Zeichen ist der Negationsoperator</item><item value=\"2\" correct=\"false\">Das <code>!</code>-Zeichen ist der Additionsoperator</item></selection><p visible-if=\"wrong\">Das <code>!</code>-Zeichen ist der Negationsoperator.</p></body></html>"
          },
          {
            "title": "Question 4",
            "id": 127660,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welchen Wert speichert <code>result</code>?</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"let\" class=\"keyword\" /><text value=\" result = !\" /><text value=\"true\" class=\"literal\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>false</code></item><item value=\"2\" correct=\"false\"><code>true</code></item></selection><p visible-if=\"wrong\">Wähle <code>false</code> aus.</p></body></html>"
          },
          {
            "title": "Example 1",
            "id": 127661,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende den Negationsoperator und speichere einen Wert in der Variable.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" allowPopups = !\" /><text value=\"true\" class=\"literal\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"19\" /><option startIndex=\"19\" endIndex=\"23\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>!</code>, gefolgt von <code>true</code> aus.</p></body></html>"
          },
          {
            "title": "Example 2",
            "id": 127662,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zeige <code>false</code> in der Konsole an.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option correct=\"false\"><content><text value=\"!false\" /></content></option><option startIndex=\"6\" endIndex=\"11\" /></options></interaction></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>!true</code> aus.</p></body></html>"
          },
          {
            "title": "Example 3",
            "id": 127663,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle die Variable und speichere den negierten Wert darin.</p><code version=\"2\" codelang=\"swift\" name=\"main.swift\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" openSlot = \" /><text value=\"true\" class=\"literal\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" isAvailable = !openSlot\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"23\" /><option startIndex=\"24\" endIndex=\"35\" /><option startIndex=\"38\" endIndex=\"47\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>let</code>, gefolgt von <code>isAvailable</code> und schließlich <code>!openSlot</code> aus.</p></body></html>"
          },
          {
            "title": "Example 4",
            "id": 127664,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code <code>!true</code> innerhalb der print-Anweisung.</p><code name=\"main.swift\" version=\"2\" codelang=\"swift\"><content><text value=\"print\" class=\"built_in\" /><text value=\"(!\" /><text value=\"true\" class=\"literal\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"6\" endIndex=\"11\" /></interactions><output><content><text value=\"false\" /></content></output></code><p visible-if=\"wrong\">Gib <code>!true</code> ein.</p></body></html>"
          }
        ]
      }
    ]
  }
}