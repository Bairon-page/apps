{
  "tutorial": {
    "id": 1953,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Flugbuchungs-App",
    "descriptionContent": "Erstelle eine einfache Flugbuchungs-App mit Typen und Vergleichen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1953-icon-banner.svg",
    "chapters": [
      {
        "id": 12588,
        "title": "Flugbuchungs-App",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Starter Code",
            "id": 113811,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns unser Wissen über Typen und Vergleiche nutzen, um eine einfache Flugbuchungs-App zu erstellen.\n\nWir haben etwas Starter-Code bereitgestellt. Sieh dir die Beschreibung unten an, um zu sehen, was bereits vorhanden ist.\n\n1. In `index.html` gibt es ein `h1`-Element, gefolgt von einem `div`-Element. Innerhalb des `div`-Elements gibt es einige `p`-Elemente, die Informationen zur Flugbuchung anzeigen.\n2. In `style.css` haben wir Stil-Eigenschaften für alle Elemente zugewiesen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n background: mintcream;\r\n font-family: Poppins;\r\n text-align: center;\r\n}\r\n\r\nh1 {\r\n background: turquoise;\r\n padding: 10px;\r\n color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n border-style: dashed;\r\n}\r\n\r\np {\r\n font-weight: bold;\r\n}\r\n\r\nspan {\r\n font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logging Name",
            "id": 113812,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es gibt ein paar Dinge, die wir beachten müssen, wenn wir einen Flug buchen, wie z.B. notwendige Ausweisinformationen, die Art des enthaltenen Gepäcks usw.\n\nIn dieser App beginnen wir mit einigen erforderlichen Informationen für die Buchung eines Fluges.\n\nZuerst holen wir uns den Namen des Passagiers.\n\n1. Erstelle eine Konstante mit dem Namen `nameOnPass` und speichere den Namen deiner Wahl in der Konstante.\n2. Gib `\"Passenger Name: \" + nameOnPass` in der Konsole aus.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to print anything in the console.\n\nUse `const <constantName> = <constantValue>` to create a constant."
                }
              ]
            }
          },
          {
            "title": "Checking ID",
            "id": 113813,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes muss die ID überprüft werden. Um bestätigt zu werden, muss der Name auf der ID mit dem vom Passagier angegebenen Namen übereinstimmen.\n\n1. Erstelle eine Konstante namens `nameOnId`. Speichere einen Namen deiner Wahl darin. Der Name kann derselbe wie der vorherige Name oder ein anderer sein. Das Ergebnis wird `true` sein, wenn der Name übereinstimmt, und `false`, wenn der Name nicht übereinstimmt.\n2. Überprüfe, ob `nameOnPass` gleich `nameOnId` ist, und speichere den Vergleich in einer Konstante namens `nameMatch`.\n3. Gib `\"ID bestätigt? \" + nameMatch` in der Konsole aus.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `===` operator to check if one value equals another value."
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Length",
            "id": 113814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nun, da die ID des Passagiers bestätigt ist, müssen wir überprüfen, ob das Handgepäck für den Flug geeignet ist, indem wir die Länge und Höhe des Gepäcks überprüfen.\n\nBeginnen wir mit der Länge. Die Länge muss weniger als 30 cm betragen, um zu bestehen.\n\n1. Erstelle eine Konstante mit dem Namen `length` und speichere eine Zahl deiner Wahl darin.\n2. Überprüfe, ob `length` weniger als 30 ist, und speichere den Vergleich in einer Konstante namens `doesLengthPass`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `<` operator to check if a value is greater than another value. "
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Height",
            "id": 113815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir werden die gleiche Überprüfung mit der Höhe durchführen. Die Höhe muss weniger als 55 cm betragen, um zu bestehen.\n\n1. Erstelle eine `const` Variable namens `height` und speichere die Zahl deiner Wahl darin.\n2. Überprüfe, ob `height` weniger als 55 ist, und speichere den Vergleich in einer Konstante namens `doesHeightPass`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Refer to the previous code. "
                }
              ]
            }
          },
          {
            "title": "Checking Hand Baggage Eligibility",
            "id": 113816,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich, nachdem wir die Länge und die Höhe überprüft haben, können wir prüfen, ob das Handgepäck geeignet ist oder nicht.\n\nAber hier ist eine knifflige Sache. Wir haben zwei Bedingungen: `doesLengthPass`, die überprüft, ob `length` kleiner als 30 ist, und `doesHeightPass`, die überprüft, ob `height` kleiner als 55 ist.\n\nWir brauchen *beide* Bedingungen, um `true` zu sein, damit das Handgepäck geeignet ist. Wie können wir beide Bedingungen zusammen überprüfen? Wir verwenden einen logischen Operator namens **AND** (verwendet als `&&`). `AND` gibt nur `true` zurück, wenn beide Bedingungen `true` sind.\n\n1. Um beide Bedingungen zusammen mit `&&` zu überprüfen, setze einfach `&&` zwischen die Bedingungen. In diesem Fall schreibe `doesLengthPass && doesHeightPass` und speichere es in einer Konstante namens `isHandBaggageEligible`. Sieh dir den Hinweis für ein Beispiel an.\n2. Gib `\"Is Hand Baggage Eligible? \" + isHandBaggageEligible` in der Konsole aus.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Here's an example to explain the outcome. Say, the length is 23 and the height is 60. Here, `isLengthExcess` will store `true` since the length is less than 30 and `isHeightExcess` will store `false` since the height is less than 55. Since one condition is `false`, `isLengthExcess && isHeightExcess` will return `false`. "
                }
              ]
            }
          },
          {
            "title": "Round Trip Check",
            "id": 113817,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Perfekt! Jetzt überprüfen wir, ob der Flug ein Hin- und Rückflug ist oder nicht.\n\nIn dieser App kann ein Benutzer mehr als eine Art von Flug buchen, sowohl Hin- und Rückflug als auch Einzelflug. Wir möchten Hin- und Rückflüge identifizieren.\n\nWie werden wir bestätigen, dass es sich um einen Hin- und Rückflug handelt und nicht um 2 Einzelflüge? Wir möchten eine Überprüfung erstellen, um zu bestätigen, ob es sich um einen Hin- und Rückflug handelt, indem wir prüfen, ob das Ziel des aktuellen Fluges und der Ursprung des Rückfluges identisch sind.\n\n1. Erstelle eine Konstante namens `flightDes` und speichere eine Stadt deiner Wahl darin. Diese Konstante wird das Ziel des aktuellen Fluges darstellen.\n2. Erstelle eine weitere Konstante namens `returnFrom` und speichere eine Stadt deiner Wahl darin. Die Stadt kann dieselbe wie `flightDes` sein. Diese Konstante wird den Ort darstellen, von dem der Passagier zurückkehrt.\n3. Überprüfe, ob `flightDes` gleich `returnFrom` ist und speichere den Vergleich in einer Konstante namens `isRoundTrip`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logging Round Trip Check",
            "id": 113823,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nach der Überprüfung möchten wir das Ergebnis anzeigen.\n\n1. Gib `\"Round Trip Check? \"` gefolgt von `isRoundTrip` in der Konsole aus.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Flight Capacity Check",
            "id": 113818,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "ID? Check. Handgepäck? Check. Hin- und Rückflug? Check.\n\nAber Moment mal! Ist der Flug überhaupt verfügbar? Lass uns noch einmal nachsehen, um sicherzugehen!\n\n1. Erstelle eine Konstante namens `bookings` und speichere die Zahl deiner Wahl darin. Diese Konstante repräsentiert die aktuelle Anzahl der Buchungen für den Flug, d.h. wie viele Flugplätze bereits belegt sind.\n2. Erstelle eine weitere Konstante namens `totalCapacity` und speichere die Zahl deiner Wahl darin. Diese Konstante repräsentiert die Gesamtanzahl der Sitze im Flugzeug.\n3. Überprüfe, ob die belegte Anzahl der Sitze kleiner ist als die Gesamtanzahl der Sitze im Flugzeug und speichere den Vergleich in einer Konstante namens `isFlightAvailable`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Check if `bookings` is less than `totalCapacity`.\n2. Use `<` operator to check if a value is less than another value. "
                }
              ]
            }
          },
          {
            "title": "Logging Flight Capacity Check",
            "id": 113824,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jetzt wollen wir anzeigen, ob der Flug verfügbar ist oder nicht.\n\n1. Gib `\"Are seats available? \"` gefolgt von `isFlightAvailable` in der Konsole aus.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `console.log` to print anything in the console."
                }
              ]
            }
          },
          {
            "title": "Displaying Information",
            "id": 113819,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gute Arbeit! Wir haben erfolgreich die Benutzer-Flugbuchungsinformationen überprüft und angezeigt!\n\nLass uns den nächsten Schritt machen, indem wir das Ergebnis auf der bereits vorhandenen HTML-Seite anzeigen.\n\nAuf diese Weise können wir sehen, wie unsere Konsolenausgabe auf der HTML-Seite angezeigt wird, die der Benutzer sehen wird.\n\n1. Kopiere und füge den gegebenen Code *unterhalb des bestehenden Codes* ein. Dadurch wird die HTML-Seite mit den Ergebniswerten aktualisiert, die wir zuvor in der Konsole ausgegeben haben. Mach dir keine Sorgen, wenn du den Code noch nicht vollständig verstehst, da wir in weiteren Lektionen mehr darüber lernen werden. Aber wenn du trotzdem ein bisschen darüber lernen möchtest, schau dir den Hinweisbereich an.\n```javascript\ndocument.querySelector(\"#name\").innerHTML = nameOnPass;\ndocument.querySelector(\"#id\").innerHTML = nameMatch;\ndocument.querySelector(\"#bag\").innerHTML = isHandBaggageEligible;\ndocument.querySelector(\"#des\").innerHTML = isRoundTrip;\ndocument.querySelector(\"#seat\").innerHTML = isFlightAvailable;\n```",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n  </head>\n  <body>\n    <h1>Flight Booking</h1>\n    <div>\n      <p>Passenger Name: <span id=\"name\"></span></p>\n      <p>ID confirmed?: <span id=\"id\"></span></p>\n      <p>Is Hand Baggage eligible?: <span id=\"bag\"></span></p>\n      <p>Round Trip Check?: <span id=\"des\"></span></p>\n      <p>Are seats available?: <span id=\"seat\"></span></p>\n    </div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@300&display=swap');\r\n\r\nbody {\r\n  background: mintcream;\r\n  font-family: Poppins;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  background: turquoise;\r\n  padding: 10px;\r\n  color: whitesmoke;\r\n}\r\n\r\ndiv {\r\n  border-style: dashed;\r\n}\r\n\r\np {\r\n  font-weight: bold;\r\n}\r\n\r\nspan {\r\n  font-weight: lighter;\r\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);",
                  "solvedContent": "const nameOnPass = \"Suzanne Parker\";\r\nconsole.log(\"Passenger Name: \" + nameOnPass);\r\nconst nameOnId = \"Suzanne Parker\";\r\nconst nameMatch = nameOnPass === nameOnId;\r\nconsole.log(\"ID confirmed? \" + nameMatch);\r\nconst length = 25;\r\nconst doesLengthPass = length < 30;\r\nconst height = 57;\r\nconst doesHeightPass = height < 55;\r\nconst isHandBaggageEligible = doesHeightPass && doesLengthPass;\r\nconsole.log(\"Is Hand Baggage Eligible? \" + isHandBaggageEligible);\r\nconst flightDes = \"Paris\";\r\nconst returnFrom = \"Paris\";\r\nconst isRoundTrip = flightDes === returnFrom;\r\nconsole.log(\"Round Trip Check? \" + isRoundTrip);\r\nconst bookings = 120;\r\nconst totalCapacity = 150;\r\nconst isFlightAvailable = bookings < totalCapacity;\r\nconsole.log(\"Are seats available? \" + isFlightAvailable);\r\ndocument.querySelector(\"#name\").innerHTML = nameOnPass;\r\ndocument.querySelector(\"#id\").innerHTML = nameMatch;\r\ndocument.querySelector(\"#bag\").innerHTML = isHandBaggageEligible;\r\ndocument.querySelector(\"#des\").innerHTML = isRoundTrip;\r\ndocument.querySelector(\"#seat\").innerHTML = isFlightAvailable;"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "`document.querySelector` returns the HTML element that matches a CSS selector.\nFor example, `document.querySelector(\"h1\")` will return the `h1` element in this code. \nSimilarly, `document.querySelector(\"#name\"`) will return the `span` element whose `id` attribute is set to `name`. "
                }
              ]
            }
          }
        ]
      }
    ]
  }
}