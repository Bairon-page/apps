{
  "tutorial": {
    "id": 1623,
    "version": 11,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "POST-Anfragen",
    "descriptionContent": "Lerne, wie du eine POST-Anfrage verwendest, um Daten an einen Server zu senden",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 11127,
        "title": "POST",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 103320,
            "contentType": "interactive",
            "images": [
              {
                "id": "5d5e1f86-5b01-497f-8ee6-04ace8d2921f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn es um HTTP-Methoden geht, können wir sie grob in zwei Kategorien einteilen.</p><p>Es gibt Methoden, die ein Datenstück oder ein Serververhalten <em>anfordern</em>, wie <code>GET</code>, und solche, die Daten an den Server <em>senden</em>.</p><img src=\"5d5e1f86-5b01-497f-8ee6-04ace8d2921f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "POST",
            "id": 103321,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>POST</code> ist eine Anfragemethode, die wir verwenden, um neue Daten an den Server zu <em>senden</em>, wie zum Beispiel einen neuen Kurs, den Mimo anbieten möchte.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>POST</code> aus.</p></body></html>"
          },
          {
            "title": "POST URL",
            "id": 103325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>`POST basiert auf einer URL, die die Serveradresse enthält, zusammen mit der Art der Ressource, mit der die neuen Daten <em>verknüpft</em> sind.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"21\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>mimo.org</code> aus.</p></body></html>"
          },
          {
            "title": "POST URL 2",
            "id": 103332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Diese URL der <code>POST</code>-Anfrage sagt uns, dass dieses neue Datenstück unter <code>courses</code> gespeichert werden soll.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"22\" /><option startIndex=\"22\" endIndex=\"29\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>/</code>, gefolgt von <code>courses</code> aus.</p></body></html>"
          },
          {
            "title": "POST URL Query Parameters",
            "id": 103333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Im Gegensatz zu <code>GET</code> verwenden <code>POST</code>-Anfragen selten Abfrageparameter in ihrer URL und verlassen sich stattdessen auf den Anfragekörper.</p><p>Der Anfrage-Body enthält die Daten, die an den Server gesendet werden, typischerweise in Formaten wie JSON.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/courses\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;languages&quot;\" class=\"string\" /><text value=\": [\" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"32\" /><option startIndex=\"86\" endIndex=\"87\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>{</code>, gefolgt von <code>}</code> aus.</p></body></html>"
          },
          {
            "title": "Question: POST",
            "id": 103338,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wofür verwenden wir <code>POST</code>-Anfragen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Zum Senden neuer Daten an den Server</item><item value=\"2\" correct=\"false\">Zum Abrufen von Daten vom Server</item></selection><p visible-if=\"wrong\">Zum Senden neuer Daten an den Server.</p></body></html>"
          },
          {
            "title": "Question: POST URL",
            "id": 103339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie weiß der Browser, wohin die Daten in der <code>POST</code>-Anfrage gesendet werden sollen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Über die Serveradresse in der URL der Anfrage</item><item value=\"2\" correct=\"false\">Indem du die Daten liest, die die Anfrage sendet</item></selection><p visible-if=\"wrong\">Über die Serveradresse in der URL der Anfrage.</p></body></html>"
          },
          {
            "title": "Question: POST URL 2",
            "id": 103340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn du dir diese URL ansiehst, worauf könnten sich die Daten beziehen, die wir senden?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein neuer Artikel, der von jemandem eingereicht wurde</item><item value=\"2\" correct=\"false\">Ein neuer Benutzer, der sich angemeldet hat</item></selection><p visible-if=\"wrong\">Ein neuer Artikel, der von jemandem eingereicht wurde.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 103342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine HTTP-Anfragemethode, die neue Daten an einen Server sendet.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option correct=\"false\"><content><text value=\"GET\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>POST</code> aus.</p></body></html>"
          },
          {
            "title": "Example: POST URL",
            "id": 103344,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sende eine <code>POST</code>-Anfrage an einen Server bei <code>fakenews.com</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Gib <code>POST</code> ein.</p></body></html>"
          },
          {
            "title": "Example: POST URL 2",
            "id": 103345,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Teile dem Server über die URL der <code>POST</code>-Anfrage mit, dass die Daten, die du sendest, ein neuer Artikel sind.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;Believe it or not ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>/</code>, gefolgt von <code>article</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 11128,
        "title": "Anfrage & Antwort",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "POST Body",
            "id": 103326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>POST</code>-Anfragen sehen in Express den <code>GET</code>-Anfragen sehr ähnlich aus.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"8\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>post</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2",
            "id": 103327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie bei <code>GET</code>-Anfragen definieren wir auch den Endpunkt für <code>POST</code>-Anfragen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"9\" endIndex=\"17\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"/users\"</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy",
            "id": 132314,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Im Gegensatz zu <code>GET</code>-Anfragen, die einen leeren Body haben, <code>POST</code>-Anfragen <em>enthalten</em> Daten in ihrem Anfrage-Body.</p><p>Wir können auf den Body des Request-Objekts über <code>req.body</code> zugreifen.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"59\" /><option startIndex=\"59\" endIndex=\"64\" /></options></interaction></interactions><output><content><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin24&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.body</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy",
            "id": 132315,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um den Zugriff auf den Body zu ermöglichen, müssen wir unserer express App mitteilen, <code>express.json</code> zu verwenden, ein eingebautes Middleware.</p><p>Wir werden bald Middleware behandeln. Für den Moment solltest du wissen, dass sie uns hilft, eingehende JSON-Daten zu parsen, sodass wir mit den Bodies der Anfragen arbeiten können.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"101\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin24&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>express.json()</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy",
            "id": 132316,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Denke daran, dass JSON ein JavaScript-Objekt darstellt. Sobald wir es geparst haben, können wir auf die Daten im Anfragekörper zugreifen und mit ihnen arbeiten.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(username);\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(email);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"96\" endIndex=\"104\" /><option startIndex=\"133\" endIndex=\"138\" /></options></interaction></interactions><output><content><text value=\"_crazyPumpkin24\" /><text type=\"break\" /><text value=\"mia@mimo.org\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>username</code>, gefolgt von <code>email</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - Copy",
            "id": 132317,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns eine Antwort an den Client senden, genau wie wir es bei <code>GET</code>-Anfragen tun, indem wir Daten wie HTML, Text oder JSON liefern.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"75\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - ",
            "id": 132319,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Standardstatus, wenn alles nach Plan verläuft und ein neues Element erstellt oder zur Datenbank hinzugefügt wird, ist <code>201 Created</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"87\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>.</code>, gefolgt von <code>status(201)</code> und schließlich <code>.</code>, <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "POST Body 2 - Copy - Copy - Copy",
            "id": 132320,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um einen neuen Benutzer zu erstellen, benötigen wir möglicherweise bestimmte Parameter, wie eine E-Mail, die mit der Anfrage gesendet werden müssen.</p><p>Wenn wir alle Daten haben und den Benutzer hinzufügen können, senden wir <code>201 Created</code>. Wenn Daten fehlen, senden wir <code>400 Bad Request</code> mit einer Fehlermeldung.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"224\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"Email is required\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>400</code>, gefolgt von <code>201</code> aus.</p></body></html>"
          },
          {
            "title": "POST Headers",
            "id": 103330,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine <code>POST</code>-Anfrage hat Header, die zusätzlichen Kontext liefern, wie zum Beispiel <code>Content-Type</code>, das uns das Format des Anfragekörpers angibt.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin24&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>Content-Type:</code>, gefolgt von <code>application/json</code> aus.</p></body></html>"
          },
          {
            "title": "POST Headers 2",
            "id": 103329,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Du kannst sehen, dass der <code>POST</code>-Anfragekörper den <code>Content-Type</code><code>application/json</code> hat.</p><p>Dies ist der Fall für die meisten API-Anfragen. Andere Formate werden für Dinge wie Formulardaten oder Datei-Uploads verwendet.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://mimo.org/users\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin24&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"57\" endIndex=\"68\" /><option startIndex=\"68\" endIndex=\"69\" /><option startIndex=\"69\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>application</code>, gefolgt von <code>/</code> und schließlich <code>json</code> aus.</p></body></html>"
          },
          {
            "title": "Question: POST Body",
            "id": 103347,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wo speichern <code>POST</code>-Anfragen die Daten, die sie an den Server senden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Im Anforderungstext</item><item value=\"2\" correct=\"false\">Nur in der URL, als Werte von Abfrageparametern</item></selection><p visible-if=\"wrong\">Im Anforderungstext.</p></body></html>"
          },
          {
            "title": "Example: POST Body JSON",
            "id": 103354,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle einen <code>POST</code>-Endpunkt für <code>/users</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hello from the endpoint!&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"3\" endIndex=\"4\" /><option startIndex=\"4\" endIndex=\"8\" /><option startIndex=\"9\" endIndex=\"17\" /><option correct=\"false\"><content><text value=\"/users\" /></content></option><option correct=\"false\"><content><text value=\"get\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>app</code>, gefolgt von <code>.</code> und schließlich <code>post</code>, <code>\"/users\"</code> aus.</p></body></html>"
          },
          {
            "title": "Question: POST Body 2",
            "id": 103348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was könnte diese `POST request an den Server senden?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy &gt;:(&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Kommentar zu einem Artikel, der den Kommentartext und den Autor enthält</item><item value=\"2\" correct=\"false\">Die Daten eines Benutzers, einschließlich Benutzername und Beschreibung</item></selection><p visible-if=\"wrong\">Ein Kommentar zu einem Artikel, der den Kommentartext und den Autor enthält.</p></body></html>"
          },
          {
            "title": "Question: POST Body JSON",
            "id": 103349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist eine beliebte Option zum Formatieren der Daten einer <code>POST</code>-Anfrage?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JSON</item><item value=\"2\" correct=\"false\">HTTP</item></selection><p visible-if=\"wrong\">Wähle JSON aus.</p></body></html>"
          },
          {
            "title": "Question: POST Headers",
            "id": 103350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was wird der Statuscode sein, wenn alle erforderlichen Daten bereitgestellt werden und die Anfrage erfolgreich ist?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>201 Created</code></item><item value=\"2\" correct=\"false\"><code>400 Bad Request</code></item></selection><p visible-if=\"wrong\"><code>201 Created</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Body 2",
            "id": 103353,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Setze die richtigen Codes.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"176\" endIndex=\"179\" /><option startIndex=\"224\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>400</code>, gefolgt von <code>201</code> aus.</p></body></html>"
          },
          {
            "title": "Example: POST Headers",
            "id": 103355,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sende eine Antwort zurück zusammen mit dem korrekten Statuscode.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.post(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"201\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"70\" /><option startIndex=\"70\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"78\" /><option startIndex=\"78\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"82\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"87\" /><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"User created\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>status</code>, <code>(</code>, <code>201</code>, <code>)</code>, <code>.</code>, <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "Question: POST Headers 2",
            "id": 103351,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was sagt uns der <code>Content-Type</code>-Header einer <code>POST</code>-Anfrage?<br /></p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment\" /><text type=\"break\" /><text value=\"Host: fakenews.com\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy &gt;:(&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Das Format der Daten, die wir an den Server senden</item><item value=\"2\" correct=\"false\">Das Format der Daten in der Datenbank des Servers</item></selection><p visible-if=\"wrong\">Das Format der Daten, die wir an den Server senden.</p></body></html>"
          }
        ]
      }
    ]
  }
}