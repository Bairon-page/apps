{
  "tutorial": {
    "id": 1863,
    "version": 10,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Dynamische Reviews",
    "descriptionContent": "Lerne, wie du mit React eine Testimonials-Seite erstellst, die Inhalte dynamisch generiert",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1863-icon-banner.svg",
    "chapters": [
      {
        "id": 12305,
        "title": "Dynamische Reviews",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 111594,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns wiederverwendbare React-Komponenten erkunden! In diesem Projekt wirst du eine React-Komponente erstellen, um Kundenbewertungen für ein lokales Restaurant anzuzeigen. Indem wir Daten dynamisch über `props` einfügen und anzeigen, können wir die Komponente wiederverwenden, um so viele Bewertungen anzuzeigen, wie wir möchten.\n\nZuerst schauen wir uns den bereitgestellten Code an: die typische React-Struktur, eine `Testimonial`-Funktionskomponentendefinition und einen Aufruf der `render()`-Funktion von React. Da wir mehrere Komponenten anzeigen möchten, haben wir bereits einige in einer `App`-Komponente gesammelt.\n\nWir beginnen damit, ein umschließendes `<div>`-Element zur Testimonial-Komponente hinzuzufügen. Wenn du fertig bist, solltest du zwei `Testimonial`-Karten sehen.\n\n1. Füge ein `<div>`-Element mit der CSS-Klasse `card` zur `return`-Anweisung der `Testimonial`-Funktionskomponente hinzu.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\treturn (\n\t\t\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\treturn (\n\t\t<div className=\"card\"></div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 2",
            "id": 111596,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes fügen wir dem `Testimonial`-Komponenten einige Elemente hinzu. Wir beginnen mit dem Titel. Wenn du fertig bist, sollten die Titel auf beiden `Testimonial`-Karten erscheinen.\n\n1. Speichere zuerst die `title`-Prop in einer `const` namens `title`.\n2. Füge als Nächstes innerhalb des `<div>`-Elements in `return()` ein `<h2>`-Element hinzu, das die `title`-Konstante enthält.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n\tconst title = props.title;\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h2>{title}</h2>\n\t\t</div>\n\t);\n}\n\nexport const App=()=> {\n return (<div>\n    <Testimonial title=\"Great atmosphere!\" author=\"Sheila S.\" date=\"11/10/20\" stars={4} content=\"Great food, wait staff, and ambience. We'll be returning!\" />\n    <Testimonial title=\"Loved the Apps!\" author=\"Kim Z.\" date=\"10/15/20\" stars={3} content=\"The appetizers were fantastic, but the overall menu could be expanded.\" />\n</div>)\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 111597,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns nun den Autor der `Testimonial`-Komponente einbinden, indem wir einem ähnlichen Prozess wie beim Titel der Karte folgen.\n\n1. Speichere die `author`-Prop in einer Konstante namens `author`.\n2. Füge als Nächstes ein `<h5>`-Element hinzu, das den `author` direkt nach dem Titel enthält. Das Textformat sollte ähnlich sein wie:\n```javascript\nSubmitted by Tom J.\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>Submitted by {author}</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 111841,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir sollten auch das Datum der Bewertung anzeigen. Lass es uns im selben `<h5>`-Element wie den Autor einfügen.\n\n1. Speichere die `date`-Props in einer Konstante namens `date`.\n2. Füge als Nächstes das `date` direkt nach dem Autor hinzu. Das Textformat sollte ähnlich sein wie:\n```javascript\nSubmitted by Tom J. on 10/20/2020\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>Submitted by {author}</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 111598,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ein `Testimonial` sollte auch die 5-Sterne-Bewertung des Verfassers anzeigen, die, wenn du den bereitgestellten Code untersuchst, als Ganzzahl übergeben wird.\n\n1. Speichere die `stars`-Prop in einer `const` und integriere sie in die HTML-Struktur in einem `<h5>`-Tag. Das Textformat sollte ähnlich sein wie:\n```javascript\n5 / 5 Stars\n```",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 6",
            "id": 111599,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich sollte das `Testimonial` den tatsächlichen Inhalt der Bewertung in einem `<p>`-Tag anzeigen.\n\n1. Speichere die `content`-Prop in einer `const`. Integriere dann die `content`-Prop als ein `<p>`-Element.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 111601,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns eine weitere Karte zu unserer Website hinzufügen.\n\n1. Füge ein weiteres `Testimonial`-Element unter dem zweiten `Testimonial` im `App`-Komponenten hinzu.\n2. Übergebe als nächstes die `author`- und `date`-Props im `Testimonial`-Element. Du kannst beliebige Werte wählen – mach dies zu deinem eigenen Testimonial!\n3. Schließlich übergebe die 'stars'- und 'content'-Props im `Testimonial`-Element. Du kannst beliebige Werte wählen.\n4. Du solltest ein drittes `Testimonial` mit den von dir hinzugefügten Daten sehen!",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n      <Testimonial\n        title=\"Wow!\"\n        author=\"Sally T.\"\n        date=\"12/30/21\"\n        stars={5}\n        content=\"The ambiance was luxurious and the food was high scale.\"\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Result",
            "id": 122313,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gute Arbeit! In diesem Projekt hast du eine wiederverwendbare Functional Component erstellt. Du hast sie dann wiederverwendet und die notwendigen Props hinzugefügt, um eine Testimonials-Seite für ein lokales Restaurant zu erstellen! Dies ist deine Gelegenheit, mit dem Code zu experimentieren – du kannst zusätzliche Felder zu den Testimonial-Karten hinzufügen oder völlig neue Testimonial-Karten erstellen. Probiere es aus und sieh, was du kreieren kannst!",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\n\nexport const Testimonial = (props) => {\n  const title = props.title;\n  const author = props.author;\n  const date = props.date;\n  const stars = props.stars;\n  const content = props.content;\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <h5>\n        Submitted by {author} on {date}\n      </h5>\n      <h5>{stars} / 5 Stars</h5>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div>\n      <Testimonial\n        title=\"Great atmosphere!\"\n        author=\"Sheila S.\"\n        date=\"11/10/20\"\n        stars={4}\n        content=\"Great food, wait staff, and ambience. We'll be returning!\"\n      />\n      <Testimonial\n        title=\"Loved the Apps!\"\n        author=\"Kim Z.\"\n        date=\"10/15/20\"\n        stars={3}\n        content=\"The appetizers were fantastic, but the overall menu could be expanded.\"\n      />\n      <Testimonial\n        title=\"WOW!\"\n        author=\"Sally T.\"\n        date=\"12/30/21\"\n        stars={5}\n        content={\"The ambiance was luxurious and the food was high scale.\"}\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);\n",
                  "solvedContent": null
                },
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <script type=\"module\" src=\"./index.js\"></script> \n  <link rel=\"stylesheet\" href=\"./index.css\" />\n </head>\n <body>\n  <h2>Testimonials</h2>\n  <div id=\"root\">loading...</div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n    padding: 8%;\n    font-family: sans-serif;\n    background-color: darkgray;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    padding: 8%;\n    padding-left: 5%;\n    margin-top: 5%;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\nh2, h3, h4, h5 {\n    margin: 0;\n}\n\np {\n    font-style: italic;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}