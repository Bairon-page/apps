{
  "tutorial": {
    "id": 2237,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Schleifen 1",
    "descriptionContent": "Schleifen 1",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 8246,
        "title": "Selbstzuweisende Variablen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Assigning a value",
            "id": 72170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine Variable namens `inches` und weise ihr den Wert `3` zu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const inches = 3;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72166,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Without changing the first three lines, füge `3` zum Wert der Variable `points` hinzu. Dann logge die Variable `points` erneut in die Konsole.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let points = 50;\npoints = points + 2;\nconsole.log(points);",
                  "solvedContent": "let points = 50;\npoints = points + 2;\nconsole.log(points);\npoints = points + 3;\nconsole.log(points);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Why self-assigning matters",
            "id": 72169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ohne die ersten drei Zeilen zu ändern, ziehe eins vom Wert der Variablen `inventory` ab. Dann logge die Variable `inventory` erneut in die Konsole.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let inventory = 3;\ninventory = inventory + 80;\nconsole.log(inventory);",
                  "solvedContent": "let inventory = 3;\ninventory = inventory + 80;\nconsole.log(inventory);\ninventory = inventory - 1;\nconsole.log(inventory);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Self-assigning strings",
            "id": 72172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ohne die erste Zeile zu ändern, füge der Variable `hobbies` deinen Lieblingshobby hinzu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let hobbies = \"soccer tv\";\nconsole.log(hobbies);",
                  "solvedContent": "let hobbies = \"soccer tv\";\nhobbies = hobbies + \" coding\";\nconsole.log(hobbies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72226,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ohne die ersten beiden Zeilen zu ändern, ziehe `1` vom Wert der Variablen `lives` ab. Gib dann die Variable `lives` erneut in der Konsole aus, wenn du fertig bist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let lives = 3;\nconsole.log(lives);",
                  "solvedContent": "let lives = 3;\nconsole.log(lives);\nlives = lives - 1;\nconsole.log(lives);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Assigning a value",
            "id": 72214,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Weise der Variable `cat` einen String zu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const cat = ",
                  "solvedContent": "const cat = \"Whiskers\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Why self-assigning matters",
            "id": 72227,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ohne die ersten vier Zeilen zu ändern, füge dem Wert der Variable `squatCounter` eins hinzu. Dann gib die Variable `squatCounter` erneut in der Konsole aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let squatCounter = 5;\nsquatCounter = squatCounter + 1;\nsquatCounter = squatCounter + 1;\nconsole.log(squatCounter);",
                  "solvedContent": "let squatCounter = 5;\nsquatCounter = squatCounter + 1;\nsquatCounter = squatCounter + 1;\nconsole.log(squatCounter);\nsquatCounter = squatCounter + 1;\nconsole.log(squatCounter);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Self-assigning strings",
            "id": 72228,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ohne die erste Zeile zu ändern, füge deinen bevorzugten Programmierstil zum Wert der Variable `languages` hinzu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let languages = \"HTML CSS\";\n\nconsole.log(languages);",
                  "solvedContent": "let languages = \"HTML CSS\";\nlanguages = languages + \" JavaScript\";\nconsole.log(languages);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8260,
        "title": "Zuweisung mit Operatoren",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: += operator",
            "id": 72315,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Addiere sechs zum Wert der Variable mit dem `+=` Operator.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let points = 7;\n\nconsole.log(\"Touchdown!\");\nconsole.log(points);",
                  "solvedContent": "let points = 7;\npoints += 6;\nconsole.log(\"Touchdown!\");\nconsole.log(points);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72317,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende den Inkrement-Operator, um den Wert der Variable `pushups` um eins zu erhöhen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let pushups = 9;\n\nconsole.log(pushups);",
                  "solvedContent": "let pushups = 9;\npushups++;\nconsole.log(pushups);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Decrementing numbers",
            "id": 72320,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende den Dekrementoperator, um `lives` um eins zu verringern.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let lives = 3;\nconsole.log(lives);",
                  "solvedContent": "let lives = 3;\nlives--;\nconsole.log(lives);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: -= operator",
            "id": 72316,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ziehe 50 vom Wert der Variable ab, indem du den `-=` Operator verwendest.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let milesLeft = 100;\nconsole.log(milesLeft);",
                  "solvedContent": "let milesLeft = 100;\nmilesLeft -= 50;\nconsole.log(milesLeft);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Incrementing numbers",
            "id": 72376,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende den Inkrement-Operator, um den Wert der Variable `likes` um eins zu erhöhen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let likes = 21;\nconsole.log(likes);",
                  "solvedContent": "let likes = 21;\nlikes++;\nconsole.log(likes);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: -= operator",
            "id": 72374,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ziehe zwei vom Wert der Variable mit dem `-=` Operator ab.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let assignments = 5;\nconsole.log(assignments);",
                  "solvedContent": "let assignments = 5;\nassignments -= 2;\nconsole.log(assignments);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: += operator",
            "id": 72373,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge den Namen eines Freundes zur Variable `friends` hinzu (nach \"Brett\").",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let friends = \"Mutual friends:\";\nfriends += \" Jan,\";\nfriends += \" Brett,\";\nconsole.log(friends);",
                  "solvedContent": "let friends = \"Mutual friends:\";\nfriends += \" Jan,\";\nfriends += \" Brett,\";\nfriends += \" Lorenzo\";\nconsole.log(friends);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Decrementing numbers",
            "id": 72377,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende den Dekrement-Operator, um `credits` um eins zu verringern.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let credits = 40;\nconsole.log(credits);",
                  "solvedContent": "let credits = 40;\ncredits--;\nconsole.log(credits);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8308,
        "title": "Code mit While-Schleifen wiederholen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Infinite loop",
            "id": 72755,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Entferne die Endlosschleife aus dem Code, indem du die Bedingung der Schleife änderst. Verwende nur einen booleschen Wert in der Bedingung.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while (false) {\n console.log(\"Let's watch a movie!\");\n}\nwhile (true) {\n console.log(\"To infinity,\");\n console.log(\"and Beyond!\");\n}",
                  "solvedContent": "while (false) {\n console.log(\"Let's watch a movie!\");\n}\nwhile (false) {\n console.log(\"To infinity,\");\n console.log(\"and Beyond!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Code block",
            "id": 72752,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge ein `console.log` innerhalb des Codeblocks der `while`-Schleife hinzu. Du kannst beliebige gültige Syntax für den Parameter des `console.log` verwenden. Ändere nichts anderes im Code.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let message = \"Now playing: \";\nwhile (false) {}\n\n",
                  "solvedContent": "let message = \"Now playing: \";\nwhile (false) {\n console.log(message + \"Uptown Funk\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: While keyword",
            "id": 72750,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge das richtige Schlüsselwort hinzu, um eine while-Schleife zu erstellen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let phoneOn = true;\n(false) {\n console.log(\"Searching for Mobile Signal\");\n}\nconsole.log(\"Phone powered on:\" + phoneOn);",
                  "solvedContent": "let phoneOn = true;\nwhile (false) {\n console.log(\"Searching for Mobile Signal\");\n}\nconsole.log(\"Phone powered on:\" + phoneOn);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Infinite loop",
            "id": 73083,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Entferne die `while`-Schleife vollständig aus dem Code. Lass den restlichen Code unverändert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isOn = false;\nwhile (isOn) {\n console.log(\"Take over the world!\");\n}\nwhile (true) {\n console.log(\"Hello, world!\");\n}",
                  "solvedContent": "let isOn = false;\nwhile (isOn) {\n console.log(\"Take over the world!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Code block",
            "id": 73082,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine while-Schleife, setze ihre Bedingung auf den booleschen Wert `false`, und zeige etwas im Konsolenfenster im Codeblock an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\n",
                  "solvedContent": "while (false) {\n console.log(\"Hello, world!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Condition",
            "id": 72751,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Überspringe den Codeblock der while-Schleife. Verwende nur einen booleschen Wert in der Bedingung.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while (true) {\n console.log(\"Find my friends is on\");\n}",
                  "solvedContent": "while (false) {\n console.log(\"Find my friends is on\");\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8379,
        "title": "While-Schleifen stoppen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Variable in the condition",
            "id": 73392,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Führe die Schleife einmal aus, indem du die Variable `repeat` innerhalb der Bedingung verwendest.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let repeat = true;\nwhile () {\n repeat = false;\n}",
                  "solvedContent": "let repeat = true;\nwhile (repeat) {\n repeat = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Updating the variable",
            "id": 73393,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Innerhalb des Codeblocks, stoppe die Schleife, indem du `autopilot` auf `false` setzt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let autopilot = true;\nwhile (autopilot === true) {\n console.log(\"Auto pilot active\");\n}",
                  "solvedContent": "let autopilot = true;\nwhile (autopilot === true) {\n console.log(\"Auto pilot active\");\n autopilot = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Creating the variable",
            "id": 73391,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Ohne eine Endlosschleife zu verursachen, erstelle eine Variable namens `turbulence`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while (turbulence) {\n console.log(\"Fasten your seatbelt!\");\n}",
                  "solvedContent": "let turbulence = false;\nwhile (turbulence) {\n console.log(\"Fasten your seatbelt!\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Variable in the condition",
            "id": 73412,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine Variable, um den Codeblock der while-Schleife zu überspringen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\nwhile (keepPlaying === true) {\n console.log(\"Now Playing:\");\n console.log(\"Hey Jude\");\n keepPlaying = false;\n}",
                  "solvedContent": "let keepPlaying = false;\nwhile (keepPlaying === true) {\n console.log(\"Now Playing:\");\n console.log(\"Hey Jude\");\n keepPlaying = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Stopping the loop",
            "id": 73396,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nachdem `repeatSong` auf `false` aktualisiert wurde, zeige etwas in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let repeatSong = true;\nwhile (repeatSong === true) {\n console.log(\"Now Playing: \");\n console.log(\"Never Gonna Give You Up\");\n repeatSong = false;\n \n}",
                  "solvedContent": "let repeatSong = true;\nwhile (repeatSong === true) {\n console.log(\"Now Playing: \");\n console.log(\"Never Gonna Give You Up\");\n repeatSong = false;\n console.log(\"again\");\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Updating the variable",
            "id": 73413,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Beende die Schleife, nachdem sie ihren Codeblock einmal ausgeführt hat.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let displayAd = true;\nwhile (displayAd === true) {\n console.log(\"Sign up for this new app!\");\n}",
                  "solvedContent": "let displayAd = true;\nwhile (displayAd === true) {\n console.log(\"Sign up for this new app!\");\n displayAd = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Creating the variable",
            "id": 73411,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine Variable namens `repeatMessage`, setze ihren Anfangswert auf `true`, verwende sie innerhalb der Bedingung und setze sie auf `false` innerhalb des Codeblocks (nachdem die Nachricht in die Konsole ausgegeben wurde). Achte darauf, Endlosschleifen zu vermeiden!",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "while () {\n console.log(\"Hi, there!\");\n}",
                  "solvedContent": "let repeatMessage = true;\nwhile (repeatMessage === true) {\n console.log(\"Hi, there!\");\n repeatMessage = false;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Stopping the loop",
            "id": 73416,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `while`-Schleife, die ihren Codeblock einmal ausführt. Deine Variable sollte `isOn` heißen und deine Schleife sollte eine Nachricht in die Konsole loggen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "let isOn = true;\nwhile (isOn === true) {\n console.log(\"hey!\");\n isOn = false;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}