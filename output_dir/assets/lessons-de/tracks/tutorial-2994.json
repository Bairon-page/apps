{
  "tutorial": {
    "id": 2994,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "jsx",
    "title": "Punktestand - Teil 2",
    "descriptionContent": "Im zweiten Teil erwecken wir die Score Keeper App mit Styling zum Leben.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2994-icon-banner.svg",
    "chapters": [
      {
        "id": 15167,
        "title": "Kapitel #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 133593,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zurück beim **Score Keeper**-Projekt. Im zweiten Teil werden wir die App stylen.\n\n1. Um den React-Bundler zufrieden zu stellen, müssen wir die `index.css`-Datei verlinken.\n2. Da wir schon dabei sind, ändere den Titel zu *Score Keeper*.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>Score Keeper</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>"
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 134867,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns anfangen, die App zu stylen. Wir werden mehrere CSS-Dateien verwenden, um unser Styling schön gruppiert zu halten.\n\n1. Importiere in der `App` Komponente die Datei `App.css`.\n2. Erstelle in der Datei `App.css` eine Regel, die das `body` Element mit den folgenden Eigenschaften anspricht, um grundlegendes Styling anzuwenden:\n   - Setze die `background-color` auf `lightcyan`.\n   - Setze die `font-family` auf `Arial, sans-serif`.\n   - Setze die `color` auf `darkslategray`.\n   - Setze das `text-align` auf `center`.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>Score Keeper</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n"
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}"
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy",
            "id": 133600,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um den Stil unserer `ScoreKeeper`-Komponente zu verbessern, verwenden wir die Datei `ScoreKeeper.css`. Wir werden auch CSS-Klassen verwenden, um das CSS sauber zu halten.\n\n1. Importiere in der `ScoreKeeper`-Komponente die Datei `ScoreKeeper.css`.\n2. Füge dem `div`-Element, das alle zurückgegebenen JSX in der `ScoreKeeper`-Komponente umschließt, die Klasse `\"score-keeper-container\"` hinzu.\n3. Erstelle in der Datei `ScoreKeeper.css` eine Regel, die die neu hinzugefügte Klasse mit den folgenden Eigenschaften anspricht, um das Styling anzuwenden:\n   - Setze die `background-color` auf `white`.\n   - Setze das `text-align` auf `center`.\n   - Setze den `margin` auf `20px auto`.\n   - Setze die `width` auf `80%`.\n   - Setze die `max-width` auf `640px`.\n   - Setze das `padding` auf `20px`.\n   - Setze den `border-radius` auf `10px`.\n   - Setze den `box-shadow` auf `0 4px 8px rgba(0, 0, 0, 0.1)`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div>\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy",
            "id": 135170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns das `h1`-Element stylen, damit der Titel von `ScoreKeeper` hervorsticht.\n\n1. Füge im `ScoreKeeper`-Komponenten die Klasse `\"score-keeper-heading\"` zum `h1`-Element hinzu.\n2. Erstelle in derselben `ScoreKeeper.css`-Datei eine Regel für die Klasse, die du gerade hinzugefügt hast, mit den folgenden Eigenschaften, um das Styling anzuwenden:\n   - Setze die `color` auf `teal`.\n   - Setze die `font-size` auf `2.5em`.\n   - Setze den `margin-bottom` auf `20px`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1>Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1 - Copy - Copy - Copy",
            "id": 135171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die `button`-Elemente so stylen, dass sie zu unserem Thema passen.\n\n1. Füge im `ScoreKeeper`-Komponent die Klasse `\"score-keeper-button\"` zu allen `button`-Elementen hinzu.\n2. Erstelle in derselben `ScoreKeeper.css`-Datei eine Regel für die Klasse, die du gerade hinzugefügt hast, mit den folgenden Eigenschaften, um das Styling anzuwenden:\n   - Setze den `margin` auf `10px`.\n   - Setze das `padding` auf `10px 20px`.\n   - Setze die `font-size` auf `1em`.\n   - Setze die `color` auf `white`.\n   - Setze die `background-color` auf `teal`.\n   - Setze den `border` auf `none`.\n   - Setze den `border-radius` auf `5px`.\n   - Setze den `cursor` auf `pointer`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "s",
            "id": 135172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge einen Hover-Effekt zu den `button`-Elementen hinzu, um die Benutzererfahrung und das Feedback zu verbessern.\n\n1. Füge in der `ScoreKeeper.css` einen `.score-keeper-button:hover`-Selektor hinzu und verwende ihn, um die `background-color` zu `darkslategray` zu ändern, wenn der Mauszeiger über dem Button schwebt.",
              "preselectedFileIndex": 7,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": null
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}",
                  "solvedContent": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.score-keeper-button:hover {\n  background-color: darkslategray;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "s - Copy - Copy",
            "id": 135175,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Zu guter Letzt wollen wir das führende Team hervorheben. Immer wenn ein Team in Führung liegt, möchten wir es deutlich mit einem einzigartigen Stil für dieses Team anzeigen.\n\n1. Im `ScoreKeeper`-Komponent, übergebe jedem `ScoreView`-Komponent eine neue Eigenschaft namens `leading`. Der Wert sollte `true` sein, wenn die Punktzahl dieses Teams größer ist als die des anderen Teams. Andernfalls sollte er `false` sein.\n2. Im `ScoreView`-Komponent, erstelle eine Klasse aus der übergebenen Eigenschaft `leading`, die du auf das `div`-Wrapper-Element anwendest.\n   - Wenn die übergebene Eigenschaft `leading` `true` ist, wende `score-view-wrapper-leading-true` an.\n   - Wenn die übergebene Eigenschaft `leading` `false` ist, wende `score-view-wrapper-leading-false` an.\n3. Im `ScoreView`-Komponent, importiere die Datei `ScoreView.css`.\n4. In der Datei `ScoreView.css`, erstelle eine Regel, die auf die Klasse `.score-view-wrapper-leading-true` abzielt, mit den folgenden Eigenschaften:\n   - Setze die `background-color` auf `teal`.\n   - Setze die `color` auf `white`.\n   - Setze den `border-radius` auf `5px`.",
              "preselectedFileIndex": 6,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <script type=\"module\" src=\"./index.js\"></script>\n    <link rel=\"stylesheet\" href=\"./index.css\">\n    <title>My React App</title>\n  </head>\n  <body>\n    <div id=\"root\">loading</div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "index.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\"\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(<App />);",
                  "solvedContent": null
                },
                {
                  "name": "App.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\nimport ScoreKeeper from \"./ScoreKeeper\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <ScoreKeeper />;\n};\n\nexport default App;\n",
                  "solvedContent": null
                },
                {
                  "name": "App.css",
                  "codeLanguage": "css",
                  "content": "body {\n  background-color: lightcyan;\n  font-family: Arial, sans-serif;\n  color: darkslategray;\n  text-align: center;\n}",
                  "solvedContent": null
                },
                {
                  "name": "ScoreView.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React from \"react\";\n\nconst ScoreView = (props) => {\n  return (\n    <div>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n",
                  "solvedContent": "import React from \"react\";\nimport \"./ScoreView.css\";\n\nconst ScoreView = (props) => {\n  return (\n    <div className={`score-view-wrapper-leading-${props.leading}`}>\n      <h2>\n        {props.teamName}: {props.score}\n      </h2>\n    </div>\n  );\n};\n\nexport default ScoreView;\n"
                },
                {
                  "name": "ScoreView.css",
                  "codeLanguage": "css",
                  "content": "",
                  "solvedContent": ".score-view-wrapper-leading-true {\n  color: white;\n  background-color: teal;\n  border-radius: 5px;\n}"
                },
                {
                  "name": "ScoreKeeper.jsx",
                  "codeLanguage": "jsx",
                  "content": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n",
                  "solvedContent": "import React, { useState } from \"react\";\nimport ScoreView from \"./ScoreView\";\nimport \"./ScoreKeeper.css\";\n\nconst ScoreKeeper = () => {\n  const [teamOneScore, setTeamOneScore] = useState(0);\n  const [teamTwoScore, setTeamTwoScore] = useState(0);\n\n  return (\n    <div className=\"score-keeper-container\">\n      <h1 className=\"score-keeper-heading\">Score Keeper</h1>\n      <ScoreView teamName=\"Team One\" score={teamOneScore} leading={teamOneScore > teamTwoScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamOneScore(teamOneScore + 1)}>\n        +1 Team One\n      </button>\n\n      <ScoreView teamName=\"Team Two\" score={teamTwoScore} leading={teamTwoScore > teamOneScore} />\n      <button className=\"score-keeper-button\" onClick={() => setTeamTwoScore(teamTwoScore + 1)}>\n        +1 Team Two\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreKeeper;\n"
                },
                {
                  "name": "ScoreKeeper.css",
                  "codeLanguage": "css",
                  "content": ".score-keeper-container {\n  text-align: center;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 640px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.score-keeper-heading {\n  color: teal;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n}\n\n.score-keeper-button {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 1em;\n  color: white;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.score-keeper-button:hover {\n  background-color: darkslategray;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}