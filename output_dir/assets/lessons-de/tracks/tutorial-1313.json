{
  "tutorial": {
    "id": 1313,
    "version": 4,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Funktionen mit Schleifen",
    "descriptionContent": "Funktionen mit Schleifen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9779,
        "title": "While-Schleifen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 86998,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Funktionen helfen uns, Schleifen wiederzuverwenden, indem sie es uns ermöglichen, die Anzahl der Wiederholungen oder die Liste, durch die wir iterieren, zu ändern.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"onboard_passengers\" class=\"title\" /><text value=\"(bookings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  counter = \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &lt;= bookings:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Passenger \" /><text value=\"{counter}\" class=\"subst\" /><text value=\" on board&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"    counter += \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"onboard_passengers(\" /><text value=\"4\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"Passenger 1 on board\" /><text type=\"break\" /><text value=\"Passenger 2 on board\" /><text type=\"break\" /><text value=\"Passenger 3 on board\" /><text type=\"break\" /><text value=\"Passenger 4 on board\" /></content></output></code></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 87240,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Diese while-Schleife läuft so oft, wie es <code>bookings</code> gibt, was wir beim Aufrufen der Funktion festlegen, wie hier mit <code>4</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"onboard_passengers\" class=\"title\" /><text value=\"(bookings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  counter = \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &lt;= bookings:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Passenger \" /><text value=\"{counter}\" class=\"subst\" /><text value=\" on board&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"    counter += \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"onboard_passengers(\" /><text value=\"4\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"157\" endIndex=\"158\" /></options></interaction></interactions><output><content><text value=\"Passenger 1 on board\" /><text type=\"break\" /><text value=\"Passenger 2 on board\" /><text type=\"break\" /><text value=\"Passenger 3 on board\" /><text type=\"break\" /><text value=\"Passenger 4 on board\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>4</code> aus.</p></body></html>"
          },
          {
            "title": "Indentation",
            "id": 87241,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden eine Einrückung von zwei Leerzeichen, um eine Schleife in eine Funktion zu verschachteln, wie bei dieser <code>while</code>-Schleife.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"onboard_passengers\" class=\"title\" /><text value=\"(bookings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  counter = \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &lt;= bookings:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Passenger \" /><text value=\"{counter}\" class=\"subst\" /><text value=\" on board&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"    counter += \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"onboard_passengers(\" /><text value=\"4\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"50\" endIndex=\"55\" /><option startIndex=\"56\" endIndex=\"75\" /></options></interaction></interactions><output><content><text value=\"Passenger 1 on board\" /><text type=\"break\" /><text value=\"Passenger 2 on board\" /><text type=\"break\" /><text value=\"Passenger 3 on board\" /><text type=\"break\" /><text value=\"Passenger 4 on board\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>while</code>, gefolgt von <code>counter &lt;= bookings</code> aus.</p></body></html>"
          },
          {
            "title": "Indentation inside the loop",
            "id": 87002,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Code innerhalb einer Schleife wird dann um zwei zusätzliche Leerzeichen nach rechts eingerückt, wie diese Anzeigeanweisung.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"onboard_passengers\" class=\"title\" /><text value=\"(bookings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  counter = \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &lt;= bookings:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Passenger \" /><text value=\"{counter}\" class=\"subst\" /><text value=\" on board&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"    counter += \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"onboard_passengers(\" /><text value=\"4\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"81\" endIndex=\"86\" /><option startIndex=\"86\" endIndex=\"119\" /></options></interaction></interactions><output><content><text value=\"Passenger 1 on board\" /><text type=\"break\" /><text value=\"Passenger 2 on board\" /><text type=\"break\" /><text value=\"Passenger 3 on board\" /><text type=\"break\" /><text value=\"Passenger 4 on board\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>(f\"Passenger {counter} on board\")</code> aus.</p></body></html>"
          },
          {
            "title": "Parameter as a condition",
            "id": 87003,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Mit einer Funktion können wir definieren, wie oft eine Schleife ihren Code ausführt, indem wir einen Parameter wie <code>bookings</code> in der Bedingung der Schleife verwenden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"onboard_passengers\" class=\"title\" /><text value=\"(bookings)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  counter = \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &lt;= bookings:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Passenger \" /><text value=\"{counter}\" class=\"subst\" /><text value=\" on board&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"    counter += \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"onboard_passengers(\" /><text value=\"4\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"31\" /><option startIndex=\"67\" endIndex=\"75\" /></options></interaction></interactions><output><content><text value=\"Passenger 1 on board\" /><text type=\"break\" /><text value=\"Passenger 2 on board\" /><text type=\"break\" /><text value=\"Passenger 3 on board\" /><text type=\"break\" /><text value=\"Passenger 4 on board\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>bookings</code>, gefolgt von <code>bookings</code> aus.</p></body></html>"
          },
          {
            "title": "Any kind of loop",
            "id": 87004,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können sowohl <code>while</code>- als auch <code>for</code>-Schleifen innerhalb von Funktionen verwenden, wie diese <code>for</code>-Schleife, die den Fortschritt eines Downloads anzeigt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_progress\" class=\"title\" /><text value=\"(total_files)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(total_files):\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Downloading file \" /><text value=\"{i}\" class=\"subst\" /><text value=\" out of \" /><text value=\"{total_files}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display_progress(\" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"37\" endIndex=\"40\" /></interactions><output><content><text value=\"Downloading file 0 out of 3\" /><text type=\"break\" /><text value=\"Downloading file 1 out of 3\" /><text type=\"break\" /><text value=\"Downloading file 2 out of 3\" /></content></output></code><p visible-if=\"wrong\">Gib <code>for</code> ein.</p></body></html>"
          },
          {
            "title": "Question: Indentation",
            "id": 87001,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Einrückung verwenden wir, um eine Schleife in eine Funktion zu verschachteln?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Zwei Leerzeichen</item><item value=\"2\" correct=\"false\">Wir verwenden keine Einrückung</item></selection><p visible-if=\"wrong\">Zwei Leerzeichen.</p></body></html>"
          },
          {
            "title": "Question: Indentation inside the loop",
            "id": 87242,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie rücken wir den Code innerhalb einer verschachtelten Schleife ein?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Zwei Leerzeichen vom Anfang der Schleife entfernt</item><item value=\"2\" correct=\"false\">Auf derselben Ebene wie die Schleife</item></selection><p visible-if=\"wrong\">Zwei Leerzeichen vom Anfang der Schleife entfernt.</p></body></html>"
          },
          {
            "title": "Question: Parameter as a condition",
            "id": 87243,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir steuern, wie oft eine verschachtelte Schleife läuft?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Indem du den Parameter der Funktion als Teil der Bedingung der Schleife verwendest</item><item value=\"2\" correct=\"false\">Wir können nicht kontrollieren, wie oft eine verschachtelte Schleife läuft</item></selection><p visible-if=\"wrong\">Indem du den Parameter der Funktion als Teil der Bedingung der Schleife verwendest.</p></body></html>"
          },
          {
            "title": "Question: Any kind of loop",
            "id": 87244,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Arten von Schleifen können wir innerhalb von Funktionen verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sowohl <code>while</code>- als auch <code>for</code>-Schleifen</item><item value=\"2\" correct=\"false\">Nur <code>while</code>-Schleifen</item></selection><p visible-if=\"wrong\">Sowohl <code>while</code>- als auch <code>for</code>-Schleifen.</p></body></html>"
          },
          {
            "title": "Example: Indentation",
            "id": 87245,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Codiere eine while-Schleife zwei Leerzeichen nach rechts, um sie innerhalb des Codeblocks der Funktion zu verschachteln.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"do_countdown\" class=\"title\" /><text value=\"(counter)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &gt; \" /><text value=\"0\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(counter)\" /><text type=\"break\" /><text value=\"    counter -= \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Go!&quot;\" class=\"string\" /><text value=\")  \" /><text type=\"break\" /><text type=\"break\" /><text value=\"do_countdown(\" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"29\" endIndex=\"34\" /><option startIndex=\"35\" endIndex=\"46\" /><option startIndex=\"46\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"3\" /><text type=\"break\" /><text value=\"2\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"Go!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>while</code>, gefolgt von <code>counter &gt; 0</code> und schließlich <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Indentation inside the loop",
            "id": 87247,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine Anzeigeanweisung zwei Leerzeichen vom Anfang der Schleife entfernt, um sie in den Codeblock der Schleife einzuschließen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"do_countdown\" class=\"title\" /><text value=\"(counter)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &gt; \" /><text value=\"0\" class=\"number\" /><text value=\":\" /><text type=\"break\" /><text value=\"    print(counter)\" /><text type=\"break\" /><text value=\"    counter -= \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Go!&quot;\" class=\"string\" /><text value=\")  \" /><text type=\"break\" /><text type=\"break\" /><text value=\"do_countdown(\" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"52\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"66\" /></options></interaction></interactions><output><content><text value=\"3\" /><text type=\"break\" /><text value=\"2\" /><text type=\"break\" /><text value=\"1\" /><text type=\"break\" /><text value=\"Go!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>(</code> und schließlich <code>counter</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Parameter as a condition",
            "id": 87248,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schreibe eine Bedingung, damit die Schleife Sterne anzeigt, solange der Wert von <code>counter</code> kleiner als der Parameter <code>rows</code> ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_stars\" class=\"title\" /><text value=\"(rows)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  counter = \" /><text value=\"0\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"while\" class=\"keyword\" /><text value=\" counter &lt; rows:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;***&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"    counter += \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display_stars(\" /><text value=\"2\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"47\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"56\" /><option startIndex=\"57\" endIndex=\"61\" /></options></interaction></interactions><output><content><text value=\"***\" /><text type=\"break\" /><text value=\"***\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>counter</code>, gefolgt von <code>&lt;</code> und schließlich <code>rows</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Any kind of loop",
            "id": 87249,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine for-Schleife innerhalb dieser Funktion, die den Fortschritt eines Systemupdates anzeigt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_progress\" class=\"title\" /><text value=\"(total)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(total):\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Installing next update&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"show_progress(\" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"28\" endIndex=\"31\" /><option startIndex=\"32\" endIndex=\"49\" /><option startIndex=\"49\" endIndex=\"50\" /></options></interaction></interactions><output><content><text value=\"Installing next update\" /><text type=\"break\" /><text value=\"Installing next update\" /><text type=\"break\" /><text value=\"Installing next update\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>for</code>, gefolgt von <code>i in range(total)</code> und schließlich <code>:</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 9781,
        "title": "For-Schleifen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Loop ranges",
            "id": 87005,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bereiche wie <code>range(3)</code> geben an, wie oft die for-Schleife ausgeführt wird, in diesem Fall dreimal.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_progress\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(\" /><text value=\"3\" class=\"number\" /><text value=\"):\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Downloading file \" /><text value=\"{i}\" class=\"subst\" /><text value=\" out of 3&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display_progress()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"41\" endIndex=\"42\" /><option startIndex=\"42\" endIndex=\"43\" /></options></interaction></interactions><output><content><text value=\"Downloading file 0 out of 3\" /><text type=\"break\" /><text value=\"Downloading file 1 out of 3\" /><text type=\"break\" /><text value=\"Downloading file 2 out of 3\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>range</code>, gefolgt von <code>(</code> und schließlich <code>3</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Any range",
            "id": 87006,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine for-Schleife mit einem beliebigen Bereich wiederzuverwenden, übergeben wir einen Parameter, wie <code>total_files</code>, zwischen den Klammern von <code>range()</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_progress\" class=\"title\" /><text value=\"(total_files)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(total_files):\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Downloading file \" /><text value=\"{i}\" class=\"subst\" /><text value=\" out of \" /><text value=\"{total_files}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display_progress(\" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"21\" endIndex=\"32\" /><option startIndex=\"51\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"Downloading file 0 out of 3\" /><text type=\"break\" /><text value=\"Downloading file 1 out of 3\" /><text type=\"break\" /><text value=\"Downloading file 2 out of 3\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>total_files</code>, gefolgt von <code>total_files</code> aus.</p></body></html>"
          },
          {
            "title": "Any range 2",
            "id": 87007,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Wert, den wir beim Aufrufen der Funktion übergeben, wie <code>4</code>, wird im Parameter gespeichert und dann als Bereich verwendet.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_progress\" class=\"title\" /><text value=\"(total_files)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(total_files):\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Downloading file \" /><text value=\"{i}\" class=\"subst\" /><text value=\" out of \" /><text value=\"{total_files}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"display_progress(\" /><text value=\"4\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"Downloading file 0 out of 4\" /><text type=\"break\" /><text value=\"Downloading file 1 out of 4\" /><text type=\"break\" /><text value=\"Downloading file 2 out of 4\" /><text type=\"break\" /><text value=\"Downloading file 3 out of 4\" /></content></output></code></body></html>"
          },
          {
            "title": "Question: Loop ranges",
            "id": 87250,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was sagen uns Schleifenbereiche?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Wie oft eine Schleife läuft</item><item value=\"2\" correct=\"false\">Der Anfangswert des Schleifenzählers</item></selection><p visible-if=\"wrong\">Wie oft eine Schleife läuft.</p></body></html>"
          },
          {
            "title": "Question: Any range",
            "id": 87251,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir eine Schleife, die in einer Funktion verschachtelt ist, für jeden Bereich wiederverwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Indem du den Parameter der Funktion verwendest, um den Wert eines Bereichs zu berechnen</item><item value=\"2\" correct=\"false\">Wir können eine verschachtelte Schleife nicht für unterschiedliche Bereiche wiederverwenden</item></selection><p visible-if=\"wrong\">Indem du den Parameter der Funktion verwendest, um den Wert eines Bereichs zu berechnen.</p></body></html>"
          },
          {
            "title": "Question: Any range 2",
            "id": 87252,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie oft wird diese Schleife ausgeführt?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_progress\" class=\"title\" /><text value=\"(total)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(total):\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Installing next update&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"show_progress(\" /><text value=\"1\" class=\"number\" /><text value=\")\" /></content><output><content><text value=\"Installing next update\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Einmal</item><item value=\"2\" correct=\"false\">Wir können nicht wissen, wie oft es läuft</item></selection><p visible-if=\"wrong\">Wähle Einmal aus.</p></body></html>"
          },
          {
            "title": "Example: Loop ranges",
            "id": 87253,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code einen Range-Wert, sodass die Nachricht viermal angezeigt wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"repeat_message\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(\" /><text value=\"4\" class=\"number\" /><text value=\"):\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"&quot;Polly wants a cracker&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"repeat_message()\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"39\" endIndex=\"40\" /></interactions><output><content><text value=\"Polly wants a cracker\" /><text type=\"break\" /><text value=\"Polly wants a cracker\" /><text type=\"break\" /><text value=\"Polly wants a cracker\" /><text type=\"break\" /><text value=\"Polly wants a cracker\" /></content></output></code><p visible-if=\"wrong\">Gib <code>4</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Any range",
            "id": 87254,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Steuere, wie oft die Schleife läuft, indem du ein <code>range()</code> mit dem Parameter <code>messages</code> als Wert codierst.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_notifications\" class=\"title\" /><text value=\"(messages)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(messages):\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to send message&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"show_notifications(\" /><text value=\"3\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"44\" endIndex=\"59\" /></interactions><output><content><text value=\"Failed to send message\" /><text type=\"break\" /><text value=\"Failed to send message\" /><text type=\"break\" /><text value=\"Failed to send message\" /></content></output></code><p visible-if=\"wrong\">Gib <code>range(messages)</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Any range 2",
            "id": 87255,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die Funktion mit einem Wert auf, sodass die Schleife ihren Code zweimal ausführt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_notifications\" class=\"title\" /><text value=\"(messages)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" i \" /><text value=\"in\" class=\"keyword\" /><text value=\" range(messages):\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"&quot;Failed to send message&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"show_notifications(\" /><text value=\"2\" class=\"number\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"115\" endIndex=\"116\" /><option correct=\"false\"><content><text value=\"3\" /></content></option><option correct=\"false\"><content><text value=\"4\" /></content></option></options></interaction></interactions><output><content><text value=\"Failed to send message\" /><text type=\"break\" /><text value=\"Failed to send message\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>2</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 9782,
        "title": "For-Schleifen mit Listen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Loop through a list",
            "id": 87010,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine Schleife, die durch eine Liste iteriert, wiederzuverwenden, können wir sie in eine Funktion einbetten, wie bei dieser <code>for</code>-Schleife.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve_prices\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" cart:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;New price: \" /><text value=\"{price/\" /><text value=\"2\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"cart_list = [\" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"8\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"halve_prices(cart_list)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"26\" endIndex=\"29\" /><option startIndex=\"30\" endIndex=\"43\" /><option startIndex=\"43\" endIndex=\"44\" /></options></interaction></interactions><output><content><text value=\"New price: 2.5\" /><text type=\"break\" /><text value=\"New price: 10.0\" /><text type=\"break\" /><text value=\"New price: 4.0\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>for</code>, gefolgt von <code>price in cart</code> und schließlich <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Use the parameter",
            "id": 87011,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um durch eine beliebige Art von Liste zu schleifen, verwenden wir den Parameter der Funktion anstelle einer festen Liste, wie hier mit <code>cart</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve_prices\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" cart:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;New price: \" /><text value=\"{price/\" /><text value=\"2\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"cart_list = [\" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"8\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"halve_prices(cart_list)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"17\" endIndex=\"21\" /><option startIndex=\"39\" endIndex=\"43\" /></options></interaction></interactions><output><content><text value=\"New price: 2.5\" /><text type=\"break\" /><text value=\"New price: 10.0\" /><text type=\"break\" /><text value=\"New price: 4.0\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>cart</code>, gefolgt von <code>cart</code> aus.</p></body></html>"
          },
          {
            "title": "Call with any list",
            "id": 87012,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Indem wir durch die Liste im Parameter schleifen, können wir die Funktion mit jeder Liste aufrufen, wie hier mit <code>cart_list</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"halve_prices\" class=\"title\" /><text value=\"(cart)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" cart:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;New price: \" /><text value=\"{price/\" /><text value=\"2\" class=\"number\" /><text value=\"}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"cart_list = [\" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"8\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"halve_prices(cart_list)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"117\" endIndex=\"126\" /><option correct=\"false\"><content><text value=\"&quot;cart_list&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"New price: 2.5\" /><text type=\"break\" /><text value=\"New price: 10.0\" /><text type=\"break\" /><text value=\"New price: 4.0\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>cart_list</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Loop through a list",
            "id": 87256,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir eine Schleife, die durch eine Liste iteriert, wiederverwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Indem du es in einen Codeblock einer Funktion einfügst</item><item value=\"2\" correct=\"false\">Wir können diese Art von Schleife nicht wiederverwenden</item></selection><p visible-if=\"wrong\">Indem du es in einen Codeblock einer Funktion einfügst.</p></body></html>"
          },
          {
            "title": "Question: Call with any list",
            "id": 87258,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Namen werden in der Konsole angezeigt?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"display_players\" class=\"title\" /><text value=\"(team)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  number = \" /><text value=\"1\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" name \" /><text value=\"in\" class=\"keyword\" /><text value=\" team:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Player \" /><text value=\"{number}\" class=\"subst\" /><text value=\": \" /><text value=\"{name}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"team_1 = [\" /><text value=\"&quot;Kim&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Lee&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"team_2 = [\" /><text value=\"&quot;Meg&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Jo&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"display_players(team_1)\" /></content><output><content><text value=\"Player 1: Kim\" /><text type=\"break\" /><text value=\"Player 1: Lee\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>Kim</code> und <code>Lee</code></item><item value=\"2\" correct=\"false\"><code>Meg</code> und <code>Jo</code></item></selection><p visible-if=\"wrong\"><code>Kim</code> und <code>Lee</code>.</p></body></html>"
          },
          {
            "title": "Example: Loop through a list",
            "id": 87259,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine for-Schleife, die durch die <code>playlist</code>-Liste iteriert.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_next_track\" class=\"title\" /><text value=\"()\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  playlist = [\" /><text value=\"&quot;Hey Jude&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Helter Skelter&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Something&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" track \" /><text value=\"in\" class=\"keyword\" /><text value=\" playlist:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Next up: \" /><text value=\"{track}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"show_next_track()\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"85\" /><option startIndex=\"86\" endIndex=\"91\" /><option startIndex=\"92\" endIndex=\"94\" /><option startIndex=\"95\" endIndex=\"103\" /></options></interaction></interactions><output><content><text value=\"Next up: Hey Jude\" /><text type=\"break\" /><text value=\"Next up: Helter Skelter\" /><text type=\"break\" /><text value=\"Next up: Something\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>for</code>, gefolgt von <code>track</code> und schließlich <code>in</code>, <code>playlist</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Use the parameter",
            "id": 87260,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Iteriere durch eine beliebige Liste, die im <code>playlist</code>-Parameter gespeichert ist, indem du den Parameter als Teil der Schleife verwendest.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_next_track\" class=\"title\" /><text value=\"(playlist)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" track \" /><text value=\"in\" class=\"keyword\" /><text value=\" playlist:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Next up: \" /><text value=\"{track}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"beatles = [\" /><text value=\"&quot;Hey Jude&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Helter Skelter&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Something&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"show_next_track(beatles)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"46\" endIndex=\"54\" /></interactions><output><content><text value=\"Next up: Hey Jude\" /><text type=\"break\" /><text value=\"Next up: Helter Skelter\" /><text type=\"break\" /><text value=\"Next up: Something\" /></content></output></code><p visible-if=\"wrong\">Gib <code>playlist</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Call with any list",
            "id": 87261,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die Funktion zweimal auf, zuerst mit der <code>beethoven</code> Playlist und dann mit der <code>beatles</code> Playlist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"show_next_track\" class=\"title\" /><text value=\"(playlist)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"for\" class=\"keyword\" /><text value=\" track \" /><text value=\"in\" class=\"keyword\" /><text value=\" playlist:\" /><text type=\"break\" /><text value=\"    print(\" /><text value=\"f&quot;Next up: \" /><text value=\"{track}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"beatles = [\" /><text value=\"&quot;Hey Jude&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Helter Skelter&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Something&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"beethoven = [\" /><text value=\"&quot;Symphony No. 1&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Symphony No. 9&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"show_next_track(beethoven)\" /><text type=\"break\" /><text value=\"show_next_track(beatles)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"208\" endIndex=\"217\" /><option startIndex=\"235\" endIndex=\"242\" /></options></interaction></interactions><output><content><text value=\"Next up: Symphony No. 1\" /><text type=\"break\" /><text value=\"Next up: Symphony No. 9\" /><text type=\"break\" /><text value=\"Next up: Hey Jude\" /><text type=\"break\" /><text value=\"Next up: Helter Skelter\" /><text type=\"break\" /><text value=\"Next up: Something\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>beethoven</code>, gefolgt von <code>beatles</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}