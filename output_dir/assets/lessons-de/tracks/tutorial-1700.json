{
  "tutorial": {
    "id": 1700,
    "version": 6,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "css",
    "title": "Ticketautomat",
    "descriptionContent": "Verwende CSS Grid, um ein Layout für einen Ticketautomaten zu erstellen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1700-icon-banner.svg",
    "chapters": [
      {
        "id": 11445,
        "title": "Ticketautomat",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Intro 2",
            "id": 105814,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Für dieses Projekt werden wir Grid-Abstände verwenden, um eine Ticket-Oberfläche für eine Banking-App zu erstellen.\n\nWir beginnen mit der folgenden HTML-Vorlage, die die Interface-Buttons und CSS-Regeln enthält, um sie zu stylen und auszurichten.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Creating a grid",
            "id": 105815,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir möchten die Buttons in einem Grid anzeigen, damit wir ihre Platzierung auf der Seite besser steuern können.\n\nWenn du dir den HTML-Code ansiehst, wirst du feststellen, dass alle Buttons in einem `div`-Element mit der Klasse `grid-container` enthalten sind. Wir werden eine Regel für diese Klasse erstellen, um zu steuern, wie die Buttons darin angezeigt werden.\n\n1. Erstelle eine Regel für die Klasse `grid-container`.\n2. Erstelle ein Grid, indem du die `display`-Eigenschaft auf den richtigen Wert setzt.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Add a `display: grid;` rule to display elements inside a parent on a grid."
                }
              ]
            }
          },
          {
            "title": "Grid columns",
            "id": 105837,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir möchten unsere vier Buttons in zwei Spalten mit jeweils zwei Buttons anzeigen. Lass uns eine Regel hinzufügen, um zwei gleich große Spalten zu erstellen.\n\n1. Innerhalb der `.grid-container` Regel, füge eine Eigenschaft hinzu, um zwei gleich große Spalten zu erstellen, die jeweils einen Bruchteil des verfügbaren Raums einnehmen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Set the columns with the `grid-template-columns` property.\n2. The number of property values defines the number of columns.\n3. A value like `1fr` means that a column takes one fraction of the available space.\n4. Use this template to help you define your property: \n```css \ngrid-template-columns: <fraction> <fraction>;\n```"
                }
              ]
            }
          },
          {
            "title": "Column gap",
            "id": 105843,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wenn du deinen Code ausführst, wirst du sehen, dass die Buttons in den beiden Spalten momentan zu nah beieinander sind. Lass uns eine Spaltenlücke hinzufügen, um sie zu trennen.\n\n1. Füge innerhalb der Regel `.grid-container` eine Eigenschaft hinzu, um einen `5px` Abstand zwischen den beiden Grid-Spalten zu schaffen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\ncolumn-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Row gap",
            "id": 105845,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jetzt, da die Spalten nicht mehr zusammenkleben, ist es an der Zeit, die Zeilen zu reparieren.\n\n1. Füge innerhalb der `.grid-container` Regel eine Eigenschaft hinzu, um einen `25px` Abstand zwischen den beiden Grid-Zeilen zu erstellen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The property looks like: \n```css\nrow-gap: <gapWidth>;\n```"
                }
              ]
            }
          },
          {
            "title": "Gap shorthand",
            "id": 105846,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir haben `column-gap` und `row-gap` verwendet, um die Abstände separat festzulegen, aber wir können das tatsächlich in einer Zeile tun. Lass uns unseren Code ändern.\n\n1. Verwende die `gap`-Kurzform, um die Zeilenabstände auf `25px` und die Spaltenabstände auf `5px` in nur einer Zeile festzulegen.\n2. Lösche die `column-gap`- und `row-gap`-Eigenschaften, da wir sie durch die Kurzform ersetzt haben.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 5px;\n  row-gap: 25px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. The gap shorthand looks like: \n```css\ngap: <rowGap> <columnGap>;\n```"
                }
              ]
            }
          },
          {
            "title": "Overview",
            "id": 105847,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Tolle Arbeit! Die Ticket-Oberfläche für die Banking-App ist fertig.\n\nWir führen hier keine Tests durch, also fühl dich frei, mit den Elementen und Regeln zu experimentieren. Versuche, mehr Buttons hinzuzufügen und das Grid-Layout entsprechend anzupassen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h2>Queueing Ticket</h2>\n    <div class=\"grid-container\">\n      <button class=\"grid-item\">Account Opening</button>\n      <button class=\"grid-item\">Account Activation</button>\n      <button class=\"grid-item\">Cash Withdrawal</button>\n      <button class=\"grid-item\">Cash Deposit</button>\n    </div>\n  </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 25px 5px;\n}\n\n.grid-item {\n  background-color: #1E96FF;\n  color: #FFFFFF;\n  padding: 15px;\n}\n\nh2 {\n  text-align: center;\n  color: #1E96FF;\n}\n\nbutton {\n  border: 1px solid #1E96FF;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}