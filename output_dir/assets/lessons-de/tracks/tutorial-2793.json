{
  "tutorial": {
    "id": 2793,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Arrays",
    "descriptionContent": "Lerne über Arrays in TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14815,
        "title": "Arrays",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 130745,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In TypeScript können wir auch Arrays deklarieren. Ähnlich wie bei primitiven Typen beginnen wir mit dem Typ nach einem Doppelpunkt.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numArray: \" /><text value=\"number\" class=\"built_in\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option startIndex=\"12\" endIndex=\"13\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>number</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy",
            "id": 130761,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir fügen direkt nach dem Typ eine öffnende und schließende eckige Klammer hinzu, um anzuzeigen, dass diese Variable ein Array des angegebenen Typs halten wird.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numArray: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[]\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"21\" /><option startIndex=\"21\" endIndex=\"22\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>[</code>, gefolgt von <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3 - Copy - Copy",
            "id": 130762,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schließlich können wir der Variable einen Wert zuweisen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" numArray: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(numArray);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"23\" endIndex=\"24\" /><option startIndex=\"25\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"34\" /></options></interaction></interactions><output><content><text value=\"[1, 2, 3]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>=</code>, gefolgt von <code>[</code> und schließlich <code>1, 2, 3</code>, <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130746,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Du kannst auch ein Array mit anderen Typen deklarieren. Lass uns ein Array von Strings erstellen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" strArray: \" /><text value=\"string\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"&quot;Hello&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(strArray);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"14\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;Hello&quot;, &quot;TypeScript&quot;]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>string</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130782,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In TypeScript können wir Arrays genauso verwenden wie in JavaScript. Zum Beispiel können wir ein bestehendes Array ändern, indem wir auf den Index verweisen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" list: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"list[\" /><text value=\"0\" class=\"number\" /><text value=\"] = \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(list);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"41\" endIndex=\"42\" /><option correct=\"false\"><content><text value=\"(\" /></content></option><option correct=\"false\"><content><text value=\")\" /></content></option></options></interaction></interactions><output><content><text value=\"[0, 2, 3, 4]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>list</code>, gefolgt von <code>[</code> und schließlich <code>0</code>, <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 130796,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Natürlich können wir auch alle anderen Array-Methoden verwenden, die wir aus JavaScript kennen. Lass uns eine Zahl am Ende der Liste hinzufügen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" list: \" /><text value=\"number\" class=\"built_in\" /><text value=\"[] = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"list.push(\" /><text value=\"5\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(list);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"45\" /><option startIndex=\"45\" endIndex=\"46\" /><option startIndex=\"46\" endIndex=\"47\" /><option correct=\"false\"><content><text value=\"&quot;Me?&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"[1, 2, 3, 4, 5]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>list</code>, gefolgt von <code>.push(</code> und schließlich <code>5</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130787,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können Unionstypen verwenden, um ein Array zu erstellen, das Werte verschiedener Typen enthält. Wir beginnen mit Klammern.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" example: ()[];\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"14\" /><option startIndex=\"14\" endIndex=\"15\" /><option correct=\"false\"><content><text value=\"[\" /></content></option><option correct=\"false\"><content><text value=\"]\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>(</code>, gefolgt von <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 130795,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge innerhalb der Klammern <code>string | number</code> als Union-Typ hinzu, um sicherzustellen, dass das Array Werte vom Typ <code>string</code> und <code>number</code> enthalten kann.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" stuff: (\" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"number\" class=\"built_in\" /><text value=\")[];\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"18\" /><option startIndex=\"19\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"27\" /><option correct=\"false\"><content><text value=\"boolean\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>string</code>, gefolgt von <code>|</code> und schließlich <code>number</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 130794,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge eine Zahl zum <code>example</code>-Array hinzu.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" stuff: (\" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"number\" class=\"built_in\" /><text value=\")[];\" /><text type=\"break\" /><text value=\"stuff = [\" /><text value=\"&quot;Coding&quot;\" class=\"string\" /><text value=\", \" /><text value=\"101\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(stuff);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"54\" /><option correct=\"false\"><content><text value=\"&quot;Programming&quot;\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;Coding&quot;, 101]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>101</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130786,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Typen können wir verwenden, um ein gemischtes Array in TypeScript zu erstellen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Alle Typen</item><item value=\"2\" correct=\"false\">Nur bis zu zwei verschiedene</item></selection><p visible-if=\"wrong\">Alle Typen.</p></body></html>"
          },
          {
            "title": "Lesson #10",
            "id": 130788,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge ein Element mit dem richtigen Typ zu unserem Array hinzu.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" words: \" /><text value=\"string\" class=\"built_in\" /><text value=\"[] = [];\" /><text type=\"break\" /><text value=\"words.push(\" /><text value=\"&quot;World&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(words);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"37\" endIndex=\"44\" /><option correct=\"false\"><content><text value=\"9\" /></content></option><option correct=\"false\"><content><text value=\"false\" /></content></option></options></interaction></interactions><output><content><text value=\"[&quot;World&quot;]\" /><text type=\"break\" /><text value=\"\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>\"World\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 130790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Können wir die <code>push</code>-Methode auf Arrays in TypeScript verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ja, es funktioniert genau wie JavaScript</item><item value=\"2\" correct=\"false\">Nein, dies ist eine JavaScript-only Funktion</item></selection><p visible-if=\"wrong\">Ja, es funktioniert genau wie JavaScript.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 130791,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Kannst du ein Boolean zu diesem Array hinzufügen, das wir oben definiert haben?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"let\" class=\"keyword\" /><text value=\" myArray: (\" /><text value=\"string\" class=\"built_in\" /><text value=\" | \" /><text value=\"number\" class=\"built_in\" /><text value=\")[];\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Ja</item><item value=\"2\" correct=\"true\">Nein</item></selection><p visible-if=\"wrong\">Wähle Nein aus.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130784,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Arten von Elementen kannst du in einem Array speichern?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Alle Typen, die der Typdefinition des Arrays entsprechen, einschließlich Zahlen, Strings, Booleans und mehr</item><item value=\"2\" correct=\"false\">Nur Strings und Zahlen</item><item value=\"3\" correct=\"false\">Überhaupt nichts</item></selection><p visible-if=\"wrong\">Alle Typen, die der Typdefinition des Arrays entsprechen, einschließlich Zahlen, Strings, Booleans und mehr.</p></body></html>"
          }
        ]
      }
    ]
  }
}