{
  "tutorial": {
    "id": 2350,
    "version": 4,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "css",
    "title": "CSS Grid 3",
    "descriptionContent": "CSS Grid 3",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12552,
        "title": "Erstellen von benannten Bereichen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Grid Item Classes",
            "id": 113550,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge jedem Grid-Element eine zweite Klasse hinzu. Die Klassennamen im HTML müssen mit den Klassennamen in `style.css` übereinstimmen. Du solltest jeden Klassennamen nur einmal verwenden.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item \">Item A</div>\n   <div class=\"grid-item \">Item B</div>\n   <div class=\"grid-item \">Item C</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n   <div class=\"grid-item item-c\">Item C</div>\n  </div>\n </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Area Property",
            "id": 113517,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge die Eigenschaft hinzu, die jedem Grid-Element einen Namen gibt.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n   <div class=\"grid-item item-c\">Item C</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".item-a {\n : item-a;\n}\n\n.item-b {\n : item-b;\n}\n\n.item-c {\n : item-c;\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Area Names",
            "id": 113518,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code `item-a`, `item-b` und `item-c`, um jedem Grid-Element einen Namen zu geben.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n   <div class=\"grid-item item-c\">Item C</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".item-a {\n grid-area:\n}\n\n.item-b {\n grid-area:\n}\n\n.item-c {\n grid-area:\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Template",
            "id": 113519,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge die Eigenschaft in der `grid-container` Klasse hinzu, die benannte Grid-Bereiche im Grid anordnet.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n   <div class=\"grid-item item-c\">Item C</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n : \"item-a item-b item-c\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \"item-a item-b item-c\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Template Value",
            "id": 113520,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Beende das Codieren der `grid-template-areas`, sodass die Elemente in umgekehrter alphabetischer Reihenfolge angeordnet sind.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-1\">Item A</div>\n   <div class=\"grid-item item-2\">Item B</div>\n   <div class=\"grid-item item-3\">Item C</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \"\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-1 {\n grid-area: item-a;\n}\n\n.item-2 {\n grid-area: item-b;\n}\n\n.item-3 {\n grid-area: item-c;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \"item-c item-b item-a\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-1 {\n grid-area: item-a;\n}\n\n.item-2 {\n grid-area: item-b;\n}\n\n.item-3 {\n grid-area: item-c;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Spanning",
            "id": 113521,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns ein Raster mit einer Zeile erstellen. Lasse `item-a` sich über zwei Spalten erstrecken und `item-b` eine Spalte am Ende einnehmen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \"\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \"item-a item-a item-b\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Empty",
            "id": 113522,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle ein Grid mit einer Zeile und drei Spalten unter Verwendung von `grid-template-areas`. Der Wert der ersten Spalte sollte leer sein, gefolgt von `item-a` und schließlich `item-b`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \"\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \". item-a item-b\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple grid rows",
            "id": 113523,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code eine zweite Zeile, die zwei Grid-Elemente enthält, `item-b` gefolgt von `item-c`.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-a\">Item A</div>\n   <div class=\"grid-item item-b\">Item B</div>\n   <div class=\"grid-item item-c\">Item C</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \". item-a\"\n  \" \";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \". item-a\"\n  \"item-b item-c\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-a {\n grid-area: item-a;\n}\n\n.item-b {\n grid-area: item-b;\n}\n\n.item-c {\n grid-area: item-c;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple Lines",
            "id": 113524,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns ein 2x2 Raster erstellen. Füge die Rasterzeilen so hinzu, dass die erste und letzte Fläche leer sind. In den verbleibenden Flächen platziere `item-a` in der ersten Zeile und `item-b` in der zweiten.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item item-1\">Area 1</div>\n   <div class=\"grid-item item-2\">Area 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \" \"\n  \" \";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-1 {\n grid-area: item-a;\n}\n\n.item-2 {\n grid-area: item-b;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 2px;\n grid-template-areas: \". item-a\"\n  \"item-b .\";\n}\n\n.grid-item {\n background-color: #1E96FF;\n color: #FFFFFF;\n text-align: center;\n padding: 10px;\n margin: 2px;\n}\n\n.item-1 {\n grid-area: item-a;\n}\n\n.item-2 {\n grid-area: item-b;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12559,
        "title": "Abschnitte mit benannten Bereichen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Grid Item Classes",
            "id": 113585,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gib den beiden Grid-Elementen im HTML eindeutige Klassennamen, die mit ihren Klassen in `style.css` übereinstimmen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item \">red</div>\n   <div class=\"grid-item \">green</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item red\">red</div>\n   <div class=\"grid-item green\">green</div>\n  </div>\n </body>\n</html>"
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed\"\n  \"colorGreen\"\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}",
                  "solvedContent": null
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Area",
            "id": 113598,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gib den beiden `grid-area` Eigenschaften einen Wert, der denen in der `grid-template-areas` Eigenschaft entspricht.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item red\">red</div>\n   <div class=\"grid-item green\">green</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed\"\n  \"colorGreen\";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: ;\n background-color: red;\n}\n\n.green {\n grid-area: ;\n background-color: green;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed\"\n  \"colorGreen\";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Template",
            "id": 113599,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schreibe die Regel `grid-container`, um das grüne Div über dem roten Div erscheinen zu lassen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item red\">red</div>\n   <div class=\"grid-item green\">green</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \" \"\n  \" \";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorGreen\"\n  \"colorRed\";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Rows",
            "id": 113604,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code die dritte Zeile des Rasters so, dass sie das neue blaue `div`-Element enthält.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item red\">red</div>\n   <div class=\"grid-item green\">green</div>\n   <div class=\"grid-item blue\">blue</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed\"\n  \"colorGreen\"\n  \" \";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}\n\n.blue {\n grid-area: colorBlue;\n background-color: blue;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed\"\n  \"colorGreen\"\n  \"colorBlue\";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}\n\n.blue {\n grid-area: colorBlue;\n background-color: blue;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid Spanning",
            "id": 113605,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code das rote `div`-Element so, dass es sich über zwei Spalten in der ersten Zeile erstreckt. Dann code die grünen und blauen `div`-Elemente so, dass sie jeweils die Hälfte der zweiten Zeile einnehmen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item red\">red</div>\n   <div class=\"grid-item green\">green</div>\n   <div class=\"grid-item blue\">blue</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \" \"\n  \" \";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}\n\n.blue {\n grid-area: colorBlue;\n background-color: blue;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed colorRed\"\n  \"colorGreen colorBlue\";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}\n\n.blue {\n grid-area: colorBlue;\n background-color: blue;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple Rows and Columns",
            "id": 113606,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code die zweite Zeile des Rasters so, dass nach dem grünen `div`-Element ein leerer Raum entsteht. Dann code das blaue `div`-Element so, dass es sich über beide Spalten der dritten Zeile erstreckt.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item red\">red</div>\n   <div class=\"grid-item green\">green</div>\n   <div class=\"grid-item blue\">blue</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed colorRed\"\n  \"colorGreen  \"\n  \" \";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px 0px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}\n\n.blue {\n grid-area: colorBlue;\n background-color: blue;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"colorRed colorRed\"\n  \"colorGreen .\"\n  \"colorBlue colorBlue\";\n}\n\n.grid-item {\n text-align: center;\n padding: 40px 0px;\n}\n\n.red {\n grid-area: colorRed;\n background-color: red;\n}\n\n.green {\n grid-area: colorGreen;\n background-color: green;\n}\n\n.blue {\n grid-area: colorBlue;\n background-color: blue;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12562,
        "title": "Ausrichten von Grid-Elementen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Align Items Property/Start",
            "id": 113624,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code die Eigenschaft, um die Buttons auf der Spaltenachse des Grids anzuordnen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n : start;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: start;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Align End",
            "id": 113626,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code den korrekten Wert für die Eigenschaft `align-items`, um die Buttons an den unteren Rand des Grid-Bereichs zu verschieben.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: start\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: end;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Align Center",
            "id": 113627,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verschiebe die Buttons in die Mitte der Spaltenachse des Grids.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: start\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: center;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Align Stretch",
            "id": 113628,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Setze die Eigenschaft `align-items` auf ihren Standardwert zurück, der die Elemente über den gesamten verfügbaren Gitterraum streckt.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: start\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: stretch;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Items Property/Stretch",
            "id": 113629,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Beende das Codieren des Eigenschaftswerts des `grid-container`, damit die Grid-Elemente auf der Zeilenachse ausgerichtet sind. Sie behalten das standardmäßige `stretch`-Aussehen bei.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n -items: stretch;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n justify-items: stretch;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify End",
            "id": 113633,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verschiebe die Buttons auf die rechte Seite ihrer jeweiligen Gitterflächen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n justify-items: stretch\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n justify-items: end;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Start",
            "id": 113634,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verschiebe die Buttons auf die linke Seite ihrer jeweiligen Gitterflächen.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n justify-items: end;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n justify-items: start;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Stretch",
            "id": 113635,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Code die Buttons so, dass sie wieder die Standardeinstellung der `align-items`-Eigenschaft haben, bei der sie sich über den gesamten verfügbaren Gitterraum erstrecken.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item button-1\">Button 1</div>\n   <div class=\"grid-item button-2\">Button 2</div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: start\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n background-color: #E0F6FF;\n grid-gap: 5px;\n grid-template-columns: 50% 50%;\n grid-template-rows: 100px;\n align-items: stretch;\n}\n\n.grid-item {\n background-color: orange;\n color: #FFFFFF;\n text-align: center;\n border-radius: 20px;\n padding: 10px;\n margin: 2px;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12563,
        "title": "Verwendung von CSS Grid und Flexbox",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Grid with Flexbox",
            "id": 113643,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Innerhalb der `.grid-container` Regel füge den `display` Eigenschaftswert hinzu, der ideal für die Erstellung von Seitenlayouts ist.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item header\">\n    <h3>Sassy Cat vs Cool Dog</h3>\n   </div>\n   <div class=\"grid-item cat\"><img src=\"https://mimo.app/i/cat.png\">\n   </div>\n   <div class=\"grid-item dog\"><img\n     src=\"https://mimo.app/i/beach-dog.png\"></div>\n   <div class=\"grid-item footer\">\n    <h4>Tune In Next Time</h4>\n   </div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: ;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n justify-content: center;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n justify-content: center;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Grid with Flexbox 2",
            "id": 113637,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge die Eigenschaft und den Wert zu den `.dog` und `.cat` Klassenregeln hinzu, die es uns ermöglichen, die Position der **Inhalte** im Grid-Element zu steuern.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item header\">\n    <h3>Sassy Cat vs Cool Dog</h3>\n   </div>\n   <div class=\"grid-item cat\"><img src=\"https://mimo.app/i/cat.png\">\n   </div>\n   <div class=\"grid-item dog\"><img\n     src=\"https://mimo.app/i/beach-dog.png\"></div>\n   <div class=\"grid-item footer\">\n    <h4>Tune In Next Time</h4>\n   </div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n justify-content: center;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: center;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Content Default",
            "id": 113638,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge der `.cat` Klasse die Flexbox-Eigenschaft und den Wert hinzu, sodass sie auf der linken Seite des Rasters positioniert wird. Dies ist die Standardpositionierung der Flexbox auf der Hauptachse.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item header\">\n    <h3>Sassy Cat vs Cool Dog</h3>\n   </div>\n   <div class=\"grid-item cat\"><img src=\"https://mimo.app/i/cat.png\">\n   </div>\n   <div class=\"grid-item dog\"><img\n     src=\"https://mimo.app/i/beach-dog.png\"></div>\n   <div class=\"grid-item footer\">\n    <h4>Tune In Next Time</h4>\n   </div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-start;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Content Right",
            "id": 113639,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verschiebe das Foto des Hundes auf die rechte Seite des Grid-Bereichs. Dies ist eine Aktion, die mit Grid allein nicht möglich ist.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item header\">\n    <h3>Sassy Cat vs Cool Dog</h3>\n   </div>\n   <div class=\"grid-item cat\"><img src=\"https://mimo.app/i/cat.png\">\n   </div>\n   <div class=\"grid-item dog\"><img\n     src=\"https://mimo.app/i/beach-dog.png\"></div>\n   <div class=\"grid-item footer\">\n    <h4>Tune In Next Time</h4>\n   </div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-start;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content:\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"cat\"\n  \"dog\"\n  \"footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-start;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-end;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Content/Opposing Sides",
            "id": 113640,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Passe die `.dog` und `.cat` Klassen an, um die Bilder so weit wie möglich auf der Hauptachse mit Flexbox zu trennen. Die Katze sollte am Anfang der Achse und der Hund am Ende der Achse sein.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item header\">\n    <h3>Sassy Cat vs Cool Dog</h3>\n   </div>\n   <div class=\"grid-item cat\"><img src=\"https://mimo.app/i/cat.png\">\n   </div>\n   <div class=\"grid-item dog\"><img\n     src=\"https://mimo.app/i/beach-dog.png\"></div>\n   <div class=\"grid-item footer\">\n    <h4>Tune In Next Time</h4>\n   </div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header header\"\n  \"cat dog\"\n  \"footer footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 50px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-end;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-start;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header header\"\n  \"cat dog\"\n  \"footer footer\";\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 50px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-start;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: flex-end;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Justify Content Center",
            "id": 113642,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich platziere beide Fotos der Tiere wieder in der Mitte der Seite.",
              "preselectedFileIndex": 1,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n <head>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n </head>\n <body>\n  <div class=\"grid-container\">\n   <div class=\"grid-item header\"><h3>Sassy Cat vs Cool Dog</h3></div>\n   <div class=\"grid-item photo cat\"><img src=\"https://mimo.app/i/cat.png\"></div>\n   <div class=\"grid-item photo dog\"><img src=\"https://mimo.app/i/beach-dog.png\"></div>\n   <div class=\"grid-item footer\"><h4>Tune In Next Time</h4></div>\n  </div>\n </body>\n</html>",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"dog\"\n  \"cat\"\n  \"footer\"\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}",
                  "solvedContent": ".grid-container {\n display: grid;\n grid-gap: 5px;\n grid-template-areas:\n  \"header\"\n  \"dog\"\n  \"cat\"\n  \"footer\"\n}\n\n.grid-item {\n text-align: center;\n padding: 20px;\n background-color: lightGrey;\n}\n\n.grid-item img {\n width: 75px;\n}\n\n.header {\n grid-area: header;\n color: white;\n background-color: Grey;\n}\n\n.cat {\n grid-area: cat;\n background-color: lightGrey;\n display: flex;\n justify-content: center;\n}\n\n.dog {\n grid-area: dog;\n background-color: lightGrey;\n display: flex;\n justify-content: center;\n}\n\n.footer {\n grid-area: footer;\n color: white;\n background-color: Grey;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}