{
  "tutorial": {
    "id": 2216,
    "version": 2,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Typen und Vergleiche",
    "descriptionContent": "Typen und Vergleiche",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 7200,
        "title": "Zahlen vergleichen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Challenge 1",
            "id": 62414,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Unter dem zweiten `console.log` schreibe ein weiteres `console.log`, das das Ergebnis der Überprüfung ausgibt, ob die Zeichen größer oder gleich 250 sind.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const characters = 134;\nconsole.log(\"Character limit reached:\");",
                  "solvedContent": "const characters = 134;\nconsole.log(\"Character limit reached:\");\nconsole.log(characters >= 250);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 2",
            "id": 62412,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle die `const` Variable `inProgress`. Überprüfe, ob `downloaded` kleiner als `100` ist, und speichere den Vergleich in `inProgress`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const downloaded = 67;\n",
                  "solvedContent": "const downloaded = 67;\nconst inProgress = downloaded < 100;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 3",
            "id": 62413,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Überprüfe, ob `emails` größer oder gleich `capacity` ist, und speichere das Ergebnis des Vergleichs in einer Variablen namens `full`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const capacity = 1000;\nconst emails = 157;\n",
                  "solvedContent": "const capacity = 1000;\nconst emails = 157;\nconst full = emails >= capacity;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 4",
            "id": 62411,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Überprüfe, ob `age` größer oder gleich `minAge` ist, und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const age = 19;\nconst minAge = 16;\nconsole.log(\"Old enough to drive:\");\n",
                  "solvedContent": "const age = 19;\nconst minAge = 16;\nconsole.log(\"Old enough to drive:\");\nconsole.log(age >= minAge);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 5",
            "id": 62458,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Überprüfe, ob `temperature` weniger als 32 Grad ist, und speichere das Ergebnis des Vergleichs in einer `const`-Variablen namens `isFreezing`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const temperature = 30;\nconst ",
                  "solvedContent": "const temperature = 30;\nconst isFreezing = temperature < 32;"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7232,
        "title": "Vergleichen von Strings",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Challenge 1",
            "id": 62712,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vergleiche `position` mit `expected` mit dem strikten Ungleichheitsoperator und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const position = \"last\";\nconst expected = \"first\";\n",
                  "solvedContent": "const position = \"last\";\nconst expected = \"first\";\nconsole.log(position !== expected);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 2",
            "id": 62721,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vergleiche `onlineStatus` mit `lastSeen` mit dem Gleichheitsoperator und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const onlineStatus = \"offline\";\nconst lastSeen = \"yesterday\";\n",
                  "solvedContent": "const onlineStatus = \"offline\";\nconst lastSeen = \"yesterday\";\nconsole.log(onlineStatus === lastSeen);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 3",
            "id": 62713,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vergleiche `offBrand` mit `onBrand` mit dem Gleichheitsoperator und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const offBrand = \"Orange\";\nconst onBrand = \"Apple\";\n",
                  "solvedContent": "const offBrand = \"Orange\";\nconst onBrand = \"Apple\";\nconsole.log(offBrand === onBrand);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Challenge 4",
            "id": 62722,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vergleiche `studentName` mit `\"Tina\"` mit dem Ungleichheitsoperator und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const studentName = \"Anna\";\n",
                  "solvedContent": "const studentName = \"Anna\";\nconsole.log(studentName !== \"Tina\");"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 7720,
        "title": "Entdeckung von Typen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 67672,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Weise der Variablen `age` einen Wert vom Typ **number** zu. Verbinde dann den String `\"Age: \"` mit dieser Variablen und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const age;\n",
                  "solvedContent": "const age = 26;\nconsole.log(\"Age: \" + age);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 67671,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `joke` und weise ihr einen **String** mit dem besten Witz zu, den du kennst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const joke = \"Why was 6 afraid of 7? Because 789\";"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 67585,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verbinde die `const` Variable `messages` mit dem String `\" new messages\"` und zeige es in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const messages = 8;\nconsole.log( );",
                  "solvedContent": "const messages = 8;\nconsole.log(messages + \" new messages\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 67586,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schreibe eine Anweisung zur Anzeige, und füge darin die Variablen `text` und `shuffle` zusammen, um `Shuffle playlist: true` anzuzeigen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const shuffle = true;\nconst text = \"Shuffle playlist: \";\n",
                  "solvedContent": "const shuffle = true;\nconst text = \"Shuffle playlist: \";\nconsole.log(text + shuffle);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 67587,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable `winner`, die den String `\"Lucky number: \"` mit der Variable `number` verbindet. Zeige den Wert der Variable `winner` in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const number = 7;\n\n",
                  "solvedContent": "const number = 7;\nconst winner = \"Lucky number: \" + number;\nconsole.log(winner);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 6",
            "id": 67701,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle die `const` Variable `sugar`, die eine Zahl deiner Wahl speichert. Verbinde dann die Variable mit dem String `\" grams of sugar\"` und zeige das Ergebnis in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const sugar = 100;\nconsole.log(sugar + \" grams of sugar\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 7",
            "id": 67699,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verbinde die Variable `movie` mit `\" audience score: \"`, und dann die Variable `score`, um `Joker audience score: 90` anzuzeigen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const movie = \"Joker\";\nconst score = 90;\nconsole.log(  );",
                  "solvedContent": "const movie = \"Joker\";\nconst score = 90;\nconsole.log(movie + \" audience score: \" + score);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 8",
            "id": 67700,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verbinde die Variable `user` mit dem String `\" is online: \"`, und dann die Variable `isOnline`. Weise den Ausdruck der Variable `message` zu. Zeige die Variable `message` in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const user = \"Joe\";\nconst isOnline = true;\nconst message;\nconsole.log(message);",
                  "solvedContent": "const user = \"Joe\";\nconst isOnline = true;\nconst message = user + \" is online: \" + isOnline;\nconsole.log(message);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 9",
            "id": 67670,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `isWeekend`, die den **boolean** Wert deiner Wahl enthält, und zeige sie in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n",
                  "solvedContent": "const isWeekend = false;\nconsole.log(isWeekend);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 12688,
        "title": "Logische Operatoren",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "AND operator",
            "id": 115168,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `result`, die einen logischen Ausdruck speichert. Dieser Ausdruck sollte überprüfen, ob die Internetgeschwindigkeit größer als 30 ist *und* ob die Kamera verbunden ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let internetSpeed = 32;\r\nlet isCamConnected = true;\r\n\r\nconsole.log(\"Online class : \" + result);",
                  "solvedContent": "let internetSpeed = 32;\r\nlet isCamConnected = true;\r\nconst result = (internetSpeed > 30) && (isCamConnected);\r\nconsole.log(\"Online class : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "AND operator 2",
            "id": 115132,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Speichere einen logischen Ausdruck in `result`, der überprüft, ob der gekaufte Artikel `\"perfume\"` entspricht, *und* der Lagerbestand `>` als `0` ist, *und* die Rechnung `<=` der Zahlung des Kunden ist. Verwende `&&`, um die drei Bedingungen zu verknüpfen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let purchasedItem = \"perfume\";\r\nlet stock = 4;\r\nlet bill = 20;\r\nlet customerPayment = 25;\r\nconst result = ;\r\nconsole.log(\"Transaction approved? : \" + result);",
                  "solvedContent": "let purchasedItem = \"perfume\";\r\nlet stock = 4;\r\nlet bill = 20;\r\nlet customerPayment = 25;\r\nconst result = (purchasedItem === \"perfume\") && (stock > 0) && (bill <= customerPayment);\r\nconsole.log(\"Transaction approved? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "OR operator",
            "id": 115169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `result`, die einen logischen Ausdruck speichert. Der Ausdruck sollte überprüfen, ob das WLAN verbunden ist *oder* ob die mobilen Daten eingeschaltet sind.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isWifiConnected = true;\r\nlet isMobileDataOn = false;\r\n\r\nconsole.log(\"Is the internet working fine? : \" + result);",
                  "solvedContent": "let isWifiConnected = true;\r\nlet isMobileDataOn = false;\r\nconst result = isWifiConnected || isMobileDataOn;\r\nconsole.log(\"Is the internet working fine? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "OR operator 2",
            "id": 115134,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Speichere einen logischen Ausdruck in `result`, der überprüft, ob die Barzahlung *oder* das Kreditguthaben *oder* das Kartenguthaben größer als die Rechnung ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet creditBalance = 5;\r\nlet cardBalance = 15;\r\nconst result = ;\r\nconsole.log(\"Payment Successful? : \" + result);",
                  "solvedContent": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet creditBalance = 5;\r\nlet cardBalance = 15;\r\nconst result = (cashPayment > bill) || (creditBalance > bill) || (cardBalance > bill);\r\nconsole.log(\"Payment Successful? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "NOT operator",
            "id": 115170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `result`, die den negierten Wert der Variable `laptopBatteryEmpty` speichert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let laptopBatteryEmpty = false;\r\n\r\nconsole.log(\"Laptop Charged? : \" + result);",
                  "solvedContent": "let laptopBatteryEmpty = false;\r\nconst result = !laptopBatteryEmpty;\r\nconsole.log(\"Laptop Charged? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "NOT operator 2",
            "id": 115135,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In der Variable `result` negiere einen logischen Ausdruck, der überprüft, ob der Swipe nach unten *und* die Online-Zahlung ausgefallen ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let isSwipeDown = false;\r\nlet isOnlinePayDown = true;\r\nconst result = ;\r\nconsole.log(\"Is any mode of payment accepted? : \" + result);",
                  "solvedContent": "let isSwipeDown = false;\r\nlet isOnlinePayDown = true;\r\nconst result = !(isSwipeDown && isOnlinePayDown);\r\nconsole.log(\"Is any mode of payment accepted? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logical Expression",
            "id": 115133,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `result`, die einen logischen Ausdruck speichert. Der Ausdruck sollte überprüfen, ob der Swipe funktioniert *oder* ob die Barzahlung größer als *oder* gleich der Rechnung ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet isSwipeWorking = false;\r\n\r\nconsole.log(\"Payment Successful? : \" + result);",
                  "solvedContent": "let bill = 20;\r\nlet cashPayment = 25;\r\nlet isSwipeWorking = false;\r\nconst result = isSwipeWorking || (cashPayment >= bill);\r\nconsole.log(\"Payment Successful? : \" + result);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Logical Expression 2",
            "id": 115171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const`-Variable namens `rgbCheck`, die einen logischen Ausdruck speichert. Der logische Ausdruck sollte überprüfen, ob die Variablen `r`, `g` und `b` kleiner oder gleich 255 sind, um eine gültige RGB-Farbe zu bilden.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let r = 200;\r\nlet g = 300;\r\nlet b = 10;\r\n\r\nconsole.log(\"Valid RGB? : \" + rgbCheck);",
                  "solvedContent": "let r = 200;\r\nlet g = 300;\r\nlet b = 10;\r\nconst rgbCheck = (r <= 255) && (g <= 255) && (b <= 255);\r\nconsole.log(\"Valid RGB? : \" + rgbCheck);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}