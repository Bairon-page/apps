{
  "tutorial": {
    "id": 1346,
    "version": 6,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Rückgabe von Tupeln",
    "descriptionContent": "Tupel",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9912,
        "title": "Tupel-Rückgabe",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Multiple values",
            "id": 88373,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Tuples sind nützlich, weil sie es uns ermöglichen, mehrere Werte aus einer Funktion zurückzugeben, wie zum Beispiel die höchsten und niedrigsten Punktzahlen aus einer Liste.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_scores_data\" class=\"title\" /><text value=\"(scores_list)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  highest_score = max(scores_list)\" /><text type=\"break\" /><text value=\"  lowest_score = min(scores_list)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" highest_score, lowest_score\" /><text type=\"break\" /><text value=\" \" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"105\" endIndex=\"111\" /><option startIndex=\"112\" endIndex=\"139\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>highest_score, lowest_score</code> aus.</p></body></html>"
          },
          {
            "title": "Return a tuple",
            "id": 88377,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um ein Tuple zurückzugeben, kodieren wir die Werte, die wir zurückgeben möchten, getrennt durch ein Komma <code>,</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_scores_data\" class=\"title\" /><text value=\"(scores_list)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  highest_score = max(scores_list)\" /><text type=\"break\" /><text value=\"  lowest_score = min(scores_list)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" highest_score, lowest_score\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"125\" endIndex=\"126\" /></interactions></code><p visible-if=\"wrong\">Gib <code>,</code> ein.</p></body></html>"
          },
          {
            "title": "No parentheses",
            "id": 88378,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Auch wenn wir ein Tuple zurückgeben, sind Klammern nicht notwendig.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_scores_data\" class=\"title\" /><text value=\"(scores_list)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  highest_score = max(scores_list)\" /><text type=\"break\" /><text value=\"  lowest_score = min(scores_list)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" highest_score, lowest_score\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"105\" endIndex=\"111\" /><option startIndex=\"112\" endIndex=\"139\" /><option correct=\"false\"><content><text value=\"def\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>highest_score, lowest_score</code> aus.</p></body></html>"
          },
          {
            "title": "Store return value",
            "id": 88379,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um ein von einer Funktion zurückgegebenes Tuple zu speichern, weisen wir das Ergebnis des Funktionsaufrufs wie gewohnt einer Variablen wie <code>data</code> zu.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_scores_data\" class=\"title\" /><text value=\"(scores_list)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  highest_score = max(scores_list)\" /><text type=\"break\" /><text value=\"  lowest_score = min(scores_list)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" highest_score, lowest_score\" /><text type=\"break\" /><text value=\"scores = [\" /><text value=\"31\" class=\"number\" /><text value=\", \" /><text value=\"17\" class=\"number\" /><text value=\", \" /><text value=\"80\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"data = get_scores_data(scores)\" /><text type=\"break\" /><text value=\"print(data)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"162\" endIndex=\"166\" /><option startIndex=\"167\" endIndex=\"168\" /><option correct=\"false\"><content><text value=\"==\" /></content></option><option correct=\"false\"><content><text value=\",\" /></content></option></options></interaction></interactions><output><content><text value=\"(80, 17)\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>data</code>, gefolgt von <code>=</code> aus.</p></body></html>"
          },
          {
            "title": "Retrieve individual values",
            "id": 88380,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können dann die einzelnen Werte über ihre Indizes abrufen, wie den höchsten Punktestand mit <code>data[0]</code> und den kleinsten mit <code>data[1]</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_scores_data\" class=\"title\" /><text value=\"(scores_list)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  highest_score = max(scores_list)\" /><text type=\"break\" /><text value=\"  lowest_score = min(scores_list)\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" highest_score, lowest_score\" /><text type=\"break\" /><text value=\"scores = [\" /><text value=\"31\" class=\"number\" /><text value=\", \" /><text value=\"17\" class=\"number\" /><text value=\", \" /><text value=\"80\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"data = get_scores_data(scores)\" /><text type=\"break\" /><text value=\"highest = data[\" /><text value=\"0\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"smallest = data[\" /><text value=\"1\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;smallest score: \" /><text value=\"{smallest}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;highest score: \" /><text value=\"{highest}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"193\" endIndex=\"200\" /><option startIndex=\"222\" endIndex=\"229\" /><option correct=\"false\"><content><text value=\"return\" /></content></option></options></interaction></interactions><output><content><text value=\"smallest score: 17\" /><text type=\"break\" /><text value=\"highest score: 80\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>highest</code>, gefolgt von <code>data[1]</code> aus.</p></body></html>"
          },
          {
            "title": "When to return a tuple",
            "id": 88381,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Da <code>tuples</code> unveränderlich sind, geben wir ein <code>tuple</code> zurück, wenn wir es nicht ändern müssen, sondern nur die Werte verwenden wollen, wie bei den Gewinnern eines Spiels.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"get_top_three\" class=\"title\" /><text value=\"(players)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" players[\" /><text value=\"0\" class=\"number\" /><text value=\"], players[\" /><text value=\"1\" class=\"number\" /><text value=\"], players[\" /><text value=\"2\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"players = [\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ann&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ty&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"top_three = get_top_three(players)\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;First: \" /><text value=\"{top_three[\" /><text value=\"0\" class=\"number\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Second: \" /><text value=\"{top_three[\" /><text value=\"1\" class=\"number\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;Third: \" /><text value=\"{top_three[\" /><text value=\"2\" class=\"number\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"36\" /><option startIndex=\"37\" endIndex=\"71\" /></options></interaction></interactions><output><content><text value=\"First: Sue\" /><text type=\"break\" /><text value=\"Second: Ed\" /><text type=\"break\" /><text value=\"Third: Ann\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>players[0], players[1], players[2]</code> aus.</p></body></html>"
          },
          {
            "title": "When to return a list",
            "id": 88382,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir die zurückgegebene Sammlung von Werten ändern möchten, wie zum Beispiel ein Teammitglied zu aktualisieren, <code>return</code> wir eine Liste wie <code>team</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"form_team\" class=\"title\" /><text value=\"(players)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  team = []\" /><text type=\"break\" /><text value=\"  team.append(players[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"  team.append(players[\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" team\" /><text type=\"break\" /><text value=\"players = [\" /><text value=\"&quot;Sue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ed&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ann&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Ty&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"team = form_team(players)\" /><text type=\"break\" /><text value=\"team[\" /><text value=\"0\" class=\"number\" /><text value=\"] = \" /><text value=\"&quot;Chloe&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"print(team)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"90\" endIndex=\"101\" /></interactions><output><content><text value=\"['Chloe', 'Ann']\" /></content></output></code><p visible-if=\"wrong\">Gib <code>return team</code> ein.</p></body></html>"
          },
          {
            "title": "Question: Multiple values",
            "id": 88670,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist einer der Hauptverwendungszwecke von Tupeln?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Rückgabe mehrerer Werte innerhalb von Funktionen</item><item value=\"2\" correct=\"false\">Werte anzeigen</item></selection><p visible-if=\"wrong\">Rückgabe mehrerer Werte innerhalb von Funktionen.</p></body></html>"
          },
          {
            "title": "Question: Return a tuple",
            "id": 88671,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie trennen wir die verschiedenen Werte, wenn wir mehrere Werte von einer Funktion zurückgeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Verwendung von Kommas <code>,</code></item><item value=\"2\" correct=\"false\">Verwendung von Semikolons <code>;</code></item></selection><p visible-if=\"wrong\">Verwendung von Kommas <code>,</code>.</p></body></html>"
          },
          {
            "title": "Question: No parentheses",
            "id": 88672,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Benötigen wir Klammern, wenn wir mehrere Werte zurückgeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nein, nur das <code>return</code>-Schlüsselwort gefolgt von den Werten</item><item value=\"2\" correct=\"false\">Ja, um jeden einzelnen Wert</item></selection><p visible-if=\"wrong\">Nein, nur das <code>return</code>-Schlüsselwort gefolgt von den Werten.</p></body></html>"
          },
          {
            "title": "Question: Store return value",
            "id": 88673,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir ein von einer Funktion zurückgegebenes Tuple speichern?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Indem du es in einer Variable speicherst, wie jeden anderen Wert</item><item value=\"2\" correct=\"false\">Wir können Tupel, die von Funktionen zurückgegeben werden, nicht speichern</item></selection><p visible-if=\"wrong\">Indem du es in einer Variable speicherst, wie jeden anderen Wert.</p></body></html>"
          },
          {
            "title": "Retrieve individual values",
            "id": 88674,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie rufen wir die einzelnen Werte aus dem Tupel ab, das von einer Funktion zurückgegeben wird?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nach ihrem Index</item><item value=\"2\" correct=\"false\">Nach ihrem Wert</item></selection><p visible-if=\"wrong\">Nach ihrem Index.</p></body></html>"
          },
          {
            "title": "Question: When to return a tuple",
            "id": 88675,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wann sollten wir ein Tuple zurückgeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Wenn wir uns nur für die einzelnen Werte interessieren oder nicht beabsichtigen, das Tuple zu ändern</item><item value=\"2\" correct=\"false\">Wenn wir beabsichtigen, Werte im Tuple zu ersetzen</item></selection><p visible-if=\"wrong\">Wenn wir uns nur für die einzelnen Werte interessieren oder nicht beabsichtigen, das Tuple zu ändern.</p></body></html>"
          },
          {
            "title": "Question: When to return a list",
            "id": 88676,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wann sollten wir eine Liste anstelle eines Tupels zurückgeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Wenn wir an den Werten als Sammlung interessiert sind und beabsichtigen, die Liste zu ändern</item><item value=\"2\" correct=\"false\">Wenn die zurückgegebene Sammlung von Werten nicht geändert werden sollte</item></selection><p visible-if=\"wrong\">Wenn wir an den Werten als Sammlung interessiert sind und beabsichtigen, die Liste zu ändern.</p></body></html>"
          },
          {
            "title": "Example: Multiple values",
            "id": 88677,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib die Werte <code>age</code> gefolgt von <code>can_drive</code> zurück.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"check_age\" class=\"title\" /><text value=\"(age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  can_drive = age &gt;= \" /><text value=\"18\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" age, can_drive\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"46\" endIndex=\"52\" /><option startIndex=\"53\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"57\" /><option startIndex=\"58\" endIndex=\"67\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>return</code>, gefolgt von <code>age</code> und schließlich <code>,</code>, <code>can_drive</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Return a tuple",
            "id": 88678,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib <code>profit</code> zurück, gefolgt von <code>after_taxes</code> und schließlich <code>above_mean</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"analyze_profit\" class=\"title\" /><text value=\"(gains, expenses)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  profit = gains - expenses\" /><text type=\"break\" /><text value=\"  after_taxes = \" /><text value=\"0.85\" class=\"number\" /><text value=\" * profit\" /><text type=\"break\" /><text value=\"  above_mean = profit &gt; \" /><text value=\"1000\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" profit, after_taxes, above_mean\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"133\" endIndex=\"139\" /><option startIndex=\"139\" endIndex=\"140\" /><option startIndex=\"141\" endIndex=\"152\" /><option startIndex=\"152\" endIndex=\"153\" /><option startIndex=\"154\" endIndex=\"164\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>profit</code>, gefolgt von <code>,</code> und schließlich <code>after_taxes</code>, <code>,</code>, <code>above_mean</code> aus.</p></body></html>"
          },
          {
            "title": "Example: No parentheses",
            "id": 88679,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib das Tupel von <code>age</code> gefolgt von <code>can_drive</code> zurück und lass die Klammern weg.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"check_age\" class=\"title\" /><text value=\"(age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  can_drive = age &gt;= \" /><text value=\"18\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" age, can_drive\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"53\" endIndex=\"67\" /></interactions></code><p visible-if=\"wrong\">Gib <code>age, can_drive</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Store return value",
            "id": 88680,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Speichere das von <code>check_age()</code> zurückgegebene Tuple in einer Variablen namens <code>driving_age</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"check_age\" class=\"title\" /><text value=\"(age)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  can_drive = age &gt;= \" /><text value=\"18\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" age, can_drive\" /><text type=\"break\" /><text value=\"driving_age = check_age(\" /><text value=\"17\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(driving_age)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"68\" endIndex=\"81\" /></interactions><output><content><text value=\"(17, False)\" /></content></output></code><p visible-if=\"wrong\">Gib <code>driving_age =</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Retrieve individual values",
            "id": 88681,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Greife zunächst auf den <code>profit</code> aus dem zurückgegebenen Tupel zu, gefolgt vom Wert von <code>above_mean</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"def\" class=\"keyword\" /><text value=\" \" /><text value=\"analyze_profit\" class=\"title\" /><text value=\"(gains, expenses)\" class=\"params\" /><text value=\":\" /><text type=\"break\" /><text value=\"  profit = gains - expenses\" /><text type=\"break\" /><text value=\"  after_taxes = \" /><text value=\"0.85\" class=\"number\" /><text value=\" * profit\" /><text type=\"break\" /><text value=\"  above_mean = profit &gt; \" /><text value=\"1000\" class=\"number\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" profit, after_taxes, above_mean\" /><text type=\"break\" /><text value=\"insights = analyze_profit(\" /><text value=\"3000\" class=\"number\" /><text value=\", \" /><text value=\"1200\" class=\"number\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;profit: \" /><text value=\"{insights[\" /><text value=\"0\" class=\"number\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"f&quot;above mean: \" /><text value=\"{insights[\" /><text value=\"2\" class=\"number\" /><text value=\"]}\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"220\" endIndex=\"231\" /><option startIndex=\"256\" endIndex=\"267\" /></options></interaction></interactions><output><content><text value=\"profit: 1800\" /><text type=\"break\" /><text value=\"above mean: True\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>insights[0]</code>, gefolgt von <code>insights[2]</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}