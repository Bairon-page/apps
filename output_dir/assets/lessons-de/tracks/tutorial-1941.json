{
  "tutorial": {
    "id": 1941,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Meetings-Ersteller",
    "descriptionContent": "Verwende dein Wissen über Klassen, um Funktionalitäten für Meetings und Videoanrufe zu instanziieren und zu erstellen.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1941-icon-banner.svg",
    "chapters": [
      {
        "id": 12547,
        "title": "Meetings-Ersteller",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 113430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Finley erstellt eine App, die sich auf Meetings und Videoanrufe konzentriert. Diese App könnte nützlich für Remote-Arbeit und Unternehmen sein, die mit Mitarbeitern kommunizieren müssen. Lass uns unsere neu erworbenen Fähigkeiten anwenden und Finley bei der Erstellung der Funktionalität für Meetings und Videoanrufe helfen!\n\nLass uns damit beginnen, unsere erste Klasse `Meeting` zu erstellen.\n\n1. Erstelle eine Klasse `Meeting` und definiere den Codeblock.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "class Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 113434,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nun, da wir eine `Meeting`-Klasse haben, lass uns den Konstruktor hinzufügen. Dieser definiert, welche Eigenschaften ein neues `Meeting`-Objekt haben sollte.\n\n1. Füge den Konstruktor zur Klasse hinzu und schließe `date`, `time` und `name` als Eigenschaften ein.\n2. Setze die Werte von `date`, `time` und `name` auf ihren jeweiligen Parameter aus dem Konstruktor.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 113436,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um die `Meeting`-Klasse zu vervollständigen, lass uns eine Methode einfügen, die eine Benachrichtigung über ein Meeting sendet.\n\n1. Erstelle eine Methode `sendNotification`, die diese Nachricht in der Konsole anzeigt:\n```\n \"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\"\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 113437,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Die `Meeting`-Klasse ist fertig, großartig! Finley benötigt auch eine Klasse für Videoanrufe. Sie wird der `Meeting`-Klasse sehr ähnlich sein, mit ein paar Ergänzungen.\n\n1. Erstelle eine Klasse `VideoCall`, die die `Meeting`-Klasse erweitert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 113438,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes fügen wir den Konstruktor für `VideoCall` hinzu.\n\n1. Füge den Konstruktor hinzu und schließe die Eigenschaften `date`, `time`, `name` und `link` ein.\n2. Verwende `super` für `date`, `time` und `name`, um anzuzeigen, dass wir diese Eigenschaften von der `Meeting`-Klasse erben.\n3. Gib `link` den Wert des `link`-Parameters aus dem Konstruktor.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember you can use the reserved word `super` to access the superclass' properties like this \n```\nsuper(date,time,name)\n```"
                }
              ]
            }
          },
          {
            "title": "Lesson #7",
            "id": 113439,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nun, da wir die Eigenschaften für `VideoCall` eingerichtet haben, lass uns eine Methode programmieren.\n\n1. Erstelle eine Methode `sendNotificationLink`.\n2. Rufe die *geerbte* Methode `sendNotification` auf.\n3. Zeige diese Nachricht in der Konsole an:\n```\n\"This is the link to your video meeting: \" + this.link;\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `super` to call the `Meeting` class' method `sendNotification`."
                }
              ]
            }
          },
          {
            "title": "Lesson #8",
            "id": 113440,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die `VideoCall`-Klasse abschließen, indem wir eine weitere Methode hinzufügen. Diese Methode gehört nur zu `VideoCall`.\n\n1. Erstelle eine Methode namens `test`.\n2. Zeige in der Konsole diese Nachricht an: `\"Testing audio and video...success!\"` innerhalb der Testmethode.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\n}",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #9",
            "id": 113441,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Die `Meeting`-Klasse und die `VideoCall`-Klasse sind fertig, großartig! Lass uns eine Instanz der `Meeting`-Klasse erstellen und ihre Methode aufrufen.\n\n1. Erstelle eine Instanz von `Meeting` in einer `firstMeeting`-Variable.\n2. Gib *String*-Werte für die Argumente für das Datum, die Uhrzeit und den Namen der zu treffenden Person an.\n3. Rufe `sendNotification` mit seiner Klasse auf.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\n",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #10",
            "id": 113444,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Zum Schluss lass uns eine Instanz der `VideoCall`-Klasse erstellen.\n\n1. Erstelle eine Instanz von `VideoCall` in einer `firstVideo`-Variable. Du kannst beliebige *string*-Werte für die Argumente angeben.\n2. Führe die `sendNotificationLink`-Methode von `firstVideo` aus.\n3. Führe die `test`-Methode von `firstVideo` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();",
                  "solvedContent": "class Meeting {\n\tconstructor(date, time, name) {\n\t\tthis.date = date;\n\t\tthis.time = time;\n\t\tthis.name = name;\n\t}\n sendNotification() {\n\t\tconsole.log(\"This is a reminder that your meeting with \" + this.name + \" is on \" + this.date + \" at \" + this.time + \".\");\n\t}\n}\n\nclass VideoCall extends Meeting {\n\tconstructor(date, time, name, link) {\n\t\tsuper(date, time, name);\n\t\tthis.link = link;\n\t}\n sendNotificationLink() {\n\t\tsuper.sendNotification();\n\t\tconsole.log(\"This is the link to your video meeting: \" + this.link);\n\t}\n\ttest() {\n\t\tconsole.log(\"Testing audio and video...success!\");\n\t}\n}\n\nconst firstMeeting = new Meeting(\"03/22/2022\", \"08:00AM\", \"Sonia\");\nfirstMeeting.sendNotification();\n\nconst firstVideo = new VideoCall(\"04/01/2022\", \"3:30PM\", \"Mauricio\", \"https://vid.eo/meetinglink/12345aBcDef\");\nfirstVideo.sendNotificationLink();\nfirstVideo.test();"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}