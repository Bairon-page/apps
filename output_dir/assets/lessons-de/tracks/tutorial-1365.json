{
  "tutorial": {
    "id": 1365,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Verwendung von Sets",
    "descriptionContent": "Mengen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9976,
        "title": "Grundlagen von Sets",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Add a new element",
            "id": 89146,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um einen neuen Wert zu einer Menge wie <code>answers</code> hinzuzufügen, verwende <code>add()</code> mit dem neuen Wert, wie <code>\"maybe\"</code>, in den Klammern.</p><p>Beachte, dass Elemente in Mengen ungeordnet sind. Daher können wir nicht sicher sein, in welcher Reihenfolge die Elemente beim Drucken erscheinen werden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"answers = {\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"answers.add(\" /><text value=\"&quot;maybe&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(answers)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"24\" endIndex=\"31\" /><option startIndex=\"31\" endIndex=\"35\" /><option startIndex=\"35\" endIndex=\"44\" /></options></interaction></interactions><output><content><text value=\"{'no', 'maybe', 'yes'}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>answers</code>, gefolgt von <code>.add</code> und schließlich <code>(\"maybe\")</code> aus.</p></body></html>"
          },
          {
            "title": "No duplicates",
            "id": 89309,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Da Sets doppelte Werte ausschließen, passiert nichts, wenn wir <code>add()</code> mit einem bereits vorhandenen Wert wie <code>\"yes\"</code> verwenden.</p><p>Wieder kann sich die Reihenfolge der Elemente in einer Menge ändern.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"answers = {\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"answers.add(\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(answers)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"36\" endIndex=\"41\" /></interactions><output><content><text value=\"{'yes', 'no'}\" /></content></output></code><p visible-if=\"wrong\">Gib <code>\"yes\"</code> ein.</p></body></html>"
          },
          {
            "title": "Question: Add a new element",
            "id": 89392,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Anweisung verwenden wir, um einen neuen Wert zu einem Set hinzuzufügen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Die <code>add()</code>-Anweisung</item><item value=\"2\" correct=\"false\">Die <code>+</code> Anweisung</item></selection><p visible-if=\"wrong\">Die <code>add()</code>-Anweisung.</p></body></html>"
          },
          {
            "title": "Question: No duplicates",
            "id": 89393,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was passiert, wenn wir <code>add()</code> verwenden, um einen Wert hinzuzufügen, den die Menge bereits enthält?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der Wert wird nicht hinzugefügt, da Duplikate nicht erlaubt sind</item><item value=\"2\" correct=\"false\">Die Menge wird zwei gleiche Werte enthalten</item></selection><p visible-if=\"wrong\">Der Wert wird nicht hinzugefügt, da Duplikate nicht erlaubt sind.</p></body></html>"
          },
          {
            "title": "Example: Add a new element",
            "id": 89394,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge eine neue E-Mail zur Abonnenten-Mailingliste hinzu, indem du <code>add()</code> und den Wert <code>\"luke@mail.com\"</code> verwendest.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"subscribers = {\" /><text value=\"&quot;jess@mail.com&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;meg@mail.com&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"subscribers.add(\" /><text value=\"&quot;luke@mail.com&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text value=\"print(subscribers)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"60\" /><option startIndex=\"60\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"81\" /></options></interaction></interactions><output><content><text value=\"{'meg@mail.com', 'luke@mail.com', 'jess@mail.com'}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>subscribers</code>, gefolgt von <code>.add</code> und schließlich <code>(</code>, <code>\"luke@mail.com\"</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example: No duplicates",
            "id": 89395,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge dem <code>wishlist</code>-Set einen Wert hinzu, sodass das Set unverändert bleibt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"wishlist = {\" /><text value=\"&quot;earpods&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;notebook&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;handgloves&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"wishlist.add(\" /><text value=\"&quot;notebook&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"63\" endIndex=\"73\" /><option correct=\"false\"><content><text value=\"&quot;watch&quot;\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>\"notebook\"</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 9966,
        "title": "Mengen Fortgeschritten",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lists and indices",
            "id": 89310,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir wissen, dass wir auf Elemente in Listen wie <code>user_answers</code> über ihren Index zugreifen und sie aktualisieren können, wie hier mit <code>0</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"user_answers = [\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(user_answers[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"64\" /><option correct=\"false\"><content><text value=\"user_answers[1]\" /></content></option></options></interaction></interactions><output><content><text value=\"yes\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>user_answers[0]</code> aus.</p></body></html>"
          },
          {
            "title": "No indices",
            "id": 89311,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Im Gegensatz zu Listen sind Sets wie <code>answer_options</code> ungeordnet, was bedeutet, dass Set-Elemente keine Indizes haben.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"user_answers = [\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(user_answers[\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text type=\"break\" /><text value=\"answer_options = {\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"67\" endIndex=\"81\" /><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"84\" endIndex=\"97\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>answer_options</code>, gefolgt von <code>=</code> und schließlich <code>{\"yes\", \"no\"}</code> aus.</p></body></html>"
          },
          {
            "title": "in keyword",
            "id": 89312,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Da Mengen keine Indizes haben, können wir nur überprüfen, ob eine Menge ein Element wie <code>\"no\"</code> mit dem <code>in</code>-Schlüsselwort enthält.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"answer_options = {\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\" \" /><text value=\"in\" class=\"keyword\" /><text value=\" answer_options)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"42\" endIndex=\"44\" /></interactions><output><content><text value=\"True\" /></content></output></code><p visible-if=\"wrong\">Gib <code>in</code> ein.</p></body></html>"
          },
          {
            "title": "For loop",
            "id": 89313,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch eine for-Schleife verwenden, um durch Set-Elemente zu iterieren und sie nacheinander zuzugreifen, wie hier mit der <code>answer</code>-Variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"answer_options = {\" /><text value=\"&quot;yes&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;no&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" answer \" /><text value=\"in\" class=\"keyword\" /><text value=\" answer_options:\" /><text type=\"break\" /><text value=\" print(\" /><text value=\"f&quot;Option: \" /><text value=\"{answer}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"36\" endIndex=\"42\" /><option startIndex=\"80\" endIndex=\"86\" /></options></interaction></interactions><output><content><text value=\"Option: no\" /><text type=\"break\" /><text value=\"Option: yes\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>answer</code>, gefolgt von <code>answer</code> aus.</p></body></html>"
          },
          {
            "title": "Question: No indices",
            "id": 89397,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was bedeutet es, dass Mengen ungeordnet sind?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sie haben keine Indizes, daher können wir nicht auf Elemente über ihren Index zugreifen oder sie aktualisieren</item><item value=\"2\" correct=\"false\">Alle Elemente haben denselben Index</item></selection><p visible-if=\"wrong\">Sie haben keine Indizes, daher können wir nicht auf Elemente über ihren Index zugreifen oder sie aktualisieren.</p></body></html>"
          },
          {
            "title": "Question: in keyword",
            "id": 89398,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir überprüfen, ob eine Menge ein Element enthält?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Verwendung des <code>in</code>-Schlüsselworts</item><item value=\"2\" correct=\"false\">Indem du auf den Index zugreifst</item></selection><p visible-if=\"wrong\">Verwendung des <code>in</code>-Schlüsselworts.</p></body></html>"
          },
          {
            "title": "Question: For loop",
            "id": 89399,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir auf Elemente eines Sets zugreifen, da Sets keine Indizes haben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Indem du eine for-Schleife verwendest, um die Elemente nacheinander zuzugreifen</item><item value=\"2\" correct=\"false\">Wir können auf Set-Elemente überhaupt nicht zugreifen</item></selection><p visible-if=\"wrong\">Indem du eine for-Schleife verwendest, um die Elemente nacheinander zuzugreifen.</p></body></html>"
          },
          {
            "title": "Example: in keyword",
            "id": 89402,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende das <code>in</code> Schlüsselwort, um zu überprüfen, ob die Menge <code>networks</code> ein Element <code>\"Wi-Free\"</code> enthält.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"networks = {\" /><text value=\"&quot;May's&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;PizzaParty5&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Wi-Free&quot;\" class=\"string\" /><text value=\"} \" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(\" /><text value=\"&quot;Wi-Free&quot;\" class=\"string\" /><text value=\" \" /><text value=\"in\" class=\"keyword\" /><text value=\" networks)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"65\" endIndex=\"76\" /></interactions><output><content><text value=\"True\" /></content></output></code><p visible-if=\"wrong\">Gib <code>in networks</code> ein.</p></body></html>"
          },
          {
            "title": "Example: For loop",
            "id": 89403,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende eine <code>for</code>-Schleife, um durch jedes <code>network</code> im <code>networks</code>-Set zu iterieren.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"networks = {\" /><text value=\"&quot;May's&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;PizzaParty5&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Wi-Free&quot;\" class=\"string\" /><text value=\"} \" /><text type=\"break\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" network \" /><text value=\"in\" class=\"keyword\" /><text value=\" networks:\" /><text type=\"break\" /><text value=\"  print(\" /><text value=\"f&quot;Connect to: \" /><text value=\"{network}\" class=\"subst\" /><text value=\"&quot;\" /><text value=\")\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"49\" endIndex=\"72\" /></interactions><output><content><text value=\"Connect to: PizzaParty5\" /><text type=\"break\" /><text value=\"Connect to: Wi-Free\" /><text type=\"break\" /><text value=\"Connect to: May's\" /></content></output></code><p visible-if=\"wrong\">Gib <code>for network in networks</code> ein.</p></body></html>"
          }
        ]
      },
      {
        "id": 9975,
        "title": "Entfernen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Remove",
            "id": 89316,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um ein Set-Element wie <code>\"Music\"</code> zu entfernen, schreiben wir den Set-Namen <code>classes</code> gefolgt von <code>.remove()</code> mit dem Element in Klammern.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classes = {\" /><text value=\"&quot;Geometry&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Music&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;French&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"classes.remove(\" /><text value=\"&quot;Music&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classes)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"42\" endIndex=\"49\" /><option startIndex=\"49\" endIndex=\"56\" /><option startIndex=\"56\" endIndex=\"65\" /></options></interaction></interactions><output><content><text value=\"{'Geometry', 'French'}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>classes</code>, gefolgt von <code>.remove</code> und schließlich <code>(\"Music\")</code> aus.</p></body></html>"
          },
          {
            "title": "Avoid errors",
            "id": 89317,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um einen Fehler zu vermeiden, überprüfe zuerst, ob ein Element <code>in</code> einer Menge ist, bevor du es entfernst, wie hier mit <code>\"History\"</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"classes = {\" /><text value=\"&quot;Geometry&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Music&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;French&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;History&quot;\" class=\"string\" /><text value=\" \" /><text value=\"in\" class=\"keyword\" /><text value=\" classes:\" /><text type=\"break\" /><text value=\"  classes.remove(\" /><text value=\"&quot;History&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(classes)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"45\" /><option startIndex=\"46\" endIndex=\"55\" /><option startIndex=\"56\" endIndex=\"58\" /><option startIndex=\"59\" endIndex=\"67\" /></options></interaction></interactions><output><content><text value=\"{'Geometry', 'French', 'Music'}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>if</code>, gefolgt von <code>\"History\"</code> und schließlich <code>in</code>, <code>classes:</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Remove",
            "id": 89404,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie entfernt man ein Element aus einer Menge?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Mit der <code>remove()</code>-Anweisung</item><item value=\"2\" correct=\"false\">Wir können keine Elemente aus Sets entfernen</item></selection><p visible-if=\"wrong\">Mit der <code>remove()</code>-Anweisung.</p></body></html>"
          },
          {
            "title": "Example: Avoid errors",
            "id": 89405,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum ist es eine gute Praxis, zu überprüfen, ob ein Element in einer Menge vorhanden ist, bevor man versucht, es zu entfernen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um einen Fehler zu vermeiden, falls die Menge das Element nicht enthält</item><item value=\"2\" correct=\"false\">Um zu wissen, ob wir ein neues Element hinzufügen müssen</item></selection><p visible-if=\"wrong\">Um einen Fehler zu vermeiden, falls die Menge das Element nicht enthält.</p></body></html>"
          },
          {
            "title": "Example: Remove",
            "id": 89406,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Verwende <code>remove()</code>, um die Flugnummer <code>\"BA1476\"</code> aus der <code>arrivals</code>-Menge zu entfernen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"arrivals = {\" /><text value=\"&quot;BA1476&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;DF2753&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;KF3280&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text value=\"arrivals.remove(\" /><text value=\"&quot;BA1476&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(arrivals)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"42\" endIndex=\"50\" /><option startIndex=\"50\" endIndex=\"51\" /><option startIndex=\"51\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"66\" /><option startIndex=\"66\" endIndex=\"67\" /></options></interaction></interactions><output><content><text value=\"{'KF3280', 'DF2753'}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>arrivals</code>, gefolgt von <code>.</code> und schließlich <code>remove</code>, <code>(</code>, <code>\"BA1476\"</code>, <code>)</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Avoid errors",
            "id": 89407,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Überprüfe, ob die Flugnummer <code>\"DF2255\"</code> im <code>arrivals</code>-Set vorhanden ist, bevor du sie entfernst.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"arrivals = {\" /><text value=\"&quot;BA1476&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;DF2255&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;KF3280&quot;\" class=\"string\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"if\" class=\"keyword\" /><text value=\" \" /><text value=\"&quot;DF2255&quot;\" class=\"string\" /><text value=\" \" /><text value=\"in\" class=\"keyword\" /><text value=\" arrivals:\" /><text type=\"break\" /><text value=\"  arrivals.remove(\" /><text value=\"&quot;DF2255&quot;\" class=\"string\" /><text value=\")\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(arrivals)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"43\" endIndex=\"45\" /><option startIndex=\"46\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"57\" /><option startIndex=\"58\" endIndex=\"67\" /></options></interaction></interactions><output><content><text value=\"{'KF3280', 'BA1476'}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>if</code>, gefolgt von <code>\"DF2255\"</code> und schließlich <code>in</code>, <code>arrivals:</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}