{
  "tutorial": {
    "id": 1368,
    "version": 8,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Verwendung von List Comprehensions",
    "descriptionContent": "List Comprehension",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 9986,
        "title": "List Comprehensions",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro 1",
            "id": 89365,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine Liste wie <code>halved</code> basierend auf einer anderen wie <code>prices</code> zu erstellen, müssen wir zuerst eine leere Liste erstellen und sie dann innerhalb einer Schleife füllen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"halved = []\" /><text type=\"break\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices:\" /><text type=\"break\" /><text value=\"  half_price = price/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"  halved.append(half_price)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"30\" endIndex=\"41\" /><option startIndex=\"89\" endIndex=\"114\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>halved = []</code>, gefolgt von <code>halved.append(half_price)</code> aus.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 89366,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können die gleiche <code>halved</code>-Liste wie zuvor erstellen, aber in einer Zeile, indem wir <strong>list comprehensions</strong> verwenden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"37\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>halved</code> aus.</p></body></html>"
          },
          {
            "title": "Intro 3",
            "id": 89367,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Listenverständnis, die <code>halved_lc</code> erstellt, ist eine gleichwertige, aber kompaktere Version des Codes, der <code>halved_loop</code> erstellt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved_lc = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved_lc)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved_loop = []\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices:\" /><text type=\"break\" /><text value=\"  half_price = price/\" /><text value=\"2\" class=\"number\" /><text type=\"break\" /><text value=\"  halved_loop.append(half_price)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved_loop)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"40\" /><option startIndex=\"91\" endIndex=\"102\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /><text type=\"break\" /><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>halved_lc</code>, gefolgt von <code>halved_loop</code> aus.</p></body></html>"
          },
          {
            "title": "List comprehensions",
            "id": 89369,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine Listenkomprehension ist eine Möglichkeit, eine neue Liste wie <code>halved</code> zu erstellen, indem ein Ausdruck auf jedes Element einer bestehenden Liste, wie <code>prices</code>, angewendet wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"39\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>halved</code>, gefolgt von <code>=</code> aus.</p></body></html>"
          },
          {
            "title": "Square brackets",
            "id": 89368,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Da eine Listenkomprehension eine neue Liste zurückgibt, beginnen wir mit eckigen Klammern <code>[]</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"40\" endIndex=\"41\" /><option startIndex=\"68\" endIndex=\"69\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>[</code>, gefolgt von <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "For loop",
            "id": 89370,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>List Comprehensions verwenden <code>for</code>-Schleifen, um durch jedes Element der ursprünglichen Liste zu iterieren, wie hier mit <code>for price in prices</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"49\" endIndex=\"68\" /></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>for price in prices</code> ein.</p></body></html>"
          },
          {
            "title": "For loop 2",
            "id": 89371,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie bei jeder <code>for</code>-Schleife ist <code>price</code> die Variable, die die Listenelemente nacheinander hält, während <code>prices</code> die Liste ist, über die wir iterieren.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"53\" endIndex=\"58\" /><option startIndex=\"62\" endIndex=\"68\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>price</code>, gefolgt von <code>prices</code> aus.</p></body></html>"
          },
          {
            "title": "Expression",
            "id": 89372,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Am Anfang der Listenverständnis schreiben wir einen Ausdruck, der auf jedes Element angewendet wird, wie zum Beispiel das Halbieren jedes Preises mit <code>price/2</code>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"41\" endIndex=\"48\" /></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>price/2</code> ein.</p></body></html>"
          },
          {
            "title": "Variable ",
            "id": 89374,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Indem wir einer Variablen wie <code>halved</code> eine Listenkomprehension zuweisen, speichern wir tatsächlich die resultierende Liste in der Variablen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"prices = [\" /><text value=\"10\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"58\" class=\"number\" /><text value=\", \" /><text value=\"62\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"halved = [price/\" /><text value=\"2\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" price \" /><text value=\"in\" class=\"keyword\" /><text value=\" prices]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(halved)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"31\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"39\" /></options></interaction></interactions><output><content><text value=\"[5.0, 19.0, 20.0, 29.0, 31.0]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>halved</code>, gefolgt von <code>=</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Intro 3",
            "id": 89514,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Unterschied zwischen der Liste, die in <code>codes_a</code> und <code>codes_b</code> gespeichert ist?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"flights = [\" /><text value=\"&quot;1122&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;5788&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;0044&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"codes_a = [\" /><text value=\"&quot;BA&quot;\" class=\"string\" /><text value=\" + flight \" /><text value=\"for\" class=\"keyword\" /><text value=\" flight \" /><text value=\"in\" class=\"keyword\" /><text value=\" flights]\" /><text type=\"break\" /><text value=\"print(codes_a)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"codes_b = []\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" flight \" /><text value=\"in\" class=\"keyword\" /><text value=\" flights:\" /><text type=\"break\" /><text value=\"  code = \" /><text value=\"&quot;BA&quot;\" class=\"string\" /><text value=\" + flight\" /><text type=\"break\" /><text value=\"  codes_b.append(code)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(codes_b)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /></content><output><content><text value=\"['BA1122', 'BA5788', 'BA0044']\" /><text type=\"break\" /><text value=\"['BA1122', 'BA5788', 'BA0044']\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Es gibt keinen Unterschied, sie sind gleichwertig</item><item value=\"2\" correct=\"false\">Im Gegensatz zu <code>codes_b</code> speichert <code>codes_a</code> keine Liste</item></selection><p visible-if=\"wrong\">Es gibt keinen Unterschied, sie sind gleichwertig.</p></body></html>"
          },
          {
            "title": "Question: List comprehensions",
            "id": 89515,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wofür verwenden wir List Comprehensions?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um neue Listen basierend auf bestehenden mit weniger Code zu erstellen</item><item value=\"2\" correct=\"false\">Zum Ändern bestehender Listen, ohne das Original beizubehalten</item></selection><p visible-if=\"wrong\">Um neue Listen basierend auf bestehenden mit weniger Code zu erstellen.</p></body></html>"
          },
          {
            "title": "Question: Square brackets",
            "id": 89516,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was verwenden wir, um den Ausdruck und die Schleife, die zu einer List Comprehension gehören, zu umgeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Eckige Klammern <code>[]</code></item><item value=\"2\" correct=\"false\">Nichts, wir verwenden Einrückungen genauso wie in Schleifen</item></selection><p visible-if=\"wrong\">Eckige Klammern <code>[]</code>.</p></body></html>"
          },
          {
            "title": "Question: For loop",
            "id": 89517,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie greift der Code innerhalb einer Listenverständnis auf jedes Element der ursprünglichen Liste zu?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Verwenden einer <code>for</code>-Schleife, um durch jedes Element zu iterieren</item><item value=\"2\" correct=\"false\">Nein, es kann nur auf das erste Element zugreifen</item></selection><p visible-if=\"wrong\">Verwenden einer <code>for</code>-Schleife, um durch jedes Element zu iterieren.</p></body></html>"
          },
          {
            "title": "Question: Expression",
            "id": 89519,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was stellt <code>m/1000</code> in dieser List Comprehension dar?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"meters = [\" /><text value=\"100\" class=\"number\" /><text value=\", \" /><text value=\"3800\" class=\"number\" /><text value=\", \" /><text value=\"4000\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"kilometers = [m/\" /><text value=\"1000\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" m \" /><text value=\"in\" class=\"keyword\" /><text value=\" meters]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(kilometers)\" /></content><output><content><text value=\"[0.1, 3.8, 4.0]\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Ausdruck, der auf jedes Element angewendet wird, das in der <code>for</code>-Schleife aufgerufen wird</item><item value=\"2\" correct=\"false\">Eine Bedingung</item></selection><p visible-if=\"wrong\">Ein Ausdruck, der auf jedes Element angewendet wird, das in der <code>for</code>-Schleife aufgerufen wird.</p></body></html>"
          },
          {
            "title": "Question: Variable",
            "id": 89520,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was speichert die Variable <code>km</code>?</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"miles = [\" /><text value=\"100\" class=\"number\" /><text value=\", \" /><text value=\"57\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"km = [value * \" /><text value=\"1.609\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" value \" /><text value=\"in\" class=\"keyword\" /><text value=\" miles]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(km)\" /></content><output><content><text value=\"[160.9, 91.713, 64.36, 32.18]\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Eine Liste von Werten, die als Kilometer dargestellt sind</item><item value=\"2\" correct=\"false\">Nur der erste Wert der <code>miles</code>-Liste, umgerechnet in Kilometer</item></selection><p visible-if=\"wrong\">Eine Liste von Werten, die als Kilometer dargestellt sind.</p></body></html>"
          },
          {
            "title": "Example: Intro 3",
            "id": 89521,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code einen Ausdruck innerhalb dieses List Comprehension, sodass er die gleiche Liste erstellt wie die, die durch die for-Schleife erstellt wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"answers = [\" /><text value=\"True\" class=\"literal\" /><text value=\", \" /><text value=\"False\" class=\"literal\" /><text value=\", \" /><text value=\"False\" class=\"literal\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"opposite = []\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" answer \" /><text value=\"in\" class=\"keyword\" /><text value=\" answers:\" /><text type=\"break\" /><text value=\"  opposite.append(\" /><text value=\"not\" class=\"keyword\" /><text value=\" answer)\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(opposite)\" /><text type=\"break\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print([\" /><text value=\"not\" class=\"keyword\" /><text value=\" answer \" /><text value=\"for\" class=\"keyword\" /><text value=\" answer \" /><text value=\"in\" class=\"keyword\" /><text value=\" answers])\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"125\" endIndex=\"128\" /><option startIndex=\"129\" endIndex=\"135\" /></options></interaction></interactions><output><content><text value=\"[False, True, True]\" /><text type=\"break\" /><text value=\"[False, True, True]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>not</code>, gefolgt von <code>answer</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Square brackets",
            "id": 89523,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige das List Comprehension, das der <code>renewed</code>-Variable zugewiesen ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"expiry_years = [\" /><text value=\"2018\" class=\"number\" /><text value=\", \" /><text value=\"2020\" class=\"number\" /><text value=\", \" /><text value=\"2019\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"renewed = [year + \" /><text value=\"4\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" year \" /><text value=\"in\" class=\"keyword\" /><text value=\" expiry_years]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(renewed)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"46\" /><option startIndex=\"79\" endIndex=\"80\" /><option correct=\"false\"><content><text value=\"{\" /></content></option><option correct=\"false\"><content><text value=\"}\" /></content></option><option correct=\"false\"><content><text value=\"(\" /></content></option><option correct=\"false\"><content><text value=\")\" /></content></option></options></interaction></interactions><output><content><text value=\"[2022, 2024, 2023]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>[</code>, gefolgt von <code>]</code> aus.</p></body></html>"
          },
          {
            "title": "Example: For loop",
            "id": 89524,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge in diese List Comprehension eine <code>for</code>-Schleife ein, um durch jedes <code>age</code> in der <code>ages</code>-Liste zu iterieren.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"ages = [\" /><text value=\"15\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"19\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"can_drive = [age &gt;= \" /><text value=\"18\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" age \" /><text value=\"in\" class=\"keyword\" /><text value=\" ages]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(can_drive)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"44\" endIndex=\"47\" /><option startIndex=\"48\" endIndex=\"51\" /><option startIndex=\"52\" endIndex=\"54\" /><option startIndex=\"55\" endIndex=\"59\" /></options></interaction></interactions><output><content><text value=\"[False, True, True]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>for</code>, gefolgt von <code>age</code> und schließlich <code>in</code>, <code>ages</code> aus.</p></body></html>"
          },
          {
            "title": "Example: For loop 2",
            "id": 89525,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige die for-Schleife in dieser List Comprehension, indem du sie mit der Variablen, die wir während der Iteration verwenden, sowie dem Listennamen füllst.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"results = [\" /><text value=\"3.12\" class=\"number\" /><text value=\", \" /><text value=\"8.2\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"corrected = [result + \" /><text value=\"1\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" result \" /><text value=\"in\" class=\"keyword\" /><text value=\" results]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(corrected)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"54\" endIndex=\"60\" /><option startIndex=\"64\" endIndex=\"71\" /></options></interaction></interactions><output><content><text value=\"[4.12, 9.2, 8]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>result</code>, gefolgt von <code>results</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Expression",
            "id": 89526,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle eine Liste von Booleans, die uns mitteilen, welche Altersstufen alt genug zum Fahren sind, indem du einen Ausdruck codierst, der überprüft, ob <code>age</code> größer als <code>17</code> ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"ages = [\" /><text value=\"15\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"19\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"can_drive = [age &gt; \" /><text value=\"17\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" age \" /><text value=\"in\" class=\"keyword\" /><text value=\" ages]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(can_drive)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"34\" endIndex=\"37\" /><option startIndex=\"38\" endIndex=\"39\" /><option startIndex=\"40\" endIndex=\"42\" /></options></interaction></interactions><output><content><text value=\"[False, True, True]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>age</code>, gefolgt von <code>&gt;</code> und schließlich <code>17</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Variable",
            "id": 89527,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle die Variable <code>corrected</code>, dann speichere die durch das Listenverständnis erstellte Liste in der Variable.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"results = [\" /><text value=\"3.12\" class=\"number\" /><text value=\", \" /><text value=\"8.2\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"corrected = [result + \" /><text value=\"1\" class=\"number\" /><text value=\" \" /><text value=\"for\" class=\"keyword\" /><text value=\" result \" /><text value=\"in\" class=\"keyword\" /><text value=\" results]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(corrected)\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"26\" endIndex=\"37\" /></interactions><output><content><text value=\"[4.12, 9.2, 8]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>corrected =</code> ein.</p></body></html>"
          }
        ]
      }
    ]
  }
}