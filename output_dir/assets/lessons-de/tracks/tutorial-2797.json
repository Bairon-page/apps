{
  "tutorial": {
    "id": 2797,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Typ-Aliase",
    "descriptionContent": "Lerne über Typ-Aliase in TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14792,
        "title": "Typ-Aliase",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #9 - Copy",
            "id": 130770,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir verwenden <strong>Typ-Aliase</strong>, um Typen einen Namen zu geben, was den Code klarer und sicherer macht. Wir definieren <strong>Typ-Aliase</strong> mit dem <code>type</code>-Schlüsselwort.</p><p>Zum Beispiel können wir einem komplexen Objekttyp einen Namen geben.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Gib <code>type</code> ein.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy",
            "id": 130772,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nach dem <code>type</code>-Schlüsselwort definieren wir den Namen unseres Typs.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"10\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>type</code>, gefolgt von <code>Human</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy",
            "id": 130771,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können dann den Typ definieren. Lass uns einen Objekttyp mit einem Attribut namens <code>name</code> vom Typ <code>string</code> definieren.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"13\" endIndex=\"14\" /><option startIndex=\"17\" endIndex=\"30\" /><option startIndex=\"31\" endIndex=\"33\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>{</code>, gefolgt von <code>name: string;</code> und schließlich <code>};</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy - Copy - Copy",
            "id": 130804,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Lass uns unserem benutzerdefinierten <code>Human</code>-Typ ein weiteres Attribut vom Typ <code>number</code> hinzufügen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"33\" endIndex=\"36\" /><option startIndex=\"36\" endIndex=\"37\" /><option correct=\"false\"><content><text value=\"string\" /></content></option><option correct=\"false\"><content><text value=\",\" /></content></option><option startIndex=\"38\" endIndex=\"45\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>age</code>, gefolgt von <code>:</code> und schließlich <code>number;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy - Copy",
            "id": 130773,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Jetzt können wir den benutzerdefinierten Typ wie jeden anderen Typ verwenden.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Human = {\" /><text type=\"break\" /><text value=\"  name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" jacky: Human = {name: \" /><text value=\"&quot;Jacky&quot;\" class=\"string\" /><text value=\", age: \" /><text value=\"63\" class=\"number\" /><text value=\"};\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(jacky);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"60\" /><option startIndex=\"61\" endIndex=\"66\" /><option correct=\"false\"><content><text value=\"=\" /></content></option></options></interaction></interactions><output><content><text value=\"{name: &quot;Jacky&quot;, age: 63}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>Human</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 130595,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch Typ-Aliase verwenden, um einem bestehenden Typ einen neuen Namen zu geben. Lass uns einen Typ-Alias für ein Array von Zahlen erstellen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" PriceSeries = \" /><text value=\"number\" class=\"built_in\" /><text value=\"[];\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"17\" endIndex=\"18\" /><option correct=\"false\"><content><text value=\"custom\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>type</code>, gefolgt von <code>=</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 130596,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Jetzt, da wir unseren Typ-Alias haben, können wir ihn verwenden, um Variablen zu annotieren. Probiere es aus.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" PriceSeries = \" /><text value=\"number\" class=\"built_in\" /><text value=\"[];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" stockPrices: PriceSeries = [\" /><text value=\"108\" class=\"number\" /><text value=\", \" /><text value=\"103\" class=\"number\" /><text value=\", \" /><text value=\"110\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(stockPrices);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"5\" endIndex=\"16\" /><option startIndex=\"48\" endIndex=\"59\" /><option correct=\"false\"><content><text value=\"number[]\" /></content></option></options></interaction></interactions><output><content><text value=\"[108, 103, 110]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>PriceSeries</code>, gefolgt von <code>PriceSeries</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy - Copy - Copy",
            "id": 131285,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die Verwendung von Typ-Aliassen kann auch hilfreich sein, um unsere Unionstypen besser lesbar zu machen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" UserID = \" /><text value=\"number\" class=\"built_in\" /><text value=\" | \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" id: UserID = \" /><text value=\"&quot;#25120&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(id);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"4\" /><option startIndex=\"5\" endIndex=\"11\" /><option startIndex=\"14\" endIndex=\"20\" /><option startIndex=\"21\" endIndex=\"22\" /></options></interaction></interactions><output><content><text value=\"#25120\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>type</code>, gefolgt von <code>UserID</code> und schließlich <code>number</code>, <code>|</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #18",
            "id": 130777,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welches Schlüsselwort benötigst du, um einen benutzerdefinierten Typ zu erstellen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>type</code></item><item value=\"2\" correct=\"false\"><code>custom</code></item></selection><p visible-if=\"wrong\">Wähle <code>type</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130600,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Typ-Aliase erstellen einen <em>neuen Namen</em> für einen Typ. Sie erstellen keinen neuen Typ. Was bedeutet das?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Typ-Aliase sind nur eine andere Möglichkeit, auf den Typ zu verweisen, den sie repräsentieren</item><item value=\"2\" correct=\"false\">Typ-Aliase ändern grundlegend die Struktur des Typs, den sie repräsentieren</item></selection><p visible-if=\"wrong\">Typ-Aliase sind nur eine andere Möglichkeit, auf den Typ zu verweisen, den sie repräsentieren.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy - Copy",
            "id": 130775,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle einen benutzerdefinierten Typ für unsere Studenten.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Student = {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" age: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" school: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"};\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"4\" /></interactions></code><p visible-if=\"wrong\">Gib <code>type</code> ein.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130601,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche der folgenden Optionen kannst du der <code>myArray</code>-Variable zuweisen?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"type\" class=\"keyword\" /><text value=\" Numbers = \" /><text value=\"number\" class=\"built_in\" /><text value=\"[];\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" myArray: Numbers = [\" /><text value=\"7\" class=\"number\" /><text value=\", \" /><text value=\"358\" class=\"number\" /><text value=\", \" /><text value=\"913\" class=\"number\" /><text value=\"];\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"false\">Ein String</item><item value=\"2\" correct=\"true\">Ein Array von Zahlen</item><item value=\"3\" correct=\"false\">Ein Objekt</item></selection><p visible-if=\"wrong\">Ein Array von Zahlen.</p></body></html>"
          },
          {
            "title": "Lesson #19",
            "id": 130778,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Arten von Attributen können wir unseren Objekttypen hinzufügen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Primitive Typen, Arrays verschiedener Typen und mehr</item><item value=\"2\" correct=\"false\">Nur Zahlen, Strings und Booleans</item></selection><p visible-if=\"wrong\">Primitive Typen, Arrays verschiedener Typen und mehr.</p></body></html>"
          }
        ]
      }
    ]
  }
}