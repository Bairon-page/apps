{
  "tutorial": {
    "id": 1477,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Slice-Notation",
    "descriptionContent": "Slice-Notation",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 10532,
        "title": "Start:Stop",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "`start:stop` notation",
            "id": 96308,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Manchmal möchten wir mehrere Werte aus einer Liste abrufen. Das können wir mit <strong>Slicing</strong> tun. Schauen wir uns die <code>[start:stop]</code> Slicing-Syntax an.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"ingredients = [\" /><text value=\"&quot;eggs&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;flour&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;sugar&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;salt&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(ingredients[\" /><text value=\"0\" class=\"number\" /><text value=\":\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /></content><output><content><text value=\"['eggs', 'flour']\" /></content></output></code></body></html>"
          },
          {
            "title": "Start value",
            "id": 96309,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Wert links vom Doppelpunkt <code>:</code> ist die <strong>Start</strong>position für den Slice. Wie wir bereits besprochen haben, beginnt das Python-Indexing bei null.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"letters = [\" /><text value=\"&quot;A&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;B&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;C&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;D&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;E&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(letters[\" /><text value=\"4\" class=\"number\" /><text value=\":])\" /><text type=\"break\" /><text value=\"print(letters[\" /><text value=\"1\" class=\"number\" /><text value=\":])\" /></content><output><content><text value=\"['E']\" /><text type=\"break\" /><text value=\"['B', 'C', 'D', 'E']\" /></content></output></code></body></html>"
          },
          {
            "title": "Example",
            "id": 97119,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Durch das Codieren von <code>[3:]</code> rufen wir alle Werte ab, beginnend bei der Listenposition <code>3</code> bis zum Ende der Liste.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"letters = [\" /><text value=\"&quot;A&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;B&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;C&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;D&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;E&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(letters[\" /><text value=\"3\" class=\"number\" /><text value=\":])\" /><text type=\"break\" /><text value=\"print(letters[\" /><text value=\"1\" class=\"number\" /><text value=\":])\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"49\" endIndex=\"53\" /></interactions><output><content><text value=\"['D', 'E']\" /><text type=\"break\" /><text value=\"['B', 'C', 'D', 'E']\" /></content></output></code><p visible-if=\"wrong\">Gib <code>[3:]</code> ein.</p></body></html>"
          },
          {
            "title": "Start value options",
            "id": 96743,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Startwert kann positiv, negativ oder vollständig weggelassen werden. Negative Werte bedeuten 'beginne so viele Elemente vom Ende zurück'.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"users = [\" /><text value=\"&quot;Alan&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Beth&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Carla&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Dennis&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(users[\" /><text value=\"0\" class=\"number\" /><text value=\":])\" /><text type=\"break\" /><text value=\"print(users[:])\" /><text type=\"break\" /><text value=\"print(users[\" /><text value=\"-2\" class=\"number\" /><text value=\":])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"90\" endIndex=\"91\" /><option startIndex=\"91\" endIndex=\"92\" /></options></interaction></interactions><output><content><text value=\"['Alan', 'Beth', 'Carla', 'Dennis']\" /><text type=\"break\" /><text value=\"['Alan', 'Beth', 'Carla', 'Dennis']\" /><text type=\"break\" /><text value=\"['Carla', 'Dennis']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>-</code>, gefolgt von <code>2</code> aus.</p></body></html>"
          },
          {
            "title": "Start value outside range",
            "id": 96310,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn du einen Bereich außerhalb der Länge einer Liste als Startindex angibst, wird eine leere Liste zurückgegeben, anstatt einen Fehler zu verursachen.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"letters = [\" /><text value=\"&quot;A&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;B&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;C&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;D&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;E&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(letters[\" /><text value=\"6\" class=\"number\" /><text value=\":])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"50\" endIndex=\"51\" /><option startIndex=\"51\" endIndex=\"52\" /><option startIndex=\"42\" endIndex=\"49\" /><option correct=\"false\"><content><text value=\"()\" /></content></option></options></interaction></interactions><output><content><text value=\"[]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>letters</code>, gefolgt von <code>6</code> und schließlich <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Stop value",
            "id": 96311,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ein Wert nach dem Doppelpunkt <code>:</code> gibt an, wo der Slice <strong>stoppen</strong> soll. Beachte, dass das Element an der Stopp-Position <strong>nicht enthalten</strong> ist.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"scores = [\" /><text value=\"50\" class=\"number\" /><text value=\", \" /><text value=\"40\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"10\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(scores[:\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"print(scores[\" /><text value=\"2\" class=\"number\" /><text value=\":\" /><text value=\"4\" class=\"number\" /><text value=\"])\" /></content><output><content><text value=\"[50, 40]\" /><text type=\"break\" /><text value=\"[30, 20]\" /></content></output></code></body></html>"
          },
          {
            "title": "Stop value zero-indexing",
            "id": 96312,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir einen Startwert von <code>0</code> verwenden (oder keinen angeben), entspricht ein positiver Endwert der Anzahl der zurückgegebenen Elemente.</p><p>Vervollständige den Code, um 3 Elemente zurückzugeben.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"grades = [\" /><text value=\"'A'\" class=\"string\" /><text value=\", \" /><text value=\"'B'\" class=\"string\" /><text value=\", \" /><text value=\"'C'\" class=\"string\" /><text value=\", \" /><text value=\"'D'\" class=\"string\" /><text value=\", \" /><text value=\"'E'\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(grades[:\" /><text value=\"3\" class=\"number\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"50\" /><option startIndex=\"48\" endIndex=\"49\" /></options></interaction></interactions><output><content><text value=\"['A', 'B', 'C']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>3</code> aus.</p></body></html>"
          },
          {
            "title": "Stop value after start value",
            "id": 96313,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ein <code>start</code>-Index, der größer ist als der <code>stop</code>-Index im <code>[start:stop]</code>-Format, führt nicht zu einem Fehler, sondern gibt eine leere Liste zurück.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"animals = [\" /><text value=\"'antelope'\" class=\"string\" /><text value=\", \" /><text value=\"'bear'\" class=\"string\" /><text value=\", \" /><text value=\"'cat'\" class=\"string\" /><text value=\", \" /><text value=\"'dog'\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(animals[\" /><text value=\"3\" class=\"number\" /><text value=\":\" /><text value=\"0\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"60\" endIndex=\"61\" /><option startIndex=\"61\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"[]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>3</code>, gefolgt von <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "`start:stop:step` notation",
            "id": 96315,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auch ein Format mit zwei Doppelpunkten verwenden, <code>[start:stop:step]</code>, wobei <code>step</code> bestimmt, wie Python zwischen <code>start</code> und <code>end</code> schrittweise vorgeht.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"alphabet = [\" /><text value=\"&quot;A&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;B&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;C&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;D&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;E&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;F&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(alphabet[\" /><text value=\"1\" class=\"number\" /><text value=\":\" /><text value=\"6\" class=\"number\" /><text value=\":\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"60\" /><option startIndex=\"61\" endIndex=\"62\" /></options></interaction></interactions><output><content><text value=\"['B', 'D', 'F']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "`start:stop:step` notation - Copy",
            "id": 97122,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ein Schrittwert von <code>:2</code> bedeutet, dass wir anstelle jedes Wertes im Slice jeden zweiten Wert zurückgeben. <code>:3</code> würde jeden dritten Wert bedeuten.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"alphabet = [\" /><text value=\"&quot;A&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;B&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;C&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;D&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;E&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;F&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(alphabet[\" /><text value=\"1\" class=\"number\" /><text value=\":\" /><text value=\"6\" class=\"number\" /><text value=\":\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"61\" endIndex=\"62\" /><option startIndex=\"62\" endIndex=\"63\" /><option correct=\"false\"><content><text value=\"True\" /></content></option></options></interaction></interactions><output><content><text value=\"['B', 'D', 'F']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>2</code> aus.</p></body></html>"
          },
          {
            "title": "`start:stop:step` example",
            "id": 96759,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können den <code>step</code>-Wert ohne <code>start</code>- oder <code>end</code>-Wert verwenden. Standardmäßig funktioniert dies vom Anfang bis zum Ende der vollständigen ursprünglichen Liste.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Bella&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Carrie&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Diana&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eleanor&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(friends[::\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"59\" endIndex=\"64\" /><option startIndex=\"65\" endIndex=\"72\" /></options></interaction></interactions><output><content><text value=\"['Anna', 'Carrie', 'Eleanor']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>print</code>, gefolgt von <code>friends</code> aus.</p></body></html>"
          },
          {
            "title": "start:stop:step negatives",
            "id": 96757,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Jeder Wert kann positiv, negativ oder vollständig weggelassen werden. Um den <code>step</code>-Wert zu verwenden, müssen wir immer zwei vorangestellte Doppelpunkte haben.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"flowers = [\" /><text value=\"&quot;azalea&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;buttercup&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;carnation&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;daffodil&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(flowers[\" /><text value=\"2\" class=\"number\" /><text value=\"::\" /><text value=\"-1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"print(flowers[:\" /><text value=\"3\" class=\"number\" /><text value=\":\" /><text value=\"2\" class=\"number\" /><text value=\"])\" /></content><output><content><text value=\"['carnation', 'buttercup', 'azalea']\" /><text type=\"break\" /><text value=\"['azalea', 'carnation']\" /></content></output></code></body></html>"
          },
          {
            "title": "Negative steps",
            "id": 96316,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>step</code> kann negativ sein, was es uns ermöglicht, einen <code>start</code>-Wert zu verwenden, der größer ist als der <code>end</code>-Wert. Die Reihenfolge der Elemente wird umgekehrt.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"friends = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Bella&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Carrie&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Diana&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Eleanor&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(friends[\" /><text value=\"3\" class=\"number\" /><text value=\":\" /><text value=\"0\" class=\"number\" /><text value=\":\" /><text value=\"-1\" class=\"number\" /><text value=\"])\" /></content><output><content><text value=\"['Diana', 'Carrie', 'Bella']\" /></content></output></code></body></html>"
          },
          {
            "title": "Negative steps example",
            "id": 96781,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn kein <code>start</code>- oder <code>end</code>-Wert angegeben ist, arbeitet Python automatisch vom Ende einer Liste, wenn ein negativer <code>step</code> angegeben wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"countries = [\" /><text value=\"&quot;Andorra&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Brazil&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;China&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Denmark&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Egypt&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text type=\"break\" /><text value=\"print(countries[::\" /><text value=\"-3\" class=\"number\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"82\" endIndex=\"83\" /><option startIndex=\"83\" endIndex=\"84\" /></options></interaction></interactions><output><content><text value=\"['Egypt', 'Brazil']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>-</code>, gefolgt von <code>3</code> aus.</p></body></html>"
          },
          {
            "title": "start:stop:step out of range",
            "id": 96758,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine leere Liste, anstatt eines Fehlers, wird zurückgegeben, wenn es keine passenden Indizes gibt. Der <code>step</code> funktioniert immer ab dem <code>start</code>-Wert.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"scores = [\" /><text value=\"100\" class=\"number\" /><text value=\", \" /><text value=\"200\" class=\"number\" /><text value=\", \" /><text value=\"300\" class=\"number\" /><text value=\", \" /><text value=\"400\" class=\"number\" /><text value=\", \" /><text value=\"500\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(scores[\" /><text value=\"0\" class=\"number\" /><text value=\":\" /><text value=\"2\" class=\"number\" /><text value=\":\" /><text value=\"-1\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /><text value=\"print(scores[\" /><text value=\"4\" class=\"number\" /><text value=\":\" /><text value=\"1\" class=\"number\" /><text value=\":\" /><text value=\"-1\" class=\"number\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"72\" /><option startIndex=\"73\" endIndex=\"74\" /></options></interaction></interactions><output><content><text value=\"[]\" /><text type=\"break\" /><text value=\"[500, 400, 300]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>:</code> aus.</p></body></html>"
          },
          {
            "title": "Question: start:stop",
            "id": 96317,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn es einen Doppelpunkt in unserer Indexnotation gibt, welches der folgenden Aussagen trifft zu?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der Wert auf der linken Seite ist der <code>start</code>-Index und der Wert auf der rechten Seite ist der <code>stop</code>-Index</item><item value=\"2\" correct=\"false\">Es ist notwendig, auf beiden Seiten des Doppelpunkts Werte zu haben</item></selection><p visible-if=\"wrong\">Der Wert auf der linken Seite ist der <code>start</code>-Index und der Wert auf der rechten Seite ist der <code>stop</code>-Index.</p></body></html>"
          },
          {
            "title": "Example: start:stop",
            "id": 96318,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wähle geeignete Werte für <code>start</code> und <code>stop</code>, sodass eine Liste, die nur <code>Anna</code> enthält, ausgegeben wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"members = [\" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Billie&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Henry&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(members[\" /><text value=\"0\" class=\"number\" /><text value=\":\" /><text value=\"1\" class=\"number\" /><text value=\"])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"52\" endIndex=\"53\" /><option startIndex=\"54\" endIndex=\"55\" /><option correct=\"false\"><content><text value=\"2\" /></content></option></options></interaction></interactions><output><content><text value=\"['Anna']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>0</code>, gefolgt von <code>1</code> aus.</p></body></html>"
          },
          {
            "title": "Question: start values",
            "id": 96319,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche der folgenden Aussagen über <code>start</code>-Werte ist wahr?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Sie können höher als die Länge der Liste sein, aber dies gibt möglicherweise keine Werte zurück</item><item value=\"2\" correct=\"false\">Nur Werte innerhalb der Länge der Liste können verwendet werden; andernfalls wird ein Fehler ausgelöst</item></selection><p visible-if=\"wrong\">Sie können höher als die Länge der Liste sein, aber dies gibt möglicherweise keine Werte zurück.</p></body></html>"
          },
          {
            "title": "Example: start values",
            "id": 96320,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code mit einem negativen Index, sodass die letzten beiden Punktzahlen ausgegeben werden, <strong>unabhängig davon, wie lang die Liste ist</strong>.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"scores = [\" /><text value=\"50\" class=\"number\" /><text value=\", \" /><text value=\"60\" class=\"number\" /><text value=\", \" /><text value=\"30\" class=\"number\" /><text value=\", \" /><text value=\"100\" class=\"number\" /><text value=\", \" /><text value=\"200\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(scores[\" /><text value=\"-2\" class=\"number\" /><text value=\":])\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"47\" /><option correct=\"false\"><content><text value=\"-3\" /></content></option></options></interaction></interactions><output><content><text value=\"[100, 200]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>-2</code> aus.</p></body></html>"
          },
          {
            "title": "Example: stop values",
            "id": 96322,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, sodass die ersten drei Elemente in <code>readings</code> ausgegeben werden.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"readings = [\" /><text value=\"78\" class=\"number\" /><text value=\", \" /><text value=\"83\" class=\"number\" /><text value=\", \" /><text value=\"80\" class=\"number\" /><text value=\", \" /><text value=\"82\" class=\"number\" /><text value=\", \" /><text value=\"85\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"first_3 = readings[:\" /><text value=\"3\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(first_3)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"51\" endIndex=\"53\" /><option correct=\"false\"><content><text value=\":2\" /></content></option></options></interaction></interactions><output><content><text value=\"[78, 83, 80]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:3</code> aus.</p></body></html>"
          },
          {
            "title": "Question: `start:stop:step`",
            "id": 96323,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche der folgenden Aussagen über die Verwendung eines <code>step</code>-Wertes ist wahr?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der <code>step</code>-Wert muss nach zwei Doppelpunkten in der Slice-Notation kommen</item><item value=\"2\" correct=\"false\">Wir können <code>step</code> überall in der Notation angeben</item></selection><p visible-if=\"wrong\">Der <code>step</code>-Wert muss nach zwei Doppelpunkten in der Slice-Notation kommen.</p></body></html>"
          },
          {
            "title": "Example: step",
            "id": 96325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, damit am Ende <code>[3, 2, 1]</code> ausgegeben wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"countdown = [\" /><text value=\"&quot;3&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;pause&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;2&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;pause&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;1&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"numbers_only = countdown[::\" /><text value=\"2\" class=\"number\" /><text value=\"] \" /><text type=\"break\" /><text value=\"print(numbers_only)\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"71\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"73\" /><option startIndex=\"73\" endIndex=\"74\" /><option correct=\"false\"><content><text value=\"-2\" /></content></option></options></interaction></interactions><output><content><text value=\"['3', '2', '1']\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>:</code>, gefolgt von <code>:</code> und schließlich <code>2</code> aus.</p></body></html>"
          },
          {
            "title": "Question: negative step",
            "id": 96326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche der folgenden Aussagen trifft zu, wenn wir einen negativen <code>step</code>-Wert verwenden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>start</code> muss entweder weggelassen werden oder größer als <code>stop</code> sein, um Elemente zurückzugeben</item><item value=\"2\" correct=\"false\">Ein Fehler wird ausgelöst, wenn unser <code>step</code>-Wert größer ist als die Länge der Liste</item></selection><p visible-if=\"wrong\"><code>start</code> muss entweder weggelassen werden oder größer als <code>stop</code> sein, um Elemente zurückzugeben.</p></body></html>"
          },
          {
            "title": "Example: negative step",
            "id": 96327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige die <code>start:stop:step</code> Notation, sodass <code>[5, 5, 5]</code> ausgegeben wird.</p><code version=\"2\" codelang=\"python\" name=\"script.py\" visible-if=\"always\"><content><text value=\"ratings = [\" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"5\" class=\"number\" /><text value=\"]\" /><text type=\"break\" /><text value=\"print(ratings[\" /><text value=\"-1\" class=\"number\" /><text value=\":\" /><text value=\"2\" class=\"number\" /><text value=\":\" /><text value=\"-2\" class=\"number\" /><text value=\"])\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"49\" endIndex=\"51\" /><option startIndex=\"52\" endIndex=\"53\" /><option startIndex=\"54\" endIndex=\"56\" /><option correct=\"false\"><content><text value=\"-4\" /></content></option></options></interaction></interactions><output><content><text value=\"[5, 5, 5]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>-1</code>, gefolgt von <code>2</code> und schließlich <code>-2</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}