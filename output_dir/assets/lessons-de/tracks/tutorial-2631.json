{
  "tutorial": {
    "id": 2631,
    "version": 5,
    "type": "challenges",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Vergleiche & Schleifen",
    "descriptionContent": "Herausforderungen sind schwierigere Übungen, die deine Fähigkeiten testen werden.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14508,
        "title": "Passwortüberprüfung",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Password Check",
            "id": 129168,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `isPasswordCorrect`, um zu überprüfen, ob das vom Benutzer eingegebene Passwort mit dem zuvor im System gespeicherten Passwort übereinstimmt.\n\n1. Initialisiere eine `const` Variable `isPasswordCorrect`, um zu überprüfen, ob `userPassword` genau dasselbe ist wie `savedPassword`.\n\nAusgabe:\n```javascript\nAccess granted: true\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userPassword = \"283746\";\r\nconst savedPassword = \"283746\";\r\n\r\nconsole.log(\"Access granted: \" + isPasswordCorrect);",
                  "solvedContent": "const userPassword = \"283746\";\nconst savedPassword = \"283746\";\nconst isPasswordCorrect = userPassword === savedPassword;\nconsole.log(\"Access granted: \" + isPasswordCorrect);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14509,
        "title": "Altersüberprüfung",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Age Check",
            "id": 129169,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vervollständige den Code, um festzustellen, ob ein Kunde, der 23 Jahre alt ist, das gesetzliche Mindestalter für Alkoholkonsum erreicht hat.\n\n1. Initialisiere in der ersten Zeile eine `const` Variable `age`. Gib ihr den Zahlenwert `23`.\n2. Erstelle dann eine weitere Variable `ageCheck`, die überprüft, ob die Variable `age` größer oder gleich dem gesetzlichen Mindestalter für Alkoholkonsum ist. Das gesetzliche Mindestalter ist `21`.\n3. Zuletzt modifiziere das `console.log` so, dass es `Of Legal Drinking Age: true` ausgibt, wenn der Kunde das gesetzliche Mindestalter erreicht hat, und `Of Legal Drinking Age: false`, wenn der Kunde minderjährig ist. Verwende die Variable `ageCheck`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "\n\nconsole.log(\"Of Legal Drinking Age: \");",
                  "solvedContent": "const age = 23;\nconst ageCheck = age >= 21;\nconsole.log(\"Of Legal Drinking Age: \" + ageCheck);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14510,
        "title": "Budgetüberprüfung",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Budget Check",
            "id": 129170,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Du möchtest überprüfen, ob du genug Geld hast, um neue Kopfhörer zu kaufen.\n\n1. Vervollständige die Variable `hasEnoughMoney`, sodass sie das boolesche Ergebnis speichert, ob `price` kleiner *oder* gleich `budget` ist.\n\nAusgabe:\n```javascript\nI have enough money:\nfalse\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const budget = 23;\r\nconst price = 80;\r\nconst hasEnoughMoney = price  budget;\r\nconsole.log(\"I have enough money:\");\r\nconsole.log(hasEnoughMoney);",
                  "solvedContent": "const budget = 23;\nconst price = 80;\nconst hasEnoughMoney = price <= budget;\nconsole.log(\"I have enough money:\");\nconsole.log(hasEnoughMoney);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14511,
        "title": "While-Schleife",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "While Loop",
            "id": 129171,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vervollständige den Rumpf der while-Schleife so, dass jede Iteration `count` um 1 erhöht und dann `console.log()` verwendet wird, um den aktuellen `count` anzuzeigen.\n\nFühre den Code aus, um deine Antwort zu überprüfen. Wenn du fertig bist, sollte deine Konsole die Zahlen 1 bis 10 auflisten.\n\n1. Zuerst soll die while-Schleife `count` um 1 erhöhen.\n2. Dann soll die Schleife den aktuellen `count` mit `console.log()` ausgeben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let count = 0;\r\nwhile (count < 10) {}",
                  "solvedContent": "let count = 0;\nwhile (count < 10) {\n  count = count + 1;\n  console.log(count);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14512,
        "title": "For-Schleife",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "For Loop",
            "id": 129172,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle den Zähler aus der letzten Herausforderung neu (zähle von 1 bis 10), aber dieses Mal mit einer for-Schleife. Die Schleifenstruktur ist bereits vorgegeben. Du musst die fehlenden Schleifenparameter ausfüllen.\n\nFühre den Test aus, um deine Antwort zu überprüfen. Wenn du fertig bist, sollte deine Konsole die Zahlen 1 bis 10 auflisten.\n\n1. Vervollständige zuerst den ersten for-Schleifenparameter: die Initialisierung der Zählervariablen `i`. Dies ist der Wert, bei dem die Schleife beginnen soll.\n2. Vervollständige als Nächstes den zweiten for-Schleifenparameter: die Schleifenbedingung. Dies ist die Bedingung, unter der die Schleife stoppen soll.\n3. Implementiere schließlich die Zähleriteration, sodass die Zählervariable `i` bei jedem Schritt um 1 erhöht wird.\n\n```javascript\n1\n2\n...\n9\n10\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "for (let i = ; i <= ; i) {\n  console.log(i);\n}",
                  "solvedContent": "for (let i = 1; i <= 10; i++) {\n  console.log(i);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 14513,
        "title": "Countdown-Schleife",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Countdown Loop",
            "id": 129173,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vervollständige die Schleifenbedingung und den Schleifenkörper so, dass jede Iteration in der Konsole den aktuellen `count` anzeigt und dann den aktuellen `count` um 1 verringert. Die Schleife sollte von 15 herunterzählen.\n\nFühre den Test aus, um deine Antwort zu überprüfen. Wenn du fertig bist, sollte deine Konsole die Zahlen 1 bis 15 in absteigender Reihenfolge auflisten.\n\n1. Implementiere zuerst die Bedingung der Schleife: Die Schleife sollte laufen, solange der `count` größer als `0` ist.\n2. Implementiere als Nächstes den Codekörper der Schleife: Er sollte zuerst den aktuellen `count` mit `console.log` ausgeben und dann den `count` um 1 verringern.\n\n```\n15\n14\n13\n12\n...\n3\n2\n1\n```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let count = 15;\r\nwhile (count ) {}",
                  "solvedContent": "let count = 15;\nwhile (count > 0) {\n  console.log(count);\n  count--;\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11550,
        "title": "Namen verketten",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Concatenate Name",
            "id": 106220,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende eine `for` Schleife, um die Strings aus den Arrays `firstName` und `lastName` zu verketten. Achte darauf, ein einzelnes Leerzeichen zwischen Vor- und Nachname zu verketten. Schiebe die Ergebnisse in das `fullName` Array.\n\nAusgabe:\n[ 'Axe Rod', 'Miles Rhoades', 'Maya Wagner' ]",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const firstName = ['Axe', 'Miles', 'Maya'];\nconst lastName = ['Rod', 'Rhoades', 'Wagner'];\nconst fullName = [];\n\n\n\nconsole.log(fullName);",
                  "solvedContent": "const firstName = ['Axe', 'Miles', 'Maya'];\nconst lastName = ['Rod', 'Rhoades', 'Wagner'];\nconst fullName = [];\nfor (let i = 0; i < lastName.length; i++) {\n  fullName.push(firstName[i] + ' ' + lastName[i]);\n}\nconsole.log(fullName);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11435,
        "title": "Vervollständige eine Schleife",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Complete a Loop",
            "id": 105740,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vervollständige die for-Schleife, indem du `i` nach jeder Iteration um `2` erhöhst.\n\nFühre den Test aus, um deine Antwort zu überprüfen. Wenn du fertig bist, sollte die Konsole jede zweite Zahl von 0 bis 20 enthalten.\n\n1. Vervollständige die Bedingungen der for-Schleife, indem du die Variable `i` jedes Mal um zwei erhöhst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "for (let i = 0; i <= 20; ) {\n  console.log(i);\n}",
                  "solvedContent": "for (let i = 0; i <= 20; i = i + 2) {\n  console.log(i);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11432,
        "title": "Verschachtelte For-Schleife",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Nested For Loop",
            "id": 105747,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vervollständige die Parameter der verschachtelten for-Schleife, um die Temperaturdaten zu durchlaufen und die durchschnittliche Temperatur jeder Woche mit `console.log` auszugeben.\n\n1. Lass die äußere Schleife durch `temperature_data` mit einer Zählvariablen namens `i` iterieren.\n2. Lass die innere Schleife durch jedes Unter-Array von `temperature_data` mit einer Zählvariablen namens `j` iterieren.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "index.js",
                  "codeLanguage": "javascript",
                  "content": "let temperature_data = [\n  [60.2, 61.2, 63.4, 64.8, 65.1, 63.2, 62.9],\n  [62.5, 63.8, 63.4, 64.6, 65.8, 64.9, 65.0],\n  [63.4, 64.5, 65.2, 64.8, 65.1, 64.9, 66.2],\n  [66.3, 66.8, 66.4, 66.8, 67.8, 67.9, 68.2]\n];\nfor () {\n  let length = temperature_data[i].length;\n  let weeklySum = 0;\n  for () {\n    weeklySum += temperature_data[i][j];\n  }\n  console.log(\"Week \" + i + \" Average Temperature: \" + (weeklySum / 7));\n}",
                  "solvedContent": "let temperature_data = [\n  [60.2, 61.2, 63.4, 64.8, 65.1, 63.2, 62.9],\n  [62.5, 63.8, 63.4, 64.6, 65.8, 64.9, 65.0],\n  [63.4, 64.5, 65.2, 64.8, 65.1, 64.9, 66.2],\n  [66.3, 66.8, 66.4, 66.8, 67.8, 67.9, 68.2]\n];\nfor (let i = 0; i < temperature_data.length; i++) {\n  let length = temperature_data[i].length;\n  let weeklySum = 0;\n  for (let j = 0; j < length; j++) {\n    weeklySum += temperature_data[i][j];\n  }\n  console.log(\"Week \" + i + \" Average Temperature: \" + (weeklySum / 7));\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 11433,
        "title": "Durch eine Liste iterieren",
        "type": "challengeLevel2",
        "lessons": [
          {
            "title": "Iterate Through a List",
            "id": 105742,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Angenommen, du hast Teilnehmerdaten aus einer Kalendereinladung extrahiert. Du benötigst jedoch eine saubere Liste von Namen ohne Berufsbezeichnungen. Beachte die Organisation der Daten: Namen werden von Positionen gefolgt, wobei alle Namen an geraden Indizes existieren.\n\nSchreibe eine for-Schleife, die durch die Liste iteriert und nur die Teilnehmernamen in der Konsole ausgibt.\n\n1. Implementiere zuerst eine for-Schleife, die alle geraden Zahlen von 0 bis zum Ende der `meetingAttendees`-Liste durchläuft.\n2. Implementiere als Nächstes den Schleifenkörper, um jeden Teilnehmer der Besprechung in der Konsole auszugeben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "let meetingAttendees = [\"Diane Moll\", \"CEO\", \"Stanley Winstead\", \"CFO\",\r\n  \"Herta Pickett\", \"CFO\", \"Lynn Hanby\", \"COO\"\r\n];\r\n\r\nfor() {\r\n   console.log();\r\n}",
                  "solvedContent": "let meetingAttendees = [\"Diane Moll\", \"CEO\", \"Stanley Winstead\", \"CFO\",\r\n  \"Herta Pickett\", \"CFO\", \"Lynn Hanby\", \"COO\"\r\n];\r\n\r\nfor (let i = 0; i < meetingAttendees.length; i += 2) {\r\n  console.log(meetingAttendees[i]);\r\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}