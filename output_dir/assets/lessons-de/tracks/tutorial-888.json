{
  "tutorial": {
    "id": 888,
    "version": 15,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Methoden überschreiben",
    "descriptionContent": "Möchtest du dasselbe Verhalten in der Unterklasse, aber leicht unterschiedliche Ergebnisse? Überschreiben ist der Schlüssel.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 6714,
        "title": "Methodenüberschreibung",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 57986,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Angenommen, wir entwickeln ein Rollenspiel mit Menschen und Zauberern. Zauberer sind besondere Menschen, die mit magischen Zaubersprüchen angreifen können.</p><p>Da kommt das <strong>Methodenüberschreiben</strong> ins Spiel.</p></body></html>"
          },
          {
            "title": "Intro 2",
            "id": 57996,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können eine <code>Human</code>-Klasse erstellen und eine <code>Wizard</code>-Klasse davon erben lassen.</p><p>Dann können wir durch Methodenüberschreibung das Angriffsverhalten der <code>Wizard</code>-Klasse ändern.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57997,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das Überschreiben einer Methode ersetzt den Code der Methode in der Superklasse durch den der Subklasse.</p><p>Rufe die <code>receiveDamage()</code>-Methode aus der <code>Wizard</code>-Klasse auf, um zu sehen, was mit der <code>health</code>-Eigenschaft passiert.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"293\" endIndex=\"299\" /><option startIndex=\"299\" endIndex=\"300\" /><option startIndex=\"300\" endIndex=\"315\" /><option startIndex=\"315\" endIndex=\"316\" /></options></interaction></interactions><output><content><text value=\"100\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>wizard</code>, gefolgt von <code>.</code> und schließlich <code>receiveDamage()</code>, <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57998,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine Methode zu überschreiben, geben wir ihr den <em>gleichen</em> Namen und die gleichen Parameter wie der Methode in der Superklasse.</p><p>Wir können <code>receiveDamage()</code> von der Superklasse überschreiben, indem wir die gleiche Methode in der Subklasse programmieren.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"173\" endIndex=\"188\" /></interactions><output><content><text value=\"100\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Gib <code>receiveDamage()</code> ein.</p></body></html>"
          },
          {
            "title": "Overriding methods",
            "id": 57999,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Überschreiben bedeutet, dass wir die <em>gleiche Methode</em> in der Unterklasse haben können, aber ihr Verhalten für das, was in der Unterklasse benötigt wird, <em>anpassen</em> können.</p><p>Wenn wir die <code>receiveDamage()</code>-Methode auf <code>human</code> und <code>wizard</code> aufrufen, werden wir ihr ähnliches Verhalten, aber unterschiedliche Ergebnisse sehen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" receiveDamage() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"this\" class=\"keyword\" /><text value=\".health - \" /><text value=\"5\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" human = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Human(\" /><text value=\"&quot;ax&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"human.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(human.health);\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.receiveDamage();\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(wizard.health);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"260\" endIndex=\"265\" /><option startIndex=\"266\" endIndex=\"281\" /><option startIndex=\"346\" endIndex=\"352\" /><option startIndex=\"353\" endIndex=\"368\" /></options></interaction></interactions><output><content><text value=\"90\" /><text type=\"break\" /><text value=\"95\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>human</code>, gefolgt von <code>receiveDamage()</code> und schließlich <code>wizard</code>, <code>receiveDamage()</code> aus.</p></body></html>"
          },
          {
            "title": "Super",
            "id": 58001,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir das Verhalten der Methode der Superklasse benötigen, können wir sie mit dem <code>super</code>-Schlüsselwort aufrufen.</p><p>Gib das richtige Schlüsselwort ein, um die <code>attack()</code>-Methode aus der Human-Klasse aufzurufen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Swing &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".attack();\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.attack();\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"184\" endIndex=\"189\" /></interactions><output><content><text value=\"Swing staff\" /></content></output></code><p visible-if=\"wrong\">Gib <code>super</code> ein.</p></body></html>"
          },
          {
            "title": "Something extra",
            "id": 58002,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Beim Überschreiben können wir auf dem Verhalten der Unterklasse aufbauen. Nachdem ein Zauberer seinen Stab geschwungen hat, kann er einen Zauberspruch sprechen.</p><p>Füge der <code>Wizard</code>-Klasse spezifisches Verhalten für Zauberer zur <code>attack()</code>-Methode hinzu.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(weapon) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon = weapon;\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".health = \" /><text value=\"100\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Swing &quot;\" class=\"string\" /><text value=\" + \" /><text value=\"this\" class=\"keyword\" /><text value=\".weapon);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Wizard\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Human\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" attack() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".attack();\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Zimzalabim!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" wizard = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Wizard(\" /><text value=\"&quot;staff&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"wizard.attack();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"202\" endIndex=\"213\" /><option startIndex=\"214\" endIndex=\"227\" /></options></interaction></interactions><output><content><text value=\"Swing staff\" /><text type=\"break\" /><text value=\"Zimzalabim!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>console.log</code>, gefolgt von <code>\"Zimzalabim!\"</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57988,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Warum möchten wir, dass eine Methode in einer Unterklasse eine Methode aus einer Oberklasse überschreibt?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Um die Methode in der Subklasse anzupassen</item><item value=\"2\" correct=\"false\">Um die Methode der Superklasse für Unterklassen zu ändern</item></selection><p visible-if=\"wrong\">Um die Methode in der Subklasse anzupassen.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57989,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was muss die Subklassenmethode mit der Superklassenmethode gemeinsam haben, wenn sie überschrieben wird?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der Name und die Parameter</item><item value=\"2\" correct=\"false\">Der Methodenrumpf</item></selection><p visible-if=\"wrong\">Der Name und die Parameter.</p></body></html>"
          },
          {
            "title": "Question: Overriding methods",
            "id": 57990,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Überschreibt die Methode in der <code>Rabbit</code>-Klasse die Methode der <code>Mammal</code>-Klasse?</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Mammal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" eat(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(food + \" /><text value=\"&quot; nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"Rabbit\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"Mammal\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" eatVeggies(food) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"if\" class=\"keyword\" /><text value=\" (food === \" /><text value=\"&quot;lettuce&quot;\" class=\"string\" /><text value=\") {\" /><text type=\"break\" /><text value=\"   \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(food + \" /><text value=\"&quot; nom nom&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nein, es hat einen anderen Namen</item><item value=\"2\" correct=\"false\">Ja, es hat denselben Parameter</item></selection><p visible-if=\"wrong\">Nein, es hat einen anderen Namen.</p></body></html>"
          },
          {
            "title": "Question: Super",
            "id": 58556,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welches Schlüsselwort verwenden wir, wenn wir die Methode einer Superklasse in der Subklasse aufrufen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>super</code></item><item value=\"2\" correct=\"false\"><code>this</code></item></selection><p visible-if=\"wrong\">Wähle <code>super</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Extra",
            "id": 109184,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Kann eine Unterklasse die ursprüngliche Methode der Oberklasse noch verwenden, nachdem sie diese überschrieben hat?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nein, wenn diese Methode ohne <code>super</code> mit ihrem Namen aufgerufen wird, verwendet die Unterklasse die überschreibende Methode</item><item value=\"2\" correct=\"false\">Ja, die Unterklasse verwendet standardmäßig die Methode der Oberklasse, selbst nach dem Überschreiben</item></selection><p visible-if=\"wrong\">Nein, wenn diese Methode ohne <code>super</code> mit ihrem Namen aufgerufen wird, verwendet die Unterklasse die überschreibende Methode.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods",
            "id": 108789,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Überschreibe <code>brush()</code> aus der Superklasse, indem du die gleiche Methode in der Subklasse codierst.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"brush1.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"111\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"118\" /><option startIndex=\"119\" endIndex=\"120\" /><option startIndex=\"149\" endIndex=\"150\" /></options></interaction></interactions><output><content><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>brush</code>, gefolgt von <code>()</code> und schließlich <code>{</code>, <code>}</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods 2",
            "id": 108788,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die <code>brush()</code>-Methode auf der <code>ElectricBrush</code>-Instanz auf, um zu sehen, was passiert.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myBrush = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"myBrush.brush();\" /><text type=\"break\" /><text type=\"break\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"190\" endIndex=\"205\" /></interactions><output><content><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Gib <code>myBrush.brush()</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Overriding methods 3",
            "id": 108790,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die <code>brush()</code>-Methode auf <code>brush1</code> und <code>brush2</code> auf, um ihr unterschiedliches Verhalten zu sehen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush1 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ToothBrush();\" /><text type=\"break\" /><text value=\"brush1.brush();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" brush2 = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"brush2.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"186\" endIndex=\"192\" /><option startIndex=\"192\" endIndex=\"201\" /><option startIndex=\"238\" endIndex=\"244\" /><option startIndex=\"244\" endIndex=\"253\" /></options></interaction></interactions><output><content><text value=\"Cleaning teeth.\" /><text type=\"break\" /><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>brush1</code>, gefolgt von <code>.brush();</code> und schließlich <code>brush2</code>, <code>.brush();</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Super",
            "id": 109183,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge Code hinzu, damit die elektrische Bürste sowohl reinigen <em>als auch</em> summen kann.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Cleaning teeth.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" \" /><text value=\"ElectricBrush\" class=\"title\" /><text value=\" \" /><text value=\"extends\" class=\"keyword\" /><text value=\" \" /><text value=\"ToothBrush\" class=\"title\" /><text value=\" \" /><text value=\"{\" /><text type=\"break\" /><text value=\" brush() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"super\" class=\"keyword\" /><text value=\".brush();\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Bzzzzzzz&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" myBrush = \" /><text value=\"new\" class=\"keyword\" /><text value=\" ElectricBrush();\" /><text type=\"break\" /><text value=\"myBrush.brush();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"123\" endIndex=\"128\" /><option startIndex=\"128\" endIndex=\"134\" /><option startIndex=\"134\" endIndex=\"137\" /></options></interaction></interactions><output><content><text value=\"Cleaning teeth.\" /><text type=\"break\" /><text value=\"Bzzzzzzz\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>super</code>, gefolgt von <code>.brush</code> und schließlich <code>();</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}