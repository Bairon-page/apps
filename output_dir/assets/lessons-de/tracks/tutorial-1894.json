{
  "tutorial": {
    "id": 1894,
    "version": 8,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Mock-Datenbank",
    "descriptionContent": "Verwende wiederverwendbare Programme, um eine Mock-Datenbank zu erstellen",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1894-icon-banner.svg",
    "chapters": [
      {
        "id": 12373,
        "title": "Mock-Datenbank",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "getAll()",
            "id": 112139,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Für dieses Projekt werden wir Datenbankabfragen simulieren, um zu verstehen, wann bestimmte Codeblöcke innerhalb einer Funktion mit Hilfe von Bedingungen ausgeführt werden.\n\nUm zu beginnen, lass uns mit einer Funktion starten, die alle Benutzer innerhalb einer Datenbank abruft. Für diese Funktion wird das `return`-Schlüsselwort alle Benutzer zurückgeben, sobald die Schleife abgeschlossen ist.\n\n1. Initialisiere innerhalb von `getAll()` eine Variable `allUsers` als leeres Array.\n2. Erstelle eine `for`-Schleife, die über die Länge von `userArr` iteriert.\n3. Füge in jeder Iteration Benutzer zu `allUsers` hinzu.\n4. Gib `allUsers` außerhalb und unterhalb der for-Schleife zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n}\n\nfunction checkExistingUser(e) {}\n\nfunction checkLastLogin() {}\n\nfunction checkLocation(e) {}\n\nfunction checkContributions(e) {}\n\nfunction deleteUser() {}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {}\n\nfunction checkLastLogin() {}\n\nfunction checkLocation(e) {}\n\nfunction checkContributions(e) {}\n\nfunction deleteUser() {}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "checkExistingUser(e) 1/2",
            "id": 112140,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Eine weitere nützliche Abfrage an eine Datenbank ist zu überprüfen, ob ein Benutzer bereits existiert. In dieser Funktion hilft uns eine Bedingung, gewünschte Anweisungen auszuführen, um zu überprüfen, ob ein Benutzer existiert.\n\n1. Erstelle innerhalb von `checkExistingUser(e)` eine `for`-Schleife, die über die Länge von `userArr` iteriert.\n2. Erstelle eine `if`-Anweisung, die überprüft, ob der Name der aktuellen Iteration strikt gleich dem Eingabewert des Formulars ist.\n3. Logge das Benutzerobjekt der aktuellen Iteration, wenn die Bedingung erfüllt ist.\n4. Gib `true` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `e.currentTarget.name.value` to check if the current iteration's name is strictly equal to the form's input value. This syntax gets the value entered into the `input` element (in index.html) when its button is clicked and the event triggers this function."
                }
              ]
            }
          },
          {
            "title": "checkExistingUser(e) 2/2",
            "id": 112141,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Weiter mit der Funktion `checkExistingUser`, lass uns die Logik vervollständigen, indem wir Anweisungen für den Fall einfügen, dass die `if`-Bedingung nicht erfüllt ist. `checkExistingUser(e)` wird immer noch sinnvolle Daten liefern, indem es `false` zurückgibt.\n\n1. Logge `\"User does not exist\"` außerhalb und unterhalb der `for`-Schleife.\n2. Gib `false` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `return` to return values. For example, `return val;`."
                }
              ]
            }
          },
          {
            "title": "checkLastLogin()",
            "id": 112174,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Die nächste Mock-Abfrage, auf die wir uns konzentrieren werden, ist die Überprüfung, wann ein Benutzer zuletzt eingeloggt war. Eine Bedingung wird prüfen, ob ein Benutzer sich seit einer bestimmten Anzahl von Tagen nicht eingeloggt hat, und das `return`-Schlüsselwort wird alle Ergebnisse zurückgeben.\n\n1. Initialisiere innerhalb von `checkLastLogin()` eine Variable `results` als leeres Array.\n2. Erstelle eine `for`-Schleife, die über die Länge von `userArr` iteriert.\n3. Verwende eine `if`-Anweisung, um zu prüfen, ob der letzte Login des aktuellen Benutzerobjekts `größer als` 10 ist.\n4. Füge das aktuelle Benutzerobjekt dem `results`-Array hinzu, wenn die Bedingung erfüllt ist.\n5. Gib außerhalb und unterhalb der for-Schleife `results` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "1. Use `return` to return values. Example, `return val;`.\n2. To push an element into an array, use `push()`. Example, `array.push(element)`."
                }
              ]
            }
          },
          {
            "title": "checkLocation(e) 1/2",
            "id": 112175,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes erstellen wir eine Funktion, die die Mock-Datenbank abfragt und alle Benutzer von einem bestimmten Standort zurückgibt. In diesem ersten Teil geben wir die Ergebnisse unserer Bedingungen zurück, wenn sie erfüllt sind.\n\n1. Initialisiere innerhalb von `checkLocation()` eine Variable `results` als leeres Array.\n2. Verwende eine `for`-Schleife, um durch die Länge von `userArr` zu iterieren.\n3. Erstelle eine `if`-Anweisung, die überprüft, ob der Standort des aktuellen Benutzerobjekts genau gleich dem Eingabewert des Formulars ist.\n4. Füge das aktuelle Benutzerobjekt dem `results`-Array hinzu, wenn die Bedingung erfüllt ist.\n5. Überprüfe außerhalb und unterhalb der for-Schleife, ob die Länge von `results` `größer als` 0 ist.\n6. Wenn die obige Bedingung erfüllt ist, dann logge und gib `results` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `e.currentTarget.location.value` to check if the current iteration's name is strictly equal to the form's input value."
                }
              ]
            }
          },
          {
            "title": "checkLocation(e) 2/2",
            "id": 112176,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um die Logik für diese Funktion abzuschließen, benötigen wir eine `else`-Anweisung. Wenn die Länge von `results` nicht größer als 0 ist und die Bedingung nicht erfüllt ist, wird unsere else-Anweisung `\"No results found\"` anzeigen und `false` zurückgeben.\n\n1. Erstelle den Codeblock der `else`-Anweisung.\n2. Logge `\"No results found\"`.\n3. Gib `false` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  } else {\n   console.log(\"No results found\");\n   return false;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The structure of `if..else` statement is:\n```javascript\nif(condition) {\n\n} else {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "checkContributions(e) 1/2",
            "id": 112177,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als Nächstes schreiben wir eine Funktion, die überprüft, ob ein Benutzer eine bestimmte Anzahl von Beiträgen geleistet hat. In diesem ersten Teil geben wir alle Benutzerobjekte zurück, die die Bedingung erfüllen. Wir verwenden eine weitere Bedingung, um die Länge des Ergebnisarrays zu überprüfen.\n\n1. Initialisiere innerhalb von `checkContributions()` eine Variable `validContributions` als leeres Array.\n2. Erstelle eine `for`-Schleife, die über die Länge von `userArr` iteriert.\n3. Erstelle eine `if`-Anweisung, die überprüft, ob die Beiträge des aktuellen Benutzerobjekts `größer als` der Eingabewert des Formulars sind.\n4. Füge das aktuelle Benutzerobjekt zu `validContributions` hinzu, wenn die Bedingung erfüllt ist.\n5. Überprüfe außerhalb und unterhalb der for-Schleife, ob die Länge von `validContributions` `größer als` 0 ist.\n6. Wenn die obige Bedingung erfüllt ist, logge und gib `validContributions` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  } else {\n   console.log(\"No results found\");\n   return false;\n  }\n}\n\nfunction checkContributions(e) {\n\n}\n\nfunction deleteUser() {\n\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n   console.log(results);\n   return results;\n  } else {\n   console.log(\"No results found\");\n   return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n   console.log(validContributions);\n   return validContributions;\n  }\n}\n\nfunction deleteUser() {\n\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Use `e.currentTarget.contributions.value` to check if the current user object's contributions are `greater than` the form's input value."
                }
              ]
            }
          },
          {
            "title": "checkContributions(e) 2/2",
            "id": 112178,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um diese Funktion zu vervollständigen, benötigen wir eine `else`-Anweisung für den Fall, dass die Länge von `validContributions` die Bedingung nicht erfüllt.\n\n1. Erstelle den Codeblock der `else`-Anweisung.\n2. Logge `\"No results found\"`.\n3. Gib `false` zurück.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  }\n}\n\nfunction deleteUser() {}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction deleteUser() {}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "The structure of `if..else` statement is:\n```javascript\nif(condition) {\n\n} else {\n\n}\n```"
                }
              ]
            }
          },
          {
            "title": "deleteUser()",
            "id": 112179,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich werfen wir einen Blick auf eine Funktion, die einen Benutzer aus der Datenbank löscht. Wir verwenden das `return`-Schlüsselwort, um `true` zurückzugeben, wenn ein Benutzer erfolgreich entfernt wird.\n\n1. Erstelle eine `for`-Schleife, die über die Länge von `userArr` iteriert.\n2. Überprüfe, ob der Name des aktuellen Benutzerobjekts strikt gleich `\"Selene\"` ist.\n3. Verwende `splice` mit dem Index des aktuellen Benutzerobjekts und entferne das Objekt, wenn die Bedingung erfüllt ist.\n4. Logge `\"User deleted successfully\", userArr`.\n5. Gib `true` zurück.\n6. Logge `\"User not found\"` außerhalb und unterhalb der for-Schleife.",
              "preselectedFileIndex": 2,
              "hasVisualOutput": true,
              "files": [
                {
                  "name": "index.html",
                  "codeLanguage": "html",
                  "content": "<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n  </head>\n  <body>\n    <form onsubmit=\"event.preventDefault(); checkExistingUser(event);\">\n      <label for=\"name-query\">Name Query:</label>\n      <input type=\"text\" name=\"name\" placeholder=\"Enter a name\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkLocation(event);\">\n      <label for=\"location-query\">Location Query:</label>\n      <input type=\"text\" name=\"location\" placeholder=\"Enter a location\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <form onsubmit=\"event.preventDefault(); checkContributions(event);\">\n      <label for=\"contributions-query\">Contributions Query</label>\n      <input type=\"number\" name=\"contributions\" placeholder=\"Enter an amount\">\n      <button type=\"submit\">submit</button>\n    </form>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n",
                  "solvedContent": null
                },
                {
                  "name": "style.css",
                  "codeLanguage": "css",
                  "content": "body {\n    background-color: #3E416D;\n    color: whitesmoke;\n    font-family: 'Lato', sans-serif;\n}\n\nbutton {\n    background-color: #62d76b;\n}",
                  "solvedContent": null
                },
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction deleteUser() {\n}",
                  "solvedContent": "const userArr = [{\n  name: \"Brian\",\n  lastLoggedOn: 5,\n  location: \"Illinois\",\n  contributions: 79\n}, {\n  name: \"Brent\",\n  lastLoggedOn: 30,\n  location: \"Austria\",\n  contributions: 25\n}, {\n  name: \"Selene\",\n  lastLoggedOn: 2,\n  location: \"Illinois\",\n  contributions: 116\n}, ];\n\nfunction getAll() {\n  const allUsers = [];\n  for (let i = 0; i < userArr.length; i++) {\n    allUsers.push(userArr[i]);\n  }\n  return allUsers;\n}\n\nfunction checkExistingUser(e) {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === e.currentTarget.name.value) {\n      console.log(userArr[i]);\n      return true;\n    }\n  }\n  console.log(\"User does not exist\");\n  return false;\n}\n\nfunction checkLastLogin() {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].lastLoggedOn > 10) {\n      results.push(userArr[i]);\n    }\n  }\n  return results;\n}\n\nfunction checkLocation(e) {\n  const results = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].location === e.currentTarget.location.value) {\n      results.push(userArr[i]);\n    }\n  }\n  if (results.length > 0) {\n    console.log(results);\n    return results;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction checkContributions(e) {\n  const validContributions = [];\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].contributions > e.currentTarget.contributions.value) {\n      validContributions.push(userArr[i]);\n    }\n  }\n  if (validContributions.length > 0) {\n    console.log(validContributions);\n    return validContributions;\n  } else {\n    console.log(\"No results found\");\n    return false;\n  }\n}\n\nfunction deleteUser() {\n  for (let i = 0; i < userArr.length; i++) {\n    if (userArr[i].name === \"Selene\") {\n      userArr.splice(i, 1);\n      console.log(\"User deleted successfully\", userArr);\n      return true;\n    }\n  }\n  console.log(\"User not found\");\n}"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "`.splice()` expects two arguments - a starting index and the number of items to remove. In this lesson, remove only one.\n"
                }
              ]
            }
          }
        ]
      }
    ]
  }
}