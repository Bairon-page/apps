{
  "tutorial": {
    "id": 1979,
    "version": 5,
    "type": "course",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Array .map()",
    "descriptionContent": "Lerne, wie du mit map() Array-Werte ändern kannst.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 12658,
        "title": "Karte",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 114705,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir jedes Element in einem Array ändern und das Ergebnis in einem neuen Array speichern wollten, wie könnten wir das tun?</p><p>Eine Möglichkeit, dies zu tun, besteht darin, eine Schleife zu verwenden, um Werte vor dem Speichern zu konvertieren. Das funktioniert, aber JavaScript hat eine noch bessere Lösung.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" fahrenheit = [\" /><text value=\"72\" class=\"number\" /><text value=\", \" /><text value=\"68\" class=\"number\" /><text value=\", \" /><text value=\"70\" class=\"number\" /><text value=\", \" /><text value=\"74\" class=\"number\" /><text value=\", \" /><text value=\"77\" class=\"number\" /><text value=\", \" /><text value=\"75\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" celsius = [];\" /><text type=\"break\" /><text value=\"for\" class=\"keyword\" /><text value=\" (\" /><text value=\"const\" class=\"keyword\" /><text value=\" element \" /><text value=\"of\" class=\"keyword\" /><text value=\" fahrenheit) {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" c = (element - \" /><text value=\"32\" class=\"number\" /><text value=\") * (\" /><text value=\"5\" class=\"number\" /><text value=\"/\" /><text value=\"9\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\" celsius.push(c);\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(celsius);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"91\" endIndex=\"101\" /><option correct=\"false\"><content><text value=\"array\" /></content></option></options></interaction></interactions><output><content><text value=\"[\" /><text type=\"break\" /><text value=\"  22.22222222222222,\" /><text type=\"break\" /><text value=\"  20,\" /><text type=\"break\" /><text value=\"  21.11111111111111,\" /><text type=\"break\" /><text value=\"  23.333333333333336,\" /><text type=\"break\" /><text value=\"  25,\" /><text type=\"break\" /><text value=\"  23.88888888888889,\" /><text type=\"break\" /><text value=\"  26.11111111111111\" /><text type=\"break\" /><text value=\"]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>fahrenheit</code> aus.</p></body></html>"
          },
          {
            "title": "Calling .map on an Array",
            "id": 114706,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>JavaScript hat eine praktische Funktion namens <code>.map()</code>, die, wenn sie auf ein Array angewendet wird, es uns ermöglicht, jeden Wert zu ändern und in einem neuen Array zu speichern.</p><p><code>.map()</code> folgt der Syntax: <code>arrayName.map()</code>. Schauen wir uns an, wie wir es auf das <code>fahrenheit</code>-Array anwenden können.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" fahrenheit = [\" /><text value=\"72\" class=\"number\" /><text value=\", \" /><text value=\"68\" class=\"number\" /><text value=\", \" /><text value=\"70\" class=\"number\" /><text value=\", \" /><text value=\"74\" class=\"number\" /><text value=\", \" /><text value=\"77\" class=\"number\" /><text value=\", \" /><text value=\"75\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" celsius = fahrenheit.map();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"65\" endIndex=\"75\" /><option startIndex=\"75\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"79\" /><option startIndex=\"79\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"81\" /><option startIndex=\"81\" endIndex=\"82\" /><option correct=\"false\"><content><text value=\"celsius\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>fahrenheit</code>, gefolgt von <code>.</code> und schließlich <code>map</code>, <code>(</code>, <code>)</code>, <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "Passing Functions",
            "id": 114708,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um <code>.map()</code> mitzuteilen, wie jedes Element modifiziert werden soll, müssen wir eine Funktion als Parameter übergeben.</p><p>Wir werden später unsere Änderungen in diese Funktion programmieren.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" fahrenheit = [\" /><text value=\"72\" class=\"number\" /><text value=\", \" /><text value=\"68\" class=\"number\" /><text value=\", \" /><text value=\"70\" class=\"number\" /><text value=\", \" /><text value=\"74\" class=\"number\" /><text value=\", \" /><text value=\"77\" class=\"number\" /><text value=\", \" /><text value=\"75\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" celsius = fahrenheit.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(celsius);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"80\" endIndex=\"88\" /><option startIndex=\"88\" endIndex=\"89\" /><option startIndex=\"89\" endIndex=\"90\" /><option startIndex=\"91\" endIndex=\"92\" /><option startIndex=\"92\" endIndex=\"93\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>function</code>, gefolgt von <code>(</code> und schließlich <code>)</code>, <code>{</code>, <code>}</code> aus.</p></body></html>"
          },
          {
            "title": "Parameters",
            "id": 114711,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Bevor wir die Array-Werte ändern können, müssen wir sie an die Funktion übergeben. Das tun wir, indem wir der Inline-Funktion einen Parameter hinzufügen.</p><p>In unserem Beispiel nennen wir den Parameter <code>element</code>, aber jeder Name kann funktionieren.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" values = [\" /><text value=\"56\" class=\"number\" /><text value=\", \" /><text value=\"27\" class=\"number\" /><text value=\", \" /><text value=\"19\" class=\"number\" /><text value=\", \" /><text value=\"20\" class=\"number\" /><text value=\", \" /><text value=\"38\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" evenOrOdd = values.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" (element % \" /><text value=\"2\" class=\"number\" /><text value=\") == \" /><text value=\"0\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(evenOrOdd);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"75\" endIndex=\"82\" /></interactions><output><content><text value=\"[ true, false, false, true, true ]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>element</code> ein.</p></body></html>"
          },
          {
            "title": "Parameters II",
            "id": 114712,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das Hinzufügen eines zweiten Parameters ermöglicht es uns, auf den Index jeder Iteration zusammen mit dem Array-Wert zuzugreifen.</p><p>In unserem Beispiel nennen wir den Parameter <code>index</code>, aber jeder Name kann funktionieren.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" queue = [\" /><text value=\"&quot;Sarah&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Hank&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Anna&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Beatrice&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" displayQueue = queue.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element, index\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" index + \" /><text value=\"&quot;: &quot;\" class=\"string\" /><text value=\" + element;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(displayQueue);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"102\" endIndex=\"107\" /></interactions><output><content><text value=\"[ '0: Sarah', '1: Hank', '2: Anna', '3: Beatrice' ]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>index</code> ein.</p></body></html>"
          },
          {
            "title": "Return",
            "id": 114709,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um der <code>.map()</code>-Funktion mitzuteilen, welchen Wert sie im neuen Array speichern soll, muss die Inline-Funktion einen Wert <code>return</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" fahrenheit = [\" /><text value=\"72\" class=\"number\" /><text value=\", \" /><text value=\"68\" class=\"number\" /><text value=\", \" /><text value=\"70\" class=\"number\" /><text value=\", \" /><text value=\"74\" class=\"number\" /><text value=\", \" /><text value=\"77\" class=\"number\" /><text value=\", \" /><text value=\"75\" class=\"number\" /><text value=\", \" /><text value=\"79\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" celsius = fahrenheit.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" (element - \" /><text value=\"32\" class=\"number\" /><text value=\") * (\" /><text value=\"5\" class=\"number\" /><text value=\"/\" /><text value=\"9\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(celsius);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"101\" endIndex=\"107\" /></interactions><output><content><text value=\"[\" /><text type=\"break\" /><text value=\"  22.22222222222222,\" /><text type=\"break\" /><text value=\"  20,\" /><text type=\"break\" /><text value=\"  21.11111111111111,\" /><text type=\"break\" /><text value=\"  23.333333333333336,\" /><text type=\"break\" /><text value=\"  25,\" /><text type=\"break\" /><text value=\"  23.88888888888889,\" /><text type=\"break\" /><text value=\"  26.11111111111111\" /><text type=\"break\" /><text value=\"]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>return</code> ein.</p></body></html>"
          },
          {
            "title": "Arrow functions",
            "id": 114714,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um unsere Syntax zu vereinfachen, können wir die Inline-Funktion stattdessen durch eine JavaScript-Arrow-Funktion ersetzen.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" states = [\" /><text value=\"'ak'\" class=\"string\" /><text value=\", \" /><text value=\"'md'\" class=\"string\" /><text value=\", \" /><text value=\"'va'\" class=\"string\" /><text value=\", \" /><text value=\"'ca'\" class=\"string\" /><text value=\", \" /><text value=\"'or'\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" uppercaseStates = \" /><text type=\"break\" /><text value=\" states.map(\" /><text value=\"(\" /><text value=\"element\" class=\"params\" /><text value=\") =&gt;\" /><text value=\" element.toUpperCase());\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(uppercaseStates);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"85\" endIndex=\"92\" /><option startIndex=\"94\" endIndex=\"96\" /><option startIndex=\"97\" endIndex=\"118\" /></options></interaction></interactions><output><content><text value=\"[ 'AK', 'MD', 'VA', 'CA', 'OR' ]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>element</code>, gefolgt von <code>=&gt;</code> und schließlich <code>element.toUpperCase()</code> aus.</p></body></html>"
          },
          {
            "title": "Calling .map on an Array II",
            "id": 114713,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>.map()</code> funktioniert nicht nur mit Integer-Arrays, sondern auch mit anderen Werttypen, wie zum Beispiel Strings.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" names = [\" /><text value=\"'lisa'\" class=\"string\" /><text value=\", \" /><text value=\"'jim'\" class=\"string\" /><text value=\", \" /><text value=\"'hannah'\" class=\"string\" /><text value=\", \" /><text value=\"'frank'\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" nameLength =\" /><text type=\"break\" /><text value=\" names.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" element.length;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(nameLength);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"70\" endIndex=\"75\" /><option correct=\"false\"><content><text value=\"Array\" /></content></option><option correct=\"false\"><content><text value=\"this\" /></content></option></options></interaction></interactions><output><content><text value=\"[ 4, 3, 6, 5 ]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>names</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Intro",
            "id": 114823,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche JavaScript-Funktion können wir verwenden, um jedes Element zu modifizieren und die Ergebnisse in einem neuen Array zu speichern?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"2\" correct=\"true\"><code>.map()</code></item><item value=\"3\" correct=\"false\"><code>.convert()</code></item></selection><p visible-if=\"wrong\">Wähle <code>.map()</code> aus.</p></body></html>"
          },
          {
            "title": "Question: Passing Functions",
            "id": 114825,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was müssen wir als Parameter übergeben, um der <code>.map()</code>-Funktion mitzuteilen, wie jedes Element geändert werden soll?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Eine Funktion</item><item value=\"2\" correct=\"false\"><code>element</code></item></selection><p visible-if=\"wrong\">Eine Funktion.</p></body></html>"
          },
          {
            "title": "Question: Parameters",
            "id": 114826,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie können wir die Array-Werte an die <code>.map()</code> Inline-Funktion zur Modifikation übergeben?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Durch Hinzufügen eines Parameters zur Inline-Funktion</item><item value=\"2\" correct=\"false\">Durch die Verwendung der Klammer-Syntax</item></selection><p visible-if=\"wrong\">Durch Hinzufügen eines Parameters zur Inline-Funktion.</p></body></html>"
          },
          {
            "title": "Question: Parameters II",
            "id": 114827,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was können wir zugreifen, indem wir einen zweiten Parameter in die Inline-Funktion von <code>.map()</code> einfügen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Der Iterationsindex</item><item value=\"3\" correct=\"false\">Der Array-Wert</item></selection><p visible-if=\"wrong\">Der Iterationsindex.</p></body></html>"
          },
          {
            "title": "Question: Return",
            "id": 114828,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was muss die <code>.map()</code>-Funktion enthalten, um korrekt ein neues Array von Werten zu erzeugen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"2\" correct=\"true\">Eine return-Anweisung</item><item value=\"3\" correct=\"false\">Syntax zum Ändern des Array-Werts</item></selection><p visible-if=\"wrong\">Eine return-Anweisung.</p></body></html>"
          },
          {
            "title": "Question: Arrow functions",
            "id": 114829,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Art von Funktion können wir einbauen, um die Syntax der <code>.map()</code>-Funktion zu vereinfachen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Eine Pfeilfunktion</item><item value=\"2\" correct=\"false\">Eine Inline-Funktion</item></selection><p visible-if=\"wrong\">Eine Pfeilfunktion.</p></body></html>"
          },
          {
            "title": "Question: Calling .map on an Array II",
            "id": 114830,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Auf welchem Typ von Array funktioniert <code>.map()</code>?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Arrays eines beliebigen Typs</item><item value=\"3\" correct=\"false\">Nur <code>string</code>-Arrays</item></selection><p visible-if=\"wrong\">Arrays eines beliebigen Typs.</p></body></html>"
          },
          {
            "title": "Example: Calling .map on an Array",
            "id": 114832,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Rufe die <code>.map()</code>-Funktion auf dem <code>values</code>-Array auf.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" values = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\", \" /><text value=\"7\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" squares = values.map(\" /><text value=\"element\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" element*element);\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(squares);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"45\" endIndex=\"51\" /><option startIndex=\"51\" endIndex=\"52\" /><option startIndex=\"52\" endIndex=\"55\" /></options></interaction></interactions><output><content><text value=\"[ 1, 9, 16, 49 ]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>values</code>, gefolgt von <code>.</code> und schließlich <code>map</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Passing Functions",
            "id": 114833,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge eine Inline-Funktion innerhalb der <code>.map()</code>-Funktion hinzu.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" colors = [\" /><text value=\"&quot;blue&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;red&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;green&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" lengths = colors.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") \" /><text value=\"{});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"68\" endIndex=\"76\" /><option startIndex=\"76\" endIndex=\"77\" /><option startIndex=\"77\" endIndex=\"78\" /><option startIndex=\"79\" endIndex=\"80\" /><option startIndex=\"80\" endIndex=\"81\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>function</code>, gefolgt von <code>(</code> und schließlich <code>)</code>, <code>{</code>, <code>}</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Parameters",
            "id": 114834,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge den entsprechenden Parameter hinzu, um der Inline-Funktion Zugriff auf die Array-Werte zu geben.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" flavors = [\" /><text value=\"&quot;chocolate&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vanilla&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;strawberry&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" lengths = flavors.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(element);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"93\" endIndex=\"100\" /></interactions><output><content><text value=\"chocolate\" /><text type=\"break\" /><text value=\"vanilla\" /><text type=\"break\" /><text value=\"strawberry\" /></content></output></code><p visible-if=\"wrong\">Gib <code>element</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Parameters II",
            "id": 114835,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge die entsprechenden Parameter hinzu, um der Inline-Funktion Zugriff auf die Array-Werte und Indizes zu geben.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" flavors = [\" /><text value=\"&quot;chocolate&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;vanilla&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;strawberry&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" lengths = flavors.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element, index\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(element, index);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"93\" endIndex=\"100\" /><option startIndex=\"102\" endIndex=\"107\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>element</code>, gefolgt von <code>index</code> aus.</p></body></html>"
          },
          {
            "title": "Example: Return",
            "id": 114836,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code das richtige Schlüsselwort, damit die <code>.map()</code>-Funktion das <code>places</code>-Array füllt.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" drivers = [\" /><text value=\"&quot;LeClerc&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Sainz&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;Hamilton&quot;\" class=\"string\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" places = drivers.map(\" /><text value=\"function\" class=\"keyword\" /><text value=\"(\" /><text value=\"element, index\" class=\"params\" /><text value=\") \" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"return\" class=\"keyword\" /><text value=\" index+\" /><text value=\"1\" class=\"number\" /><text value=\" + \" /><text value=\"&quot;. &quot;\" class=\"string\" /><text value=\" + element;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(places);\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"105\" endIndex=\"111\" /></interactions><output><content><text value=\"[ '1. LeClerc', '2. Sainz', '3. Hamilton' ]\" /></content></output></code><p visible-if=\"wrong\">Gib <code>return</code> ein.</p></body></html>"
          },
          {
            "title": "Example: Arrow functions",
            "id": 114837,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine Arrow Function, die jeden Wert innerhalb der <code>values.map()</code> Funktion verdoppelt.</p><code version=\"2\" codelang=\"javascript\" name=\"script.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" values = [\" /><text value=\"1\" class=\"number\" /><text value=\", \" /><text value=\"2\" class=\"number\" /><text value=\", \" /><text value=\"3\" class=\"number\" /><text value=\", \" /><text value=\"4\" class=\"number\" /><text value=\"];\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" doubled = values.map(\" /><text value=\"element\" class=\"params\" /><text value=\" =&gt;\" /><text value=\" element*\" /><text value=\"2\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(doubled);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"56\" endIndex=\"63\" /><option startIndex=\"64\" endIndex=\"66\" /><option startIndex=\"67\" endIndex=\"74\" /><option startIndex=\"74\" endIndex=\"75\" /><option startIndex=\"75\" endIndex=\"76\" /></options></interaction></interactions><output><content><text value=\"[ 2, 4, 6, 8 ]\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>element</code>, gefolgt von <code>=&gt;</code> und schließlich <code>element</code>, <code>*</code>, <code>2</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}