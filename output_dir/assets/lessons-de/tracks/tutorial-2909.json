{
  "tutorial": {
    "id": 2909,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "Abfrageparameter",
    "descriptionContent": "Lerne, wie du Abfrageparameter beim Aufrufen einer API festlegst und wie du auf sie in deinen Express-Endpunkten zugreifst.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15003,
        "title": "Kapitel #1",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 132304,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Abfrageparameter sind ein wichtiger Bestandteil beim Erstellen von APIs, da sie uns ermöglichen, dynamischere und vielseitigere Routen zu erstellen. Lass uns eintauchen!</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 132305,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Abfrageparameter werden in der URL nach einem <code>?</code> hinzugefügt. Sie ändern den Endpunkt nicht, sondern liefern dem Server zusätzliche Informationen.</p><p>Hier ist <code>name</code> der Schlüssel, und <code>Maria</code> ist der übergebene Wert.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"localhost:3000/greet?name=Maria\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"21\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>?</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 132306,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können auf den Wert von Query-Parametern mit <code>req.query.key</code> zugreifen. Lass uns einen Endpoint erstellen, der den Wert eines Query-Parameters zurückgibt.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" name = req.query.name;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${name}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"46\" endIndex=\"49\" /><option startIndex=\"50\" endIndex=\"55\" /><option startIndex=\"56\" endIndex=\"60\" /></options></interaction></interactions><output><content><text value=\"Hello, Maria!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>query</code> und schließlich <code>name</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 132307,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Abfrageparameter sind von Natur aus optional. Wenn wir keinen Abfrageparameter angeben, wird sein Wert undefiniert sein.</p><p>Ein häufiger Anwendungsfall ist das Bereitstellen von Standardwerten mit <code>||</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" name = req.query.name || \" /><text value=\"&quot;Guest&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${name}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"61\" endIndex=\"63\" /><option startIndex=\"64\" endIndex=\"71\" /></options></interaction></interactions><output><content><text value=\"Hello, Guest\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>||</code>, gefolgt von <code>\"Guest\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132470,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Du möchtest vielleicht zwischen <code>undefined</code>, <code>null</code> oder leeren Werten unterscheiden. Der <code>??</code> (Nullish Coalescing Operator) ist hier hilfreich.</p><p>Im Gegensatz zu <code>||</code>, das <code>null</code>, <code>undefined</code> und falsy Werte (wie <code>0</code> oder <code>\"\"</code>) gleich behandelt, berücksichtigt <code>??</code> nur <code>null</code> und <code>undefined</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" name = req.query.name ?? \" /><text value=\"&quot;Guest&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${name}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"64\" endIndex=\"71\" /><option startIndex=\"61\" endIndex=\"63\" /></options></interaction></interactions><output><content><text value=\"Hello, Guest\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>??</code>, gefolgt von <code>\"Guest\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 132471,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Hier stellt <code>??</code> sicher, dass <code>\"\"</code> oder <code>0</code> nicht den Standardwert auslösen.</p><p>Du könntest <code>\"Hello, \"</code> sagen, wenn du eine leere Zeichenkette für den Namens-Query-Parameter erhältst.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" name = req.query.name ?? \" /><text value=\"&quot;Guest&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${name}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"64\" endIndex=\"71\" /><option startIndex=\"61\" endIndex=\"63\" /></options></interaction></interactions><output><content><text value=\"Hello, \" /></content></output></code><p visible-if=\"wrong\">Wähle <code>??</code>, gefolgt von <code>\"Guest\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 132313,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können mehrere Abfrageparameter haben. Wir kombinieren sie in der URL mit <code>&amp;</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"localhost:3000/info?name=Maria&amp;age=62\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"20\" /><option startIndex=\"30\" endIndex=\"31\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>?</code>, gefolgt von <code>&amp;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 132308,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir mehrere Abfrageparameter haben, können wir auf sie einzeln über ihren Namen zugreifen.</p><p>Schauen wir uns an, was wir zurückgeben, wenn der Abfrageparameter <code>name</code> als <code>\"Lin\"</code> übergeben wird, aber <code>age</code> nicht übergeben wird.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/info&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" name = req.query.name || \" /><text value=\"'Unknown'\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" age = req.query.age || \" /><text value=\"'Unknown'\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Name: \" /><text value=\"${name}\" class=\"subst\" /><text value=\", Age: \" /><text value=\"${age}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"55\" endIndex=\"59\" /><option startIndex=\"95\" endIndex=\"98\" /></options></interaction></interactions><output><content><text value=\"Name: Lin, Age: Unknown\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>name</code>, gefolgt von <code>age</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 132311,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn unser Endpoint bestimmte Query-Parameter benötigt, können wir überprüfen, ob sie bereitgestellt werden, und einen Fehler zurückgeben, wenn dies nicht der Fall ist.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/search&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" query = req.query.query;\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" limit = \" /><text value=\"parseInt\" class=\"built_in\" /><text value=\"(req.query.limit);\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!query) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Missing query parameter.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\" limit = limit || \" /><text value=\"10\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Here's the result of your search!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"48\" endIndex=\"51\" /><option startIndex=\"52\" endIndex=\"57\" /><option startIndex=\"87\" endIndex=\"90\" /><option startIndex=\"91\" endIndex=\"96\" /></options></interaction></interactions><output><content><text value=\"Here's the result of your search!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>query</code> und schließlich <code>req</code>, <code>query</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 132310,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was gibt <code>req.query</code> in Express zurück?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Objekt mit den Abfrageparametern als Schlüssel-Wert-Paare</item><item value=\"2\" correct=\"false\">Ein String, der den Query-String darstellt</item></selection><p visible-if=\"wrong\">Ein Objekt mit den Abfrageparametern als Schlüssel-Wert-Paare.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 132648,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Füge der URL einen Abfrageparameter namens <code>name</code> hinzu.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"localhost:3000/greet?name=Maria\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"21\" /><option startIndex=\"21\" endIndex=\"25\" /><option startIndex=\"25\" endIndex=\"26\" /><option startIndex=\"26\" endIndex=\"31\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>?</code>, gefolgt von <code>name</code> und schließlich <code>=</code>, <code>Maria</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #15",
            "id": 132652,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie greifst du in einem Routen-Handler auf Abfrageparameter zu?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Durch die Verwendung von <code>req.query</code></item><item value=\"2\" correct=\"false\">Durch die Verwendung von <code>req.params</code></item></selection><p visible-if=\"wrong\">Durch die Verwendung von <code>req.query</code>.</p></body></html>"
          },
          {
            "title": "Lesson #8 - Copy",
            "id": 132651,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Entpacke die beiden Abfrageparameter mit Objekt-Destrukturierung.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/search&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"const\" class=\"keyword\" /><text value=\" { type, category } = req.query;\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"23\" /><option startIndex=\"25\" endIndex=\"28\" /><option startIndex=\"64\" endIndex=\"67\" /><option startIndex=\"68\" endIndex=\"73\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>res</code> und schließlich <code>req</code>, <code>query</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #16",
            "id": 132653,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was wäre der korrekte Weg, um einen Abfrageparameter an <code>/search</code> für <code>type=fruit</code> zu senden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>/search?type=fruit</code></item><item value=\"2\" correct=\"false\"><code>/search/fruit</code></item></selection><p visible-if=\"wrong\">Wähle <code>/search?type=fruit</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 132649,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Gib einen Standardwert an, falls der Abfrageparameter keinen Wert enthält.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/greet&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"let\" class=\"keyword\" /><text value=\" name = req.query.name || \" /><text value=\"&quot;Guest&quot;\" class=\"string\" /><text value=\";\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"`Hello, \" /><text value=\"${name}\" class=\"subst\" /><text value=\"!`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"61\" endIndex=\"63\" /><option startIndex=\"64\" endIndex=\"71\" /><option startIndex=\"46\" endIndex=\"60\" /></options></interaction></interactions><output><content><text value=\"Hello, Guest\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req.query.name</code>, gefolgt von <code>||</code> und schließlich <code>\"Guest\"</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #17",
            "id": 132654,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie rufst du einen Abfrageparameter namens <code>category</code> innerhalb des <code>/items</code> Endpunkts ab?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.get(\" /><text value=\"&quot;/items&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;What category?&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>req.query.category</code></item><item value=\"2\" correct=\"false\"><code>req.params.category</code></item></selection><p visible-if=\"wrong\">Wähle <code>req.query.category</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #2 - Copy - Copy",
            "id": 132650,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Richte die URL korrekt ein.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"localhost:3000/info?name=Maria&amp;age=62\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"19\" endIndex=\"20\" /><option startIndex=\"30\" endIndex=\"31\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>?</code>, gefolgt von <code>&amp;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #18",
            "id": 132655,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche URL enthält sowohl einen Query-Parameter als auch einen Routen-Parameter?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>/items/phones?sort=asc</code></item><item value=\"2\" correct=\"false\"><code>/items?type=phones&amp;sort=asc</code></item></selection><p visible-if=\"wrong\">Wähle <code>/items/phones?sort=asc</code> aus.</p></body></html>"
          }
        ]
      }
    ]
  }
}