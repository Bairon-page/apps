{
  "tutorial": {
    "id": 1956,
    "version": 7,
    "type": "guidedProjectOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Bibliotheksbücher",
    "descriptionContent": "Übe JavaScript-Objekte",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-1956-icon-banner.svg",
    "chapters": [
      {
        "id": 12600,
        "title": "Bibliotheksbücher",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Step 1",
            "id": 113950,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "In diesem Projekt werden wir zwei \"Buch\"-themenbezogene JavaScript-Objekte erstellen und mit ihnen interagieren. Lass uns mit dem ersten Objekt beginnen!\n\n1. Deklariere zuerst ein neues JavaScript-Objekt und weise es einer Variablen namens `book1` zu. Verwende `const`, um die Variable zu erstellen.\n2. Erstelle dann eine `title`-Eigenschaft und setze ihren Wert auf `\"Pride and Prejudice\"`.\n3. Erstelle schließlich eine `author`-Eigenschaft und setze ihren Wert auf `\"Jane Austen\"`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "Remember, to declare a JavaScript object, you can use curly-brace notation, like so: \n\n```\nconst object1 = {\n   property1: \"Blue\",\n   property2: \"Medium\"\n};\n```"
                }
              ]
            }
          },
          {
            "title": "Step 2",
            "id": 114012,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns bestätigen, dass wir das `book1` Objekt erstellt und seine Eigenschaften korrekt gesetzt haben. Wenn du fertig bist, solltest du den Titel und den Autor von `book1` in der Konsole sehen.\n\n1. Schreibe direkt nach der Deklaration des `book1` Objekts eine `console.log` Anweisung, die den `title` von `book1` gefolgt von dem Text `\" by \"` und seinem `author` protokolliert. Vergiss nicht, vor und nach `by` ein Leerzeichen hinzuzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\"\n};\nconsole.log(book1.title + \" by \" + book1.author);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 3",
            "id": 114013,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Bücher haben viel mehr Eigenschaften als nur `title` und `author`. Zum Beispiel die Anzahl der Seiten, die durchschnittliche Lesezeit oder die Anzahl der verfügbaren Exemplare. Lass uns ein paar weitere Eigenschaften zu `book1` hinzufügen.\n\n1. Füge eine `pages`-Eigenschaft hinzu, die auf den numerischen Wert `432` gesetzt ist.\n2. Füge als Nächstes eine `avgTime`-Eigenschaft hinzu, die den Text `\"7 Hours\"` enthält.\n3. Schließlich füge eine `copies`-Eigenschaft hinzu, die auf den numerischen Wert `3` gesetzt ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n};\nconsole.log(book1.title + \" by \" + book1.author);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 4",
            "id": 114014,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns überprüfen, ob wir auf unsere neu erstellten Eigenschaften zugreifen können und sie in der Konsole protokollieren.\n\n1. Schreibe eine `console.log` Anweisung, die die `pages` Eigenschaft von `book1` gefolgt von einem Doppelpunkt ( `:`, vergiss das Leerzeichen nicht!) und der `avgTime` Eigenschaft protokolliert.\n2. Schreibe dann eine `console.log` Anweisung, die die `copies` Eigenschaft gefolgt von dem Text `\" copies available\"` protokolliert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 5",
            "id": 114015,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jetzt, da wir eine Eigenschaft haben, um die Anzahl der verfügbaren Exemplare zu verfolgen, lass uns eine Funktion implementieren, um ein Exemplar auszuleihen und die Eigenschaft `copies` entsprechend zu ändern.\n\n1. Deklariere zuerst eine Objektmethode namens `checkOut`, die keine Parameter annimmt.\n2. Dann soll der Code in diesem Funktionskörper auf die Eigenschaft `copies` zugreifen und sie um `1` verringern.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": [
                {
                  "title": "Hint",
                  "content": "To access an object property from within the object, you need to use the keyword `this`."
                }
              ]
            }
          },
          {
            "title": "Step 6",
            "id": 114019,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nun lass uns eine Objektmethode implementieren, um ein Exemplar zurückzubuchen, wenn Leser ein bestimmtes Buch zurückgeben.\n\n1. Deklariere und implementiere eine `checkIn`-Funktion in ähnlicher Weise wie die `checkOut`-Methode, die du gerade geschrieben hast.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 7",
            "id": 114020,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Es ist Zeit, unsere neuen Objektmethoden zu testen!\n\n1. Direkt nach den `console.log` Anweisungen, rufe die `checkOut` Funktion von `book1` auf und `console.log` dann die Anzahl der verfügbaren `book1` Exemplare.\n2. Rufe als nächstes die `checkIn` Funktion von `book1` auf und `console.log` dann die Anzahl der verfügbaren `book1` Exemplare.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 8",
            "id": 114018,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Objekte sind einfach zu manipulieren und wiederzuverwenden! Lass uns ein zweites Objekt mit dem Thema \"Buch\" erstellen und auf dessen Eigenschaften und Methoden zugreifen.\n\n1. Kopiere zuerst das `book1` Objekt in ein neues Objekt namens `book2`. Dieses Objekt sollte nach dem `book1` Objekt, aber vor den `console.log` Anweisungen und den Objektmethodenaufrufen stehen. Verwende `const`, um es zu erstellen.\n2. Ändere dann den Inhalt des `book2` Objekts, um \"Der alte Mann und das Meer\" von \"Ernest Hemingway\" widerzuspiegeln, das 127 Seiten hat und 3 Stunden zum Lesen benötigt. Es gibt 2 Exemplare im Bibliothekssystem und es sollte auch die gleiche \"Ein-/Auschecken\"-Funktionalität haben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Step 9",
            "id": 114021,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns überprüfen, ob wir das `book2` Objekt auf die gleiche Weise verwenden können wie das `book1` Objekt.\n\n1. Ändere die Code-Referenzen für die `console.log` Anweisungen und Objektmethodenaufrufe, um auf dein neu erstelltes `book2` Objekt zu verweisen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book1.title + \" by \" + book1.author);\nconsole.log(book1.pages + \": \" + book1.avgTime);\nconsole.log(book1.copies + \" copies available\");\nbook1.checkOut();\nconsole.log(book1.copies);\nbook1.checkIn();\nconsole.log(book1.copies);",
                  "solvedContent": "const book1 = {\n  title: \"Pride and Prejudice\",\n  author: \"Jane Austen\",\n  pages: 432,\n  avgTime: \"7 Hours\",\n  copies: 3,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconst book2 = {\n  title: \"The Old Man and the Sea\",\n  author: \"Ernest Hemingway\",\n  pages: 127,\n  avgTime: \"3 Hours\",\n  copies: 2,\n  checkOut: function() {\n    this.copies--;\n  },\n  checkIn: function() {\n    this.copies++;\n  }\n};\nconsole.log(book2.title + \" by \" + book2.author);\nconsole.log(book2.pages + \": \" + book2.avgTime);\nconsole.log(book2.copies + \" copies available\");\nbook2.checkOut();\nconsole.log(book2.copies);\nbook2.checkIn();\nconsole.log(book2.copies);"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}