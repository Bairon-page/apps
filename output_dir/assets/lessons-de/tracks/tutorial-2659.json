{
  "tutorial": {
    "id": 2659,
    "version": 5,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "Stein, Papier, Schere - Teil 1",
    "descriptionContent": "Baue dein eigenes Spiel! In diesem ersten Teil legen wir den Grundstein, indem wir die grundlegende Spiel-Logik entwickeln. Wir lassen den Spieler und den Computer eine Option wählen und bestimmen den Gewinner.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2659-icon-banner.svg",
    "chapters": [
      {
        "id": 14633,
        "title": "Kapitel #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129425,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zum **Schere, Stein, Papier** Projekt, bei dem wir ein Schere, Stein, Papier Spiel entwickeln werden.\n\n1. Beginne damit, die `print` Funktion zu verwenden, um eine Nachricht anzuzeigen. Setze innerhalb der Klammern der `print` Funktion einen String wie `\"Lass uns Schere, Stein oder Papier spielen\"` ein.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129426,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Fordere den Spieler auf, seine Wahl zu treffen. Um die Benutzereingabe zu erfassen, verwende die `input` Funktion und speichere die Eingabe des Benutzers in einer Variablen.\n\n1. Deklariere eine Variable `player_choice`, um die Eingabe des Spielers zu erfassen und in der Variablen zu speichern. Füge innerhalb der Klammern der `input` Funktion eine passende Aufforderung zur Auswahl von Stein, Papier oder Schere ein.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 129432,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um zu überprüfen, was der Benutzer ausgewählt hat, möchten wir die Auswahl in einen Kleinbuchstaben-String umwandeln. So können wir es korrekt erkennen, egal ob der Benutzer `Rock`, `rock` oder sogar `ROCK` eingibt.\n\n1. Füge `.lower()` am Ende der `input`-Funktion hinzu, um den Eingabestring in Kleinbuchstaben umzuwandeln. Es sollte wie der folgende Codeausschnitt aussehen:\n   ```Python\n   player_choice = input(\"Choose rock, paper, or scissors: \").lower()\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \")",
                  "solvedContent": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129427,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns die Wahl des Computers einrichten.\n\n1. Füge ganz oben in der Datei `import random` hinzu, um eine spezielle Python-Funktion nutzen zu können.\n2. Deklariere eine Variable `choices` und weise ihr eine Liste mit den Werten `[\"rock\", \"paper\", \"scissors\"]` zu. Wir werden bald mehr über Listen lernen. Für den Moment ist es wichtig zu wissen, dass es sich um eine Sammlung von Werten handelt.\n3. Deklariere eine Variable `computer_choice`. Weise der neu erstellten Variable das Ergebnis von `random.choice(choices)` zu, das eine zufällige Option aus der Liste auswählt:\n   ```Python\n   computer_choice = random.choice(choices)\n   ```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "print(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 129428,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Der Spieler hat gewählt, der Computer hat gewählt, und jetzt lass uns die Wahl des Computers enthüllen.\n\n1. Verwende die `print` Funktion, um einen f-String anzuzeigen, der `\"Computer chose: \"` und dann den Wert von `computer_choice` ausgibt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129429,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Nun werden wir bestimmen, wer der Gewinner ist. Wir benötigen eine Kombination aus `if`-, `elif`- und `else`-Anweisungen, um die `player_choice` und die `computer_choice` zu vergleichen.\n\n1. Schreibe eine `if`-Anweisung, die überprüft, ob die Wahl des Spielers die Wahl des Computers schlägt:\n   ```\n   if (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n   ```\n2. Verwende `elif`, um den Fall eines Unentschiedens zu überprüfen, wenn die Wahl des Spielers der Wahl des Computers entspricht.\n3. Füge schließlich eine `else`-Anweisung hinzu.\n4. Setze in jedem Fall eine Variable `winner` auf den String \"Player\", \"Tie\" oder \"Computer\".",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\""
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 129430,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich gib eine Nachricht aus, basierend darauf, wer gewinnt.\n\n1. Schreibe eine `if`-Anweisung, die überprüft, ob `winner` gleich `\"Player\"` ist.\n2. Wenn wahr, drucke `\"You won\"`.\n3. Schreibe eine `elif`-Anweisung, die überprüft, ob `winner` gleich `\"Computer\"` ist.\n4. Wenn wahr, drucke `\"Computer won\"`.\n5. Schreibe eine `else`-Klausel, die `\"It's a tie\"` druckt.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"",
                  "solvedContent": "import random\n\nprint(\"Let's play rock, paper, or scissors\")\n\nplayer_choice = input(\"\\nChoose rock, paper, or scissors: \").lower()\nchoices = [\"rock\", \"paper\", \"scissors\"]\ncomputer_choice = random.choice(choices)\nprint(f\"Computer chose: {computer_choice}\")\n\nif (player_choice == \"rock\" and computer_choice == \"scissors\") or (player_choice == \"scissors\" and computer_choice == \"paper\") or (player_choice == \"paper\" and computer_choice == \"rock\"):\n  winner = \"Player\"\nelif player_choice == computer_choice:\n  winner = \"Tie\"\nelse:\n  winner = \"Computer\"\n\nif winner == \"Player\":\n  print(\"You won\")\nelif winner == \"Computer\":\n  print(\"Computer won\")\nelse:\n  print(\"It's a tie\")"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}