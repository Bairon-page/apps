{
  "tutorial": {
    "id": 2807,
    "version": 1,
    "type": "course",
    "isNew": false,
    "codeLanguage": "typescript",
    "title": "Klassen",
    "descriptionContent": "Lerne über Klassen in TypeScript",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 14822,
        "title": "Klassen",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 130865,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schauen wir uns nun Klassen in TypeScript an. Ähnlich wie Klassen in JavaScript definieren wir sie mit dem <code>class</code>-Schlüsselwort.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"5\" /><option correct=\"false\"><content><text value=\"function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>class</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130866,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Für JavaScript gibt es keinen Unterschied, wenn ein Konstruktor zur Klasse hinzugefügt wird.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"\" class=\"params\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"27\" /><option correct=\"false\"><content><text value=\"initialize\" /></content></option><option correct=\"false\"><content><text value=\"init\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>constructor</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130867,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir Parameter an einen Konstruktor übergeben, müssen wir den Typ des Parameters angeben.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {}\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"28\" endIndex=\"32\" /><option startIndex=\"34\" endIndex=\"40\" /><option startIndex=\"32\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"number\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>name</code>, gefolgt von <code>:</code> und schließlich <code>string</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130868,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir einen Klassenparameter definieren, möchten wir auch seinen Typ angeben.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"20\" /><option startIndex=\"20\" endIndex=\"21\" /><option startIndex=\"22\" endIndex=\"28\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>name</code>, gefolgt von <code>:</code> und schließlich <code>string</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 131065,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das Instanziieren und Verwenden einer Klasse funktioniert wie erwartet.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sheila = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Person(\" /><text value=\"&quot;Sheila&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(sheila.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"97\" endIndex=\"100\" /><option startIndex=\"101\" endIndex=\"107\" /><option startIndex=\"131\" endIndex=\"137\" /><option startIndex=\"138\" endIndex=\"142\" /><option correct=\"false\"><content><text value=\"Person\" /></content></option><option correct=\"false\"><content><text value=\"sheila\" /></content></option></options></interaction></interactions><output><content><text value=\"Sheila\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>new</code>, gefolgt von <code>Person</code> und schließlich <code>sheila</code>, <code>name</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #2",
            "id": 130852,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In JavaScript sind alle Eigenschaften von außen zugänglich. Das <code>public</code>-Schlüsselwort in TypeScript macht das explizit.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Person(\" /><text value=\"&quot;Sheila&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"16\" endIndex=\"22\" /><option correct=\"false\"><content><text value=\"access\" /></content></option></options></interaction></interactions><output><content><text value=\"Sheila\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>public</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #3",
            "id": 130853,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das <code>private</code> Schlüsselwort in TypeScript macht die Eigenschaft oder Methode einer Klasse von außerhalb dieser Klasse unzugänglich.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"private\" class=\"keyword\" /><text value=\" id: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"id: \" /><text value=\"number\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".id = id;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Employee(\" /><text value=\"123\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.id); \" /><text value=\"// Error\" class=\"comment\" /><text type=\"break\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"25\" /></options></interaction></interactions><output><content><text value=\"error TS2341: Property 'id' is private and only accessible within class 'Employee'.\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>private</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 131291,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Das <code>protected</code> Schlüsselwort in TypeScript verhindert, dass auf eine Eigenschaft oder Methode einer Klasse außerhalb dieser Klasse und ihrer Unterklassen zugegriffen wird.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"protected\" class=\"keyword\" /><text value=\" department: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"department: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".department = department;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Manager \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" printDepartment() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"this\" class=\"keyword\" /><text value=\".department);\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" manager = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Manager(\" /><text value=\"&quot;Sales&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(manager.printDepartment());\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"18\" endIndex=\"27\" /></options></interaction></interactions><output><content><text value=\"Sales\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>protected</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 131064,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Durch die Verwendung von Zugriffsmodifikatoren werden Klassen-Eigenschaften innerhalb der Konstruktor-Parameter definiert und initialisiert, ohne dass die Eigenschaften deklariert werden.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Person {\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"public\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" sheila = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Person(\" /><text value=\"&quot;Sheila&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(sheila.name);\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"28\" endIndex=\"34\" /><option startIndex=\"35\" endIndex=\"39\" /><option startIndex=\"39\" endIndex=\"40\" /><option startIndex=\"41\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"Sheila\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>public</code>, gefolgt von <code>name</code> und schließlich <code>:</code>, <code>string</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #5",
            "id": 130855,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist der Unterschied zwischen <code>public</code> und <code>private</code> in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Öffentliche Mitglieder sind überall zugänglich, während private Mitglieder nur innerhalb ihrer enthaltenen Klasse zugänglich sind</item><item value=\"2\" correct=\"false\">Öffentliche Mitglieder sind nirgends zugänglich, und private Mitglieder sind überall zugänglich</item></selection><p visible-if=\"wrong\">Öffentliche Mitglieder sind überall zugänglich, während private Mitglieder nur innerhalb ihrer enthaltenen Klasse zugänglich sind.</p></body></html>"
          },
          {
            "title": "Lesson #5 - Copy",
            "id": 131146,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was macht der <code>protected</code> Zugriffsmodifikator in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Geschützte Mitglieder sind innerhalb ihrer enthaltenen Klasse und in Unterklassen zugänglich</item><item value=\"2\" correct=\"false\">Geschützte Mitglieder sind überall zugänglich, ähnlich wie öffentliche Mitglieder</item></selection><p visible-if=\"wrong\">Geschützte Mitglieder sind innerhalb ihrer enthaltenen Klasse und in Unterklassen zugänglich.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130856,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist die Ausgabe von console.log(employee.name)?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" name: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"name: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".name = name;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Employee(\" /><text value=\"&quot;Marc&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.name);\" /></content><output><content><text value=\"Marc\" /></content></output></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">\"Marc\"</item><item value=\"2\" correct=\"false\">nicht definiert</item></selection><p visible-if=\"wrong\">Wähle \"Marc\" aus.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130857,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ist das gültiger TypeScript-Code?</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" Employee {\" /><text type=\"break\" /><text value=\" \" /><text value=\"private\" class=\"keyword\" /><text value=\" id: \" /><text value=\"number\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\" \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"id: \" /><text value=\"number\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"this\" class=\"keyword\" /><text value=\".id = id;\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" employee = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Employee(\" /><text value=\"123\" class=\"number\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(employee.id);\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nein, weil die Eigenschaft <code>id</code> privat ist und nur innerhalb der Klasse <code>Employee</code> zugänglich ist</item><item value=\"2\" correct=\"false\">Ja, da auf <code>id</code> über <code>employee.id</code> zugegriffen werden kann</item></selection><p visible-if=\"wrong\">Nein, weil die Eigenschaft <code>id</code> privat ist und nur innerhalb der Klasse <code>Employee</code> zugänglich ist.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130859,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Setze den Zugriffsmodifikator der <code>codeName</code>-Eigenschaft auf private und der <code>realName</code> auf public.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"class\" class=\"keyword\" /><text value=\" SecretAgent {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"private\" class=\"keyword\" /><text value=\" codeName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"  \" /><text value=\"public\" class=\"keyword\" /><text value=\" realName: \" /><text value=\"string\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"constructor\" class=\"keyword\" /><text value=\"(\" /><text value=\"codeName: \" /><text value=\"string\" class=\"built_in\" /><text value=\", realName: \" /><text value=\"string\" class=\"built_in\" /><text value=\") {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"this\" class=\"keyword\" /><text value=\".codeName = codeName;\" /><text type=\"break\" /><text value=\"    \" /><text value=\"this\" class=\"keyword\" /><text value=\".realName = realName;\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text type=\"break\" /><text value=\"  \" /><text value=\"public\" class=\"keyword\" /><text value=\" introduce(): \" /><text value=\"string\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"    \" /><text value=\"return\" class=\"keyword\" /><text value=\" \" /><text value=\"`Hi, I am \" /><text value=\"${this.realName}\" class=\"subst\" /><text value=\", but my code name is classified.`\" /><text value=\";\" /><text type=\"break\" /><text value=\"  }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" agent = \" /><text value=\"new\" class=\"keyword\" /><text value=\" SecretAgent(\" /><text value=\"&quot;007&quot;\" class=\"string\" /><text value=\", \" /><text value=\"&quot;James Bond&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"console\" class=\"built_in\" /><text value=\".log(agent.introduce());\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"22\" endIndex=\"29\" /><option startIndex=\"50\" endIndex=\"56\" /><option correct=\"false\"><content><text value=\"private\" /></content></option><option correct=\"false\"><content><text value=\"public\" /></content></option></options></interaction></interactions><output><content><text value=\"Hi, I am James Bond, but my code name is classified.\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>private</code>, gefolgt von <code>public</code> aus.</p></body></html>"
          }
        ]
      },
      {
        "id": 14835,
        "title": "Abstrakte Klassen & Methoden",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Lesson #3",
            "id": 130950,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine abstrakte Klasse ist eine Klasse, die nicht direkt instanziiert werden kann. Wir verwenden sie als Basisklassen, von denen andere Klassen abgeleitet werden können.</p><p>Wir können abstrakte Klassen verwenden, um eine gemeinsame Struktur zu definieren, möchten aber nicht, dass sie direkt verwendet werden.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"8\" /><option startIndex=\"9\" endIndex=\"14\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>abstract</code>, gefolgt von <code>class</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #4",
            "id": 130951,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nach der Deklaration kannst du keine Instanz einer abstrakten Klasse erstellen. Lass es uns ausprobieren!</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text value=\"let\" class=\"keyword\" /><text value=\" x = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Animal(); \" /><text value=\"// Error\" class=\"comment\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"35\" endIndex=\"38\" /><option startIndex=\"47\" endIndex=\"48\" /><option startIndex=\"39\" endIndex=\"47\" /></options></interaction></interactions><output><content><text value=\"Error: Cannot create an instance of an abstract class.\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>new</code>, gefolgt von <code>Animal()</code> und schließlich <code>;</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #6",
            "id": 130953,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Innerhalb einer Klasse können wir auch eine abstrakte Methode erstellen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"optional\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>abstract</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 130954,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um eine abstrakte Klasse und ihre abstrakten Methoden zu verwenden, müssen wir die abstrakte Klasse mit dem <code>extends</code>-Schlüsselwort erweitern.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"66\" endIndex=\"73\" /><option correct=\"false\"><content><text value=\"inherits\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>extends</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 130955,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Nach dem Erweitern müssen wir die Implementierung für die abstrakte Methode innerhalb der Kindklasse bereitstellen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"34\" endIndex=\"43\" /><option startIndex=\"84\" endIndex=\"93\" /><option correct=\"false\"><content><text value=\"function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>makeSound</code>, gefolgt von <code>makeSound</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 130956,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wir können jetzt eine Instanz dieser Klasse erstellen und die abstrakte Methode aufrufen.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" doggy = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog();\" /><text type=\"break\" /><text value=\"doggy.makeSound();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"146\" endIndex=\"149\" /><option startIndex=\"159\" endIndex=\"168\" /><option correct=\"false\"><content><text value=\"Animal\" /></content></option></options></interaction></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>Dog</code>, gefolgt von <code>makeSound</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 131070,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Schließlich ist es sinnvoll, explizit zu machen, dass unsere abstrakte Methode <code>makeSound</code> öffentlich zugänglich sein sollte.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" nelly = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog();\" /><text type=\"break\" /><text value=\"nelly.makeSound();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"25\" endIndex=\"31\" /><option correct=\"false\"><content><text value=\"private\" /></content></option></options></interaction></interactions><output><content><text value=\"Woof!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>public</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9 - Copy",
            "id": 131069,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Natürlich kann eine abstrakte Klasse auch nicht-abstrakte Methoden definieren, die direkt aufgerufen werden können.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"public\" class=\"keyword\" /><text value=\" eat(): \" /><text value=\"void\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Animal is eating.&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Dog \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" makeSound() {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Woof!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" nelly = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Dog();\" /><text type=\"break\" /><text value=\"nelly.makeSound();\" /><text type=\"break\" /><text value=\"nelly.eat();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"62\" endIndex=\"80\" /><option startIndex=\"247\" endIndex=\"252\" /></options></interaction></interactions><output><content><text value=\"Woof!\" /><text type=\"break\" /><text value=\"Animal is eating.\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>public eat(): void</code>, gefolgt von <code>eat()</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #8",
            "id": 131067,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Kannst du eine Instanz einer abstrakten Klasse direkt erstellen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Nein</item><item value=\"2\" correct=\"false\">Ja</item></selection><p visible-if=\"wrong\">Wähle Nein aus.</p></body></html>"
          },
          {
            "title": "Lesson #7",
            "id": 131066,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Vervollständige den Code, sodass sowohl <code>Circle</code> als auch <code>Square</code> die Elternklasse <code>Shape</code> verwenden.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Shape {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" draw(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Circle \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Shape {\" /><text type=\"break\" /><text value=\" draw(): \" /><text value=\"void\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Drawing a Circle!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"class\" class=\"keyword\" /><text value=\" Square \" /><text value=\"extends\" class=\"keyword\" /><text value=\" Shape {\" /><text type=\"break\" /><text value=\" draw(): \" /><text value=\"void\" class=\"built_in\" /><text value=\" {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Drawing a Square!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text value=\"}\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" circle = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Circle();\" /><text type=\"break\" /><text value=\"circle.draw();\" /><text type=\"break\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" square = \" /><text value=\"new\" class=\"keyword\" /><text value=\" Square();\" /><text type=\"break\" /><text value=\"square.draw();\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"15\" endIndex=\"20\" /><option startIndex=\"56\" endIndex=\"62\" /><option startIndex=\"71\" endIndex=\"76\" /><option startIndex=\"143\" endIndex=\"149\" /><option startIndex=\"158\" endIndex=\"163\" /><option correct=\"false\"><content><text value=\"Shape\" /></content></option></options></interaction></interactions><output><content><text value=\"Drawing a Circle!\" /><text type=\"break\" /><text value=\"Drawing a Square!\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>Shape</code>, gefolgt von <code>Circle</code> und schließlich <code>Shape</code>, <code>Square</code>, <code>Shape</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #9",
            "id": 131068,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie definiert man eine abstrakte Methode in TypeScript?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Mit dem <code>abstract</code>-Schlüsselwort</item><item value=\"2\" correct=\"false\">Jede Methode in einer abstrakten Klasse ist eine abstrakte Methode</item></selection><p visible-if=\"wrong\">Mit dem <code>abstract</code>-Schlüsselwort.</p></body></html>"
          },
          {
            "title": "Lesson #13",
            "id": 131072,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Stelle sicher, dass sowohl die Klasse als auch ihre Methode abstrakt sind.</p><code version=\"2\" codelang=\"typescript\" name=\"script.ts\" visible-if=\"always\"><content><text value=\"abstract\" class=\"keyword\" /><text value=\" \" /><text value=\"class\" class=\"keyword\" /><text value=\" Animal {\" /><text type=\"break\" /><text value=\" \" /><text value=\"abstract\" class=\"keyword\" /><text value=\" makeSound(): \" /><text value=\"void\" class=\"built_in\" /><text value=\";\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"8\" /><option startIndex=\"25\" endIndex=\"33\" /><option correct=\"false\"><content><text value=\"function\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>abstract</code>, gefolgt von <code>abstract</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 131071,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Welche Arten von Methoden können wir zu einer abstrakten Klasse hinzufügen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Abstrakte Methoden und nicht-abstrakte Methoden</item><item value=\"2\" correct=\"false\">Nur abstrakte Methoden</item><item value=\"3\" correct=\"false\">Nur nicht-abstrakte Methoden</item></selection><p visible-if=\"wrong\">Abstrakte Methoden und nicht-abstrakte Methoden.</p></body></html>"
          }
        ]
      }
    ]
  }
}