{
  "tutorial": {
    "id": 2246,
    "version": 1,
    "type": "practiceOptional",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Arrays",
    "descriptionContent": "Arrays",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 8369,
        "title": "Gruppierung von Werten mit Arrays",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Empty array",
            "id": 73253,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable mit dem Namen \"myArray\" und weise ihr ein leeres Array zu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const myArray = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Any number",
            "id": 73262,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Füge alle deine Lieblingshelden zum Array der Superhelden hinzu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const superheroes = [];\nconsole.log(superheroes);",
                  "solvedContent": "const superheroes = [\"Goose the Cat\", \"Thor\", \"Thanos\"];\nconsole.log(superheroes);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Value in an array",
            "id": 73256,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `myArray` und weise ihr ein Array mit mindestens einem Wert zu und zeige es in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const myArray = [\"latte\"];\nconsole.log(myArray);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Multiple values",
            "id": 73259,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `toDo` und weise ihr ein Array mit mindestens zwei Dingen zu, die du heute erledigen musst.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const toDo = [\"jog\", \"walk Hux\", \"call mom\"];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Square brackets",
            "id": 73260,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Korrigiere den Code, damit `podcasts` ein Array speichert.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const podcasts =  \"RadioLab\", \"Reply All\" ; \nconsole.log(podcasts);",
                  "solvedContent": "const podcasts = [\"RadioLab\", \"Reply All\"]; \nconsole.log(podcasts);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8431,
        "title": "Ändern von Werten in Arrays",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Start at zero",
            "id": 73924,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Speichere ein Array in der Variable `options`, sodass der Wert `true` an Index `0` und `false` an Index `1` ist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const options ;",
                  "solvedContent": "const options = [true, false];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Any value",
            "id": 73921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle die `const` Variable `colorScheme`, die ein Array speichert, das die Variablen `background` und `text` enthält.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const background = \"beige\";\nconst text = \"salmon\";\n",
                  "solvedContent": "const background = \"beige\";\nconst text = \"salmon\";\nconst colorScheme = [background, text];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Access element",
            "id": 73927,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende das `flavors` Array, um das zweite Element in der Konsole anzuzeigen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const flavors = [\"vanilla\", \"chocolate\", \"pistachio\"];\n",
                  "solvedContent": "const flavors = [\"vanilla\", \"chocolate\", \"pistachio\"];\nconsole.log(flavors[1]);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Index",
            "id": 73922,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable namens `planets`, die ein Array speichert, in dem `\"mars\"` an Index `0` steht, gefolgt von zwei weiteren Planeten.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const planets = [\"mars\", \"jupiter\", \"saturn\"];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Change value",
            "id": 73930,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Aktualisiere den Wert an Index `2` auf `240`, indem du das Element zugreifst und seinen Wert neu zuweist.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const topSpeeds = [100, 130, 200];\n\nconsole.log(topSpeeds);",
                  "solvedContent": "const topSpeeds = [100, 130, 200];\ntopSpeeds[2] = 240;\nconsole.log(topSpeeds);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Valid index",
            "id": 73932,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Greife auf das letzte Element in diesem Array zu und zeige es in der Konsole an.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const scientists = [\"Ada Lovelace\", \"Margaret Hamilton\", \"Grace Hopper\"];\n",
                  "solvedContent": "const scientists = [\"Ada Lovelace\", \"Margaret Hamilton\", \"Grace Hopper\"];\nconsole.log(scientists[2]);"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 8443,
        "title": "Arrays pushen und poppen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code: Push",
            "id": 74079,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende `.push()`, um ein weiteres Genre zum Array hinzuzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const genres = [\"comedy\", \"fantasy\"];",
                  "solvedContent": "const genres = [\"comedy\", \"fantasy\"];\ngenres.push(\"mystery\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: End of the array",
            "id": 74072,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende eine Array-Methode, um `\"Jill\"` am Ende des `players` Arrays hinzuzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const players = [\"Meg\", \"Max\", \"Lucas\"];",
                  "solvedContent": "const players = [\"Meg\", \"Max\", \"Lucas\"];\nplayers.push(\"Jill\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Store removed element",
            "id": 74081,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Erstelle eine `const` Variable mit dem Namen `best`. Entferne den letzten Wert aus dem Array und speichere ihn in `best`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const pace = [4.5, 4, 5, 5.2];",
                  "solvedContent": "const pace = [4.5, 4, 5, 5.2];\nconst best = pace.pop();"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: More values",
            "id": 74075,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende `.push()`, um zwei weitere Reiseziele zum Array hinzuzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const destinations = [\"New York\", \"Paris\", \"Madrid\"];",
                  "solvedContent": "const destinations = [\"New York\", \"Paris\", \"Madrid\"];\ndestinations.push(\"Tokyo\", \"Athens\");"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code: Pop",
            "id": 74078,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende eine Array-Methode, um den Wert am Ende des Arrays zu entfernen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const lockCombination = [9, 4, 7];",
                  "solvedContent": "const lockCombination = [9, 4, 7];\nlockCombination.pop();"
                }
              ],
              "hints": []
            }
          }
        ]
      },
      {
        "id": 13066,
        "title": "Entscheidungen mit Arrays treffen",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Code 1",
            "id": 118004,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Verwende die richtige Methode, um die Anzahl der Elemente im `vehicles` Array zu zählen und sie in der Konsole auszugeben.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const vehicles = [\"car\", \"truck\", \"motorcycle\", \"bicycle\"];\n",
                  "solvedContent": "const vehicles = [\"car\", \"truck\", \"motorcycle\", \"bicycle\"];\nconsole.log(vehicles.length);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 2",
            "id": 118005,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Durchlaufe das `friends` Array mit einer for-Schleife und gib ihre Namen in der Konsole aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const friends = [\"Jane\", \"Jim\", \"Jeri\"];\n",
                  "solvedContent": "const friends = [\"Jane\", \"Jim\", \"Jeri\"];\nfor (let i = 0; i < friends.length; i++) {\n console.log(friends[i]);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 3",
            "id": 118006,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Weise die Länge des `classes` Arrays der `const` Variablen namens `arrayLength` zu.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const classes = [\"math\", \"physics\", \"geography\"];\n",
                  "solvedContent": "const classes = [\"math\", \"physics\", \"geography\"];\nconst arrayLength = classes.length;"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 4",
            "id": 118007,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Gib die Länge des `empty` Arrays in der Konsole aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const empty = [];\n",
                  "solvedContent": "const empty = [];\nconsole.log(empty.length);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 5",
            "id": 118008,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Entferne das letzte Element aus dem Array und gib die Länge des Arrays in der Konsole aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const counter = [1, 2, 3, 4, 5, 6];\n\n",
                  "solvedContent": "const counter = [1, 2, 3, 4, 5, 6];\ncounter.pop();\nconsole.log(counter.length);"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Code 6",
            "id": 118009,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Vervollständige die for-Schleife, damit alle Elemente im `weather` Array in der Konsole angezeigt werden.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const weather = [\"sunny\", \"rainy\", \"cloudy\"];\nfor (let i = 0; i < ; i++) {\n console.log(weather[i]);\n}",
                  "solvedContent": "const weather = [\"sunny\", \"rainy\", \"cloudy\"];\nfor (let i = 0; i < weather.length; i++) {\n console.log(weather[i]);\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}