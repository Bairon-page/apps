{
  "tutorial": {
    "id": 2910,
    "version": 2,
    "type": "course",
    "isNew": false,
    "codeLanguage": "node",
    "title": "PUT-Anfragen",
    "descriptionContent": "Lerne, wie du eine PUT-Anfrage verwendest, um Daten an einen Server zu senden",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": null,
    "chapters": [
      {
        "id": 15004,
        "title": "PUT",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "Intro",
            "id": 132321,
            "contentType": "interactive",
            "images": [
              {
                "id": "5d5e1f86-5b01-497f-8ee6-04ace8d2921f"
              }
            ],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> ist eine Anfragemethode, die verwendet wird, um eine Ressource auf dem Server zu aktualisieren oder zu ersetzen.</p><p>Im Gegensatz zu <code>POST</code>, das typischerweise neue Ressourcen erstellt, wird <code>PUT</code> verwendet, wenn der Client Daten sendet, um eine bestehende Ressource zu ändern.</p><img src=\"5d5e1f86-5b01-497f-8ee6-04ace8d2921f\" visible-if=\"always\" /></body></html>"
          },
          {
            "title": "PUT",
            "id": 132322,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> ist eine Anfragemethode, die wir verwenden, um bestehende Daten auf dem Server zu aktualisieren, wie zum Beispiel das Ändern eines bestehenden Kurses, den Mimo überarbeiten möchte.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>PUT</code> aus.</p></body></html>"
          },
          {
            "title": "PUT URL",
            "id": 132323,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code> basiert auf einer URL, die die Serveradresse enthält, zusammen mit der Art der Ressource, zu der die neuen Daten <em>gehören</em>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"12\" endIndex=\"20\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>mimo.org</code> aus.</p></body></html>"
          },
          {
            "title": "PUT URL 2",
            "id": 132324,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Die URL dieser <code>PUT</code>-Anfrage zeigt, dass ein bestehender Kurs unter courses aktualisiert oder ersetzt werden soll.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"20\" endIndex=\"28\" /><option startIndex=\"28\" endIndex=\"31\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>/courses</code>, gefolgt von <code>/10</code> aus.</p></body></html>"
          },
          {
            "title": "PUT URL Query Parameters",
            "id": 132325,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In einer <code>PUT</code>-Anfrage enthält die Nutzlast die vollständig aktualisierten Daten für die Ressource, die geändert wird.</p><p>Wir senden die gesamte aktualisierte Ressource, da sie die aktuelle ersetzt, was bedeutet, dass fehlende Felder entfernt werden können.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/courses/10\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;languages&quot;\" class=\"string\" /><text value=\": [\" /><text value=\"&quot;TypeScript&quot;\" class=\"string\" /><text value=\"]\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"33\" endIndex=\"34\" /><option startIndex=\"88\" endIndex=\"89\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>{</code>, gefolgt von <code>}</code> aus.</p></body></html>"
          },
          {
            "title": "Question: PUT",
            "id": 132326,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wofür verwenden wir <code>PUT</code>-Anfragen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Zum Aktualisieren oder Ersetzen vorhandener Daten auf dem Server</item><item value=\"2\" correct=\"false\">Zum Abrufen von Daten vom Server</item></selection><p visible-if=\"wrong\">Zum Aktualisieren oder Ersetzen vorhandener Daten auf dem Server.</p></body></html>"
          },
          {
            "title": "Question: PUT URL",
            "id": 132327,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie weiß der Browser, wohin die Daten in der <code>PUT</code>-Anfrage gesendet werden sollen?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Über die Serveradresse in der URL der Anfrage</item><item value=\"2\" correct=\"false\">Indem du die Daten liest, die die Anfrage sendet</item></selection><p visible-if=\"wrong\">Über die Serveradresse in der URL der Anfrage.</p></body></html>"
          },
          {
            "title": "Question: PUT URL 2",
            "id": 132328,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn du dir diese URL ansiehst, worauf könnten sich die Daten beziehen, die wir senden?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/458\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted [Revised]&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;After all ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Ein Update zu einem bestehenden Artikel</item><item value=\"2\" correct=\"false\"> Ein neuer Artikel, der von jemandem eingereicht wurde</item></selection><p visible-if=\"wrong\">Ein Update zu einem bestehenden Artikel.</p></body></html>"
          },
          {
            "title": "Example: Intro",
            "id": 132330,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Code eine HTTP-Anfragemethode, die Daten von einem Server <em>aktualisiert</em>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/112\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option correct=\"false\"><content><text value=\"POST\" /></content></option><option correct=\"false\"><content><text value=\"GET\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>PUT</code> aus.</p></body></html>"
          },
          {
            "title": "Example: PUT URL",
            "id": 132331,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sende eine <code>PUT</code>-Anfrage an einen Server bei <code>fakenews.com</code>.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/458\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted [Revised]&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;After all ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"validatedInput\" isDefault=\"true\" startIndex=\"0\" endIndex=\"3\" /></interactions></code><p visible-if=\"wrong\">Gib <code>PUT</code> ein.</p></body></html>"
          },
          {
            "title": "Example: PUT URL 2",
            "id": 132332,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Über die URL der <code>PUT</code>-Anfrage lass den Server wissen, welcher Artikel aktualisiert werden soll.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/458\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;title&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;UFOs sighted [Revised]&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;content&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;After all ...&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"24\" endIndex=\"25\" /><option startIndex=\"25\" endIndex=\"32\" /><option startIndex=\"32\" endIndex=\"33\" /><option startIndex=\"33\" endIndex=\"36\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>/</code>, gefolgt von <code>article</code> und schließlich <code>/</code>, <code>458</code> aus.</p></body></html>"
          },
          {
            "title": "Lesson #12",
            "id": 132383,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>In einer <code>PUT</code>-Anfrage, sendest du nur die Daten, die du ändern möchtest, oder die gesamte aktualisierte Ressource?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Du sendest die gesamte aktualisierte Ressource</item><item value=\"2\" correct=\"false\">Du sendest nur die Daten, die du ändern möchtest</item></selection><p visible-if=\"wrong\">Du sendest die gesamte aktualisierte Ressource.</p></body></html>"
          }
        ]
      },
      {
        "id": 15005,
        "title": "Anfrage & Antwort",
        "type": "practiceLevel1",
        "lessons": [
          {
            "title": "PUT Body",
            "id": 132333,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code>-Anfragen sehen in Express den <code>POST</code>-Anfragen sehr ähnlich aus.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"4\" endIndex=\"7\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>put</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2",
            "id": 132334,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie bei <code>POST</code>-Anfragen definieren wir auch den Endpunkt für <code>PUT</code>-Anfragen.</p><p>Wir müssen jedoch auch den spezifischen Ressourcenbezeichner in die URL aufnehmen, um anzugeben, welche Ressource aktualisiert werden soll.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"9\" endIndex=\"10\" /><option startIndex=\"10\" endIndex=\"15\" /><option startIndex=\"15\" endIndex=\"16\" /><option startIndex=\"16\" endIndex=\"19\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>/</code>, gefolgt von <code>users</code> und schließlich <code>/</code>, <code>:id</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy",
            "id": 132386,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p><code>PUT</code>-Anfragen verlassen sich oft auf Routenparameter, um die spezifische Ressource zu identifizieren, die aktualisiert werden soll.</p><p>Wir verwenden <code>req.params.id</code>, um einen Routenparameter mit dem Namen <code>id</code> zu entpacken.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"54\" endIndex=\"57\" /><option startIndex=\"57\" endIndex=\"58\" /><option startIndex=\"58\" endIndex=\"64\" /><option startIndex=\"64\" endIndex=\"65\" /><option startIndex=\"65\" endIndex=\"67\" /></options></interaction></interactions><output><content><text value=\"Update user with id 937\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.</code> und schließlich <code>params</code>, <code>.</code>, <code>id</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy",
            "id": 132345,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wie <code>POST</code>-Anfragen enthalten auch <code>PUT</code>-Anfragen Daten in ihrem Anfragekörper.</p><p>In einer <code>PUT</code>-Anfrage senden wir die gesamte aktualisierte Ressource, da sie die aktuelle ersetzt, was bedeutet, dass fehlende Felder entfernt werden können.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"137\" endIndex=\"140\" /><option startIndex=\"140\" endIndex=\"145\" /></options></interaction></interactions><output><content><text value=\"Update user with id 937\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin25&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>req</code>, gefolgt von <code>.body</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy",
            "id": 132346,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um den Zugriff auf den Body zu ermöglichen, müssen wir unserer express App mitteilen, <code>express.json</code> zu verwenden, ein eingebautes Middleware.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"const\" class=\"keyword\" /><text value=\" express = \" /><text value=\"require\" class=\"built_in\" /><text value=\"(\" /><text value=\"'express'\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" app = express();\" /><text type=\"break\" /><text value=\"const\" class=\"keyword\" /><text value=\" port = \" /><text value=\"3000\" class=\"number\" /><text value=\";\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.use(express.json());\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(requestData);\" /><text type=\"break\" /><text value=\"});\" /><text type=\"break\" /><text type=\"break\" /><text value=\"app.listen(port, () =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Server is running on port \" /><text value=\"${port}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"87\" endIndex=\"101\" /></options></interaction></interactions><output><content><text value=\"Server is running on port 3000\" /><text type=\"break\" /><text value=\"Update user with id 937\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" &quot;username&quot;: &quot;_crazyPumpkin25&quot;,\" /><text type=\"break\" /><text value=\" &quot;email&quot;: &quot;mia@mimo.org&quot;\" /><text type=\"break\" /><text value=\"}\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>express.json()</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy",
            "id": 132347,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wenn wir auf die übergebenen Daten zugreifen wollen, parsen wir sie. Sobald wir das getan haben, können wir auf die Daten im Request-Body zugreifen und mit ihnen arbeiten.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Update user with id \" /><text value=\"${userId}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Updated username: \" /><text value=\"${username}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"`Updated email: \" /><text value=\"${email}\" class=\"subst\" /><text value=\"`\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"177\" endIndex=\"185\" /><option startIndex=\"214\" endIndex=\"219\" /></options></interaction></interactions><output><content><text value=\"Update user with id 937\" /><text type=\"break\" /><text value=\"Updated username: _crazyPumpkin25\" /><text type=\"break\" /><text value=\"Updated email: mia@mimo.org\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>username</code>, gefolgt von <code>email</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy - Copy",
            "id": 132348,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Ähnlich wie bei anderen Methoden können und sollten wir eine Antwort zurücksenden.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"104\" /><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"109\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "a",
            "id": 132349,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Der Standardstatus, wenn alles nach Plan verläuft und ein neues Element erstellt oder zur Datenbank hinzugefügt wird, ist <code>200 OK</code>.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"116\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>.</code>, gefolgt von <code>status(200)</code> aus.</p></body></html>"
          },
          {
            "title": "a - Copy",
            "id": 135903,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Zuerst geben wir den HTTP-Statuscode an und senden dann den Antwortinhalt an den Client.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"117\" /><option startIndex=\"117\" endIndex=\"121\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>.</code>, gefolgt von <code>status(200)</code> und schließlich <code>.</code>, <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Body 2 - Copy - Copy - Copy",
            "id": 132350,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Um einen bestehenden Benutzer zu aktualisieren, benötigen wir möglicherweise bestimmte Parameter, wie zum Beispiel eine E-Mail, die mit der Anfrage gesendet werden müssen.</p><p>Wenn wir alle Daten haben und den Benutzer hinzufügen können, senden wir <code>200 OK</code>. Wenn Daten fehlen, senden wir <code>400 Bad Request</code> mit einer Fehlermeldung.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"210\" endIndex=\"213\" /><option startIndex=\"258\" endIndex=\"261\" /></options></interaction></interactions><output><content><text value=\"Email is required\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>400</code>, gefolgt von <code>200</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Headers",
            "id": 132336,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Eine <code>PUT</code>-Anfrage hat Header, die zusätzlichen Kontext bereitstellen, wie zum Beispiel <code>Content-Type</code>, das uns das Format des Anfragekörpers angibt.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/937\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin25&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"46\" endIndex=\"59\" /><option startIndex=\"60\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>Content-Type:</code>, gefolgt von <code>application/json</code> aus.</p></body></html>"
          },
          {
            "title": "PUT Headers 2",
            "id": 132335,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Du kannst sehen, dass der Body dieser <code>PUT</code>-Anfrage den <code>Content-Type</code><code>application/json</code> hat, den am häufigsten verwendeten Content-Typ.</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://mimo.org/users/937\" /><text type=\"break\" /><text value=\"Host: mimo.org\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;username&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;_crazyPumpkin25&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;email&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;mia@mimo.org&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"60\" endIndex=\"71\" /><option startIndex=\"71\" endIndex=\"72\" /><option startIndex=\"72\" endIndex=\"76\" /></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>application</code>, gefolgt von <code>/</code> und schließlich <code>json</code> aus.</p></body></html>"
          },
          {
            "title": "Question: PUT Body",
            "id": 132337,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Wo speichern <code>PUT</code>-Anfragen die Daten, die sie an den Server senden?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Im Anforderungstext</item><item value=\"2\" correct=\"false\">Nur in der URL, als Werte von Abfrageparametern</item></selection><p visible-if=\"wrong\">Im Anforderungstext.</p></body></html>"
          },
          {
            "title": "Example: PUT Body JSON",
            "id": 132343,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Erstelle einen <code>PUT</code>-Endpunkt, um einen bestimmten Benutzer zu aktualisieren.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"console\" class=\"built_in\" /><text value=\".log(\" /><text value=\"&quot;Hello from the endpoint!&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"0\" endIndex=\"3\" /><option startIndex=\"3\" endIndex=\"4\" /><option startIndex=\"4\" endIndex=\"7\" /><option startIndex=\"8\" endIndex=\"20\" /><option correct=\"false\"><content><text value=\"&quot;/users&quot;\" /></content></option><option correct=\"false\"><content><text value=\"post\" /></content></option></options></interaction></interactions></code><p visible-if=\"wrong\">Wähle <code>app</code>, gefolgt von <code>.</code> und schließlich <code>put</code>, <code>\"/users/:id\"</code> aus.</p></body></html>"
          },
          {
            "title": "Question: POST Body 2",
            "id": 132338,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was könnte diese <code>PUT</code>-Anfrage an den Server senden?</p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"PUT https://fakenews.com/article/112/comment/49\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy!!!&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Eine Aktualisierung eines Kommentars zu einem Artikel</item><item value=\"2\" correct=\"false\">Die Daten eines Benutzers, einschließlich Benutzername und Beschreibung</item></selection><p visible-if=\"wrong\">Eine Aktualisierung eines Kommentars zu einem Artikel.</p></body></html>"
          },
          {
            "title": "Question: POST Body JSON",
            "id": 132339,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was ist eine beliebte Option zum Formatieren der Daten einer <code>PUT</code>-Anfrage?</p><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">JSON</item><item value=\"2\" correct=\"false\">HTTP</item></selection><p visible-if=\"wrong\">Wähle JSON aus.</p></body></html>"
          },
          {
            "title": "Question: POST Headers",
            "id": 132340,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was wird der Statuscode sein, wenn alle erforderlichen Daten bereitgestellt werden und die Anfrage erfolgreich ist?</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User created&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\"><code>200 OK</code></item><item value=\"2\" correct=\"false\"><code>400 Bad Request</code></item></selection><p visible-if=\"wrong\"><code>200 OK</code>.</p></body></html>"
          },
          {
            "title": "Example: POST Body 2",
            "id": 132342,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Setze die richtigen Codes.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" username = requestData.username;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" email = requestData.email;\" /><text type=\"break\" /><text type=\"break\" /><text value=\" \" /><text value=\"if\" class=\"keyword\" /><text value=\" (!email) {\" /><text type=\"break\" /><text value=\"  \" /><text value=\"return\" class=\"keyword\" /><text value=\" res.status(\" /><text value=\"400\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;Email is required&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\" }\" /><text type=\"break\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"210\" endIndex=\"213\" /><option startIndex=\"258\" endIndex=\"261\" /></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>400</code>, gefolgt von <code>200</code> aus.</p></body></html>"
          },
          {
            "title": "Example: POST Headers",
            "id": 132344,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Sende eine Antwort zurück zusammen mit dem korrekten Statuscode.</p><code version=\"2\" codelang=\"javascript\" name=\"app.js\" visible-if=\"always\"><content><text value=\"app.put(\" /><text value=\"&quot;/users/:id&quot;\" class=\"string\" /><text value=\", (req, res) =&gt; {\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" userId = req.params.id;\" /><text type=\"break\" /><text value=\" \" /><text value=\"const\" class=\"keyword\" /><text value=\" requestData = req.body;\" /><text type=\"break\" /><text value=\" res.status(\" /><text value=\"200\" class=\"number\" /><text value=\").send(\" /><text value=\"&quot;User updated&quot;\" class=\"string\" /><text value=\");\" /><text type=\"break\" /><text value=\"});\" /></content><interactions><interaction type=\"fillTheGap\" isDefault=\"true\"><options><option startIndex=\"101\" endIndex=\"104\" /><option startIndex=\"104\" endIndex=\"105\" /><option startIndex=\"105\" endIndex=\"111\" /><option startIndex=\"111\" endIndex=\"112\" /><option startIndex=\"112\" endIndex=\"115\" /><option startIndex=\"115\" endIndex=\"116\" /><option startIndex=\"116\" endIndex=\"117\" /><option startIndex=\"117\" endIndex=\"121\" /><option correct=\"false\"><content><text value=\"400\" /></content></option></options></interaction></interactions><output><content><text value=\"User updated\" /></content></output></code><p visible-if=\"wrong\">Wähle <code>res</code>, gefolgt von <code>.</code> und schließlich <code>status</code>, <code>(</code>, <code>200</code>, <code>)</code>, <code>.</code>, <code>send</code> aus.</p></body></html>"
          },
          {
            "title": "Question: POST Headers 2",
            "id": 132341,
            "contentType": "interactive",
            "images": [],
            "interactiveContent": "<!DOCTYPE html ><html><body><p>Was sagt uns der <code>Content-Type</code>-Header einer <code>PUT</code>-Anfrage?<br /></p><code version=\"2\" codelang=\"bash\" name=\"Console Editor\" visible-if=\"always\"><content><text value=\"POST https://fakenews.com/article/112/comment/49\" /><text type=\"break\" /><text value=\"Host: fakenews.com\" /><text type=\"break\" /><text value=\"Content-Type: application/json\" /><text type=\"break\" /><text value=\"...\" /><text type=\"break\" /><text type=\"break\" /><text value=\"{\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;text&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;It's a conspiracy!!!&quot;\" class=\"string\" /><text value=\",\" /><text type=\"break\" /><text value=\" \" /><text value=\"&quot;by&quot;\" class=\"string\" /><text value=\": \" /><text value=\"&quot;anarchy_alex&quot;\" class=\"string\" /><text type=\"break\" /><text value=\"}\" /></content></code><selection iscode=\"false\" multiple=\"multiple\"><item value=\"1\" correct=\"true\">Das Format der Daten, die wir an den Server senden</item><item value=\"2\" correct=\"false\">Das Format der Daten in der Datenbank des Servers</item></selection><p visible-if=\"wrong\">Das Format der Daten, die wir an den Server senden.</p></body></html>"
          }
        ]
      }
    ]
  }
}