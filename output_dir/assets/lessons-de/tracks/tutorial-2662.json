{
  "tutorial": {
    "id": 2662,
    "version": 7,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "python",
    "title": "ToDo-Liste - Teil 2",
    "descriptionContent": "Füge deinem To-Do-Listen-Projekt ein interaktives Menü hinzu und verbessere es, indem du das Löschen von Aufgaben erneut ermöglichst.",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2662-icon-banner.svg",
    "chapters": [
      {
        "id": 14637,
        "title": "Kapitel #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #1",
            "id": 129462,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zurück zum **ToDo List**-Projekt. Im zweiten Teil werden wir die ToDo-Liste interaktiv gestalten.\n\nZuerst werden wir unseren Code so ändern, dass die Optionen für den Benutzer angezeigt werden, um mit der Anwendung zu interagieren.\n\n1. Füge vier `print`-Funktionen am Ende des Blocks der `while`-Schleife hinzu. Die erste sollte `\"Options:\"` anzeigen, und die folgenden sollten `\"1) Add Task\"`, `\"2) Remove Task\"` und `\"3) Quit\"` anzeigen.\n2. Füge eine `break`-Anweisung am Ende hinzu, damit die Schleife nur einmal läuft.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n  break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2",
            "id": 129463,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Um die Anweisungen, die dem Benutzer gegeben wurden, tatsächlich umzusetzen, müssen wir seine Eingabe lesen und entsprechend reagieren.\n\n1. Füge eine `input`-Funktion vor der `break`-Anweisung hinzu, die du gerade hinzugefügt hast, um die Wahl des Benutzers in einer Variablen namens `choice` zu speichern.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n  break",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #2 - Copy",
            "id": 129920,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns das Programm entsprechend der Benutzereingabe verhalten.\n\n1. Füge eine `if`-Anweisung hinzu, um zu überprüfen, was der Benutzer eingegeben hat, bevor die `break`-Anweisung kommt.\n2. Wenn `choice` `\"1\"` ist, gib `\"Adding task\"` aus.\n3. Wenn `choice` `\"2\"` ist, gib `\"Removing task\"` aus.\n4. Wenn der Benutzer `\"3\"` eingegeben hat, gib `\"Quitting\"` aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  break",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n\n  break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 129464,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns das Schleifenverhalten ändern. Wir möchten, dass die Codeausführung nur stoppt, wenn der Benutzer die Option 3 wählt.\n\n1. Verschiebe die `break`-Anweisung in den letzten `elif`-Block, wo du überprüfst, ob der Benutzer die Option 3 gewählt hat.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n\n  break",
                  "solvedContent": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4 - Copy",
            "id": 129764,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir sind dabei, das Hinzufügen von tatsächlichen Aufgaben zu implementieren. Ab jetzt benötigen wir die Demo-Aufgaben nicht mehr. Wir möchten auch das Hinzufügen von Aufgaben zu Beginn des Programms entfernen, da wir jetzt einen speziellen Ort für dieses Verhalten haben.\n\n1. Entferne die beiden Demo-Aufgaben aus der `todo_list` Liste.\n2. Entferne die Zeilen direkt am Anfang der while-Schleife, die den Benutzer auffordern, sofort eine Aufgabe hinzuzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = [\"Task 1\", \"Task 2\"]\n\nwhile True:\n  new_task = input(\"Enter the task: \")\n  todo_list.append(new_task)\n  print(f\"Task '{new_task}' added to the ToDo list\")\n\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break",
                  "solvedContent": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4 - Copy - Copy",
            "id": 129921,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Jetzt müssen wir das Hinzufügen oder Entfernen von Aufgaben basierend auf der Benutzereingabe implementieren. Zuerst konzentrieren wir uns auf das Hinzufügen von Aufgaben.\n\n1. Füge eine `input`-Funktion hinzu und bitte den Benutzer, die Aufgabe einzugeben, die er stattdessen hinzufügen möchte. Speichere die vom Benutzer eingegebene Aufgabe in einer Variablen namens `new_task`.\n2. Füge `new_task` zur `todo_list` hinzu.\n3. Gib eine Bestätigung aus, dass die Aufgabe zur To-Do-Liste hinzugefügt wurde.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break",
                  "solvedContent": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n    new_task = input(\"Enter the task: \")\n    todo_list.append(new_task)\n    print(f\"Task '{new_task}' added to the ToDo list\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 129466,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich geben wir dem Benutzer die Möglichkeit, Aufgaben von der ToDo-Liste zu entfernen.\n\n1. Ersetze innerhalb des `elif`-Zweigs für die Auswahl `\"2\"` die `print`-Funktion durch eine Überprüfung, ob die `todo_list` leer ist.\n2. Wenn `todo_list` leer ist, gib aus, dass sie leer ist.\n3. Wenn die Liste nicht leer ist, verwende die `pop`-Funktionalität, um die letzte Aufgabe aus der Liste zu entfernen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.py",
                  "codeLanguage": "python",
                  "content": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n    new_task = input(\"Enter the task: \")\n    todo_list.append(new_task)\n    print(f\"Task '{new_task}' added to the ToDo list\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break",
                  "solvedContent": "todo_list = []\n\nwhile True:\n  if not todo_list:\n    print(\"Your ToDo list is empty\")\n  else:\n    index = 1\n    for task in todo_list:\n      print(f\"{index}. {task}\")\n      index += 1\n\n  print(\"Options:\")\n  print(\"1. Add Task\")\n  print(\"2. Remove Task\")\n  print(\"3. Quit\")\n\n  choice = input(\"Enter your choice (1, 2, or 3): \")\n\n  if choice == \"1\":\n    print(\"Adding task\")\n    new_task = input(\"Enter the task: \")\n    todo_list.append(new_task)\n    print(f\"Task '{new_task}' added to the ToDo list\")\n  elif choice == \"2\":\n    print(\"Removing task\")\n    if len(todo_list) > 0:\n      removed_task = todo_list.pop()\n    else:\n      print(\"Your ToDo list is empty\")\n  elif choice == \"3\":\n    print(\"Quitting\")\n    break"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}