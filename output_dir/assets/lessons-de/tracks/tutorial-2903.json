{
  "tutorial": {
    "id": 2903,
    "version": 3,
    "type": "guidedProject",
    "isNew": false,
    "codeLanguage": "javascript",
    "title": "Aufgabenliste - Teil 1",
    "descriptionContent": "Zu viel zu tun? Zu viele Dinge gleichzeitig jonglieren? In diesem Projekt werden wir einen Task Manager erstellen, um dabei zu helfen!",
    "shortDescriptionContent": "",
    "showInTrack": true,
    "iconBanner": "tutorial-2903-icon-banner.svg",
    "chapters": [
      {
        "id": 14994,
        "title": "Kapitel #1",
        "type": "practiceLevel3",
        "lessons": [
          {
            "title": "Lesson #2",
            "id": 132190,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Willkommen zum **Task List** Projekt. Wir werden ein Programm erstellen, das es Benutzern ermöglicht, eine Liste anzusehen und Aufgaben hinzuzufügen.\n\nDas Erste, was wir brauchen, ist ein Array, um unsere Aufgaben zu speichern.\n\n1. Deklariere eine Variable `items` und initialisiere sie als leeres Array.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "",
                  "solvedContent": "const items = [];"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #3",
            "id": 132191,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Als nächstes lass uns eine Funktion erstellen, die eine gegebene Liste von Elementen anzeigen kann.\n\n1. Deklariere eine Funktion `displayList`, die einen Parameter `items` annimmt.\n2. Innerhalb der Funktion iteriere über alle Elemente des übergebenen Arrays `items` und zeige jedes Element in der Liste zusammen mit seinem Index an. Beginne bei `1` zu zählen, nicht bei `0`.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];",
                  "solvedContent": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #4",
            "id": 132192,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir benötigen auch eine Funktion, die ein neues Element zur Liste hinzufügt.\n\n1. Deklariere eine Funktion `addItem`, die zwei Parameter `items` und `itemToAdd` entgegennimmt.\n2. Füge `itemToAdd` zum `items` Array hinzu, das an die Funktion übergeben wurde.\n3. Wenn du möchtest, gib aus, dass das neue Element erfolgreich zur Liste der Elemente hinzugefügt wurde.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}",
                  "solvedContent": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #1",
            "id": 132189,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Wir werden `@mimo-org/input` verwenden, um die Eingabe des Benutzers zu erfassen.\n\n1. Deklariere am Anfang der Datei eine Variable `input` und require das `input` Modul. Wir verwenden `@mimo-org/input`, um mit dem Benutzer in der Konsole zu interagieren.\n   ```const input = require(\"@mimo-org/input\");```",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #5",
            "id": 132193,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Mit den Funktionen zur Anzeige und Hinzufügung der Liste können wir nun unsere Hauptschleife und das Menü einrichten.\n\n1. Deklariere eine boolesche Variable namens `running` und setze sie auf `true`.\n2. Implementiere eine `while`-Schleife mit der Bedingung der `running`-Variable.\n3. Zeige dem Benutzer innerhalb der Schleife die möglichen Optionen.\n   - Sage dem Benutzer, dass die Eingabe von `1` die Liste anzeigt.\n   - Erkläre, dass die Eingabe von `2` ein neues Element hinzufügt.\n   - Zeige dem Benutzer, dass `3` das Programm beendet.\n4. Fordere den Benutzer auf, eine Eingabe zu machen, und speichere sie in einer Variablen namens `choice`.\n5. Wenn die Wahl des Benutzers `3` ist, setze `running` auf `false`, um die `while`-Schleife zu beenden.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 3) {\n    running = false;\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6",
            "id": 132194,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Schließlich werden wir die Aktion bestimmen, die basierend auf der Wahl des Benutzers ausgeführt werden soll.\n\n1. Für den Fall `1` rufe die Funktion `displayList` mit dem Argument `items` auf.\n2. Fall `2` sollte im Moment nichts tun. Wir kümmern uns später darum.\n3. Wenn etwas anderes als `1`, `2` oder `3` eingegeben wurde, gib eine Fehlermeldung aus.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 3) {\n    running = false;\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          },
          {
            "title": "Lesson #6 - Copy",
            "id": 132211,
            "contentType": "executableFiles",
            "images": [],
            "executableContent": {
              "instructions": "Lass uns das Hinzufügen neuer Elemente erledigen.\n\n1. Für den Fall `2`, deklariere vor dem Aufruf von `addItem` die Variable `newItem` und setze ihren Wert mit der Eingabeaufforderung. Bitte den Benutzer, eine neue Aufgabe einzugeben.\n2. Nachdem du das neue Element des Benutzers in `newItem` erfasst hast, rufe die Funktion `addItem` mit den Argumenten `items` und `newItem` auf, um das neue Element hinzuzufügen.",
              "preselectedFileIndex": 0,
              "hasVisualOutput": false,
              "files": [
                {
                  "name": "script.js",
                  "codeLanguage": "javascript",
                  "content": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}",
                  "solvedContent": "const input = require(\"@mimo-org/input\");\n\nconst items = [];\n\nfunction displayList(items) {\n  console.log(\"\\nHere is the list of items:\");\n  items.forEach((item, index) => {\n    console.log(`${index + 1}. ${item}`);\n  });\n}\n\nfunction addItem(items, itemToAdd) {\n  items.push(itemToAdd);\n  console.log(`\"${itemToAdd}\" has been added to the list.`);\n}\n\nlet running = true;\n\nwhile (running) {\n  console.log(\"\\nChoose an option:\");\n  console.log(\"1. View the list\");\n  console.log(\"2. Add an item to the list\");\n  console.log(\"3. Exit\");\n\n  const choice = input(\"Enter your choice (1-3): \");\n  \n  if (choice == 1) {\n    displayList(items);\n  } else if (choice == 2) {\n    const newItem = input(\"Enter a new item to add to the list: \");\n    addItem(items, newItem);\n  } else if (choice == 3) {\n    running = false;\n  } else {\n    console.log(\"Invalid choice, please select a valid option.\");\n  }\n}"
                }
              ],
              "hints": []
            }
          }
        ]
      }
    ]
  }
}